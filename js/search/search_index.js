var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessDeniedComponent.html",[0,0.16,1,0.856]],["body/components/AccessDeniedComponent.html",[0,0.256,1,1.468,2,1.154,3,0.083,4,0.063,5,0.921,6,0.921,7,0.921,8,0.073,9,4.594,10,3.426,11,4.594,12,0.921,13,1.866,14,1.866,15,1.696,16,5.463,17,1.212,18,1.126,19,1.242,20,2.768,21,3.33,22,4.196,23,3.853,24,2.935,25,1.242,26,6.195,27,1.304,28,6.195,29,0.435,30,0.009,31,1.625,32,0.486,33,2.182,34,1.715,35,1.715,36,2.182,37,2.526,38,0.083,39,0.486,40,6.195,41,3.448,42,6.195,43,0.921,44,1.242,45,1.242,46,0.921,47,1.504,48,0.921,49,0.468,50,0.921,51,0.899,52,0.921,53,0.899,54,0.921,55,0.899,56,0.921,57,0.899,58,0.921,59,0.899,60,0.921,61,0.899,62,0.835,63,1.242,64,0.899,65,1.242,66,0.899,67,0.921,68,0.899,69,0.921,70,0.899,71,0.921,72,0.899,73,0.877,74,1.242,75,0.899,76,0.921,77,0.899,78,0.921,79,0.899,80,0.921,81,0.899,82,0.921,83,0.899,84,0.921,85,0.899,86,0.921,87,0.899,88,0.921,89,0.899,90,0.856,91,1.405,92,0.899,93,0.921,94,0.899,95,0.921,96,0.899,97,0.921,98,0.899,99,0.921,100,0.899,101,0.899,102,0.775,103,1.183,104,0.921,105,1.183,106,1.242,107,0.899,108,0.899,109,0.921,110,0.899,111,0.921,112,0.899,113,0.921,114,0.899,115,0.921,116,0.899,117,0.856,118,0.899,119,0.921,120,0.899,121,0.921,122,0.921,123,0.899,124,0.921,125,0.899,126,0.921,127,0.899,128,0.921,129,0.899,130,0.899,131,0.921,132,0.899,133,0.921,134,0.899,135,0.921,136,0.899,137,0.921,138,0.899,139,0.877,140,0.899,141,0.921,142,0.899,143,0.921,144,0.921,145,0.921,146,0.006,147,0.006]],["title/components/AlertsComponent.html",[0,0.16,51,0.856]],["body/components/AlertsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,1.509,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,148,4.924,149,7.713,150,6.488,151,6.488,152,2.235]],["title/components/AppComponent.html",[0,0.16,53,0.856]],["body/components/AppComponent.html",[0,0.238,1,0.781,2,1.047,3,0.072,4,0.055,5,0.8,6,0.8,7,0.8,8,0.063,12,0.8,13,1.854,14,1.854,15,0.781,17,1.1,18,1.022,19,1.127,25,1.127,27,1.183,29,0.402,30,0.01,31,1.411,32,0.422,33,1.895,34,1.489,35,1.489,38,0.072,39,0.422,41,2.583,43,0.8,44,1.127,45,1.127,46,0.8,47,1.416,48,0.8,49,0.534,50,0.8,51,0.781,52,0.8,53,1.382,54,0.8,55,0.781,56,0.8,57,0.781,58,0.8,59,0.781,60,0.8,61,0.781,62,0.725,63,1.127,64,0.781,65,1.127,66,0.781,67,0.8,68,0.781,69,0.8,70,0.781,71,0.8,72,0.781,73,0.762,74,1.127,75,0.781,76,0.8,77,0.781,78,0.8,79,0.781,80,0.8,81,0.781,82,0.8,83,0.781,84,0.8,85,0.781,86,0.8,87,0.781,88,0.8,89,0.781,90,0.743,91,1.305,92,0.781,93,0.8,94,0.781,95,0.8,96,0.781,97,0.8,98,0.781,99,0.8,100,0.781,101,0.781,102,0.673,103,1.073,104,0.8,105,1.073,106,1.127,107,0.781,108,0.781,109,0.8,110,0.781,111,0.8,112,0.781,113,0.8,114,0.781,115,0.8,116,0.781,117,0.743,118,0.781,119,0.8,120,0.781,121,0.8,122,0.8,123,0.781,124,0.8,125,0.781,126,0.8,127,0.781,128,0.8,129,0.781,130,0.781,131,0.8,132,0.781,133,0.8,134,0.781,135,0.8,136,0.781,137,0.8,138,0.781,139,0.762,140,0.781,141,0.8,142,0.781,143,0.8,144,0.8,145,0.8,146,0.006,147,0.006,153,3.988,154,2.219,155,3.199,156,3.577,157,2.425,158,5.737,159,5.619,160,5.619,161,0.324,162,1.543,163,3.883,164,3.473,165,2.496,166,4.955,167,7.064,168,7.064,169,1.4,170,3.988,171,3.356,172,4.364,173,5.921,174,1.791,175,3.988,176,1.302,177,0.474,178,1.241,179,3.988,180,1.947,181,2.592,182,3.988,183,4.955,184,1.154,185,3.988,186,4.955,187,3.988,188,3.988,189,2.789,190,2.635,191,3.206,192,3.988,193,3.988,194,3.988,195,3.988,196,3.988,197,3.988,198,3.517,199,3.517,200,3.517,201,2.314,202,5.737,203,4.955,204,5.231,205,3.517,206,3.517,207,3.988,208,2.789,209,2.974,210,3.517,211,3.517,212,5.737,213,2.635,214,3.517,215,3.517,216,3.517,217,4.955,218,3.517,219,3.517,220,3.517,221,3.517]],["title/interfaces/AppConfig.html",[222,0.422,223,3.264]],["body/interfaces/AppConfig.html",[3,0.039,4,0.029,8,0.034,18,1.285,29,0.238,30,0.01,32,0.226,38,0.063,39,0.859,49,0.264,146,0.004,147,0.004,157,0.922,161,0.174,165,1.508,172,4.386,177,0.697,180,1.578,184,1.507,201,0.664,208,4.221,209,4.195,213,5.167,222,0.809,223,6.047,224,0.532,225,1.717,226,3.055,227,4.195,228,2.646,229,3.297,230,6.469,231,1.805,232,3.297,233,0.819,234,4.498,235,5.507,236,5.507,237,5.671,238,5.603,239,5.833,240,2.439,241,6.287,242,5.688,243,3.806,244,5.243,245,4.736,246,5.164,247,5.271,248,3.6,249,4.645,250,4.953,251,4.388,252,3.554,253,2.921,254,5.344,255,3.297,256,5.492,257,5.527,258,3.806,259,3.806,260,4.542,261,3.806,262,3.806,263,2.272,264,4.953,265,3.554,266,2.601,267,4.749,268,4.345,269,4.749,270,5.397,271,2.804,272,2.804,273,2.774,274,2.601,275,3.262,276,2.601,277,4.806,278,2.601,279,2.804,280,3.569,281,4.634,282,2.804,283,2.804,284,3.806,285,2.601,286,3.761,287,2.439,288,3.366,289,2.601,290,2.601,291,1.704,292,1.544,293,3.297,294,4.749,295,4.54,296,5.119,297,2.804,298,0.752,299,5.671,300,1.507,301,2.921,302,2.304,303,1.34,304,5.507,305,2.804,306,3.822,307,1.717,308,5.119,309,5.119,310,5.119,311,5.34,312,4.852,313,4.852,314,4.195,315,5.119,316,1.717,317,1.717,318,1.592,319,1.592,320,4.501,321,1.592,322,4.852,323,5.34,324,3.554,325,4.682,326,1.717,327,2.439,328,4.103,329,3.554,330,1.592,331,4.195,332,4.54,333,3.092,334,2.804,335,2.439,336,1.377,337,1.717,338,1.717,339,2.804,340,1.34,341,2.804,342,3.933,343,2.439,344,1.717,345,0.981,346,0.981,347,1.592,348,1.717,349,1.278,350,2.439,351,1.592,352,2.804,353,3.297,354,1.592,355,5.34,356,2.527,357,3.806,358,3.203,359,2.601,360,3.806,361,2.804,362,3.806,363,3.055,364,2.509,365,2.189,366,2.967,367,2.601,368,2.304,369,3.297,370,5.34,371,1.717,372,1.493,373,0.755,374,0.755,375,0.755,376,0.776,377,0.776,378,0.776,379,2.304,380,2.304,381,2.601,382,2.804,383,2.439,384,3.569,385,2.804,386,2.601,387,1.717,388,1.717,389,2.804,390,1.717,391,3.554,392,3.554,393,2.804,394,2.804,395,3.554,396,1.717,397,3.554,398,1.411,399,1.717,400,3.554,401,2.804,402,2.804,403,1.717,404,1.717,405,1.669,406,1.717,407,2.601,408,2.804,409,2.804,410,3.554,411,2.804,412,3.297,413,3.554,414,2.804,415,1.717,416,1.493,417,1.717,418,1.717,419,2.804,420,1.717,421,1.493,422,1.717,423,1.717,424,1.717,425,1.717,426,3.554,427,1.717,428,0.631,429,1.717,430,1.717,431,1.717,432,1.717,433,1.717,434,1.717]],["title/interfaces/AppState.html",[222,0.422,435,1.889]],["body/interfaces/AppState.html",[3,0.099,4,0.075,8,0.087,29,0.487,30,0.01,38,0.138,146,0.007,147,0.007,161,0.443,177,0.724,201,2.152,222,0.525,224,1.357,233,0.802,435,2.989,436,5.445,437,7.059,438,7.059,439,7.059,440,7.059,441,7.059,442,7.059,443,7.059,444,5.567,445,5.445,446,6.106,447,5.445,448,5.567,449,5.445,450,6.106,451,5.445,452,5.567,453,5.445,454,6.106,455,5.445,456,5.567,457,5.445,458,6.106,459,5.445,460,5.567,461,5.445,462,6.106,463,5.445,464,5.567,465,5.445,466,6.106,467,5.445,468,6.106,469,5.445,470,5.567,471,5.445,472,5.445,473,5.445]],["title/components/AuthComponent.html",[0,0.16,55,0.856]],["body/components/AuthComponent.html",[0,0.264,1,0.959,2,1.205,3,0.089,4,0.067,5,0.983,6,0.983,7,0.983,8,0.078,12,0.983,13,1.871,14,1.871,15,0.959,17,1.266,18,1.176,19,1.297,25,1.297,27,1.361,29,0.349,30,0.009,32,0.519,33,2.328,38,0.089,39,0.519,43,0.983,44,1.297,45,1.297,46,0.983,47,1.544,48,0.983,49,0.489,50,0.983,51,0.959,52,0.983,53,0.959,54,0.983,55,1.507,56,0.983,57,0.959,58,0.983,59,0.959,60,0.983,61,0.959,62,0.891,63,1.297,64,0.959,65,1.297,66,0.959,67,0.983,68,0.959,69,0.983,70,0.959,71,0.983,72,0.959,73,0.936,74,1.297,75,0.959,76,0.983,77,0.959,78,0.983,79,0.959,80,0.983,81,0.959,82,0.983,83,0.959,84,0.983,85,0.959,86,0.983,87,0.959,88,0.983,89,0.959,90,0.913,91,1.452,92,0.959,93,0.983,94,0.959,95,0.983,96,0.959,97,0.983,98,0.959,99,0.983,100,0.959,101,0.959,102,0.827,103,1.235,104,0.983,105,1.235,106,1.297,107,0.959,108,0.959,109,0.983,110,0.959,111,0.983,112,0.959,113,0.983,114,0.959,115,0.983,116,0.959,117,0.913,118,0.959,119,0.983,120,0.959,121,0.983,122,0.983,123,0.959,124,0.983,125,0.959,126,0.983,127,0.959,128,0.983,129,0.959,130,0.959,131,0.983,132,0.959,133,0.983,134,0.959,135,0.983,136,0.959,137,0.983,138,0.959,139,0.936,140,0.959,141,0.983,142,0.959,143,0.983,144,0.983,145,0.983,146,0.007,147,0.007,158,6.384,474,4.9,475,5.703,476,6.468,477,6.468]],["title/injectables/AuthEffects.html",[298,0.944,444,3.518]],["body/injectables/AuthEffects.html",[3,0.063,4,0.048,8,0.056,29,0.412,30,0.01,32,0.371,38,0.063,39,0.371,49,0.265,146,0.005,147,0.005,161,0.285,165,1.966,169,1.275,174,1.906,176,0.811,177,0.295,178,0.773,233,0.593,286,2.606,291,2.459,292,2.228,298,1.103,300,0.938,303,2.196,405,2.653,444,4.113,478,1.307,479,3.5,480,4.962,481,6.519,482,5.514,483,5.866,484,4.962,485,3.983,486,5.348,487,6.519,488,4.962,489,5.348,490,3.5,491,4.64,492,6.139,493,5.34,494,4.374,495,3.5,496,5.516,497,5.496,498,5.116,499,5.923,500,5.116,501,5.116,502,3.343,503,3.909,504,5.116,505,3.634,506,5.116,507,5.316,508,5.116,509,2.842,510,3.5,511,5.116,512,6.653,513,3.5,514,5.116,515,3.578,516,6.653,517,6.653,518,2.813,519,5.116,520,5.116,521,5.116,522,5.116,523,6.653,524,3.5,525,5.116,526,4.442,527,6.653,528,6.653,529,6.653,530,3.5,531,5.116,532,5.116,533,5.332,534,5.116,535,3.5,536,5.116,537,5.116,538,3.5,539,5.116,540,5.116,541,5.116,542,3.5,543,5.116,544,3.5,545,5.116,546,5.116,547,5.332,548,5.116,549,3.5,550,5.116,551,6.047,552,5.116,553,4.511,554,3.5,555,2.196,556,2.095,557,2.196,558,3.5,559,3.5,560,3.086,561,3.086,562,3.086,563,3.086,564,3.086,565,3.086,566,3.086,567,3.086,568,3.086]],["title/injectables/AuthService.html",[298,0.944,491,2.747]],["body/injectables/AuthService.html",[3,0.087,4,0.066,8,0.077,29,0.463,30,0.01,32,0.511,38,0.087,39,0.511,49,0.631,73,0.922,117,0.899,146,0.007,147,0.007,157,2.083,161,0.393,162,1.757,169,1.202,174,1.965,176,1.935,177,0.704,178,1.844,180,2.183,184,1.522,201,1.5,298,1.38,300,1.293,345,2.218,346,2.218,356,2.021,366,4.39,405,2.731,478,1.802,482,5.358,484,4.775,488,4.775,491,4.018,503,4.21,505,3.532,569,4.826,570,4.477,571,6.104,572,5.358,573,2.889,574,4.384,575,4.826,576,3.52,577,6.402,578,5.707,579,4.826,580,6.402,581,6.402,582,4.826,583,4.477,584,4.826,585,4.826,586,6.402,587,4.826,588,6.402,589,5.056,590,4.826,591,4.046,592,6.402,593,6.152,594,4.826,595,4.826,596,2.889,597,3.668,598,3.88,599,4.826,600,4.255,601,4.116,602,3.599,603,4.826,604,4.255,605,4.826,606,6.402,607,7.963,608,7.217,609,6.402,610,2.889,611,5.147,612,4.826,613,4.826]],["title/interfaces/AuthState.html",[222,0.422,437,3.518]],["body/interfaces/AuthState.html",[3,0.065,4,0.049,8,0.057,29,0.403,30,0.01,38,0.111,73,1.174,117,1.145,146,0.005,147,0.005,161,0.293,177,0.697,201,1.623,222,0.347,224,0.897,231,1.274,233,0.605,248,3.435,275,2.36,281,3.278,306,4.339,336,3.505,356,2.574,373,1.274,374,1.274,377,1.308,378,1.308,428,2.723,437,4.942,446,3.175,480,2.685,481,3.175,482,3.896,483,3.175,484,2.685,485,2.156,486,2.895,487,3.175,488,2.685,489,4.199,505,3.671,509,2.978,533,3.175,547,3.175,560,3.175,561,3.175,562,3.175,563,3.175,564,3.175,565,3.175,566,3.175,567,3.175,572,4.584,578,5.029,600,3.175,601,2.063,614,3.601,615,7.703,616,8.042,617,7.703,618,7.159,619,7.703,620,7.703,621,4.717,622,6.467,623,7.159,624,3.435,625,3.278,626,1.308,627,2.26,628,1.904,629,3.601,630,2.895,631,3.601,632,3.601,633,3.858,634,2.26,635,5.28,636,2.156,637,3.601,638,4.686,639,3.175,640,3.601,641,4.606,642,3.671,643,3.601,644,3.948,645,4.47,646,3.601,647,4.172,648,3.278,649,3.601,650,3.601,651,3.601,652,3.601,653,3.601,654,3.601,655,3.601,656,3.601,657,3.601,658,3.601,659,3.601,660,3.601,661,3.601,662,3.601,663,4.299,664,4.061,665,3.601,666,3.601,667,3.601]],["title/interfaces/AuthenticateRequestDto.html",[222,0.422,578,3.264]],["body/interfaces/AuthenticateRequestDto.html",[3,0.124,4,0.094,8,0.109,30,0.009,38,0.124,146,0.008,147,0.008,161,0.556,177,0.671,184,1.583,222,0.659,224,1.704,233,0.921,503,4.58,505,4.259,578,5.934,668,6.84,669,4.095]],["title/components/CloseComponent.html",[0,0.16,57,0.856]],["body/components/CloseComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,1.509,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,330,5.752,670,4.924,671,6.488,672,6.488]],["title/components/ConfigComponent.html",[0,0.16,59,0.856]],["body/components/ConfigComponent.html",[0,0.224,1,0.382,2,0.603,3,0.035,4,0.027,5,0.832,6,0.391,7,0.391,8,0.066,12,0.391,13,1.767,14,1.767,15,0.382,17,0.633,18,0.588,19,0.649,20,1.638,21,1.971,23,2.281,24,1.737,25,0.649,27,0.681,29,0.379,30,0.01,31,0.69,32,0.207,34,0.728,35,0.728,36,0.926,37,1.072,38,0.035,39,0.704,41,3.518,43,0.391,44,1.158,45,1.158,46,0.391,47,0.968,48,0.391,49,0.518,50,0.391,51,0.382,52,0.391,53,0.382,54,0.391,55,0.382,56,0.391,57,0.382,58,0.391,59,1.131,60,0.391,61,0.382,62,0.355,63,0.649,64,0.382,65,0.649,66,0.382,67,0.391,68,0.382,69,0.391,70,0.382,71,0.391,72,0.382,73,0.372,74,0.649,75,0.382,76,0.391,77,0.382,78,0.391,79,0.382,80,0.391,81,0.382,82,0.391,83,0.382,84,0.391,85,0.382,86,0.391,87,0.382,88,0.391,89,0.382,90,0.363,91,0.832,92,0.382,93,0.391,94,0.382,95,0.391,96,0.382,97,0.391,98,0.382,99,0.391,100,0.382,101,0.382,102,0.329,103,0.618,104,0.391,105,0.618,106,0.649,107,0.382,108,0.382,109,0.391,110,0.382,111,0.391,112,0.382,113,0.391,114,0.382,115,0.391,116,0.382,117,0.363,118,0.382,119,0.391,120,0.382,121,0.391,122,0.391,123,0.382,124,0.391,125,0.382,126,0.391,127,0.382,128,0.391,129,0.382,130,0.382,131,0.391,132,0.382,133,0.391,134,0.382,135,0.391,136,0.382,137,0.391,138,0.382,139,0.372,140,0.382,141,0.391,142,0.382,143,0.391,144,0.391,145,0.391,146,0.003,147,0.003,161,0.159,162,1.758,165,0.576,166,2.854,169,1.203,172,4.208,173,5.463,174,1.86,176,1.588,177,0.628,178,1.415,180,1.838,181,2.359,183,2.854,184,1.468,186,4.723,189,1.364,190,1.288,191,1.568,198,1.72,199,2.854,200,1.72,201,1.664,202,3.658,203,2.854,204,4.306,205,1.72,206,1.72,210,1.72,211,1.72,212,3.658,213,5.604,214,1.72,215,1.72,216,1.72,217,2.854,218,1.72,219,1.72,220,1.72,221,1.72,226,2.891,231,1.467,233,0.375,234,2.891,235,3.094,236,4.564,237,2.901,238,3.094,239,5.463,242,4.308,244,4.02,245,4.482,249,2.263,251,2.138,254,4.302,256,3.191,258,3.601,259,3.995,260,3.031,263,2.572,264,2.414,268,4.094,273,2.031,275,2.859,280,4.648,281,3.362,285,2.414,286,2.943,287,4.792,288,3.054,289,2.414,290,3.601,291,1.75,292,1.973,293,3.601,294,3.601,325,4.768,332,2.138,333,2.901,336,1.907,340,3.625,356,3.164,358,2.604,363,4.209,368,4.645,373,0.69,374,0.69,375,0.69,376,0.709,380,2.138,398,2.138,405,1.751,494,2.377,673,1.95,674,4.644,675,4.792,676,5.777,677,4.644,678,4.148,679,4.148,680,4.148,681,2.113,682,3.236,683,3.236,684,3.625,685,5.986,686,5.356,687,4.829,688,3.236,689,5.777,690,5.777,691,4.829,692,2.031,693,6.646,694,2.138,695,1.454,696,3.236,697,2.854,698,2.602,699,4.04,700,4.258,701,3.601,702,4.258,703,4.829,704,4.829,705,4.829,706,3.601,707,4.829,708,3.882,709,3.882,710,4.258,711,4.829,712,4.829,713,5.094,714,3.377,715,4.258,716,4.829,717,4.829,718,3.335,719,3.335,720,1.95,721,2.854,722,2.854,723,2.854,724,3.236,725,2.854,726,2.854,727,2.854,728,3.236,729,2.602,730,2.854,731,2.602,732,1.95,733,5.777,734,2.854,735,3.236,736,1.95,737,2.854,738,3.236,739,5.861,740,5.356,741,3.817,742,4.829,743,1.95,744,3.236,745,4.258,746,1.95,747,3.236,748,2.263,749,1.95,750,3.236,751,2.602,752,6.12,753,1.95,754,3.236,755,3.236,756,2.854,757,2.854,758,4.829,759,2.031,760,6.12,761,3.658,762,4.148,763,3.094,764,3.658,765,2.414,766,3.236,767,3.236,768,1.95,769,1.95,770,4.829,771,4.258,772,4.258,773,4.258,774,2.602,775,3.236,776,2.854,777,3.236,778,1.95,779,1.95,780,1.95,781,1.95,782,6.852,783,1.95,784,1.95,785,1.95,786,1.95,787,1.95,788,1.95,789,1.95,790,1.95,791,1.95,792,1.95,793,1.95,794,1.95,795,1.95,796,1.95,797,1.95,798,1.95,799,1.95,800,1.95,801,1.95,802,1.72,803,0.959,804,4.04,805,3.236,806,1.95,807,1.95,808,4.829,809,2.854,810,1.95,811,2.854,812,1.95,813,2.854,814,1.95,815,1.95,816,1.95,817,2.854,818,1.95,819,1.95,820,1.95,821,1.95,822,4.148,823,3.236,824,3.236,825,3.236,826,3.236,827,3.236,828,3.236,829,3.236,830,3.236,831,3.236,832,3.236,833,4.258,834,6.405,835,3.236,836,3.236,837,3.236,838,4.829,839,3.236,840,3.236]],["title/components/CreateOrganizationComponent.html",[0,0.16,61,0.856]],["body/components/CreateOrganizationComponent.html",[0,0.187,1,0.521,2,0.775,3,0.048,4,0.036,5,0.534,6,0.534,7,0.534,8,0.042,12,0.534,13,1.812,14,1.812,15,0.521,17,0.814,18,0.756,19,0.834,20,2.022,21,2.432,23,2.814,24,2.143,25,0.834,27,0.875,29,0.446,30,0.01,31,0.941,32,0.282,33,1.265,34,0.994,35,0.994,36,1.265,37,1.463,38,0.048,39,0.282,41,3.599,43,0.534,44,0.834,45,0.834,46,0.534,47,1.16,48,0.534,49,0.559,50,0.534,51,0.521,52,0.534,53,0.521,54,0.534,55,0.521,56,0.534,57,0.521,58,0.534,59,0.521,60,0.534,61,1.133,62,1.532,63,0.834,64,0.521,65,0.834,66,0.521,67,0.534,68,0.521,69,0.534,70,0.521,71,0.534,72,0.521,73,0.508,74,0.834,75,0.521,76,0.534,77,0.521,78,0.534,79,0.521,80,0.534,81,0.521,82,0.534,83,0.521,84,0.534,85,0.521,86,0.534,87,0.521,88,0.534,89,0.521,90,0.496,91,1.027,92,0.521,93,0.534,94,0.521,95,0.534,96,0.521,97,0.534,98,0.521,99,0.534,100,0.521,101,0.521,102,0.449,103,0.794,104,0.534,105,0.794,106,0.834,107,0.521,108,0.521,109,0.534,110,0.521,111,0.534,112,0.521,113,0.534,114,0.521,115,0.534,116,0.521,117,0.496,118,0.521,119,0.534,120,0.521,121,0.534,122,0.534,123,0.521,124,0.534,125,0.521,126,0.534,127,0.521,128,0.534,129,0.521,130,0.521,131,0.534,132,0.521,133,0.534,134,0.521,135,0.534,136,0.521,137,0.534,138,0.521,139,0.508,140,0.521,141,0.534,142,0.521,143,0.534,144,0.534,145,0.534,146,0.004,147,0.004,154,1.643,155,2.517,156,2.814,161,0.217,162,1.142,163,3.181,164,2.845,165,2.504,169,1.036,171,3.303,174,1.899,176,1.341,177,0.637,178,1.67,180,1.818,181,2.333,184,1.367,201,1.591,231,1.471,233,0.482,263,1.852,275,1.597,291,1.551,292,1.405,300,0.713,364,1.309,373,1.471,374,1.471,375,1.811,376,1.511,377,1.511,378,1.511,405,0.87,428,2.186,435,1.149,502,1.114,509,1.718,518,2.286,591,1.407,601,1.525,626,0.967,681,2.608,803,1.309,841,8.259,842,8.259,843,2.662,844,2.706,845,2.199,846,3.91,847,2.66,848,2.706,849,2.933,850,2.933,851,3.668,852,3.668,853,5.119,854,3.382,855,2.933,856,4.863,857,4.514,858,5.119,859,4.115,860,4.115,861,4.159,862,3.344,863,4.682,864,3.06,865,3.102,866,2.347,867,4.654,868,3.001,869,3.984,870,3.823,871,4.159,872,4.159,873,2.662,874,2.662,875,3.344,876,2.662,877,3.39,878,2.662,879,2.662,880,2.662,881,2.662,882,3.102,883,2.662,884,2.383,885,3.315,886,2.662,887,3.676,888,2.662,889,4.159,890,2.662,891,2.662,892,3.452,893,2.199,894,3.668,895,2.662,896,2.662,897,3.344,898,2.662,899,1.407,900,1.525,901,1.265,902,1.525,903,1.407,904,1.593,905,3.065,906,1.593,907,3.102,908,2.662,909,2.347,910,1.223,911,1.985,912,2.14,913,2.662,914,2.14,915,2.347,916,1.985,917,2.14,918,2.49,919,2.045,920,2.286,921,2.383,922,2.49,923,2.49,924,2.14,925,2.347,926,2.662,927,2.347,928,2.662,929,1.976,930,2.662,931,2.662,932,2.662,933,2.662,934,1.759,935,2.748,936,1.759,937,2.347,938,1.671,939,3.818,940,1.593,941,2.14,942,2.347,943,2.347,944,1.463,945,1.463,946,1.463,947,2.662,948,2.662,949,1.407,950,1.407,951,2.662,952,3.344,953,2.662,954,2.662,955,2.662,956,2.662,957,3.06,958,1.985,959,2.662,960,2.662,961,2.662,962,2.14,963,2.347,964,1.985,965,3.344,966,4.159,967,4.159,968,4.159,969,4.159,970,4.159,971,4.159]],["title/interfaces/CreateOrganizationRequestDto.html",[222,0.422,907,3.264]],["body/interfaces/CreateOrganizationRequestDto.html",[3,0.124,4,0.094,8,0.109,30,0.009,38,0.124,49,0.655,146,0.008,147,0.008,161,0.556,177,0.67,184,1.583,222,0.658,224,1.701,233,0.921,669,4.088,847,3.139,877,4.411,907,5.928,972,5.49]],["title/interfaces/CreateProjectRequestDto.html",[222,0.422,973,3.518]],["body/interfaces/CreateProjectRequestDto.html",[3,0.124,4,0.094,8,0.109,30,0.009,38,0.124,49,0.655,102,1.152,146,0.008,147,0.008,161,0.556,177,0.67,184,1.583,222,0.658,224,1.701,233,0.921,669,4.088,972,5.49,973,6.39,974,5.721]],["title/interfaces/CreateTeamRequestDto.html",[222,0.422,975,3.518]],["body/interfaces/CreateTeamRequestDto.html",[3,0.125,4,0.095,8,0.11,30,0.009,38,0.125,146,0.008,147,0.008,161,0.564,177,0.584,184,1.501,222,0.668,224,1.727,233,0.929,669,4.15,877,4.432,972,5.573,975,6.446,976,4.15]],["title/components/DetailsComponent.html",[0,0.16,64,0.856]],["body/components/DetailsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,1.509,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,977,4.924,978,5.394,979,5.721,980,5.721]],["title/components/DevicesComponent.html",[0,0.16,66,0.856]],["body/components/DevicesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,1.509,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,981,4.924,982,6.801,983,6.488,984,6.488]],["title/components/DocumentationComponent.html",[0,0.16,68,0.856]],["body/components/DocumentationComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,1.509,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,985,4.924,986,7.713,987,6.488,988,6.488]],["title/interfaces/FileDto.html",[222,0.422,989,3.264]],["body/interfaces/FileDto.html",[3,0.117,4,0.089,8,0.103,30,0.009,38,0.117,146,0.008,147,0.008,161,0.526,177,0.743,184,1.623,222,0.623,224,1.61,233,0.891,288,4.345,765,6.344,989,5.739,990,6.464,991,8.506,992,8.506,993,8.506,994,8.506,995,8.506,996,4.186]],["title/components/FooterComponent.html",[0,0.16,70,0.856]],["body/components/FooterComponent.html",[0,0.265,1,0.965,2,1.21,3,0.089,4,0.068,5,0.989,6,0.989,7,0.989,8,0.078,12,0.989,13,1.871,14,1.871,15,0.965,17,1.271,18,1.181,19,0.989,25,1.302,27,1.367,29,0.266,30,0.009,32,0.522,38,0.089,39,0.522,43,0.989,44,1.302,45,1.302,46,0.989,47,1.547,48,0.989,49,0.491,50,0.989,51,0.965,52,0.989,53,0.965,54,0.989,55,0.965,56,0.989,57,0.965,58,0.989,59,0.965,60,0.989,61,0.965,62,0.896,63,1.302,64,0.965,65,1.302,66,0.965,67,0.989,68,0.965,69,0.989,70,1.51,71,0.989,72,0.965,73,0.942,74,1.302,75,0.965,76,0.989,77,0.965,78,0.989,79,0.965,80,0.989,81,0.965,82,0.989,83,0.965,84,0.989,85,0.965,86,0.989,87,0.965,88,0.989,89,0.965,90,0.919,91,1.456,92,0.965,93,0.989,94,0.965,95,0.989,96,0.965,97,0.989,98,0.965,99,0.989,100,0.965,101,0.965,102,0.832,103,1.24,104,0.989,105,1.24,106,1.302,107,0.965,108,0.965,109,0.989,110,0.965,111,0.989,112,0.965,113,0.989,114,0.965,115,0.989,116,0.965,117,0.919,118,0.965,119,0.989,120,0.965,121,0.989,122,0.989,123,0.965,124,0.989,125,0.965,126,0.989,127,0.965,128,0.989,129,0.965,130,0.965,131,0.989,132,0.965,133,0.989,134,0.965,135,0.989,136,0.965,137,0.989,138,0.965,139,0.942,140,0.965,141,0.989,142,0.965,143,0.989,144,0.989,145,0.989,146,0.007,147,0.007,997,4.93,998,6.493,999,6.493,1000,6.493,1001,6.493]],["title/components/ForgotPasswordComponent.html",[0,0.16,72,0.856]],["body/components/ForgotPasswordComponent.html",[0,0.192,1,0.543,2,0.801,3,0.05,4,0.038,5,0.557,6,0.557,7,0.557,8,0.044,12,0.557,13,1.817,14,1.817,15,0.543,17,0.841,18,0.781,19,0.862,20,2.077,21,2.498,22,3.148,24,2.202,25,0.862,27,0.905,29,0.442,30,0.01,31,0.982,32,0.294,33,1.319,34,1.037,35,1.037,36,1.319,38,0.05,39,0.294,41,3.636,43,0.557,44,0.862,45,0.862,46,0.557,47,1.187,48,0.557,49,0.448,50,0.557,51,0.543,52,0.557,53,0.543,54,0.557,55,0.543,56,0.557,57,0.543,58,0.557,59,0.543,60,0.557,61,0.543,62,0.505,63,0.862,64,0.543,65,0.862,66,0.543,67,0.557,68,0.543,69,0.557,70,0.543,71,0.557,72,1.159,73,1.349,74,0.862,75,0.543,76,0.557,77,0.543,78,0.557,79,0.543,80,0.557,81,0.543,82,0.557,83,0.543,84,0.557,85,0.543,86,0.557,87,0.543,88,0.557,89,0.543,90,0.517,91,1.054,92,0.543,93,0.557,94,0.543,95,0.557,96,0.543,97,0.557,98,0.543,99,0.557,100,0.543,101,0.543,102,0.468,103,0.821,104,0.557,105,0.821,106,0.862,107,0.543,108,0.543,109,0.557,110,0.543,111,0.557,112,0.543,113,0.557,114,0.543,115,0.557,116,0.543,117,0.517,118,0.543,119,0.557,120,0.543,121,0.557,122,0.557,123,0.543,124,0.557,125,0.543,126,0.557,127,0.543,128,0.557,129,0.543,130,0.543,131,0.557,132,0.543,133,0.557,134,0.543,135,0.557,136,0.543,137,0.557,138,0.543,139,0.53,140,0.543,141,0.557,142,0.543,143,0.557,144,0.557,145,0.557,146,0.004,147,0.004,154,1.698,155,2.585,156,2.891,161,0.226,162,1.18,163,3.255,164,2.91,165,2.519,169,1.071,171,3.355,174,1.878,176,0.996,177,0.615,178,1.721,180,1.674,181,2.272,184,0.933,231,0.982,233,0.498,263,1.236,275,1.65,291,1.594,292,1.444,300,0.744,336,1.097,364,1.365,373,1.52,374,1.52,375,1.52,376,1.009,377,1.009,378,1.009,428,2.303,435,1.198,484,5.051,485,1.662,491,4.432,502,1.163,503,3.13,505,2.113,509,1.987,515,1.942,518,1.527,570,4.478,583,1.942,626,1.009,642,1.365,681,2.679,803,1.365,844,2.78,845,2.272,846,3.96,848,2.78,849,3.013,850,3.013,854,3.475,855,3.013,864,3.13,868,3.048,869,3.88,870,3.883,884,2.462,885,2.462,887,3.96,892,2.891,893,1.468,899,1.468,900,1.591,901,1.319,902,1.591,903,1.468,904,1.662,905,2.573,906,1.662,910,1.276,918,1.662,919,1.365,920,1.527,921,1.591,922,1.662,923,1.662,929,2.498,934,1.835,935,1.835,936,1.835,938,1.743,939,2.071,941,2.232,944,2.891,945,2.891,946,2.891,949,2.78,950,3.58,957,2.272,1002,8.185,1003,8.185,1004,2.448,1005,3.79,1006,3.79,1007,5.259,1008,4.637,1009,3.922,1010,3.922,1011,3.678,1012,3.206,1013,1.743,1014,4.298,1015,3.206,1016,2.777,1017,2.777,1018,2.777,1019,2.777,1020,2.777,1021,2.448,1022,3.206,1023,2.777,1024,3.006,1025,2.777,1026,2.448,1027,2.448,1028,2.777,1029,3.206,1030,2.448,1031,1.942,1032,4.637,1033,1.743,1034,2.777,1035,1.468,1036,1.743,1037,2.071,1038,2.071,1039,2.071,1040,1.835,1041,1.942,1042,1.942,1043,1.942,1044,2.777,1045,8.257,1046,3.79,1047,2.777,1048,2.777,1049,2.448,1050,2.448,1051,2.448,1052,2.448,1053,2.777,1054,1.942,1055,2.448,1056,3.206,1057,2.071,1058,2.448,1059,2.448,1060,2.071,1061,2.777,1062,2.071,1063,3.206,1064,3.79,1065,4.298,1066,3.79,1067,3.79,1068,4.298,1069,4.298,1070,3.79]],["title/interfaces/ForgotPasswordRequestDto.html",[222,0.422,1071,3.859]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.125,4,0.095,8,0.11,30,0.009,38,0.125,146,0.008,147,0.008,161,0.564,177,0.584,184,1.501,222,0.668,224,1.727,233,0.929,505,3.408,669,4.15,1071,7.071,1072,6.932,1073,4.6]],["title/components/GuidesComponent.html",[0,0.16,75,0.856]],["body/components/GuidesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,1.509,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,1074,4.924,1075,7.713,1076,6.488,1077,6.488]],["title/components/HomeComponent.html",[0,0.16,77,0.856]],["body/components/HomeComponent.html",[0,0.165,1,0.432,2,0.668,3,0.04,4,0.03,5,0.443,6,0.443,7,0.443,8,0.035,12,0.443,13,1.786,14,1.786,15,0.432,17,0.702,18,0.652,19,0.719,20,1.787,25,0.719,27,0.755,29,0.433,30,0.01,31,0.782,32,0.234,33,1.05,34,0.825,35,0.825,38,0.04,39,0.606,43,0.443,44,0.719,45,1.23,46,0.443,47,1.044,48,0.443,49,0.394,50,0.443,51,0.432,52,0.443,53,0.432,54,0.443,55,0.432,56,0.443,57,0.432,58,0.443,59,1.019,60,0.443,61,0.432,62,0.402,63,0.719,64,0.432,65,0.719,66,0.432,67,0.443,68,0.432,69,0.443,70,1.019,71,0.443,72,0.432,73,0.422,74,0.719,75,0.432,76,0.443,77,1.019,78,0.443,79,0.432,80,0.443,81,0.432,82,0.443,83,0.432,84,0.443,85,0.432,86,0.443,87,0.432,88,0.443,89,0.432,90,0.412,91,0.908,92,0.432,93,0.443,94,0.432,95,0.443,96,0.432,97,0.443,98,0.432,99,0.443,100,0.432,101,0.432,102,0.373,103,0.685,104,0.443,105,0.685,106,0.719,107,0.432,108,0.432,109,0.443,110,0.432,111,0.443,112,0.432,113,0.443,114,0.432,115,0.443,116,0.432,117,0.412,118,0.432,119,0.443,120,0.432,121,0.443,122,0.443,123,0.432,124,0.443,125,0.432,126,0.443,127,0.432,128,0.443,129,0.432,130,1.2,131,0.443,132,0.432,133,0.443,134,0.432,135,0.443,136,0.432,137,0.443,138,0.432,139,0.422,140,1.2,141,0.443,142,0.432,143,0.443,144,0.443,145,0.443,146,0.004,147,0.004,154,1.416,155,2.225,156,2.488,161,0.18,162,0.984,163,2.863,164,2.56,165,2.353,169,0.893,171,3.069,172,3.929,173,4.818,174,1.916,176,0.831,177,0.639,178,1.355,180,1.819,181,2.334,184,1.088,189,1.545,190,1.46,191,1.777,201,2.007,208,2.508,213,2.369,226,1.323,231,1.842,233,0.415,237,1.545,240,3.642,244,4.365,248,2.653,253,2.99,254,3.671,256,4.052,261,2.675,263,0.984,266,2.675,268,2.863,269,3.884,270,3.375,286,2.653,291,1.087,292,0.984,295,2.99,300,0.592,321,1.648,325,4.279,327,2.508,331,2.675,332,2.369,335,1.545,356,0.925,363,3.118,364,1.086,373,1.268,374,1.268,375,1.601,376,1.303,377,1.303,378,1.303,405,1.703,428,1.539,435,0.954,485,1.323,509,1.203,626,0.803,675,2.508,684,3.849,694,2.369,699,2.508,714,3.165,737,3.162,756,4.592,765,5.878,774,4.187,804,3.165,809,3.991,811,1.949,813,1.949,817,3.162,844,2.393,847,1.016,864,2.754,868,2.647,870,3.552,887,3.416,893,1.896,899,1.168,901,1.05,910,1.016,911,1.648,912,1.777,915,1.949,916,1.648,919,2.225,920,2.488,927,1.949,929,1.05,937,1.949,938,1.387,939,2.675,940,2.709,942,1.949,943,1.949,950,1.168,1033,1.387,1035,1.168,1036,1.387,1040,1.46,1078,2.21,1079,5.697,1080,4.526,1081,3.586,1082,3.586,1083,4.526,1084,4.526,1085,4.526,1086,4.526,1087,4.526,1088,4.526,1089,4.526,1090,4.526,1091,5.726,1092,5.208,1093,4.526,1094,5.208,1095,5.208,1096,5.208,1097,4.526,1098,1.46,1099,5.726,1100,6.871,1101,6.956,1102,3.586,1103,2.21,1104,3.586,1105,4.93,1106,3.586,1107,5.208,1108,2.21,1109,7.582,1110,5.992,1111,2.21,1112,3.586,1113,5.697,1114,7.313,1115,5.726,1116,5.188,1117,3.375,1118,3.991,1119,2.675,1120,2.675,1121,2.883,1122,3.586,1123,4.187,1124,2.21,1125,5.208,1126,3.586,1127,3.162,1128,2.21,1129,3.162,1130,4.592,1131,3.586,1132,2.21,1133,2.21,1134,2.21,1135,2.21,1136,5.208,1137,5.726,1138,3.586,1139,3.586,1140,2.21,1141,3.586,1142,3.162,1143,2.21,1144,2.21,1145,2.21,1146,2.21,1147,2.21,1148,2.21,1149,2.21,1150,2.21,1151,2.21,1152,2.21,1153,2.21,1154,2.21,1155,3.162,1156,2.21,1157,1.46,1158,2.21,1159,2.21,1160,2.21,1161,2.21,1162,3.586,1163,2.21,1164,6.46,1165,3.586,1166,3.586,1167,5.208,1168,2.21,1169,2.21,1170,2.21,1171,2.21,1172,3.586,1173,5.726,1174,2.21,1175,2.21,1176,2.21,1177,2.21,1178,3.586,1179,4.526,1180,2.21,1181,1.949,1182,1.949,1183,1.949,1184,1.949,1185,2.21,1186,2.21,1187,2.21,1188,1.545,1189,2.675,1190,2.883,1191,2.21,1192,2.21,1193,2.21,1194,2.21,1195,2.21,1196,3.586,1197,2.21,1198,2.21,1199,1.949,1200,4.526,1201,2.21,1202,2.21,1203,2.21,1204,3.586,1205,2.21,1206,1.215,1207,5.208,1208,1.949,1209,2.21,1210,3.586,1211,2.21,1212,2.21,1213,2.21,1214,3.586,1215,2.21,1216,2.21,1217,2.21,1218,3.586,1219,2.21,1220,3.586,1221,2.21,1222,2.21,1223,2.21,1224,3.162,1225,2.21,1226,2.21,1227,2.21,1228,2.675,1229,1.777]],["title/interfaces/Invitation.html",[222,0.422,664,2.891]],["body/interfaces/Invitation.html",[3,0.121,4,0.092,8,0.106,29,0.361,30,0.009,38,0.121,146,0.008,147,0.008,161,0.545,177,0.703,184,1.576,222,0.645,224,1.668,233,0.91,664,5.192,1073,4.549,1230,6.695,1231,7.587,1232,4.776,1233,6.695]],["title/components/InvitationComponent.html",[0,0.16,79,0.856]],["body/components/InvitationComponent.html",[0,0.182,1,0.498,2,0.749,3,0.046,4,0.035,5,0.511,6,0.511,7,0.511,8,0.04,12,0.511,13,1.806,14,1.806,15,0.498,17,0.786,18,1.027,19,0.806,20,1.965,21,2.363,22,2.978,24,2.083,25,0.806,27,0.845,29,0.451,30,0.01,31,0.901,32,0.27,33,1.21,34,0.951,35,0.951,36,1.21,38,0.046,39,0.27,41,4.005,43,0.511,44,0.806,45,0.806,46,0.511,47,1.133,48,0.511,49,0.427,50,0.511,51,0.498,52,0.511,53,0.498,54,0.511,55,0.498,56,0.511,57,0.498,58,0.511,59,0.498,60,0.511,61,0.498,62,0.463,63,0.806,64,0.498,65,0.806,66,0.498,67,0.511,68,0.498,69,0.511,70,0.498,71,0.511,72,0.498,73,0.486,74,0.806,75,0.498,76,0.511,77,0.498,78,0.511,79,1.105,80,0.511,81,0.498,82,0.511,83,0.498,84,0.511,85,0.498,86,0.511,87,0.498,88,0.511,89,0.498,90,0.475,91,0.998,92,0.498,93,0.511,94,0.498,95,0.511,96,0.498,97,0.511,98,0.498,99,0.511,100,0.498,101,0.498,102,0.43,103,0.767,104,0.511,105,0.767,106,0.806,107,0.498,108,0.498,109,0.511,110,0.498,111,0.511,112,0.498,113,0.511,114,0.498,115,0.511,116,0.498,117,0.475,118,0.498,119,0.511,120,0.498,121,0.511,122,0.511,123,0.498,124,0.511,125,0.498,126,0.511,127,0.498,128,0.511,129,0.498,130,0.498,131,0.511,132,0.498,133,0.511,134,0.498,135,0.511,136,0.498,137,0.511,138,0.498,139,0.486,140,0.498,141,0.511,142,0.498,143,0.511,144,0.511,145,0.511,146,0.004,147,0.004,154,1.587,155,2.446,156,2.735,161,0.207,162,1.103,163,3.105,164,2.777,165,2.472,169,1.001,171,3.248,174,1.844,176,0.931,177,0.597,178,1.565,180,1.607,181,2.192,184,1.09,201,0.791,231,0.901,233,0.465,263,2.215,275,1.542,291,1.507,292,1.687,300,0.682,336,1.006,364,1.975,373,0.901,374,0.901,375,1.76,376,0.925,377,0.925,378,0.925,428,2.155,435,1.099,480,2.996,485,1.524,491,4.291,493,4.782,502,1.066,503,2.986,505,2.446,509,2.063,515,1.781,518,1.4,570,4.782,572,4.212,583,1.781,589,2.654,591,2.63,601,1.459,626,0.925,664,2.654,681,2.534,692,2.521,803,1.252,844,2.63,845,2.124,846,3.856,848,2.63,849,2.85,850,2.85,854,3.287,855,2.85,864,2.986,868,2.951,869,3.742,870,3.759,884,2.301,885,4.278,887,3.615,892,2.735,893,1.346,899,1.346,900,1.459,901,1.21,902,1.459,903,1.346,904,1.524,905,2.405,906,1.524,910,1.17,918,1.524,919,1.252,920,1.4,921,1.459,922,1.524,923,1.524,929,1.908,934,1.682,935,1.682,936,1.682,938,1.598,939,1.899,944,2.208,945,2.208,946,2.208,949,2.124,950,2.986,957,2.124,978,1.781,1009,3.71,1010,3.71,1011,3.479,1012,2.996,1013,1.598,1015,2.996,1022,2.996,1024,2.809,1029,2.996,1031,1.781,1033,1.598,1035,1.346,1036,1.598,1037,1.899,1038,1.899,1039,1.899,1040,1.682,1041,1.781,1042,1.781,1043,1.781,1054,1.781,1056,2.996,1060,1.899,1062,1.899,1063,2.996,1073,2.63,1229,3.229,1234,2.546,1235,3.999,1236,3.71,1237,4.017,1238,4.017,1239,4.387,1240,4.98,1241,4.017,1242,2.546,1243,2.546,1244,2.546,1245,2.546,1246,2.546,1247,2.546,1248,2.546,1249,2.546,1250,2.996,1251,3.229,1252,3.229,1253,3.287,1254,3.287,1255,2.546,1256,2.546,1257,2.546,1258,2.546,1259,2.047,1260,1.899,1261,2.245,1262,2.546,1263,2.047,1264,2.047,1265,2.546,1266,2.546,1267,2.546,1268,2.047,1269,2.546,1270,2.546,1271,4.017,1272,2.546,1273,2.546,1274,2.245,1275,2.245,1276,2.245,1277,2.245,1278,2.245,1279,2.546,1280,4.017,1281,4.017,1282,4.017,1283,4.017,1284,4.017,1285,4.017,1286,4.017,1287,4.017,1288,4.017,1289,4.017,1290,4.017,1291,4.017,1292,4.017,1293,4.017,1294,4.017]],["title/interfaces/InvitationDto.html",[222,0.422,1295,3.061]],["body/interfaces/InvitationDto.html",[3,0.121,4,0.092,8,0.106,29,0.361,30,0.009,38,0.121,146,0.008,147,0.008,161,0.545,177,0.703,184,1.576,222,0.645,224,1.668,233,0.91,1073,4.549,1231,7.587,1232,4.776,1295,5.495,1296,6.695,1297,6.695]],["title/interfaces/InvitationRequestDto.html",[222,0.422,1298,3.518]],["body/interfaces/InvitationRequestDto.html",[3,0.124,4,0.094,8,0.109,30,0.009,38,0.124,146,0.008,147,0.008,161,0.556,177,0.671,184,1.583,222,0.659,224,1.704,233,0.921,669,4.095,1073,4.58,1298,6.396,1299,6.84,1300,6.059]],["title/injectables/InvitationService.html",[298,0.944,493,3.061]],["body/injectables/InvitationService.html",[3,0.102,4,0.077,8,0.089,29,0.467,30,0.01,32,0.596,38,0.102,39,0.596,49,0.613,146,0.007,147,0.007,157,2.427,161,0.458,162,1.94,169,1.401,174,1.879,176,1.879,177,0.683,178,1.791,180,2.021,184,1.512,298,1.524,300,1.507,345,2.585,346,2.585,366,3.8,405,2.527,478,2.1,480,5.271,493,4.943,573,3.367,574,4.645,576,3.885,589,5.357,591,4.508,596,3.367,597,4.049,601,4.049,604,4.959,606,5.682,608,6.232,610,3.367,663,3.933,978,3.933,1240,7.15,1295,3.933,1298,6.519,1301,5.624,1302,7.068,1303,5.271,1304,5.624,1305,7.068,1306,5.624,1307,7.068,1308,5.624,1309,7.068,1310,5.624,1311,5.624,1312,5.624,1313,7.729,1314,5.624,1315,4.194]],["title/components/IssuesComponent.html",[0,0.16,81,0.856]],["body/components/IssuesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,1.509,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,1316,4.924,1317,7.713,1318,6.488,1319,6.488]],["title/injectables/JwtService.html",[298,0.944,492,3.518]],["body/injectables/JwtService.html",[3,0.1,4,0.076,8,0.088,29,0.377,30,0.01,32,0.586,38,0.1,39,0.586,49,0.58,146,0.007,147,0.007,157,2.388,161,0.45,162,1.92,169,1.379,174,1.968,176,1.778,177,0.647,178,1.694,180,2.174,181,2.849,184,1.573,201,2.174,298,1.508,301,5.326,302,3.656,303,3.473,345,2.543,346,2.543,349,4.188,405,2.287,428,2.382,475,6.169,478,2.066,492,5.624,571,4.127,622,6.2,684,5.695,1320,8.623,1321,4.127,1322,5.637,1323,8.061,1324,8.061,1325,6.995,1326,6.995,1327,5.533,1328,5.533,1329,5.533,1330,5.533,1331,4.448,1332,6.995,1333,4.448,1334,6.995,1335,5.533,1336,5.533,1337,5.533,1338,6.995,1339,6.995,1340,5.533,1341,5.533,1342,5.533,1343,5.533]],["title/injectables/LayoutService.html",[172,2.406,298,0.944]],["body/injectables/LayoutService.html",[3,0.034,4,0.026,8,0.03,18,1.319,29,0.219,30,0.01,32,0.2,38,0.057,39,0.838,49,0.398,146,0.003,147,0.003,157,0.814,161,0.153,162,0.864,165,2.001,169,0.47,172,4.223,174,1.759,176,0.437,177,0.677,178,0.417,180,2.05,181,1.906,184,1.328,201,0.586,208,3.973,209,3.527,213,4.474,222,0.756,223,5.661,225,1.516,226,2.425,227,3.021,228,1.884,229,2.347,230,5.931,231,1.673,232,2.347,233,0.784,234,3.608,235,4.711,236,4.711,237,4.974,238,5.186,239,5.05,240,1.319,241,5.444,242,5.729,243,3.921,244,4.873,245,4.448,246,4.418,247,3.921,248,3.07,249,3.307,250,3.527,251,3.125,252,2.53,253,2.079,254,5.274,255,2.347,256,5.18,257,5.072,258,2.347,259,2.347,260,4.25,261,2.347,262,2.347,263,1.401,264,3.527,265,3.256,266,1.406,267,5.05,268,4.31,269,4.495,270,5.586,271,1.516,272,1.516,273,2.542,274,1.406,275,3.263,276,1.406,277,4.589,278,1.406,279,1.516,280,2.201,281,4.364,282,1.516,283,1.516,284,2.347,285,1.406,286,4.12,287,1.319,288,2.141,289,1.406,290,1.406,291,2.198,292,1.991,293,3.021,294,5.304,295,4.875,296,4.227,297,1.516,298,0.679,299,6.025,300,1.758,301,3.753,302,2.079,303,1.183,304,5.661,305,3.256,306,3.929,307,1.516,308,5.275,309,5.275,310,5.275,311,5.59,312,5.078,313,5.078,314,4.237,315,5.444,316,1.516,317,1.516,318,1.406,319,1.406,320,4.237,321,1.406,322,5.931,323,6.176,324,4.567,325,4.951,326,1.516,327,2.201,328,3.802,329,4.567,330,1.406,331,4.237,332,4.699,333,3.307,334,4.227,335,3.307,336,1.6,337,1.516,338,1.516,339,3.802,340,1.975,341,3.802,342,4.736,343,3.307,344,2.53,345,0.867,346,0.867,347,1.406,348,1.516,349,1.129,350,3.307,351,2.347,352,3.802,353,4.237,354,2.347,355,6.242,356,2.978,357,4.711,358,3.964,359,3.527,360,4.711,361,3.802,362,4.711,363,3.781,364,3.105,365,2.968,366,3.496,367,3.527,368,3.125,369,4.237,370,6.242,371,2.53,372,2.201,373,0.667,374,0.667,375,0.667,376,0.685,377,0.685,378,0.685,379,3.125,380,3.125,381,3.527,382,3.802,383,3.307,384,4.418,385,3.802,386,3.527,387,2.53,388,2.53,389,3.802,390,1.516,391,3.256,392,3.256,393,2.53,394,2.53,395,3.256,396,2.53,397,3.256,398,2.079,399,1.516,400,4.567,401,4.567,402,3.802,403,3.256,404,3.256,405,1.858,406,1.516,407,3.527,408,3.802,409,4.227,410,4.567,411,4.227,412,4.711,413,5.078,414,4.567,415,3.256,416,2.833,417,3.256,418,1.516,419,4.567,420,2.53,421,2.201,422,3.802,423,1.516,424,1.516,425,3.802,426,3.256,427,1.516,428,0.557,429,1.516,430,1.516,431,1.516,432,3.802,433,1.516,434,1.516,478,0.704,1344,1.886,1345,1.886,1346,1.886,1347,1.886,1348,1.886,1349,1.886,1350,1.886,1351,1.886,1352,1.886,1353,1.886,1354,1.886,1355,1.886,1356,1.886,1357,1.886,1358,1.886,1359,1.886,1360,1.886]],["title/interfaces/LayoutState.html",[222,0.422,304,3.264]],["body/interfaces/LayoutState.html",[3,0.039,4,0.03,8,0.034,18,1.37,29,0.24,30,0.01,32,0.228,38,0.064,39,0.82,49,0.266,146,0.004,147,0.004,157,0.931,161,0.175,165,1.517,172,4.141,177,0.674,180,1.585,184,1.336,201,0.67,208,3.59,209,3.319,213,4.405,222,0.807,223,5.522,224,0.537,225,1.734,226,3.073,227,3.828,228,2.664,229,3.319,230,6.481,231,1.574,232,3.319,233,0.821,234,3.991,235,4.522,236,4.522,237,4.959,238,4.769,239,4.972,240,1.508,241,5.701,242,5.618,243,3.319,244,4.971,245,4.744,246,4.663,247,4.216,248,3.257,249,3.59,250,3.828,251,3.392,252,3.578,253,2.941,254,5.376,255,3.319,256,5.528,257,5.591,258,2.622,259,2.622,260,4.013,261,2.622,262,2.622,263,1.565,264,3.828,265,2.826,266,1.608,267,4.216,268,4.577,269,5.288,270,5.703,271,1.734,272,1.734,273,2.206,274,1.608,275,3.422,276,1.608,277,5.348,278,1.608,279,1.734,280,2.459,281,4.728,282,1.734,283,1.734,284,2.622,285,1.608,286,3.698,287,1.508,288,2.353,289,1.608,290,1.608,291,1.556,292,1.409,293,2.622,294,4.522,295,4.556,296,4.127,297,1.734,298,0.758,299,5.681,300,1.515,301,2.941,302,2.323,303,1.353,304,6.059,305,3.578,306,4.07,307,2.826,308,6.147,309,6.147,310,6.147,311,6.229,312,5.953,313,5.953,314,5.143,315,5.836,316,2.826,317,2.826,318,2.622,319,2.622,320,5.522,321,2.622,322,5.141,323,5.701,324,4.545,325,4.897,326,2.826,327,3.59,328,5.36,329,4.545,330,2.622,331,5.143,332,5.119,333,3.954,334,3.578,335,3.113,336,1.758,337,2.826,338,2.826,339,2.826,340,1.353,341,2.826,342,3.954,343,2.459,344,1.734,345,0.991,346,0.991,347,1.608,348,1.734,349,1.291,350,2.459,351,1.608,352,2.826,353,3.319,354,1.608,355,5.36,356,2.539,357,3.828,358,3.222,359,2.622,360,3.828,361,2.826,362,3.828,363,3.073,364,2.524,365,2.206,366,2.981,367,2.622,368,2.323,369,3.319,370,5.36,371,1.734,372,1.508,373,0.763,374,0.763,375,0.763,376,0.784,377,0.784,378,0.784,379,2.323,380,2.323,381,2.622,382,2.826,383,2.459,384,3.59,385,2.826,386,2.622,387,1.734,388,1.734,389,2.826,390,1.734,391,3.578,392,3.578,393,2.826,394,2.826,395,3.578,396,1.734,397,3.578,398,1.425,399,1.734,400,3.578,401,2.826,402,2.826,403,1.734,404,1.734,405,1.679,406,1.734,407,2.622,408,2.826,409,2.826,410,3.578,411,2.826,412,3.319,413,3.578,414,2.826,415,1.734,416,1.508,417,1.734,418,1.734,419,2.826,420,1.734,421,1.508,422,1.734,423,1.734,424,1.734,425,1.734,426,3.578,427,1.734,428,0.637,429,1.734,430,1.734,431,1.734,432,1.734,433,1.734,434,1.734]],["title/injectables/LocalStorage.html",[298,0.944,301,2.891]],["body/injectables/LocalStorage.html",[3,0.094,4,0.072,8,0.083,29,0.403,30,0.01,31,1.845,32,0.553,38,0.094,39,0.553,49,0.596,146,0.007,147,0.007,154,2.061,157,2.252,161,0.548,162,1.85,165,2.206,169,1.859,174,1.998,176,1.828,177,0.688,178,1.742,180,2.135,181,2.806,184,1.604,189,3.649,201,1.621,233,0.78,288,4.17,292,2.165,298,1.453,301,4.452,303,3.274,345,2.398,349,5.006,356,2.185,405,2.44,428,2.331,478,1.948,694,4.452,974,3.447,1321,3.891,1322,5.516,1331,4.195,1333,4.195,1361,8.712,1362,6.58,1363,5.417,1364,5.395,1365,5.417,1366,5.417,1367,5.999,1368,5.941,1369,5.417,1370,5.417,1371,4.601,1372,5.417,1373,4.601,1374,5.417,1375,4.601,1376,4.195,1377,4.195,1378,4.601,1379,5.025,1380,3.891,1381,4.601,1382,4.601,1383,4.601,1384,4.601,1385,5.941,1386,5.217,1387,4.601,1388,4.601,1389,4.601,1390,4.601,1391,4.601,1392,4.601]],["title/components/LoginComponent.html",[0,0.16,83,0.856]],["body/components/LoginComponent.html",[0,0.194,1,0.552,2,0.811,3,0.051,4,0.039,5,0.566,6,0.566,7,0.566,8,0.045,12,0.566,13,1.819,14,1.819,15,0.552,17,0.851,18,0.791,19,0.872,20,2.097,21,2.523,22,3.179,24,2.224,25,0.872,27,0.916,29,0.453,30,0.01,31,0.998,32,0.299,33,1.34,34,1.053,35,1.053,36,1.34,38,0.051,39,0.299,41,3.907,43,0.566,44,0.872,45,0.872,46,0.566,47,1.197,48,0.566,49,0.451,50,0.566,51,0.552,52,0.566,53,0.552,54,0.566,55,0.552,56,0.566,57,0.552,58,0.566,59,0.552,60,0.566,61,0.552,62,0.513,63,0.872,64,0.552,65,0.872,66,0.552,67,0.566,68,0.552,69,0.566,70,0.552,71,0.566,72,0.552,73,0.539,74,0.872,75,0.552,76,0.566,77,0.552,78,0.566,79,0.552,80,0.566,81,0.552,82,0.566,83,1.168,84,0.566,85,0.552,86,0.566,87,0.552,88,0.566,89,0.552,90,0.526,91,1.065,92,0.552,93,0.566,94,0.552,95,0.566,96,0.552,97,0.566,98,0.552,99,0.566,100,0.552,101,0.552,102,0.476,103,0.831,104,0.566,105,0.831,106,0.872,107,0.552,108,0.552,109,0.566,110,0.552,111,0.566,112,0.552,113,0.566,114,0.552,115,0.566,116,0.552,117,0.526,118,0.552,119,0.566,120,0.552,121,0.566,122,0.566,123,0.552,124,0.566,125,0.552,126,0.566,127,0.552,128,0.566,129,0.552,130,0.552,131,0.566,132,0.552,133,0.566,134,0.552,135,0.566,136,0.552,137,0.566,138,0.552,139,0.539,140,0.552,141,0.566,142,0.552,143,0.566,144,0.566,145,0.566,146,0.004,147,0.004,154,1.718,155,2.611,156,2.92,161,0.229,162,1.194,163,3.282,164,2.935,165,2.483,169,1.084,171,3.374,174,1.903,176,1.008,177,0.599,178,1.62,180,1.857,181,2.287,184,0.942,231,0.998,233,0.504,263,1.256,275,1.67,291,1.609,292,1.458,300,0.756,336,1.114,364,1.387,373,0.998,374,0.998,375,1.539,376,1.025,377,1.025,378,1.025,405,1.423,428,2.224,435,1.217,482,3.245,485,1.688,491,4.458,502,1.181,503,3.156,505,2.611,509,1.782,515,1.973,518,1.551,570,4.511,583,1.973,626,1.025,681,2.705,803,1.387,844,2.808,845,2.3,846,3.979,848,2.808,849,3.043,850,3.043,854,3.509,855,3.043,864,3.156,868,3.065,869,3.904,870,3.905,884,2.492,885,3.42,887,3.755,892,2.92,893,1.491,899,1.491,900,1.616,901,1.34,902,1.616,903,1.491,904,1.688,905,2.604,906,1.688,910,1.296,918,1.688,919,1.387,920,1.551,921,1.616,922,1.688,923,1.688,929,2.067,934,1.864,935,1.864,936,1.864,938,1.77,944,1.551,945,1.551,946,1.551,949,1.491,950,2.3,957,2.3,1009,3.961,1010,3.961,1011,3.714,1012,3.245,1013,1.77,1015,3.245,1022,3.245,1024,3.043,1029,3.245,1031,1.973,1033,1.77,1035,1.491,1036,1.77,1037,2.104,1038,2.104,1039,2.104,1040,1.864,1041,1.973,1042,1.973,1043,1.973,1054,1.973,1056,3.245,1060,2.104,1062,2.104,1063,3.245,1066,3.836,1067,3.836,1235,4.27,1236,3.961,1250,3.245,1259,2.268,1260,2.104,1393,2.82,1394,6.815,1395,4.35,1396,4.35,1397,5.311,1398,6.815,1399,5.97,1400,4.35,1401,2.82,1402,2.82,1403,2.82,1404,2.82,1405,2.82,1406,2.82,1407,2.82,1408,2.82,1409,2.82,1410,2.82,1411,2.82,1412,2.82,1413,2.82,1414,2.104,1415,2.268,1416,2.82,1417,2.82,1418,2.82,1419,2.82,1420,2.82,1421,2.82,1422,2.487,1423,2.487,1424,4.35,1425,4.35,1426,4.35,1427,4.35,1428,4.35,1429,4.35,1430,4.35,1431,4.35,1432,4.35]],["title/components/LogsComponent.html",[0,0.16,85,0.856]],["body/components/LogsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,1.509,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,1433,4.924,1434,6.801,1435,6.488,1436,6.488]],["title/components/MembersComponent.html",[0,0.16,87,0.856]],["body/components/MembersComponent.html",[0,0.227,1,1.332,2,0.988,3,0.066,4,0.05,5,0.737,6,0.737,7,0.737,8,0.058,10,2.741,12,0.737,13,1.847,14,1.847,15,0.719,17,1.037,18,0.964,19,1.063,20,2.456,24,2.603,25,1.063,27,1.116,29,0.467,30,0.01,31,1.3,32,0.389,34,1.372,35,1.372,38,0.066,39,0.389,43,0.737,44,1.063,45,1.063,46,0.737,47,1.365,48,0.737,49,0.47,50,0.737,51,0.719,52,0.737,53,0.719,54,0.737,55,0.719,56,0.737,57,0.719,58,0.737,59,0.719,60,0.737,61,0.719,62,0.668,63,1.063,64,0.719,65,1.063,66,0.719,67,0.737,68,0.719,69,0.737,70,0.719,71,0.737,72,0.719,73,0.702,74,1.063,75,0.719,76,0.737,77,0.719,78,0.737,79,0.719,80,0.737,81,0.719,82,0.737,83,0.719,84,0.737,85,0.719,86,0.737,87,1.332,88,0.737,89,1.332,90,1.159,91,1.247,92,0.719,93,0.737,94,0.719,95,0.737,96,0.719,97,0.737,98,0.719,99,0.737,100,0.719,101,0.719,102,0.62,103,1.012,104,0.737,105,1.012,106,1.063,107,0.719,108,0.719,109,0.737,110,0.719,111,0.737,112,0.719,113,0.737,114,0.719,115,0.737,116,0.719,117,0.685,118,0.719,119,0.737,120,0.719,121,0.737,122,0.737,123,0.719,124,0.737,125,0.719,126,0.737,127,0.719,128,0.737,129,0.719,130,0.719,131,0.737,132,0.719,133,0.737,134,0.719,135,0.737,136,0.719,137,0.737,138,0.719,139,0.702,140,0.719,141,0.737,142,0.719,143,0.737,144,0.737,145,0.737,146,0.005,147,0.005,154,2.094,155,3.057,161,0.299,162,1.455,164,3.346,169,0.915,174,1.873,176,0.852,177,0.31,178,0.812,180,0.961,181,1.233,233,0.614,291,2.349,292,2.326,300,0.984,346,1.689,435,1.586,502,1.539,626,1.335,845,2.803,846,3.287,848,3.287,868,3.245,901,1.746,903,1.943,910,1.689,929,3.572,1035,1.943,1098,2.428,1437,3.675,1438,4.637,1439,5.301,1440,5.301,1441,6.218,1442,4.999,1443,4.999,1444,5.802,1445,6.218,1446,6.807,1447,4.999,1448,3.675,1449,3.675,1450,5.301,1451,6.045,1452,3.675,1453,5.608,1454,7.519,1455,4.262,1456,3.675,1457,4.262,1458,3.675,1459,4.262,1460,3.675,1461,5.301,1462,3.675,1463,5.301,1464,3.675,1465,5.301,1466,3.675,1467,2.741,1468,2.02,1469,2.741,1470,2.105,1471,2.741,1472,2.105,1473,2.741,1474,2.954,1475,3.24,1476,3.675,1477,3.675,1478,3.675,1479,3.24,1480,2.954,1481,2.954,1482,3.675,1483,3.24,1484,2.954,1485,3.675,1486,4.262]],["title/interfaces/MembersDto.html",[222,0.422,1487,3.264]],["body/interfaces/MembersDto.html",[3,0.12,4,0.091,8,0.106,29,0.422,30,0.009,38,0.12,146,0.008,147,0.008,161,0.54,177,0.701,222,0.64,224,1.654,233,0.906,602,6.679,1295,6.002,1447,6.899,1487,5.832,1488,6.641,1489,7.568,1490,6.4,1491,6.641,1492,6.641]],["title/injectables/MembersEffects.html",[298,0.944,448,3.518]],["body/injectables/MembersEffects.html",[3,0.088,4,0.067,8,0.078,29,0.443,30,0.01,32,0.518,38,0.088,39,0.518,49,0.37,146,0.007,147,0.007,161,0.398,165,2.137,169,1.609,174,1.853,176,1.133,177,0.412,178,1.08,233,0.748,291,2.331,292,2.111,298,1.392,300,1.31,448,5.191,478,1.826,493,5.859,494,4.8,496,5.4,497,5.337,499,5.379,502,3.028,507,5.156,509,2.756,526,5.019,553,5.694,555,3.068,556,2.927,557,3.068,568,4.311,639,5.694,1303,5.736,1474,6.604,1493,4.889,1494,5.379,1495,7.244,1496,4.889,1497,6.604,1498,4.889,1499,6.457,1500,6.457,1501,6.457,1502,6.457,1503,6.457,1504,4.889,1505,6.457,1506,6.457,1507,6.457,1508,6.457,1509,6.457,1510,4.889,1511,6.457,1512,6.457,1513,6.457,1514,4.889,1515,6.457,1516,6.457,1517,6.457,1518,5.694,1519,4.889,1520,4.311,1521,4.311,1522,4.311,1523,4.311,1524,4.311,1525,4.311,1526,4.889]],["title/injectables/MembersService.html",[298,0.944,1497,3.518]],["body/injectables/MembersService.html",[3,0.111,4,0.084,8,0.098,29,0.463,30,0.01,32,0.652,38,0.111,39,0.652,49,0.565,146,0.008,147,0.008,157,2.656,161,0.501,162,2.051,169,1.533,174,1.865,176,1.732,177,0.63,178,1.65,180,1.954,184,1.427,298,1.611,300,1.649,345,2.829,346,2.829,366,3.956,405,2.443,478,2.298,573,3.684,574,4.794,576,4.108,596,3.684,597,4.281,610,4.473,1487,4.59,1494,5.226,1497,6.007,1527,6.154,1528,8.368,1529,6.154,1530,6.154,1531,7.472,1532,6.154,1533,6.589,1534,5.427,1535,6.154,1536,6.154]],["title/interfaces/MembersState.html",[222,0.422,438,3.518]],["body/interfaces/MembersState.html",[3,0.084,4,0.063,8,0.073,29,0.423,30,0.01,38,0.127,90,1.602,146,0.006,147,0.006,161,0.376,177,0.708,178,1.02,201,1.932,222,0.445,224,1.151,231,2.199,233,0.72,248,2.353,306,4.266,373,2.199,374,2.199,375,1.634,376,1.679,377,2.259,378,1.679,428,2.704,438,5.651,450,4.074,509,2.966,621,4.44,624,4.38,625,3.903,626,1.679,627,2.899,628,2.442,633,3.903,634,4.411,635,4.208,636,2.766,638,4.411,642,2.271,644,3.716,645,2.766,647,3.716,648,3.903,664,4.968,847,2.123,1057,3.445,1058,4.074,1059,4.074,1206,2.54,1303,3.445,1447,3.714,1474,3.714,1487,5.608,1489,4.074,1490,3.445,1494,3.231,1495,4.074,1520,4.074,1521,4.074,1522,4.074,1523,4.074,1524,4.074,1525,4.074,1534,4.074,1537,4.62,1538,8.397,1539,8.598,1540,8.397,1541,8.397,1542,8.397,1543,4.62,1544,4.62,1545,4.62,1546,4.62,1547,4.62,1548,4.62,1549,4.62,1550,4.62,1551,4.62,1552,4.62,1553,4.62,1554,4.62,1555,4.62]],["title/components/MembersTableComponent.html",[0,0.16,89,0.856]],["body/components/MembersTableComponent.html",[0,0.16,1,0.411,2,0.642,3,0.062,4,0.029,5,0.422,6,0.422,7,0.422,8,0.033,12,0.422,13,1.779,14,1.779,15,0.411,17,0.674,18,1.36,19,0.691,20,1.727,21,2.078,23,2.404,24,1.831,25,0.691,27,0.725,29,0.447,30,0.01,31,0.744,32,0.223,34,0.785,35,0.785,36,0.999,37,1.156,38,0.038,39,0.223,41,3.811,43,0.422,44,0.691,45,0.691,46,0.422,47,1.014,48,0.422,49,0.499,50,0.422,51,0.411,52,0.422,53,0.411,54,0.422,55,0.411,56,0.422,57,0.411,58,0.422,59,0.411,60,0.422,61,0.411,62,0.382,63,0.691,64,0.411,65,0.691,66,0.411,67,0.422,68,0.411,69,0.422,70,0.411,71,0.422,72,0.411,73,0.402,74,0.691,75,0.411,76,0.422,77,0.411,78,0.422,79,0.411,80,0.422,81,0.411,82,0.422,83,0.411,84,0.422,85,0.411,86,0.422,87,0.411,88,0.422,89,0.989,90,1.614,91,0.877,92,0.411,93,0.422,94,0.411,95,0.422,96,0.411,97,0.422,98,0.411,99,0.422,100,0.411,101,0.411,102,0.355,103,0.658,104,0.422,105,0.658,106,0.691,107,0.411,108,0.411,109,0.422,110,0.411,111,0.422,112,0.411,113,0.422,114,0.411,115,0.422,116,0.411,117,0.392,118,0.411,119,0.422,120,0.411,121,0.422,122,0.422,123,0.411,124,0.422,125,0.411,126,0.422,127,0.411,128,0.422,129,0.411,130,0.411,131,0.422,132,0.411,133,0.422,134,0.411,135,0.422,136,0.411,137,0.422,138,0.411,139,0.402,140,0.411,141,0.422,142,0.411,143,0.422,144,0.422,145,0.422,146,0.004,147,0.004,161,0.171,162,0.945,165,1.951,169,0.858,171,3.005,174,1.911,176,1.389,177,0.657,178,1.323,180,1.726,181,2.01,184,1.247,201,0.653,231,1.547,233,0.399,263,3.042,275,2.992,286,3.052,291,2.267,292,2.114,300,0.563,336,1.727,373,1.547,374,1.547,375,1.547,376,1.589,377,1.589,378,1.589,405,1.43,428,1.018,435,0.907,509,1.156,518,1.893,591,1.112,621,4.017,624,1.071,626,0.764,628,1.112,642,1.693,644,2.673,647,2.673,663,1.47,681,2.228,692,2.161,751,4.065,759,2.161,803,1.034,845,1.821,846,3.613,848,2.312,849,2.506,850,2.506,855,2.506,868,2.586,869,3.624,884,2.506,885,3.432,893,1.112,899,1.112,900,1.205,901,0.999,902,1.205,903,1.112,910,0.966,919,3.457,920,1.156,921,1.205,929,1.636,940,2.061,944,2.78,945,2.78,946,2.78,949,2.673,950,2.949,1073,2.673,1098,1.389,1117,3.262,1157,2.89,1188,1.47,1189,2.568,1206,4.041,1228,3.771,1232,3.344,1252,3.516,1295,3.059,1300,1.47,1303,1.568,1475,1.854,1479,1.854,1483,7.311,1494,3.059,1533,4.919,1556,8.291,1557,1.69,1558,5.494,1559,4.485,1560,3.516,1561,3.059,1562,3.516,1563,3.262,1564,3.516,1565,2.768,1566,2.768,1567,3.516,1568,4.373,1569,4.373,1570,5.056,1571,5.056,1572,3.516,1573,2.768,1574,3.444,1575,5.056,1576,5.056,1577,5.056,1578,3.444,1579,3.037,1580,2.506,1581,3.516,1582,3.516,1583,4.373,1584,3.516,1585,4.373,1586,3.516,1587,2.103,1588,2.103,1589,2.103,1590,2.103,1591,1.69,1592,1.69,1593,1.69,1594,2.103,1595,2.103,1596,2.768,1597,4.065,1598,1.69,1599,3.444,1600,2.103,1601,4.373,1602,3.444,1603,2.103,1604,2.103,1605,1.854,1606,2.103,1607,3.444,1608,2.103,1609,3.037,1610,2.103,1611,1.854,1612,2.768,1613,2.103,1614,1.69,1615,2.103,1616,3.444,1617,2.103,1618,3.444,1619,1.69,1620,3.444,1621,2.103,1622,1.47,1623,1.69,1624,1.69,1625,1.568,1626,1.69,1627,1.47,1628,2.103,1629,1.568,1630,2.103,1631,2.103,1632,2.103,1633,1.69,1634,2.103,1635,2.103,1636,2.103,1637,1.69,1638,2.103,1639,2.103,1640,4.373,1641,2.103,1642,2.568,1643,2.408,1644,2.408,1645,2.568,1646,5.578,1647,2.768,1648,2.103,1649,2.768,1650,2.103,1651,2.103,1652,2.103,1653,2.103,1654,2.103,1655,1.854,1656,1.69,1657,1.854,1658,1.854,1659,1.854,1660,1.854,1661,1.854,1662,1.69,1663,1.854,1664,1.69,1665,1.854,1666,1.854,1667,3.037,1668,1.854,1669,2.103,1670,1.854,1671,2.103,1672,2.103,1673,2.103,1674,3.444,1675,3.444,1676,2.103,1677,2.103,1678,2.103,1679,2.103,1680,2.103,1681,2.103,1682,3.262,1683,1.854,1684,1.854,1685,1.854,1686,1.854,1687,3.037,1688,1.854,1689,3.444,1690,3.444,1691,3.444,1692,3.444,1693,3.444,1694,3.037,1695,3.444,1696,3.444,1697,3.444,1698,3.444,1699,5.056,1700,3.444,1701,3.444,1702,3.444,1703,3.444,1704,3.444,1705,3.444]],["title/injectables/MemoryStorage.html",[298,0.944,1379,3.264]],["body/injectables/MemoryStorage.html",[3,0.098,4,0.074,8,0.086,29,0.291,30,0.01,32,0.571,38,0.098,39,0.571,49,0.604,146,0.007,147,0.007,154,2.131,161,0.617,162,1.89,165,2.241,174,1.987,176,1.851,177,0.711,178,1.764,180,2.157,181,2.68,184,1.605,201,1.677,233,0.797,288,4.222,291,1.635,292,2.081,298,1.484,347,4.024,349,4.539,405,2.479,428,2.439,478,2.015,694,4.549,940,3.23,1321,4.024,1322,5.585,1363,5.535,1364,5.665,1365,5.535,1366,5.535,1367,6.095,1369,5.535,1370,5.535,1372,4.338,1374,4.338,1376,4.338,1377,4.338,1379,5.134,1380,4.024,1580,4.344,1706,8.681,1707,5.395,1708,5.395,1709,5.395,1710,5.395,1711,4.338,1712,5.395,1713,5.395,1714,4.758,1715,5.395,1716,4.549,1717,5.395,1718,5.395,1719,5.395,1720,6.884,1721,5.395,1722,4.758,1723,5.395,1724,5.395]],["title/interfaces/MenuChangeEvent.html",[222,0.422,1725,3.518]],["body/interfaces/MenuChangeEvent.html",[3,0.123,4,0.093,8,0.108,30,0.009,38,0.123,146,0.008,147,0.008,161,0.554,177,0.669,178,1.752,184,1.489,222,0.656,224,1.696,233,0.919,275,3.224,1364,5.715,1725,6.378,1726,6.806,1727,4.76,1728,6.806,1729,7.627]],["title/injectables/MenuService.html",[298,0.944,685,3.264]],["body/injectables/MenuService.html",[2,1.506,3,0.071,4,0.054,8,0.063,18,1.278,29,0.349,30,0.009,32,0.418,38,0.071,39,0.838,49,0.298,117,1.586,146,0.006,147,0.006,157,1.703,161,0.321,162,1.531,165,2.463,174,1.785,176,0.915,177,0.545,178,0.872,180,1.458,181,1.872,226,3.339,228,3.873,233,0.646,234,3.873,245,4.028,248,3.295,268,4.444,275,2.699,291,2.13,292,2.219,298,1.203,299,6.266,300,1.057,306,3.84,325,5.231,340,3.5,342,3.901,343,3.901,345,1.814,353,5.244,356,3.563,357,6.029,358,4.413,360,5.244,364,3.974,366,4.183,372,4.524,379,4.645,380,4.901,384,4.917,478,1.474,674,4.484,675,3.901,685,6.346,763,4.824,804,2.76,919,4.217,1121,5.201,1123,4.484,1580,3.706,1725,6.776,1727,2.76,1730,3.946,1731,5.577,1732,5.577,1733,7.031,1734,7.832,1735,7.832,1736,7.349,1737,5.577,1738,3.946,1739,7.031,1740,5.201,1741,5.201,1742,6.541,1743,6.469,1744,5.704,1745,6.469,1746,3.946,1747,6.443,1748,3.946,1749,7.128,1750,6.499,1751,7.128,1752,5.577,1753,3.946,1754,3.946,1755,5.577,1756,3.946,1757,3.946,1758,3.946,1759,3.946,1760,3.946]],["title/components/MenuitemComponent.html",[0,0.16,92,0.856]],["body/components/MenuitemComponent.html",[0,0.203,1,0.31,2,0.507,3,0.029,4,0.022,5,0.318,6,0.318,7,0.318,8,0.025,12,0.318,13,1.733,14,1.73,15,0.31,17,0.532,18,0.769,19,0.545,20,1.409,22,2.136,23,1.961,24,1.494,25,0.545,29,0.342,30,0.01,31,0.561,32,0.168,33,0.754,34,0.592,35,0.592,37,0.872,38,0.029,39,0.859,41,2.385,43,0.318,44,0.545,45,1.113,46,0.318,47,0.848,48,0.318,49,0.32,50,0.318,51,0.31,52,0.318,53,0.31,54,0.318,55,0.31,56,0.318,57,0.31,58,0.318,59,0.31,60,0.318,61,0.31,62,0.288,63,0.545,64,0.31,65,0.545,66,0.31,67,0.318,68,0.31,69,0.318,70,0.31,71,0.318,72,0.31,73,0.303,74,0.545,75,0.31,76,0.318,77,0.31,78,0.318,79,0.31,80,0.318,81,0.31,82,0.318,83,0.31,84,0.318,85,0.31,86,0.318,87,0.31,88,0.318,89,0.31,90,0.296,91,0.715,92,1.457,93,0.318,94,0.31,95,0.318,96,0.31,97,0.318,98,0.31,99,0.318,100,0.31,101,0.31,102,0.268,103,0.519,104,0.318,105,0.519,106,0.545,107,0.31,108,0.31,109,0.318,110,0.31,111,0.318,112,0.31,113,0.318,114,0.31,115,0.318,116,0.31,117,0.886,118,0.31,119,0.318,120,0.31,121,0.318,122,0.318,123,0.31,124,0.318,125,0.31,126,0.318,127,0.31,128,0.318,129,0.31,130,0.31,131,0.318,132,0.31,133,0.318,134,0.31,135,0.318,136,0.31,137,0.318,138,0.31,139,0.303,140,0.31,141,0.318,142,0.31,143,0.318,144,0.318,145,0.318,146,0.003,147,0.003,154,1.074,155,1.754,157,2.897,161,0.63,162,0.746,164,2.878,165,0.804,169,1.523,172,3.853,174,1.725,176,0.63,177,0.676,178,0.6,180,1.244,181,1.419,184,1.243,190,1.048,201,0.493,204,2.186,226,2.136,228,1.628,229,4.366,231,1.262,233,0.315,234,3.322,244,2.654,245,4.881,247,2.028,248,3.23,251,1.048,253,2.794,254,5.06,256,1.796,257,4.094,262,2.661,263,3.645,268,4.819,273,4.214,274,2.028,275,2.13,277,1.901,281,3.674,286,3.331,288,2.743,291,1.681,292,1.843,295,3.868,300,0.425,306,3.833,314,3.87,319,2.028,320,2.028,325,4.598,327,5.819,342,3.629,350,1.901,354,2.028,356,1.138,358,4.214,363,4.598,364,0.78,365,2.239,366,2.551,367,2.028,368,4.04,369,2.028,372,1.901,373,0.962,374,0.962,375,0.962,376,0.988,377,0.576,378,0.576,379,1.796,380,2.357,384,1.901,398,1.796,405,1.914,416,1.901,421,2.957,428,0.804,635,3.106,675,2.495,684,3.257,685,5.674,692,1.706,694,1.796,695,1.183,698,2.186,699,2.495,706,4.138,708,3.399,713,2.397,714,5.068,718,2.868,719,2.868,721,2.397,725,6.39,726,2.397,727,3.146,729,3.399,741,3.428,748,1.109,759,2.239,761,3.146,763,2.661,802,1.399,804,3.327,844,1.886,864,3.353,868,1.825,870,4.183,887,4.19,919,3.84,940,1.628,1057,2.028,1100,5.592,1110,4.729,1116,2.028,1120,4.729,1130,4.194,1155,2.397,1157,1.048,1181,1.399,1182,1.399,1183,1.399,1188,1.901,1190,2.186,1199,3.729,1229,4.172,1364,5.075,1380,3.154,1580,2.044,1643,2.957,1644,1.901,1656,2.868,1727,3.629,1729,1.399,1734,3.729,1735,2.397,1736,3.146,1740,3.824,1741,3.824,1742,4.194,1747,5.551,1750,2.186,1761,1.586,1762,7.833,1763,2.719,1764,2.397,1765,3.568,1766,2.719,1767,5.549,1768,5.549,1769,4.757,1770,4.228,1771,6.115,1772,2.719,1773,2.719,1774,3.568,1775,3.568,1776,5.189,1777,5.549,1778,2.719,1779,2.719,1780,3.568,1781,4.228,1782,5.189,1783,3.146,1784,3.568,1785,4.575,1786,5.189,1787,3.729,1788,3.729,1789,3.146,1790,3.146,1791,1.586,1792,2.719,1793,6.869,1794,5.162,1795,4.228,1796,5.189,1797,4.228,1798,2.397,1799,1.586,1800,5.162,1801,6.115,1802,2.186,1803,1.586,1804,3.729,1805,4.228,1806,4.228,1807,4.228,1808,4.228,1809,2.719,1810,1.586,1811,3.568,1812,2.719,1813,2.719,1814,2.719,1815,2.719,1816,2.719,1817,1.586,1818,2.719,1819,3.729,1820,2.719,1821,3.568,1822,3.568,1823,3.399,1824,3.146,1825,3.568,1826,3.146,1827,2.397,1828,2.397,1829,1.586,1830,2.719,1831,2.719,1832,2.719,1833,1.586,1834,1.586,1835,1.586,1836,2.719,1837,4.575,1838,2.397,1839,1.586,1840,1.586,1841,3.729,1842,4.228,1843,1.586,1844,1.586,1845,1.586,1846,1.586,1847,1.586,1848,1.586,1849,2.719,1850,1.399,1851,1.586,1852,1.586,1853,1.586,1854,1.586,1855,1.586,1856,3.568,1857,2.719,1858,1.586,1859,1.586,1860,1.586,1861,1.586,1862,2.719,1863,1.586,1864,1.586,1865,1.586,1866,5.549,1867,2.719,1868,4.757,1869,2.719,1870,2.719,1871,1.586,1872,2.719,1873,2.719,1874,2.719,1875,1.586,1876,1.586,1877,2.719,1878,1.586,1879,1.586,1880,1.399,1881,1.586,1882,3.568,1883,1.586,1884,1.586,1885,2.719,1886,1.399,1887,1.586,1888,1.586,1889,1.586,1890,2.719,1891,1.586,1892,1.586,1893,1.586,1894,2.719,1895,1.586,1896,1.586,1897,1.586,1898,5.189]],["title/components/MessagesComponent.html",[0,0.16,94,0.856]],["body/components/MessagesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,1.509,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,1899,4.924,1900,7.713,1901,6.488,1902,6.488]],["title/components/NotFoundComponent.html",[0,0.16,96,0.856]],["body/components/NotFoundComponent.html",[0,0.256,1,0.901,2,1.156,3,0.083,4,0.063,5,0.923,6,0.923,7,0.923,8,0.073,12,0.923,13,1.866,14,1.866,15,0.901,17,1.214,18,1.128,19,1.244,20,2.771,21,3.334,22,4.201,23,3.858,24,2.938,25,1.244,27,1.306,29,0.436,30,0.009,31,1.629,32,0.488,33,2.187,34,1.719,35,1.719,36,2.187,37,2.531,38,0.083,39,0.488,41,3.451,43,0.923,44,1.244,45,1.244,46,0.923,47,1.506,48,0.923,49,0.469,50,0.923,51,0.901,52,0.923,53,0.901,54,0.923,55,0.901,56,0.923,57,0.901,58,0.923,59,0.901,60,0.923,61,0.901,62,0.837,63,1.244,64,0.901,65,1.244,66,0.901,67,0.923,68,0.901,69,0.923,70,0.901,71,0.923,72,0.901,73,0.879,74,1.244,75,0.901,76,0.923,77,0.901,78,0.923,79,0.901,80,0.923,81,0.901,82,0.923,83,0.901,84,0.923,85,0.901,86,0.923,87,0.901,88,0.923,89,0.901,90,0.858,91,1.407,92,0.901,93,0.923,94,0.901,95,0.923,96,1.47,97,0.923,98,0.901,99,0.923,100,0.901,101,0.901,102,0.777,103,1.185,104,0.923,105,1.185,106,1.244,107,0.901,108,0.901,109,0.923,110,0.901,111,0.923,112,0.901,113,0.923,114,0.901,115,0.923,116,0.901,117,0.858,118,0.901,119,0.923,120,0.901,121,0.923,122,0.923,123,0.901,124,0.923,125,0.901,126,0.923,127,0.901,128,0.923,129,0.901,130,0.901,131,0.923,132,0.901,133,0.923,134,0.901,135,0.923,136,0.901,137,0.923,138,0.901,139,0.879,140,0.901,141,0.923,142,0.901,143,0.923,144,0.923,145,0.923,146,0.006,147,0.006,941,4.988,1903,4.604,1904,4.604,1905,4.604,1906,5.471,1907,6.204,1908,6.204,1909,6.204,1910,6.204]],["title/components/NotificationsComponent.html",[0,0.16,98,0.856]],["body/components/NotificationsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,1.509,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,1751,6.801,1911,4.924,1912,6.488,1913,6.488]],["title/interfaces/Organization.html",[222,0.422,847,2.011]],["body/interfaces/Organization.html",[3,0.117,4,0.089,8,0.103,30,0.009,38,0.117,49,0.643,146,0.008,147,0.008,161,0.526,177,0.743,184,1.623,222,0.623,224,1.61,233,0.891,847,3.537,877,4.333,996,4.491,1914,6.464,1915,4.873,1916,7.501,1917,6.839,1918,4.873]],["title/components/OrganizationComponent.html",[0,0.16,100,0.856]],["body/components/OrganizationComponent.html",[0,0.173,1,0.463,2,0.706,3,0.043,4,0.032,5,0.474,6,0.474,7,0.474,8,0.086,12,0.474,13,1.796,14,1.796,15,0.463,17,0.741,18,0.861,19,0.759,20,1.87,21,2.25,23,2.604,24,1.983,25,0.759,27,0.797,29,0.461,30,0.01,31,0.836,32,0.25,34,0.883,35,0.883,36,1.123,37,1.299,38,0.043,39,0.25,41,3.915,43,0.474,44,0.759,45,0.759,46,0.474,47,1.086,48,0.474,49,0.552,50,0.474,51,0.463,52,0.474,53,0.463,54,0.474,55,0.463,56,0.474,57,0.463,58,0.474,59,0.463,60,0.474,61,0.463,62,0.43,63,0.759,64,0.463,65,0.759,66,0.463,67,0.474,68,0.463,69,0.474,70,0.463,71,0.474,72,0.463,73,0.451,74,0.759,75,0.463,76,0.474,77,0.463,78,0.474,79,0.463,80,0.474,81,0.463,82,0.474,83,0.463,84,0.474,85,0.463,86,0.474,87,0.463,88,0.474,89,0.463,90,0.44,91,0.95,92,0.463,93,0.474,94,0.463,95,0.474,96,0.463,97,0.474,98,0.463,99,0.474,100,1.06,101,0.463,102,0.399,103,0.723,104,0.474,105,0.723,106,0.759,107,0.463,108,0.463,109,0.474,110,0.463,111,0.474,112,0.463,113,0.474,114,0.463,115,0.474,116,0.463,117,0.44,118,0.463,119,0.474,120,0.463,121,0.474,122,0.474,123,0.463,124,0.474,125,0.463,126,0.474,127,0.463,128,0.474,129,0.463,130,0.463,131,0.474,132,0.463,133,0.474,134,0.463,135,0.474,136,0.463,137,0.474,138,0.463,139,0.451,140,0.463,141,0.474,142,0.463,143,0.474,144,0.474,145,0.474,146,0.004,147,0.004,154,1.495,156,2.604,161,0.192,162,1.039,163,2.977,165,2.158,169,0.943,171,3.155,174,1.914,176,1.539,177,0.65,178,1.572,180,1.861,181,2.228,184,1.474,201,1.176,231,1.339,233,0.438,263,1.052,275,1.454,286,1.204,288,2.863,291,2.012,292,1.894,300,0.633,356,1.585,364,1.162,373,1.339,374,1.339,375,1.675,376,1.376,377,1.376,378,0.859,405,1.771,428,2.204,435,1.02,502,0.99,509,1.27,518,2.081,621,3.133,624,1.204,626,0.859,628,1.25,644,1.25,647,2.002,681,2.413,759,1.483,803,1.162,844,2.504,845,2.002,846,3.763,847,3.637,848,2.504,849,2.713,851,3.338,852,3.338,856,4.144,859,3.807,860,3.807,862,3.044,864,2.863,865,2.824,867,4.644,868,2.729,875,3.044,877,3.019,882,2.824,887,2.504,892,2.604,893,2.002,897,3.044,899,1.25,901,1.123,902,1.354,903,1.25,904,1.415,905,2.266,906,1.415,909,2.084,910,1.086,912,1.9,914,1.9,916,1.763,917,1.9,918,1.415,919,1.861,920,1.299,921,1.354,922,1.415,923,1.415,924,1.9,929,1.123,940,3.242,944,1.299,945,1.299,946,1.299,949,1.25,950,1.25,952,3.044,957,3.511,958,1.763,962,1.9,963,2.084,964,1.763,965,3.044,1035,1.25,1098,1.562,1157,2.501,1438,3.532,1443,3.807,1453,4.039,1457,3.044,1467,1.763,1468,1.299,1469,1.763,1470,1.354,1471,1.763,1472,1.354,1473,1.763,1561,3.312,1579,3.338,1609,3.338,1611,2.084,1622,1.653,1627,1.653,1629,1.763,1642,1.763,1643,1.653,1644,1.653,1645,1.763,1682,3.532,1683,2.084,1684,2.084,1685,2.084,1686,2.084,1687,3.338,1688,2.084,1919,2.363,1920,4.736,1921,4.736,1922,4.736,1923,4.736,1924,4.736,1925,4.736,1926,4.736,1927,4.736,1928,4.736,1929,4.736,1930,5.415,1931,3.786,1932,3.786,1933,3.786,1934,3.786,1935,2.363,1936,2.363,1937,3.786,1938,2.363,1939,2.363,1940,2.363,1941,2.363,1942,2.363,1943,3.786,1944,2.363,1945,3.786,1946,5.415,1947,2.363,1948,3.338,1949,2.363,1950,3.786,1951,2.363,1952,5.415,1953,2.363,1954,3.786,1955,2.363,1956,2.363,1957,3.786,1958,2.363,1959,3.338,1960,2.363,1961,4.736,1962,3.786,1963,2.363,1964,2.363,1965,2.363,1966,2.363,1967,2.363,1968,2.363,1969,2.363,1970,2.363,1971,1.763,1972,2.363,1973,2.363,1974,3.786,1975,3.786,1976,3.786,1977,2.363,1978,2.363,1979,2.363,1980,2.363,1981,2.363,1982,2.363,1983,3.786,1984,3.786,1985,2.363,1986,2.363,1987,2.363,1988,2.363,1989,2.363,1990,2.363,1991,2.363,1992,2.363,1993,2.363,1994,3.786,1995,3.786,1996,3.786,1997,3.786,1998,3.786,1999,3.786,2000,3.786,2001,5.415,2002,3.786,2003,3.786,2004,3.786,2005,3.786,2006,3.786,2007,3.786]],["title/interfaces/OrganizationDto.html",[222,0.422,2008,3.518]],["body/interfaces/OrganizationDto.html",[3,0.117,4,0.089,8,0.103,30,0.009,38,0.117,49,0.643,146,0.008,147,0.008,161,0.526,177,0.743,184,1.623,222,0.623,224,1.61,233,0.891,877,4.333,996,4.491,1915,4.873,1916,7.501,1917,6.839,1918,4.873,2008,6.187,2009,6.464]],["title/injectables/OrganizationEffects.html",[298,0.944,452,3.518]],["body/injectables/OrganizationEffects.html",[3,0.095,4,0.072,8,0.083,29,0.441,30,0.01,32,0.555,38,0.095,39,0.555,49,0.396,146,0.007,147,0.007,161,0.426,165,1.996,169,1.683,174,1.831,176,1.214,177,0.441,178,1.157,233,0.782,291,2.265,292,2.052,298,1.456,300,1.403,452,5.43,478,1.956,494,4.879,496,5.345,497,5.253,499,5.524,502,2.193,507,5.253,509,2.809,526,4.692,555,3.287,556,3.135,557,3.287,863,3.906,866,4.618,867,5.854,911,5.89,1971,5.89,2010,5.237,2011,7.476,2012,5.237,2013,6.754,2014,6.754,2015,7.898,2016,6.754,2017,7.898,2018,5.237,2019,6.754,2020,6.754,2021,6.754,2022,5.237,2023,6.754,2024,6.754,2025,5.43,2026,6.754,2027,6.754,2028,5.237,2029,5.237,2030,4.618,2031,4.618,2032,4.618,2033,4.618,2034,4.618,2035,4.618]],["title/injectables/OrganizationService.html",[298,0.944,867,3.061]],["body/injectables/OrganizationService.html",[3,0.099,4,0.075,8,0.128,29,0.464,30,0.01,32,0.58,38,0.099,39,0.58,49,0.607,146,0.007,147,0.007,157,2.366,161,0.446,162,1.909,169,1.366,174,1.921,176,1.862,177,0.677,178,1.774,180,2.1,184,1.355,201,1.703,298,1.499,300,1.469,345,2.52,346,2.52,356,2.295,366,4.322,405,2.627,478,2.047,573,3.282,574,4.602,576,3.823,591,4.038,596,3.282,597,3.984,601,3.14,606,4.407,610,4.572,741,3.622,847,2.52,856,4.864,863,5.696,867,4.864,877,3.543,907,5.991,964,5.186,989,4.088,1315,4.088,1580,3.984,1971,5.186,2008,4.407,2036,5.482,2037,8.033,2038,5.482,2039,5.482,2040,5.482,2041,5.482,2042,5.482,2043,6.954,2044,5.482,2045,6.735,2046,4.407,2047,5.482,2048,5.482,2049,7.638,2050,5.482,2051,4.834,2052,5.482,2053,5.482,2054,5.482,2055,5.482]],["title/interfaces/OrganizationState.html",[222,0.422,439,3.518]],["body/interfaces/OrganizationState.html",[3,0.087,4,0.066,8,0.076,29,0.412,30,0.01,38,0.13,62,1.304,146,0.007,147,0.007,161,0.391,177,0.67,201,1.985,222,0.464,224,1.198,231,2.259,233,0.74,248,2.45,306,4.285,356,3.003,373,2.259,374,2.259,375,2.259,376,2.321,377,2.321,378,2.321,428,2.649,439,5.766,454,4.24,509,3.017,621,4.617,624,4.25,625,4.009,626,1.747,627,3.018,628,2.542,633,4.009,634,4.009,635,5.072,636,2.879,638,4.501,642,3.526,644,3.792,645,4.293,647,3.792,648,4.009,741,4.22,847,4.192,863,3.586,911,3.586,989,3.586,1206,3.511,1917,3.866,1971,3.586,2030,4.24,2031,4.24,2032,4.24,2033,4.24,2034,4.24,2035,4.24,2045,6.324,2056,4.809,2057,8.473,2058,8.473,2059,4.809,2060,4.809,2061,4.809,2062,4.809,2063,4.809,2064,4.809,2065,4.809,2066,4.809,2067,4.809,2068,4.809,2069,4.809,2070,4.809,2071,4.809,2072,4.809]],["title/interfaces/Platform.html",[222,0.422,2073,2.62]],["body/interfaces/Platform.html",[3,0.115,4,0.087,8,0.101,29,0.342,30,0.009,38,0.115,146,0.008,147,0.008,161,0.516,177,0.763,184,1.598,222,0.611,224,1.58,233,0.881,428,2.41,974,5.586,996,4.472,1472,3.635,1915,4.843,1918,4.843,2073,4.556,2074,6.344,2075,7.455,2076,5.913,2077,6.797,2078,6.344]],["title/interfaces/PlatformDto.html",[222,0.422,2079,3.264]],["body/interfaces/PlatformDto.html",[3,0.115,4,0.087,8,0.101,29,0.342,30,0.009,38,0.115,146,0.008,147,0.008,161,0.516,177,0.763,184,1.598,222,0.611,224,1.58,233,0.881,428,2.41,974,5.586,996,4.472,1472,3.635,1915,4.843,1918,4.843,2075,7.455,2076,5.913,2077,6.797,2079,5.676,2080,6.344,2081,6.344]],["title/injectables/PlatformEffects.html",[298,0.944,470,3.518]],["body/injectables/PlatformEffects.html",[3,0.107,4,0.081,8,0.094,29,0.458,30,0.01,32,0.629,38,0.107,39,0.629,49,0.449,146,0.008,147,0.008,161,0.483,165,2.161,169,1.822,174,1.695,176,1.377,177,0.501,178,1.312,233,0.847,291,1.8,292,1.631,298,1.577,300,1.592,470,5.879,478,2.218,494,5.017,496,4.972,497,4.589,502,2.487,507,4.589,509,2.454,526,4.972,555,3.728,556,3.556,557,3.728,957,3.866,2025,5.879,2082,5.941,2083,6.646,2084,5.941,2085,6.949,2086,5.941,2087,7.313,2088,7.313,2089,6.986,2090,5.879,2091,7.313,2092,5.941,2093,5.941,2094,5.239,2095,5.239]],["title/injectables/PlatformService.html",[298,0.944,2085,3.518]],["body/injectables/PlatformService.html",[3,0.116,4,0.088,8,0.102,29,0.468,30,0.01,32,0.678,38,0.116,39,0.678,49,0.484,146,0.008,147,0.008,157,2.763,161,0.521,162,2.101,169,1.595,174,1.774,176,1.484,177,0.54,178,1.414,180,1.674,298,1.65,300,1.715,345,2.943,346,2.943,366,4.024,405,2.094,478,2.391,573,3.833,574,4.858,576,4.207,596,3.833,597,4.384,610,3.833,2079,4.776,2085,6.152,2096,6.403,2097,8.48,2098,6.403,2099,6.403,2100,6.403,2101,6.403]],["title/interfaces/PlatformState.html",[222,0.422,440,3.518]],["body/interfaces/PlatformState.html",[3,0.104,4,0.079,8,0.091,29,0.441,30,0.01,38,0.141,90,1.07,146,0.007,147,0.007,161,0.467,177,0.658,201,2.225,222,0.553,224,1.43,231,2.031,233,0.829,248,2.925,306,4.072,373,2.031,374,2.031,375,2.031,376,2.086,377,2.086,378,2.086,428,2.619,440,6.273,468,5.063,509,2.994,611,4.616,621,4.646,624,4.161,625,4.494,626,2.086,627,3.604,628,3.036,633,4.494,634,3.604,635,4.671,636,3.437,638,3.604,642,2.823,644,3.036,645,3.437,647,3.036,648,4.494,847,2.639,1206,3.157,2073,4.89,2083,4.616,2089,5.063,2090,6.891,2094,5.063,2095,5.063,2102,5.742,2103,5.742,2104,5.742,2105,5.742,2106,5.742,2107,5.742]],["title/interfaces/Project.html",[102,0.738,222,0.422]],["body/interfaces/Project.html",[3,0.121,4,0.092,8,0.106,29,0.361,30,0.009,38,0.121,49,0.651,102,1.326,146,0.008,147,0.008,161,0.545,177,0.703,184,1.576,222,0.645,224,1.668,233,0.91,2073,5.408,2108,6.695,2109,7.587,2110,6.695]],["title/components/ProjectDetailsComponent.html",[0,0.16,101,0.856]],["body/components/ProjectDetailsComponent.html",[0,0.263,1,0.952,2,1.2,3,0.088,4,0.067,5,0.976,6,0.976,7,0.976,8,0.077,12,0.976,13,1.87,14,1.87,15,0.952,17,1.26,18,1.17,19,0.976,25,1.291,27,1.355,29,0.262,30,0.009,32,0.515,38,0.088,39,0.515,43,0.976,44,1.291,45,1.291,46,0.976,47,1.539,48,0.976,49,0.487,50,0.976,51,0.952,52,0.976,53,0.952,54,0.976,55,0.952,56,0.976,57,0.952,58,0.976,59,0.952,60,0.976,61,0.952,62,0.885,63,1.291,64,0.952,65,1.291,66,0.952,67,0.976,68,0.952,69,0.976,70,0.952,71,0.976,72,0.952,73,0.929,74,1.291,75,0.952,76,0.976,77,0.952,78,0.976,79,0.952,80,0.976,81,0.952,82,0.976,83,0.952,84,0.976,85,0.952,86,0.976,87,0.952,88,0.976,89,0.952,90,0.907,91,1.447,92,0.952,93,0.976,94,0.952,95,0.976,96,0.952,97,0.976,98,0.952,99,0.976,100,0.952,101,1.502,102,1.45,103,1.229,104,0.976,105,1.229,106,1.291,107,0.952,108,0.952,109,0.976,110,0.952,111,0.976,112,0.952,113,0.976,114,0.952,115,0.976,116,0.952,117,0.907,118,0.952,119,0.976,120,0.952,121,0.976,122,0.976,123,0.952,124,0.976,125,0.952,126,0.976,127,0.952,128,0.976,129,0.952,130,0.952,131,0.976,132,0.952,133,0.976,134,0.952,135,0.976,136,0.952,137,0.976,138,0.952,139,0.929,140,0.952,141,0.976,142,0.952,143,0.976,144,0.976,145,0.976,146,0.007,147,0.007,152,2.217,978,5.369,979,5.676,980,5.676,2111,4.866,2112,4.866,2113,4.866]],["title/interfaces/ProjectDto.html",[222,0.422,2114,3.518]],["body/interfaces/ProjectDto.html",[3,0.121,4,0.092,8,0.106,29,0.361,30,0.009,38,0.121,49,0.651,146,0.008,147,0.008,161,0.545,177,0.703,184,1.576,222,0.645,224,1.668,233,0.91,2073,5.151,2079,6.417,2109,7.587,2114,6.317,2115,6.695,2116,6.695]],["title/injectables/ProjectEffects.html",[298,0.944,456,3.518]],["body/injectables/ProjectEffects.html",[3,0.101,4,0.076,8,0.089,29,0.449,30,0.01,32,0.59,38,0.101,39,0.59,49,0.421,105,1.342,146,0.007,147,0.007,161,0.453,165,2.076,169,1.75,174,1.784,176,1.291,177,0.47,178,1.23,233,0.814,291,2.129,292,1.929,298,1.515,300,1.492,456,5.648,478,2.08,494,4.948,496,5.228,497,5.071,499,4.913,502,2.332,507,5.071,509,2.711,526,4.83,555,3.496,556,3.335,557,3.496,2117,5.571,2118,6.026,2119,6.496,2120,5.571,2121,6.344,2122,5.571,2123,7.025,2124,7.025,2125,7.025,2126,7.025,2127,7.025,2128,5.571,2129,7.025,2130,7.025,2131,7.025,2132,7.025,2133,7.025,2134,5.571,2135,5.571,2136,4.912,2137,4.912,2138,4.912,2139,4.912,2140,4.912]],["title/injectables/ProjectService.html",[298,0.944,2121,3.264]],["body/injectables/ProjectService.html",[3,0.106,4,0.08,8,0.093,29,0.464,30,0.01,32,0.618,38,0.106,39,0.618,49,0.639,102,0.985,146,0.007,147,0.007,157,2.52,161,0.475,162,1.986,169,1.455,174,1.905,176,1.822,177,0.663,178,1.737,180,2.056,184,1.394,298,1.56,300,1.564,345,2.684,346,2.684,366,4.289,405,2.571,478,2.181,573,3.496,574,4.708,576,3.978,591,3.825,596,3.496,597,4.145,601,3.346,610,4.707,973,6.607,1315,4.355,2046,4.695,2114,4.695,2118,5.396,2121,5.396,2141,5.84,2142,8.218,2143,6.38,2144,5.84,2145,7.235,2146,5.84,2147,5.84,2148,6.38,2149,5.84,2150,5.84,2151,5.84,2152,5.84,2153,5.84,2154,5.84]],["title/interfaces/ProjectState.html",[222,0.422,441,3.518]],["body/interfaces/ProjectState.html",[3,0.094,4,0.071,8,0.082,29,0.424,30,0.01,38,0.135,62,1.352,102,1.408,105,1.42,146,0.007,147,0.007,161,0.421,177,0.687,201,2.083,222,0.499,224,1.29,231,1.832,233,0.777,306,4.223,356,3.113,373,1.832,374,1.832,377,1.881,378,1.881,428,2.652,441,5.978,458,4.566,509,2.639,624,4.327,625,4.208,626,1.881,627,3.25,628,2.738,633,4.208,634,4.208,635,4.996,636,3.1,638,4.208,642,3.296,644,3.545,645,4.014,647,3.545,648,4.208,976,4.451,1206,3.686,2118,3.862,2119,4.163,2136,4.566,2137,4.566,2138,4.566,2139,4.566,2140,4.566,2155,5.178,2156,8.494,2157,8.608,2158,8.608,2159,8.608,2160,8.608,2161,5.178,2162,5.178,2163,5.178,2164,5.178,2165,5.178,2166,5.178,2167,5.178,2168,5.178]],["title/components/ProjectsComponent.html",[0,0.16,103,0.836]],["body/components/ProjectsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.531,104,0.987,105,1.572,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2169,4.924,2170,5.721,2171,5.721]],["title/components/ProjectsComponent-1.html",[0,0.133,103,0.696,748,2.549]],["body/components/ProjectsComponent-1.html",[0,0.237,1,1.377,2,1.041,3,0.072,4,0.054,5,0.793,6,0.793,7,0.793,8,0.063,10,2.949,12,0.793,13,1.854,14,1.854,15,0.774,17,1.093,18,1.015,19,1.12,20,2.558,24,2.711,25,1.12,27,1.176,29,0.466,30,0.01,31,1.398,32,0.419,34,1.476,35,1.476,38,0.072,39,0.419,43,0.793,44,1.12,45,1.12,46,0.793,47,1.411,48,0.793,49,0.49,50,0.793,51,0.774,52,0.793,53,0.774,54,0.793,55,0.774,56,0.793,57,0.774,58,0.793,59,0.774,60,0.793,61,0.774,62,0.719,63,1.12,64,0.774,65,1.12,66,0.774,67,0.793,68,0.774,69,0.793,70,0.774,71,0.793,72,0.774,73,0.755,74,1.12,75,0.774,76,0.793,77,0.774,78,0.793,79,0.774,80,0.793,81,0.774,82,0.793,83,0.774,84,0.793,85,0.774,86,0.793,87,0.774,88,0.793,89,0.774,90,0.737,91,1.299,92,0.774,93,0.793,94,0.774,95,0.793,96,0.774,97,0.793,98,0.774,99,0.793,100,0.774,101,0.774,102,0.667,103,1.418,104,0.793,105,1.512,106,1.12,107,1.377,108,0.774,109,0.793,110,0.774,111,0.793,112,0.774,113,0.793,114,0.774,115,0.793,116,0.774,117,0.737,118,0.774,119,0.793,120,0.774,121,0.793,122,0.793,123,0.774,124,0.793,125,0.774,126,0.793,127,0.774,128,0.793,129,0.774,130,0.774,131,0.793,132,0.774,133,0.793,134,0.774,135,0.793,136,0.774,137,0.793,138,0.774,139,0.755,140,0.774,141,0.793,142,0.774,143,0.793,144,0.793,145,0.793,146,0.006,147,0.006,154,2.206,155,3.183,161,0.322,162,1.533,164,3.459,169,0.985,174,1.786,176,0.916,177,0.333,178,0.873,180,1.034,181,1.874,233,0.647,291,2.132,292,2.115,300,1.059,346,1.817,435,1.706,502,1.655,626,1.437,677,4.49,748,2.765,868,3.325,910,1.817,929,2.653,1035,2.09,1098,2.612,1438,4.83,1442,5.206,1444,5.967,1451,4.49,1453,5.248,1455,4.49,1459,4.49,1467,2.949,1468,2.174,1469,2.949,1470,2.265,1471,2.949,1472,2.265,1473,2.949,1480,3.179,1481,3.179,1484,3.179,1486,4.49,2119,3.179,2170,4.925,2171,4.925,2172,3.954,2173,7.037,2174,3.954,2175,3.954,2176,7.037,2177,3.954,2178,3.954,2179,5.585,2180,3.954,2181,5.585,2182,3.954,2183,3.486,2184,3.954,2185,3.486,2186,3.954,2187,3.486,2188,3.954]],["title/components/ProjectsTableComponent.html",[0,0.16,107,0.856]],["body/components/ProjectsTableComponent.html",[0,0.168,1,0.444,2,0.683,3,0.041,4,0.031,5,0.455,6,0.455,7,0.455,8,0.036,12,0.455,13,1.79,14,1.79,15,0.444,17,0.717,18,1.388,19,0.734,20,1.82,21,2.189,23,2.533,24,1.929,25,0.734,27,0.771,29,0.457,30,0.01,31,0.802,32,0.24,34,0.847,35,0.847,36,1.078,37,1.247,38,0.041,39,0.24,41,3.559,43,0.455,44,0.734,45,0.734,46,0.455,47,1.06,48,0.455,49,0.557,50,0.455,51,0.444,52,0.455,53,0.444,54,0.455,55,0.444,56,0.455,57,0.444,58,0.455,59,0.444,60,0.455,61,0.444,62,0.412,63,0.734,64,0.444,65,0.734,66,0.444,67,0.455,68,0.444,69,0.455,70,0.444,71,0.455,72,0.444,73,0.433,74,0.734,75,0.444,76,0.455,77,0.444,78,0.455,79,0.444,80,0.455,81,0.444,82,0.455,83,0.444,84,0.455,85,0.444,86,0.455,87,0.444,88,0.455,89,0.444,90,0.423,91,0.924,92,0.444,93,0.455,94,0.444,95,0.455,96,0.444,97,0.455,98,0.444,99,0.455,100,0.444,101,0.444,102,0.892,103,0.7,104,0.455,105,1.603,106,0.734,107,1.035,108,0.444,109,0.455,110,0.444,111,0.455,112,0.444,113,0.455,114,0.444,115,0.455,116,0.444,117,0.423,118,0.444,119,0.455,120,0.444,121,0.455,122,0.455,123,0.444,124,0.455,125,0.444,126,0.455,127,0.444,128,0.455,129,0.444,130,0.444,131,0.455,132,0.444,133,0.455,134,0.444,135,0.455,136,0.444,137,0.455,138,0.444,139,0.433,140,0.444,141,0.455,142,0.444,143,0.455,144,0.455,145,0.455,146,0.004,147,0.004,154,1.447,156,2.533,161,0.185,162,1.005,163,2.907,165,2.289,169,0.913,171,3.102,174,1.945,176,1.226,177,0.668,178,1.371,180,1.777,181,2.281,184,1.307,201,1.138,231,0.802,233,0.424,263,3.125,275,3.043,286,2.694,291,2.276,292,2.096,300,0.608,364,1.115,373,0.802,374,0.802,375,1.296,376,0.824,377,0.824,378,0.824,405,0.742,428,1.93,435,0.979,502,0.95,509,1.229,518,2.014,591,1.199,621,3.453,624,1.156,626,0.824,628,1.199,642,1.115,644,1.937,647,1.937,681,2.347,692,2.299,759,1.424,803,1.115,844,2.436,845,1.937,846,3.711,848,2.436,849,2.639,850,2.639,855,2.639,857,4.062,864,2.796,865,2.732,868,2.818,869,3.556,877,1.156,882,2.732,884,2.639,885,3.556,887,2.436,892,2.533,893,1.937,894,3.23,899,1.199,900,1.3,901,1.078,902,1.3,903,1.199,904,1.358,905,2.193,906,1.358,910,1.043,918,1.358,919,2.853,920,1.247,921,2.098,922,1.358,923,1.358,925,2,929,1.078,944,2.014,945,2.014,946,2.014,949,1.937,950,1.937,957,2.796,958,1.692,974,1.499,1013,1.424,1157,2.42,1206,3.962,1557,1.824,1558,3.704,1559,4.666,1560,3.704,1561,3.222,1562,3.704,1563,3.436,1564,3.704,1565,2.945,1566,2.945,1567,3.704,1573,2.945,1580,2.639,1581,3.704,1582,3.704,1584,3.704,1586,3.704,1591,1.824,1592,1.824,1593,1.824,1596,2.945,1597,4.252,1598,1.824,1612,2.945,1614,1.824,1619,1.824,1622,1.586,1623,1.824,1624,1.824,1625,1.692,1626,1.824,1627,1.586,1629,1.692,1637,1.824,1642,1.692,1643,1.586,1644,1.586,1645,1.692,1647,1.824,1649,1.824,2073,3.91,2083,1.824,2090,3.704,2118,1.692,2121,4.871,2143,5.759,2148,2,2183,2,2185,2,2187,7.435,2189,8.432,2190,4.062,2191,4.607,2192,4.607,2193,4.607,2194,4.607,2195,3.663,2196,5.288,2197,5.288,2198,4.663,2199,4.062,2200,2.268,2201,2,2202,2,2203,2.268,2204,3.663,2205,2.268,2206,2.268,2207,2,2208,2.268,2209,2.268,2210,2.268,2211,2.268,2212,2.268,2213,2,2214,2.268,2215,3.663,2216,2,2217,2.268,2218,2,2219,3.663,2220,2,2221,2,2222,2.268,2223,2.268,2224,2.268,2225,2.268,2226,2.268,2227,2.268,2228,2.268,2229,2.268,2230,2.268,2231,3.663,2232,2.268,2233,2.268,2234,4.607,2235,2.268,2236,3.663,2237,2.268,2238,2.268,2239,2.268,2240,2.268,2241,2.268,2242,2.268,2243,2.268,2244,2.268,2245,3.663,2246,3.663,2247,3.663,2248,3.663,2249,3.663,2250,6.207,2251,3.663,2252,3.663,2253,3.663,2254,3.663,2255,3.663,2256,5.288,2257,5.288,2258,3.663]],["title/components/QueriesComponent.html",[0,0.16,108,0.856]],["body/components/QueriesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,1.509,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2259,4.924,2260,7.713,2261,6.488,2262,6.488]],["title/components/RegisterComponent.html",[0,0.16,110,0.856]],["body/components/RegisterComponent.html",[0,0.187,1,0.523,2,0.777,3,0.048,4,0.037,5,0.535,6,0.535,7,0.535,8,0.042,12,0.535,13,1.812,14,1.812,15,0.523,17,0.816,18,0.758,19,0.836,20,2.026,21,2.437,22,3.071,24,2.148,25,0.836,27,0.878,29,0.455,30,0.01,31,0.945,32,0.283,33,1.269,34,0.997,35,0.997,36,1.269,38,0.048,39,0.283,41,4.027,43,0.535,44,0.836,45,0.836,46,0.535,47,1.162,48,0.535,49,0.438,50,0.535,51,0.523,52,0.535,53,0.523,54,0.535,55,0.523,56,0.535,57,0.523,58,0.535,59,0.523,60,0.535,61,0.523,62,0.486,63,0.836,64,0.523,65,0.836,66,0.523,67,0.535,68,0.523,69,0.535,70,0.523,71,0.535,72,0.523,73,0.51,74,0.836,75,0.523,76,0.535,77,0.523,78,0.535,79,0.523,80,0.535,81,0.523,82,0.535,83,0.523,84,0.535,85,0.523,86,0.535,87,0.523,88,0.535,89,0.523,90,0.498,91,1.029,92,0.523,93,0.535,94,0.523,95,0.535,96,0.523,97,0.535,98,0.523,99,0.535,100,0.523,101,0.523,102,0.451,103,0.796,104,0.535,105,0.796,106,0.836,107,0.523,108,0.523,109,0.535,110,1.135,111,0.535,112,0.523,113,0.535,114,0.523,115,0.535,116,0.523,117,0.498,118,0.523,119,0.535,120,0.523,121,0.535,122,0.535,123,0.523,124,0.535,125,0.523,126,0.535,127,0.523,128,0.535,129,0.523,130,0.523,131,0.535,132,0.523,133,0.535,134,0.523,135,0.535,136,0.523,137,0.535,138,0.523,139,0.51,140,0.523,141,0.535,142,0.523,143,0.535,144,0.535,145,0.535,146,0.004,147,0.004,154,1.647,155,2.522,156,2.82,161,0.217,162,1.145,163,3.187,164,2.85,165,2.46,169,1.039,171,3.307,174,1.841,176,0.966,177,0.587,178,1.591,180,1.644,181,2.236,184,0.91,201,0.83,231,0.945,233,0.483,263,1.189,275,1.601,291,1.554,292,1.408,300,0.715,336,1.055,364,1.313,373,0.945,374,0.945,375,1.475,376,0.97,377,0.97,378,0.97,428,2.188,435,1.152,485,1.599,486,2.147,491,4.369,502,1.118,503,3.065,505,2.522,509,1.721,515,1.868,518,1.468,570,4.869,572,4.97,583,1.868,589,2.755,591,1.412,601,1.53,626,0.97,681,2.613,803,1.313,844,2.712,845,2.205,846,3.914,848,2.712,849,2.939,850,2.939,854,3.389,855,2.939,864,3.065,868,3.004,869,3.818,870,3.827,884,2.389,885,4.337,887,3.681,892,2.82,893,1.412,899,1.412,900,1.53,901,1.269,902,1.53,903,1.412,904,1.599,905,2.496,906,1.599,910,1.227,918,1.599,919,1.313,920,1.468,921,1.53,922,1.599,923,1.599,929,1.981,934,1.764,935,1.764,936,1.764,938,1.676,944,1.468,945,1.468,946,1.468,949,1.412,950,2.205,957,2.205,1009,3.826,1010,3.826,1011,3.588,1012,3.11,1013,1.676,1015,3.11,1022,3.11,1024,2.916,1029,3.11,1031,1.868,1033,1.676,1035,1.412,1036,1.676,1037,1.992,1038,1.992,1039,1.992,1040,1.764,1041,1.868,1042,1.868,1043,1.868,1054,1.868,1056,3.11,1062,1.992,1063,3.11,1073,2.712,1235,4.124,1236,3.826,1239,4.523,1250,3.11,1251,3.352,1252,3.352,1253,3.389,1254,3.389,1259,2.147,1260,1.992,1261,2.355,1263,2.147,1264,2.147,1274,2.355,1275,2.355,1276,2.355,1277,2.355,1278,2.355,1414,1.992,1415,2.147,1423,2.355,2263,2.67,2264,4.17,2265,4.17,2266,4.17,2267,2.67,2268,2.67,2269,2.67,2270,2.67,2271,2.67,2272,2.67,2273,2.67,2274,2.67,2275,2.67,2276,2.67,2277,2.67,2278,2.67,2279,2.67,2280,2.67,2281,2.67,2282,2.67,2283,2.67,2284,4.17,2285,4.17,2286,4.17,2287,4.17,2288,4.17,2289,4.17,2290,4.17,2291,4.17,2292,4.17,2293,4.17,2294,4.17,2295,4.17,2296,4.17,2297,4.17,2298,4.17]],["title/interfaces/RegisterRequestDto.html",[222,0.422,589,2.891]],["body/interfaces/RegisterRequestDto.html",[3,0.118,4,0.09,8,0.104,30,0.009,38,0.118,146,0.008,147,0.008,161,0.533,177,0.735,184,1.637,222,0.631,224,1.631,233,0.898,503,4.516,505,4.199,589,5.123,669,3.919,1073,4.516,1253,5.644,1254,5.644,2299,6.546]],["title/components/ReleasesComponent.html",[0,0.16,112,0.856]],["body/components/ReleasesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,1.509,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2300,4.924,2301,7.713,2302,6.488,2303,6.488]],["title/components/ReplaysComponent.html",[0,0.16,114,0.856]],["body/components/ReplaysComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,1.509,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2304,4.924,2305,7.713,2306,6.488,2307,6.488]],["title/components/ResetPasswordComponent.html",[0,0.16,116,0.856]],["body/components/ResetPasswordComponent.html",[0,0.207,1,0.612,2,0.877,3,0.057,4,0.043,5,0.627,6,0.627,7,0.627,8,0.05,12,0.627,13,1.83,14,1.83,15,0.612,17,0.921,18,0.856,19,0.944,20,2.235,21,2.688,22,3.388,24,2.369,25,0.944,27,0.991,29,0.452,30,0.01,31,1.106,32,0.331,33,1.486,34,1.168,35,1.168,36,1.486,38,0.057,39,0.331,41,3.735,43,0.627,44,0.944,45,0.944,46,0.627,47,1.263,48,0.627,49,0.428,50,0.627,51,0.612,52,0.627,53,0.612,54,0.627,55,0.612,56,0.627,57,0.612,58,0.627,59,0.612,60,0.627,61,0.612,62,0.569,63,0.944,64,0.612,65,0.944,66,0.612,67,0.627,68,0.612,69,0.627,70,0.612,71,0.627,72,0.612,73,0.597,74,0.944,75,0.612,76,0.627,77,0.612,78,0.627,79,0.612,80,0.627,81,0.612,82,0.627,83,0.612,84,0.627,85,0.612,86,0.627,87,0.612,88,0.627,89,0.612,90,0.583,91,1.135,92,0.612,93,0.627,94,0.612,95,0.627,96,0.612,97,0.627,98,0.612,99,0.627,100,0.612,101,0.612,102,0.528,103,0.899,104,0.627,105,0.899,106,0.944,107,0.612,108,0.612,109,0.627,110,0.612,111,0.627,112,0.612,113,0.627,114,0.612,115,0.627,116,1.232,117,1.372,118,0.612,119,0.627,120,0.612,121,0.627,122,0.627,123,0.612,124,0.627,125,0.612,126,0.627,127,0.612,128,0.627,129,0.612,130,0.612,131,0.627,132,0.612,133,0.627,134,0.612,135,0.627,136,0.612,137,0.627,138,0.612,139,0.597,140,0.612,141,0.627,142,0.612,143,0.627,144,0.627,145,0.627,146,0.005,147,0.005,154,1.859,155,2.782,161,0.254,162,1.292,164,3.095,165,2.474,169,1.173,171,3.498,174,1.83,176,0.725,177,0.569,178,1.626,180,1.48,181,1.899,184,0.835,201,0.972,233,0.545,263,2.095,291,1.426,292,1.292,300,0.838,336,1.235,428,1.673,435,1.35,485,1.872,488,5.292,505,3.095,509,1.579,626,1.136,642,1.537,681,2.883,692,2.954,803,1.537,844,2.992,845,2.488,846,4.098,848,2.992,850,3.242,854,3.739,855,3.242,864,3.329,868,3.177,869,4.065,870,4.047,884,2.696,885,2.696,887,3.892,900,1.792,901,1.486,903,1.653,910,1.437,929,2.688,934,2.066,935,2.066,936,2.066,938,1.963,944,2.587,945,2.587,946,2.587,949,2.488,950,2.992,1004,2.757,1005,4.15,1006,4.15,1008,4.99,1011,3.958,1013,1.963,1021,2.757,1024,3.291,1026,2.757,1027,2.757,1030,2.757,1031,2.187,1032,4.99,1033,1.963,1035,1.653,1036,1.963,1040,2.066,1041,2.187,1042,2.187,1043,2.187,1046,2.757,1049,2.757,1050,2.757,1051,2.757,1052,2.757,1054,2.187,1055,2.757,1060,2.332,1064,4.15,1070,4.15,1236,4.22,1250,3.51,1251,3.784,1260,2.332,1263,2.514,1264,2.514,1268,2.514,1682,2.332,2308,8.02,2309,8.02,2310,5.659,2311,5.659,2312,4.706,2313,3.127,2314,3.127,2315,3.127,2316,3.127,2317,3.127,2318,3.127,2319,3.127,2320,8.37,2321,3.127,2322,3.127,2323,4.706,2324,4.99,2325,3.127,2326,4.706,2327,4.706,2328,4.706,2329,4.706]],["title/interfaces/ResetPasswordRequestDto.html",[222,0.422,593,3.518]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.124,4,0.094,8,0.109,30,0.009,38,0.124,146,0.008,147,0.008,161,0.556,177,0.67,184,1.583,222,0.658,224,1.701,233,0.921,505,3.357,593,6.39,669,4.088,1682,6.458,2324,7.635,2330,6.828]],["title/components/ResourcesComponent.html",[0,0.16,118,0.856]],["body/components/ResourcesComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,1.509,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2331,4.924,2332,7.713,2333,6.488,2334,6.488]],["title/interfaces/Role.html",[222,0.422,1232,2.314]],["body/interfaces/Role.html",[3,0.112,4,0.084,8,0.098,29,0.403,30,0.009,38,0.135,49,0.633,146,0.008,147,0.008,161,0.501,177,0.744,184,1.613,222,0.721,224,1.535,233,0.866,260,3.868,275,3.214,336,2.434,428,1.822,503,3.259,996,4.102,1073,3.259,1119,4.597,1232,4.427,1253,4.072,1254,4.072,1300,5.855,1468,4.112,1470,4.285,1472,3.531,1711,6.013,1915,3.531,1918,3.531,2335,5.435,2336,6.731,2337,6.244,2338,5.435,2339,5.435,2340,4.955,2341,4.955,2342,4.955]],["title/injectables/RoleEffects.html",[298,0.944,460,3.518]],["body/injectables/RoleEffects.html",[3,0.107,4,0.081,8,0.094,29,0.458,30,0.01,32,0.629,38,0.107,39,0.629,49,0.449,146,0.008,147,0.008,161,0.483,165,2.161,169,1.822,174,1.695,176,1.377,177,0.501,178,1.312,233,0.847,291,1.8,292,1.631,298,1.577,300,1.592,460,5.879,478,2.218,494,5.017,496,4.972,497,4.589,502,2.487,507,4.589,509,2.454,526,4.972,555,3.728,556,3.556,557,3.728,957,3.866,1572,5.879,1633,6.646,2025,5.879,2343,5.941,2344,5.941,2345,6.949,2346,5.941,2347,7.313,2348,7.313,2349,6.986,2350,7.313,2351,5.941,2352,5.941,2353,5.239,2354,5.239]],["title/injectables/RoleService.html",[298,0.944,2345,3.518]],["body/injectables/RoleService.html",[3,0.116,4,0.088,8,0.102,29,0.468,30,0.01,32,0.678,38,0.116,39,0.678,49,0.484,146,0.008,147,0.008,157,2.763,161,0.521,162,2.101,169,1.595,174,1.774,176,1.484,177,0.54,178,1.414,180,1.674,298,1.65,300,1.715,345,2.943,346,2.943,366,4.024,405,2.094,478,2.391,573,3.833,574,4.858,576,4.207,596,3.833,597,4.384,610,3.833,630,5.148,1232,3.385,2345,6.152,2355,6.403,2356,8.48,2357,6.403,2358,6.403,2359,6.403]],["title/interfaces/RoleState.html",[222,0.422,442,3.518]],["body/interfaces/RoleState.html",[3,0.104,4,0.079,8,0.091,29,0.441,30,0.01,38,0.141,90,1.07,146,0.007,147,0.007,161,0.467,177,0.658,201,2.225,222,0.553,224,1.43,231,2.031,233,0.829,248,2.925,306,4.072,373,2.031,374,2.031,375,2.031,376,2.086,377,2.086,378,2.086,428,2.619,442,6.273,462,5.063,509,2.994,611,4.616,621,4.646,624,4.161,625,4.494,626,2.086,627,3.604,628,3.036,630,4.616,633,4.494,634,3.604,635,4.671,636,3.437,638,3.604,642,2.823,644,3.036,645,3.437,647,3.036,648,4.494,847,2.639,1206,3.157,1232,4.319,1572,6.891,1633,4.616,2349,5.063,2353,5.063,2354,5.063,2360,5.742,2361,5.742,2362,5.742,2363,5.742,2364,5.742]],["title/components/ScreenLoadsComponent.html",[0,0.16,120,0.856]],["body/components/ScreenLoadsComponent.html",[0,0.263,1,0.952,2,1.2,3,0.088,4,0.067,5,0.976,6,0.976,7,0.976,8,0.077,12,0.976,13,1.87,14,1.87,15,0.952,17,1.26,18,1.17,19,0.976,25,1.291,27,1.355,29,0.262,30,0.009,32,0.515,38,0.088,39,0.515,43,0.976,44,1.291,45,1.291,46,0.976,47,1.539,48,0.976,49,0.487,50,0.976,51,0.952,52,0.976,53,0.952,54,0.976,55,0.952,56,0.976,57,0.952,58,0.976,59,0.952,60,0.976,61,0.952,62,0.885,63,1.291,64,0.952,65,1.291,66,0.952,67,0.976,68,0.952,69,0.976,70,0.952,71,0.976,72,0.952,73,0.929,74,1.291,75,0.952,76,0.976,77,0.952,78,0.976,79,0.952,80,0.976,81,0.952,82,0.976,83,0.952,84,0.976,85,0.952,86,0.976,87,0.952,88,0.976,89,0.952,90,0.907,91,1.447,92,0.952,93,0.976,94,0.952,95,0.976,96,0.952,97,0.976,98,0.952,99,0.976,100,0.952,101,0.952,102,0.821,103,1.229,104,0.976,105,1.229,106,1.291,107,0.952,108,0.952,109,0.976,110,0.952,111,0.976,112,0.952,113,0.976,114,0.952,115,0.976,116,0.952,117,0.907,118,0.952,119,0.976,120,1.502,121,1.724,122,0.976,123,0.952,124,0.976,125,0.952,126,0.976,127,0.952,128,0.976,129,0.952,130,0.952,131,0.976,132,0.952,133,0.976,134,0.952,135,0.976,136,0.952,137,0.976,138,0.952,139,0.929,140,0.952,141,0.976,142,0.952,143,0.976,144,0.976,145,0.976,146,0.007,147,0.007,152,2.217,2365,4.866,2366,4.866,2367,4.866,2368,6.77,2369,6.437,2370,6.437]],["title/components/SdksComponent.html",[0,0.16,123,0.856]],["body/components/SdksComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,1.509,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2371,4.924,2372,7.713,2373,6.488,2374,6.488]],["title/components/SecurityComponent.html",[0,0.16,125,0.856]],["body/components/SecurityComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,1.509,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2375,4.924,2376,7.713,2377,6.488,2378,6.488]],["title/injectables/SessionStorage.html",[298,0.944,2379,3.859]],["body/injectables/SessionStorage.html",[3,0.094,4,0.072,8,0.083,29,0.403,30,0.01,31,1.845,32,0.553,38,0.094,39,0.553,49,0.596,146,0.007,147,0.007,154,2.061,157,2.252,161,0.548,162,1.85,165,2.206,169,1.859,174,1.998,176,1.828,177,0.688,178,1.742,180,2.135,181,2.806,184,1.604,189,3.649,201,1.621,233,0.78,288,4.17,292,2.165,298,1.453,303,3.274,345,2.398,349,5.006,356,2.185,405,2.44,428,2.331,478,1.948,694,4.452,974,3.447,1321,3.891,1322,5.516,1331,4.195,1333,4.195,1362,6.58,1363,5.417,1364,5.395,1365,5.417,1366,5.417,1367,5.999,1368,5.941,1369,5.417,1370,5.417,1371,4.601,1372,5.417,1373,4.601,1374,5.417,1375,4.601,1376,4.195,1377,4.195,1378,4.601,1379,5.025,1380,3.891,1381,4.601,1382,4.601,1383,4.601,1384,4.601,1385,5.941,1387,4.601,1388,4.601,1389,4.601,1390,4.601,1391,4.601,1392,4.601,2379,5.941,2380,8.712,2381,5.217]],["title/components/SessionsComponent.html",[0,0.16,127,0.856]],["body/components/SessionsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,1.509,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2382,4.924,2383,7.713,2384,6.488,2385,6.488]],["title/components/SettingsComponent.html",[0,0.16,129,0.856]],["body/components/SettingsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,1.509,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,677,6.201,2386,4.924,2387,6.488,2388,6.488]],["title/components/SidebarComponent.html",[0,0.16,130,0.856]],["body/components/SidebarComponent.html",[0,0.177,1,0.48,2,0.726,3,0.044,4,0.034,5,0.491,6,0.491,7,0.491,8,0.039,12,0.491,13,1.801,14,1.801,15,1.181,17,0.763,18,0.882,19,0.781,20,1.916,25,0.781,29,0.347,30,0.01,31,0.867,32,0.26,34,0.915,35,0.915,38,0.044,39,0.763,43,0.491,44,0.781,45,1.48,46,0.491,47,1.109,48,0.491,49,0.418,50,0.491,51,0.48,52,0.491,53,0.48,54,0.491,55,0.48,56,0.491,57,0.48,58,0.491,59,0.48,60,0.491,61,0.48,62,0.446,63,0.781,64,0.48,65,0.781,66,0.48,67,0.491,68,0.48,69,0.491,70,0.48,71,0.491,72,0.48,73,0.468,74,0.781,75,0.48,76,0.491,77,0.48,78,0.491,79,0.48,80,0.491,81,0.48,82,0.491,83,0.48,84,0.491,85,0.48,86,0.491,87,0.48,88,0.491,89,0.48,90,0.457,91,0.973,92,1.082,93,0.491,94,0.48,95,0.491,96,0.48,97,0.491,98,0.48,99,0.491,100,0.48,101,0.48,102,0.413,103,0.744,104,0.491,105,0.744,106,0.781,107,0.48,108,0.48,109,0.491,110,0.48,111,0.491,112,0.48,113,0.491,114,0.48,115,0.491,116,0.48,117,0.457,118,0.48,119,0.491,120,0.48,121,0.491,122,0.491,123,0.48,124,0.491,125,0.48,126,0.491,127,0.48,128,0.491,129,0.48,130,1.082,131,0.491,132,0.48,133,0.491,134,0.48,135,0.491,136,0.48,137,0.491,138,0.48,139,0.468,140,0.48,141,0.491,142,0.48,143,0.491,144,0.491,145,0.491,146,0.004,147,0.004,154,1.539,155,2.385,161,0.199,162,1.977,164,3.158,165,1.634,169,1.601,171,3.746,172,4.143,174,1.489,176,1.281,177,0.568,178,0.861,180,1.019,181,1.308,190,1.619,226,1.467,228,1.467,231,0.867,232,2.906,233,0.744,234,3.31,244,4.228,245,4.317,251,1.619,254,3.31,257,2.726,268,2.142,273,3.787,286,1.248,291,0.743,292,0.673,325,3.31,332,2.575,335,1.714,336,1.916,340,4.032,350,2.726,358,4.032,363,4.033,365,2.446,368,3.205,373,0.867,374,0.867,375,1.378,376,1.416,377,0.89,378,0.89,398,2.575,641,3.436,674,3.9,675,3.393,684,4.032,695,1.828,697,3.436,699,3.393,700,4.875,701,3.618,706,2.906,708,4.444,709,3.133,714,4.712,718,3.133,719,3.133,731,3.9,774,4.444,804,3.866,868,1.682,892,3.96,901,1.164,1079,3.436,1110,5.372,1116,6.506,1117,3.618,1123,3.133,1184,2.161,1188,6.049,1189,6.864,1190,6.975,1208,3.436,1232,2.06,1490,1.828,1580,2.233,1662,3.133,1716,1.619,1747,2.906,1749,3.436,1764,3.436,1785,3.436,1789,3.436,1837,3.436,1838,3.436,2368,2.161,2389,2.451,2390,4.851,2391,3.897,2392,7.203,2393,5.941,2394,3.897,2395,3.897,2396,4.875,2397,5.528,2398,6.992,2399,4.875,2400,4.875,2401,4.851,2402,4.851,2403,4.851,2404,4.851,2405,4.278,2406,6.033,2407,4.851,2408,4.851,2409,4.851,2410,4.851,2411,2.451,2412,3.897,2413,4.875,2414,3.897,2415,2.451,2416,2.451,2417,2.451,2418,3.436,2419,2.451,2420,3.897,2421,2.451,2422,2.451,2423,4.851,2424,2.451,2425,2.451,2426,8.649,2427,2.451,2428,2.451,2429,2.451,2430,3.436,2431,2.451,2432,2.451,2433,2.451,2434,2.451,2435,2.451,2436,3.897,2437,2.451,2438,2.451,2439,2.451,2440,2.451,2441,2.451,2442,2.451,2443,2.451,2444,3.897,2445,2.451,2446,2.451,2447,2.451,2448,2.451,2449,2.451,2450,2.451,2451,2.451,2452,2.451,2453,2.451,2454,2.451,2455,2.451,2456,2.451,2457,2.451,2458,2.451,2459,2.451,2460,2.451,2461,3.436,2462,2.451,2463,2.451,2464,2.451,2465,2.451,2466,2.451,2467,2.451,2468,2.451,2469,2.451,2470,2.451,2471,2.451,2472,2.451,2473,2.451,2474,2.451,2475,2.451,2476,2.451,2477,2.451,2478,2.451,2479,2.451,2480,2.451,2481,2.451,2482,2.451,2483,2.451,2484,2.451,2485,2.451,2486,2.451,2487,2.451,2488,2.451,2489,2.451,2490,2.451,2491,2.451,2492,2.451,2493,2.451,2494,2.451,2495,2.451,2496,2.451,2497,2.451,2498,2.451,2499,2.451,2500,2.451,2501,2.451,2502,2.451,2503,2.451,2504,2.451,2505,2.451]],["title/components/StatsComponent.html",[0,0.16,132,0.856]],["body/components/StatsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,1.509,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2506,4.924,2507,7.713,2508,6.488,2509,6.488]],["title/components/SupportComponent.html",[0,0.16,134,0.856]],["body/components/SupportComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,1.509,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,0.964,143,0.987,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2510,4.924,2511,6.801,2512,6.488,2513,6.488]],["title/interfaces/Team.html",[222,0.422,976,2.62]],["body/interfaces/Team.html",[3,0.12,4,0.091,8,0.106,30,0.009,38,0.12,146,0.008,147,0.008,161,0.541,177,0.724,184,1.574,222,0.641,224,1.657,233,0.907,877,4.374,976,4.686,996,4.52,1915,4.919,1918,4.919,2514,6.652,2515,6.005]],["title/interfaces/TeamDto.html",[222,0.422,2516,3.518]],["body/interfaces/TeamDto.html",[3,0.12,4,0.091,8,0.106,30,0.009,38,0.12,146,0.008,147,0.008,161,0.541,177,0.724,184,1.574,222,0.641,224,1.657,233,0.907,877,4.374,996,4.52,1915,4.919,1918,4.919,2515,6.005,2516,6.293,2517,6.652]],["title/injectables/TeamEffects.html",[298,0.944,464,3.518]],["body/injectables/TeamEffects.html",[3,0.088,4,0.067,8,0.078,29,0.431,30,0.01,32,0.517,38,0.088,39,0.517,49,0.369,139,1.468,146,0.007,147,0.007,161,0.397,165,1.907,169,1.607,174,1.853,176,1.132,177,0.412,178,1.079,233,0.747,291,2.33,292,2.11,298,1.391,300,1.308,464,5.187,478,1.823,494,4.798,496,5.399,497,5.336,499,5.377,502,3.026,507,5.336,509,2.853,526,5.017,555,3.065,556,2.923,557,3.065,2518,4.883,2519,6.181,2520,5.734,2521,6.181,2522,6.181,2523,4.883,2524,6.124,2525,4.883,2526,6.452,2527,6.452,2528,6.452,2529,6.452,2530,6.452,2531,4.883,2532,6.452,2533,6.452,2534,6.452,2535,6.452,2536,6.452,2537,4.883,2538,6.452,2539,6.452,2540,7.688,2541,6.452,2542,6.452,2543,4.883,2544,6.452,2545,6.452,2546,6.452,2547,6.452,2548,4.883,2549,4.883,2550,4.306,2551,4.306,2552,4.306,2553,4.306,2554,4.883,2555,4.306,2556,4.306,2557,4.306,2558,4.306]],["title/injectables/TeamService.html",[298,0.944,2524,3.264]],["body/injectables/TeamService.html",[3,0.1,4,0.076,8,0.088,29,0.458,30,0.01,32,0.584,38,0.1,39,0.584,49,0.609,146,0.007,147,0.007,157,2.378,161,0.448,162,1.915,169,1.373,174,1.966,176,1.865,177,0.678,178,1.778,180,2.171,184,1.505,298,1.505,300,1.476,345,2.533,346,2.533,366,4.326,405,2.715,478,2.058,573,3.299,574,4.611,576,3.836,591,3.689,596,3.299,597,3.998,601,3.157,610,4.971,856,4.88,877,3.555,964,5.204,975,6.471,976,3.299,1315,4.11,2046,4.431,2051,4.86,2515,4.88,2516,4.431,2520,5.204,2524,5.204,2559,5.511,2560,6.153,2561,8.049,2562,8.049,2563,5.511,2564,6.978,2565,5.511,2566,6.978,2567,5.511,2568,5.511,2569,5.511,2570,5.511,2571,5.511,2572,6.978,2573,5.511,2574,5.511,2575,5.511]],["title/interfaces/TeamState.html",[222,0.422,443,3.518]],["body/interfaces/TeamState.html",[3,0.075,4,0.057,8,0.066,29,0.388,30,0.01,38,0.121,62,1.211,139,1.496,146,0.006,147,0.006,161,0.339,177,0.71,201,1.8,222,0.402,224,1.038,231,2.547,233,0.671,248,2.122,306,4.288,336,1.645,356,2.789,373,2.547,374,2.547,375,2.547,376,2.616,377,2.616,378,2.616,428,2.691,443,5.355,466,3.673,509,2.793,621,2.203,624,4.409,625,3.636,626,1.514,627,2.615,628,2.203,633,3.636,634,4.519,635,4.982,636,3.468,638,4.519,642,3.275,644,3.807,645,3.988,647,3.807,648,4.519,847,1.915,976,5.143,1206,3.958,2515,4.052,2519,3.349,2520,3.107,2521,3.349,2522,3.349,2550,3.673,2551,3.673,2552,3.673,2553,3.673,2555,3.673,2556,3.673,2557,3.673,2558,3.673,2576,4.166,2577,8.036,2578,8.036,2579,8.195,2580,8.195,2581,6.908,2582,8.195,2583,8.195,2584,7.226,2585,8.195,2586,8.195,2587,4.166,2588,4.166,2589,4.166,2590,5.793,2591,4.166,2592,4.166,2593,4.166,2594,4.166,2595,4.166,2596,4.166,2597,4.166,2598,4.166,2599,4.166,2600,3.673,2601,4.166]],["title/components/TeamsComponent.html",[0,0.16,136,0.856]],["body/components/TeamsComponent.html",[0,0.23,1,1.348,2,1.006,3,0.068,4,0.052,5,0.756,6,0.756,7,0.756,8,0.06,10,2.811,12,0.756,13,1.849,14,1.849,15,0.738,17,1.056,18,0.981,19,1.082,20,2.491,24,2.641,25,1.082,27,1.136,29,0.463,30,0.01,31,1.333,32,0.399,34,1.407,35,1.407,38,0.068,39,0.399,43,0.756,44,1.082,45,1.082,46,0.756,47,1.381,48,0.756,49,0.477,50,0.756,51,0.738,52,0.756,53,0.738,54,0.756,55,0.738,56,0.756,57,0.738,58,0.756,59,0.738,60,0.756,61,0.738,62,0.685,63,1.082,64,0.738,65,1.082,66,0.738,67,0.756,68,0.738,69,0.756,70,0.738,71,0.756,72,0.738,73,0.72,74,1.082,75,0.738,76,0.756,77,0.738,78,0.756,79,0.738,80,0.756,81,0.738,82,0.756,83,0.738,84,0.756,85,0.738,86,0.756,87,0.738,88,0.756,89,0.738,90,0.702,91,1.265,92,0.738,93,0.756,94,0.738,95,0.756,96,0.738,97,0.756,98,0.738,99,0.756,100,0.738,101,0.738,102,0.636,103,1.031,104,0.756,105,1.031,106,1.082,107,0.738,108,0.738,109,0.756,110,0.738,111,0.756,112,0.738,113,0.756,114,0.738,115,0.756,116,0.738,117,0.702,118,0.738,119,0.756,120,0.738,121,0.756,122,0.756,123,0.738,124,0.756,125,0.738,126,0.756,127,0.738,128,0.756,129,0.738,130,0.738,131,0.756,132,0.738,133,0.756,134,0.738,135,0.756,136,1.348,137,0.756,138,1.348,139,1.205,140,0.738,141,0.756,142,0.738,143,0.756,144,0.756,145,0.756,146,0.006,147,0.006,154,2.132,155,3.101,161,0.307,162,1.482,164,3.385,169,0.939,174,1.885,176,0.874,177,0.318,178,0.832,180,0.985,181,1.811,233,0.625,291,2.366,292,2.293,300,1.01,346,1.732,435,1.627,502,1.578,626,1.369,868,3.273,910,1.732,929,3.272,1035,1.993,1098,2.49,1438,4.704,1442,5.07,1443,5.07,1444,5.86,1451,5.536,1453,5.656,1455,4.34,1457,4.34,1459,4.34,1467,2.811,1468,2.072,1469,2.811,1470,2.159,1471,2.811,1472,2.159,1473,2.811,1480,3.03,1481,3.03,1484,3.03,1486,4.34,2521,3.03,2522,3.03,2581,5.561,2584,5.561,2602,3.769,2603,5.398,2604,5.398,2605,6.887,2606,6.887,2607,3.769,2608,3.769,2609,7.584,2610,3.769,2611,3.769,2612,3.769,2613,5.398,2614,3.769,2615,5.398,2616,3.769,2617,5.398,2618,3.769,2619,5.398,2620,3.769,2621,3.769,2622,3.323,2623,3.769,2624,3.769,2625,3.323,2626,3.323,2627,3.769,2628,3.769]],["title/components/TeamsTableComponent.html",[0,0.16,138,0.856]],["body/components/TeamsTableComponent.html",[0,0.162,1,0.419,2,0.651,3,0.063,4,0.029,5,0.429,6,0.429,7,0.429,8,0.034,12,0.429,13,1.781,14,1.781,15,0.419,17,0.683,18,1.367,19,0.7,20,1.748,21,2.102,23,2.433,24,1.853,25,0.7,27,0.735,29,0.446,30,0.01,31,0.756,32,0.226,34,0.799,35,0.799,36,1.016,37,1.176,38,0.039,39,0.226,41,3.395,43,0.429,44,0.7,45,0.7,46,0.429,47,1.024,48,0.429,49,0.502,50,0.429,51,0.419,52,0.429,53,0.419,54,0.429,55,0.419,56,0.429,57,0.419,58,0.429,59,0.419,60,0.429,61,0.419,62,0.389,63,0.7,64,0.419,65,0.7,66,0.419,67,0.429,68,0.419,69,0.429,70,0.419,71,0.429,72,0.419,73,0.408,74,0.7,75,0.419,76,0.429,77,0.419,78,0.429,79,0.419,80,0.429,81,0.419,82,0.429,83,0.419,84,0.429,85,0.419,86,0.429,87,0.419,88,0.429,89,0.419,90,0.399,91,0.887,92,0.419,93,0.429,94,0.419,95,0.429,96,0.419,97,0.429,98,0.419,99,0.429,100,0.419,101,0.419,102,0.361,103,0.667,104,0.429,105,0.667,106,0.7,107,0.419,108,0.419,109,0.429,110,0.419,111,0.429,112,0.419,113,0.429,114,0.419,115,0.429,116,0.419,117,0.399,118,0.419,119,0.429,120,0.419,121,0.429,122,0.429,123,0.419,124,0.429,125,0.419,126,0.429,127,0.419,128,0.429,129,0.419,130,0.419,131,0.429,132,0.419,133,0.429,134,0.419,135,0.429,136,0.419,137,0.429,138,1,139,1.57,140,0.419,141,0.429,142,0.419,143,0.429,144,0.429,145,0.429,146,0.004,147,0.004,154,1.379,156,2.433,161,0.174,162,0.959,163,2.808,165,2.285,169,0.87,171,3.027,174,1.954,176,1.4,177,0.678,178,1.468,180,1.849,181,2.373,184,1.284,201,1.085,231,1.565,233,0.404,263,3.148,275,3.064,286,3.077,291,2.278,292,2.123,300,0.573,373,1.565,374,1.565,375,1.807,376,1.608,377,1.608,378,1.608,405,0.699,428,1.883,435,0.923,502,0.895,509,1.485,518,2.433,591,1.131,621,4.034,624,1.089,626,0.777,628,1.131,642,1.717,644,2.701,647,2.701,663,1.496,681,2.254,692,2.191,751,4.106,759,2.191,803,1.051,844,2.34,845,1.846,846,3.635,848,2.34,849,2.535,850,2.535,855,2.535,856,4.456,859,3.558,860,3.558,862,2.807,864,2.701,865,2.604,868,2.75,869,3.46,875,2.807,877,3.077,882,2.604,884,2.535,885,2.535,887,2.34,892,2.433,893,1.846,897,2.807,899,1.131,900,1.225,901,1.016,902,1.225,903,1.131,904,1.28,905,2.09,906,1.28,910,0.983,917,1.719,918,1.28,919,3.559,920,1.92,921,2.001,922,1.28,923,1.28,924,1.719,929,1.659,944,2.808,945,2.808,946,2.808,949,2.701,950,2.34,952,2.807,957,2.701,958,1.595,962,1.719,965,2.807,976,3.978,996,1.779,1013,1.342,1117,3.3,1157,2.924,1188,1.496,1189,2.604,1206,2.808,1228,3.809,1494,2.442,1557,1.719,1558,5.528,1559,4.525,1560,3.558,1561,3.095,1562,3.558,1563,3.3,1564,3.558,1565,2.807,1566,2.807,1567,3.558,1573,2.807,1580,2.535,1581,3.558,1582,3.558,1584,3.558,1586,3.558,1591,1.719,1592,1.719,1593,1.719,1596,2.807,1597,4.106,1598,1.719,1605,1.886,1612,2.807,1614,1.719,1619,1.719,1622,1.496,1623,1.719,1624,1.719,1625,1.595,1626,1.719,1627,1.496,1629,1.595,1637,1.719,1642,2.604,1643,2.442,1644,2.442,1645,2.604,1647,2.807,1649,2.807,1655,1.886,1656,1.719,1657,1.886,1658,1.886,1659,1.886,1660,1.886,1661,1.886,1662,1.719,1663,1.886,1664,1.719,1665,1.886,1666,1.886,1667,3.079,1668,1.886,1670,1.886,1694,3.079,2190,3.902,2198,4.504,2199,3.902,2201,1.886,2202,1.886,2207,1.886,2213,1.886,2216,1.886,2218,1.886,2220,1.886,2221,1.886,2515,1.496,2519,1.719,2520,1.595,2524,4.752,2560,4.504,2600,1.886,2622,7.466,2625,1.886,2626,1.886,2629,8.466,2630,4.425,2631,4.425,2632,5.108,2633,5.108,2634,5.108,2635,3.492,2636,4.425,2637,2.139,2638,2.139,2639,2.139,2640,2.139,2641,2.139,2642,2.139,2643,2.139,2644,3.492,2645,2.139,2646,2.139,2647,2.139,2648,3.492,2649,2.139,2650,2.139,2651,2.139,2652,3.492,2653,3.492,2654,2.139,2655,2.139,2656,2.139,2657,2.139,2658,2.139,2659,4.425,2660,6.372,2661,2.139,2662,2.139,2663,2.139,2664,2.139,2665,2.139,2666,2.139,2667,2.139,2668,2.139,2669,2.139,2670,2.139,2671,2.139,2672,2.139,2673,3.492,2674,3.492,2675,3.492,2676,3.492,2677,3.492,2678,3.492,2679,3.492]],["title/interfaces/Token.html",[222,0.422,622,3.264]],["body/interfaces/Token.html",[3,0.122,4,0.092,8,0.107,30,0.009,38,0.122,146,0.008,147,0.008,161,0.548,177,0.665,184,1.578,222,0.65,224,1.679,233,0.914,571,6.431,622,5.883,940,4.722,2680,6.739,2681,7.603,2682,7.603,2683,7.603]],["title/interfaces/TokenDto.html",[222,0.422,598,3.518]],["body/interfaces/TokenDto.html",[3,0.122,4,0.092,8,0.107,30,0.009,38,0.122,146,0.008,147,0.008,161,0.548,177,0.665,184,1.578,222,0.65,224,1.679,233,0.914,571,6.431,598,6.341,940,4.722,2681,7.603,2682,7.603,2683,7.603,2684,6.739]],["title/components/TopbarComponent.html",[0,0.16,140,0.856]],["body/components/TopbarComponent.html",[0,0.218,1,0.671,2,0.939,3,0.062,4,0.047,5,0.688,6,0.688,7,0.688,8,0.054,12,0.688,13,1.84,14,1.84,15,0.671,17,0.987,18,0.917,19,1.011,20,2.361,21,2.839,23,3.286,24,2.503,25,1.011,27,1.061,29,0.464,30,0.01,31,1.213,32,0.363,33,1.629,34,1.281,35,1.281,36,1.629,37,1.885,38,0.062,39,0.363,43,0.688,44,1.011,45,1.011,46,0.688,47,1.321,48,0.688,49,0.498,50,0.688,51,0.671,52,0.688,53,0.671,54,0.688,55,0.671,56,0.688,57,0.671,58,0.688,59,0.671,60,0.688,61,0.671,62,0.624,63,1.011,64,0.671,65,1.011,66,0.671,67,0.688,68,0.671,69,0.688,70,0.671,71,0.688,72,0.671,73,0.655,74,1.011,75,0.671,76,0.688,77,0.671,78,0.688,79,0.671,80,0.688,81,0.671,82,0.688,83,0.671,84,0.688,85,0.671,86,0.688,87,0.671,88,0.688,89,0.671,90,0.639,91,1.199,92,0.671,93,0.688,94,0.671,95,0.688,96,0.671,97,0.688,98,0.671,99,0.688,100,0.671,101,0.671,102,0.579,103,0.963,104,0.688,105,0.963,106,1.011,107,0.671,108,0.671,109,0.688,110,0.671,111,0.688,112,0.671,113,0.688,114,0.671,115,0.688,116,0.671,117,0.639,118,0.671,119,0.688,120,0.671,121,0.688,122,0.688,123,0.671,124,0.688,125,0.671,126,0.688,127,0.671,128,0.688,129,0.671,130,0.671,131,0.688,132,0.671,133,0.688,134,0.671,135,0.688,136,0.671,137,0.688,138,0.671,139,0.655,140,1.289,141,0.688,142,0.671,143,0.688,144,0.688,145,0.688,146,0.005,147,0.005,161,0.279,162,1.384,165,1.767,169,1.256,171,3.604,172,4.367,174,1.956,176,1.168,177,0.67,178,1.113,180,1.723,181,2.006,190,2.266,231,2.114,233,0.584,268,3.286,291,1.997,292,2.015,336,2.361,373,2.114,374,2.114,375,2.114,376,2.172,377,2.172,378,2.172,405,1.121,435,1.48,489,2.757,626,1.246,681,3.045,684,3.751,695,2.558,701,2.558,714,4.18,803,1.686,847,2.747,868,3.274,870,4.171,892,4.171,893,3.16,899,1.813,901,1.629,910,1.576,914,2.757,916,2.558,1033,2.152,1035,1.813,1036,2.152,1110,4.458,1116,3.759,1142,4.445,1268,2.757,1414,2.558,1415,2.757,1422,3.024,1561,4.18,1563,4.458,1622,2.399,1625,2.558,1959,4.445,2405,5.27,2685,3.43,2686,5.041,2687,5.041,2688,5.041,2689,5.977,2690,5.977,2691,5.977,2692,5.041,2693,7.34,2694,6.589,2695,7.34,2696,5.041,2697,5.041,2698,3.43,2699,3.43,2700,3.43,2701,3.43,2702,3.43,2703,5.041,2704,5.041,2705,5.041,2706,5.041,2707,3.43,2708,3.43,2709,5.041,2710,5.041,2711,3.43,2712,3.43,2713,3.43,2714,5.041,2715,3.43,2716,3.43,2717,3.43,2718,3.43,2719,3.43,2720,3.43,2721,3.43,2722,5.041,2723,5.041]],["title/interfaces/User.html",[222,0.422,336,1.728]],["body/interfaces/User.html",[3,0.104,4,0.078,8,0.091,29,0.386,30,0.01,38,0.129,49,0.433,146,0.007,147,0.007,161,0.466,177,0.76,184,1.633,222,0.689,224,1.426,233,0.828,260,3.594,275,3.133,336,2.823,428,2.303,503,4.315,996,4.512,1073,4.315,1119,6.086,1232,4.644,1253,5.392,1254,5.392,1300,4.004,1468,3.929,1470,4.095,1472,3.28,1915,4.675,1918,4.675,2335,5.049,2336,4.603,2337,4.27,2338,5.049,2339,5.049,2340,6.561,2341,6.561,2342,6.561]],["title/interfaces/UserDto.html",[222,0.422,602,3.264]],["body/interfaces/UserDto.html",[3,0.104,4,0.079,8,0.091,29,0.386,30,0.01,38,0.104,49,0.434,146,0.007,147,0.007,161,0.467,177,0.766,184,1.633,222,0.553,224,1.43,233,0.829,260,3.604,275,3.136,428,2.306,503,4.319,602,5.34,996,4.515,1073,4.319,1119,6.092,1232,4.319,1253,5.397,1254,5.397,1300,4.016,1468,3.936,1470,4.102,1472,3.29,1711,5.756,1915,4.68,1918,4.68,2336,4.616,2337,4.282,2340,6.567,2341,6.567,2342,6.567,2724,5.742,2725,5.742,2726,5.742]],["title/components/VitalsComponent.html",[0,0.16,142,0.856]],["body/components/VitalsComponent.html",[0,0.265,1,0.964,2,1.209,3,0.089,4,0.067,5,0.987,6,0.987,7,0.987,8,0.078,12,0.987,13,1.871,14,1.871,15,0.964,17,1.27,18,1.18,19,0.987,25,1.301,27,1.366,29,0.266,30,0.009,32,0.521,38,0.089,39,0.521,43,0.987,44,1.301,45,1.301,46,0.987,47,1.547,48,0.987,49,0.491,50,0.987,51,0.964,52,0.987,53,0.964,54,0.987,55,0.964,56,0.987,57,0.964,58,0.987,59,0.964,60,0.987,61,0.964,62,0.895,63,1.301,64,0.964,65,1.301,66,0.964,67,0.987,68,0.964,69,0.987,70,0.964,71,0.987,72,0.964,73,0.94,74,1.301,75,0.964,76,0.987,77,0.964,78,0.987,79,0.964,80,0.987,81,0.964,82,0.987,83,0.964,84,0.987,85,0.964,86,0.987,87,0.964,88,0.987,89,0.964,90,0.918,91,1.455,92,0.964,93,0.987,94,0.964,95,0.987,96,0.964,97,0.987,98,0.964,99,0.987,100,0.964,101,0.964,102,0.831,103,1.239,104,0.987,105,1.239,106,1.301,107,0.964,108,0.964,109,0.987,110,0.964,111,0.987,112,0.964,113,0.987,114,0.964,115,0.987,116,0.964,117,0.918,118,0.964,119,0.987,120,0.964,121,0.987,122,0.987,123,0.964,124,0.987,125,0.964,126,0.987,127,0.964,128,0.987,129,0.964,130,0.964,131,0.987,132,0.964,133,0.987,134,0.964,135,0.987,136,0.964,137,0.987,138,0.964,139,0.94,140,0.964,141,0.987,142,1.509,143,1.607,144,0.987,145,0.987,146,0.007,147,0.007,152,2.235,2727,4.924,2728,6.488,2729,6.488]],["title/dependencies.html",[2730,2.93,2731,4.646]],["body/dependencies.html",[30,0.01,31,2.23,32,0.668,33,2.995,34,2.831,35,2.354,146,0.008,147,0.008,300,1.689,556,3.775,626,2.755,803,3.1,1716,4.166,1850,5.56,2731,5.56,2732,6.305,2733,9,2734,6.305,2735,8.131,2736,6.686,2737,6.305,2738,6.305,2739,6.305,2740,8.131,2741,6.305,2742,6.305,2743,6.305,2744,6.305,2745,6.305,2746,6.305,2747,6.305,2748,6.305,2749,6.305,2750,6.305,2751,5.069,2752,6.305,2753,6.305,2754,6.305,2755,6.305,2756,6.305,2757,5.56,2758,6.305,2759,6.305,2760,6.305,2761,6.305,2762,6.305,2763,6.305]],["title/miscellaneous/enumerations.html",[2764,2.718,2765,4.646]],["body/miscellaneous/enumerations.html",[30,0.01,62,1.23,102,1.141,146,0.007,147,0.007,161,0.427,292,2.567,336,2.672,381,5.046,509,2.27,624,3.446,636,4.05,642,3.326,664,4.47,741,4.47,847,3.11,976,4.05,1120,5.046,1232,3.577,1468,4.346,1470,3.876,1716,4.47,2073,4.05,2077,5.439,2396,5.966,2751,5.439,2764,3.916,2765,4.63,2766,5.251,2767,5.251,2768,7.906,2769,5.251,2770,5.251,2771,6.765,2772,5.251,2773,5.966,2774,6.765,2775,5.251,2776,6.765,2777,6.765,2778,6.765,2779,6.765,2780,6.765,2781,6.765,2782,6.765,2783,6.765,2784,5.966,2785,6.765,2786,6.765,2787,6.765,2788,6.765,2789,6.765,2790,6.765,2791,6.765,2792,6.765,2793,6.765,2794,5.251,2795,6.765,2796,6.765,2797,6.765,2798,6.765,2799,6.765,2800,6.765,2801,6.765,2802,6.765,2803,5.251,2804,6.765]],["title/miscellaneous/functions.html",[246,3.685,2764,2.718]],["body/miscellaneous/functions.html",[30,0.009,49,0.646,146,0.008,147,0.008,161,0.532,176,1.979,177,0.72,178,1.886,180,1.709,246,4.571,275,2.509,292,1.794,336,3.261,574,4.438,576,3.593,1105,5.254,1468,4.259,1470,4.438,2764,4.874,2805,7.746,2806,7.746,2807,7.746,2808,6.535,2809,7.746,2810,6.535,2811,7.746,2812,6.535,2813,6.535,2814,6.535,2815,6.535,2816,6.535,2817,7.746,2818,7.746,2819,6.535,2820,6.535]],["title/index.html",[161,0.296,2821,3.214,2822,3.214]],["body/index.html",[0,0.266,2,1.214,4,0.068,17,0.969,30,0.008,49,0.493,102,1.304,146,0.007,147,0.007,154,1.956,228,2.965,245,2.838,280,4.555,281,3.109,302,3.273,306,2.353,340,3.109,356,2.074,363,5.031,365,4.568,375,1.752,379,3.273,383,5.766,576,2.723,597,2.838,706,3.694,741,3.273,765,3.694,870,2.723,1120,5.99,1228,5.428,1414,5.428,1434,4.368,1716,4.808,1727,5.09,1787,4.368,1800,5.744,1802,5.851,1823,5.237,2073,2.965,2076,5.09,2413,4.368,2730,3.982,2736,4.368,2757,4.368,2823,6.514,2824,6.514,2825,7.278,2826,6.514,2827,6.514,2828,6.514,2829,4.368,2830,4.368,2831,4.368,2832,4.954,2833,4.954,2834,4.954,2835,4.954,2836,6.514,2837,4.954,2838,4.954,2839,4.954,2840,4.954,2841,4.954,2842,4.954,2843,4.954,2844,4.954,2845,4.954,2846,4.954,2847,4.954,2848,4.954,2849,4.954,2850,4.368,2851,7.738,2852,8.245,2853,4.954,2854,4.954,2855,4.954,2856,4.954,2857,4.368,2858,4.954,2859,5.744,2860,4.954,2861,6.417,2862,4.954,2863,8.627,2864,4.954,2865,4.954,2866,4.954,2867,4.954,2868,8.922,2869,8.245,2870,6.514,2871,6.417,2872,7.607,2873,6.514,2874,4.954,2875,4.954,2876,7.278,2877,6.417,2878,6.514,2879,6.514,2880,7.278,2881,5.744,2882,6.514,2883,7.731,2884,4.954,2885,6.514,2886,4.954,2887,4.954,2888,4.954,2889,4.368,2890,4.368,2891,4.954,2892,4.954,2893,6.514,2894,4.954,2895,4.954,2896,6.514,2897,4.954,2898,6.514,2899,4.954,2900,4.954,2901,4.368,2902,4.368,2903,7.278,2904,4.954,2905,6.514,2906,4.368,2907,4.954,2908,4.954,2909,4.368,2910,4.368,2911,4.954,2912,4.954,2913,4.368,2914,4.954,2915,4.954,2916,4.368]],["title/license.html",[2821,3.214,2822,3.214,2917,3.214]],["body/license.html",[0,0.142,4,0.111,8,0.033,15,0.844,16,1.019,29,0.062,30,0.005,39,0.122,146,0.003,147,0.002,152,2.044,162,0.317,165,0.342,173,2.08,174,0.268,177,0.174,181,0.388,222,0.451,224,0.695,227,2.08,228,4.694,234,4.235,240,0.808,243,0.862,245,3.4,249,4.386,250,3.725,253,3.647,254,0.692,255,2.9,267,1.537,268,0.635,273,2.707,276,2.08,277,2.719,278,0.862,284,0.862,287,0.808,288,1.09,295,4.674,299,0.808,302,1.362,306,0.549,318,2.08,333,0.808,336,2.534,343,2.369,349,0.692,351,3.217,356,1.959,359,2.08,362,3.217,365,2.126,375,0.409,376,0.42,383,0.808,386,0.862,405,0.378,407,0.862,412,0.862,416,3.016,421,0.808,494,0.662,505,0.568,621,0.611,645,0.692,663,1.441,684,4.629,698,0.929,699,1.441,701,1.537,702,3.803,709,3.126,710,1.019,715,1.019,722,1.019,723,5.982,729,0.929,730,2.987,731,2.723,734,1.817,739,1.019,745,1.817,748,2.719,757,1.817,759,2.707,763,4.677,764,1.019,771,1.019,772,1.817,773,1.817,776,4.65,833,5.389,847,0.947,919,0.568,949,0.611,957,0.611,978,1.441,982,1.019,996,0.589,1057,3.933,1105,0.929,1113,2.459,1118,1.817,1121,1.657,1127,1.019,1129,1.019,1224,3.803,1322,0.808,1364,0.764,1468,3.034,1490,3.933,1518,1.019,1580,1.598,1627,0.808,1664,0.929,1714,1.019,1716,2.569,1722,1.019,1727,2.719,1740,1.657,1741,4.016,1744,1.817,1747,2.08,1750,4.016,1762,1.019,1783,4.405,1788,1.817,1790,5.389,1794,1.019,1798,1.817,1802,5.875,1804,2.987,1819,1.019,1823,0.929,1824,1.019,1826,1.817,1827,4.125,1828,4.405,1841,1.817,1880,1.019,1886,1.019,1906,1.019,1948,1.019,2076,5.158,2337,4.116,2393,1.019,2399,1.019,2400,1.019,2418,1.019,2430,1.817,2461,1.019,2511,2.459,2751,1.657,2773,1.019,2784,4.405,2829,1.019,2830,1.019,2831,1.019,2850,1.019,2851,4.405,2857,2.987,2859,2.987,2861,1.019,2871,1.817,2872,5.53,2877,1.019,2881,2.459,2889,3.428,2890,2.987,2901,5.53,2902,2.459,2906,2.459,2909,6.38,2910,1.817,2913,2.459,2916,1.817,2917,7.83,2918,6.888,2919,3.888,2920,1.156,2921,1.156,2922,2.789,2923,7.662,2924,6.984,2925,7.5,2926,4.313,2927,1.156,2928,1.156,2929,2.061,2930,3.888,2931,7.376,2932,3.888,2933,2.789,2934,6.271,2935,1.156,2936,2.789,2937,1.156,2938,1.156,2939,2.061,2940,4.313,2941,1.156,2942,4.313,2943,1.156,2944,4.995,2945,2.061,2946,1.156,2947,1.156,2948,1.156,2949,6.271,2950,8.264,2951,2.789,2952,8.836,2953,2.061,2954,4.678,2955,4.678,2956,4.313,2957,1.156,2958,1.156,2959,3.387,2960,4.995,2961,2.789,2962,1.156,2963,2.061,2964,1.156,2965,2.789,2966,6.888,2967,3.387,2968,1.156,2969,1.156,2970,2.061,2971,3.387,2972,2.061,2973,5.934,2974,2.061,2975,2.061,2976,3.387,2977,4.678,2978,3.888,2979,1.156,2980,4.995,2981,4.313,2982,7.756,2983,2.789,2984,4.678,2985,1.156,2986,1.156,2987,3.888,2988,4.995,2989,2.061,2990,5.738,2991,3.888,2992,2.061,2993,1.156,2994,1.156,2995,6.416,2996,2.061,2997,1.156,2998,1.156,2999,6.111,3000,2.061,3001,2.789,3002,1.156,3003,1.156,3004,2.061,3005,1.156,3006,3.387,3007,1.156,3008,1.156,3009,1.156,3010,1.156,3011,1.156,3012,2.061,3013,1.156,3014,1.156,3015,1.156,3016,2.061,3017,1.156,3018,2.789,3019,2.061,3020,1.156,3021,1.156,3022,2.061,3023,2.061,3024,6.271,3025,1.156,3026,2.061,3027,2.061,3028,1.156,3029,1.156,3030,2.061,3031,2.789,3032,2.061,3033,2.789,3034,2.061,3035,1.156,3036,1.156,3037,4.313,3038,1.156,3039,1.156,3040,3.888,3041,1.156,3042,3.387,3043,2.061,3044,2.789,3045,1.156,3046,1.156,3047,6.271,3048,3.387,3049,3.888,3050,4.313,3051,2.789,3052,1.156,3053,2.789,3054,2.061,3055,1.156,3056,1.156,3057,1.156,3058,2.789,3059,8.167,3060,1.156,3061,1.156,3062,2.061,3063,2.061,3064,1.156,3065,5.519,3066,1.156,3067,3.387,3068,2.789,3069,2.061,3070,8.083,3071,2.789,3072,5.273,3073,3.387,3074,2.061,3075,1.156,3076,2.061,3077,2.789,3078,5.273,3079,5.519,3080,3.387,3081,2.061,3082,2.061,3083,3.387,3084,1.156,3085,2.789,3086,7.44,3087,2.061,3088,1.156,3089,4.995,3090,1.156,3091,2.789,3092,4.995,3093,1.156,3094,6.416,3095,3.387,3096,2.061,3097,5.738,3098,4.313,3099,1.156,3100,1.156,3101,1.156,3102,4.995,3103,1.156,3104,2.061,3105,1.156,3106,2.789,3107,2.789,3108,1.156,3109,1.156,3110,1.156,3111,5.738,3112,2.789,3113,1.156,3114,1.156,3115,1.156,3116,2.061,3117,5.519,3118,1.156,3119,1.156,3120,1.156,3121,2.789,3122,2.789,3123,2.789,3124,2.789,3125,1.156,3126,1.156,3127,3.888,3128,1.156,3129,2.061,3130,1.156,3131,2.789,3132,1.156,3133,2.789,3134,1.156,3135,1.156,3136,1.156,3137,2.061,3138,1.156,3139,7.235,3140,4.995,3141,1.156,3142,2.061,3143,1.156,3144,1.156,3145,2.061,3146,2.061,3147,1.156,3148,1.156,3149,1.156,3150,2.061,3151,2.789,3152,3.888,3153,1.156,3154,2.061,3155,1.156,3156,1.156,3157,1.156,3158,1.156,3159,4.678,3160,3.387,3161,1.156,3162,3.888,3163,1.156,3164,1.156,3165,1.156,3166,2.789,3167,1.156,3168,1.156,3169,1.156,3170,1.156,3171,2.789,3172,2.789,3173,1.156,3174,1.156,3175,2.061,3176,2.061,3177,2.061,3178,1.156,3179,2.061,3180,1.156,3181,1.156,3182,1.156,3183,1.156,3184,1.156,3185,2.789,3186,1.156,3187,1.156,3188,6.416,3189,2.789,3190,1.156,3191,1.156,3192,1.156,3193,3.888,3194,3.888,3195,1.156,3196,1.156,3197,2.789,3198,1.156,3199,1.156,3200,3.387,3201,1.156,3202,2.061,3203,1.156,3204,1.156,3205,1.156,3206,1.156,3207,1.156,3208,1.156,3209,2.061,3210,2.061,3211,1.156,3212,2.789,3213,1.156,3214,1.156,3215,2.061,3216,1.156,3217,1.156,3218,1.156,3219,1.156,3220,2.061,3221,2.061,3222,2.061,3223,2.061,3224,5.273,3225,2.061,3226,4.313,3227,1.156,3228,1.156,3229,2.061,3230,2.789,3231,3.387,3232,3.387,3233,2.789,3234,3.387,3235,2.789,3236,1.156,3237,3.888,3238,3.888,3239,2.789,3240,1.156,3241,2.061,3242,3.888,3243,2.061,3244,3.387,3245,3.387,3246,2.061,3247,2.789,3248,3.888,3249,1.156,3250,1.156,3251,1.156,3252,2.789,3253,2.789,3254,2.061,3255,1.156,3256,1.156,3257,1.156,3258,1.156,3259,2.061,3260,1.156,3261,1.156,3262,2.789,3263,1.156,3264,1.156,3265,2.061,3266,2.789,3267,1.156,3268,2.061,3269,1.156,3270,2.789,3271,1.156,3272,1.156,3273,1.156,3274,2.061,3275,2.061,3276,4.313,3277,7.074,3278,2.789,3279,2.061,3280,2.061,3281,2.061,3282,2.061,3283,3.387,3284,3.387,3285,2.061,3286,1.156,3287,1.156,3288,1.156,3289,1.156,3290,4.678,3291,4.313,3292,2.061,3293,1.156,3294,1.156,3295,1.156,3296,1.156,3297,2.061,3298,1.156,3299,2.061,3300,1.156,3301,3.888,3302,1.156,3303,5.738,3304,1.156,3305,1.156,3306,1.156,3307,1.156,3308,2.061,3309,1.156,3310,1.156,3311,1.156,3312,2.061,3313,2.789,3314,3.888,3315,2.061,3316,3.387,3317,2.061,3318,1.156,3319,1.156,3320,1.156,3321,1.156,3322,1.156,3323,2.061,3324,1.156,3325,1.156,3326,3.387,3327,1.156,3328,2.061,3329,2.061,3330,1.156,3331,1.156,3332,2.789,3333,1.156,3334,1.156,3335,1.156,3336,1.156,3337,1.156,3338,2.061,3339,1.156,3340,1.156,3341,2.061,3342,1.156,3343,1.156,3344,1.156,3345,2.789,3346,1.156,3347,1.156,3348,1.156,3349,1.156,3350,1.156,3351,3.888,3352,1.156,3353,3.387,3354,1.156,3355,1.156,3356,3.387,3357,1.156,3358,1.156,3359,1.156,3360,1.156,3361,1.156,3362,2.061,3363,4.678,3364,2.789,3365,1.156,3366,3.387,3367,1.156,3368,1.156,3369,2.789,3370,1.156,3371,1.156,3372,2.789,3373,1.156,3374,2.061,3375,1.156,3376,1.156,3377,1.156,3378,1.156,3379,1.156,3380,1.156,3381,1.156,3382,1.156,3383,2.061,3384,1.156,3385,1.156,3386,1.156,3387,2.061,3388,2.061,3389,1.156,3390,1.156,3391,2.789,3392,1.156,3393,2.061,3394,2.061,3395,1.156,3396,2.061,3397,1.156,3398,2.789,3399,4.678,3400,1.156,3401,1.156,3402,2.061,3403,1.156,3404,1.156,3405,1.156,3406,1.156,3407,1.156,3408,2.061,3409,3.387,3410,1.156,3411,3.888,3412,1.156,3413,1.156,3414,1.156,3415,1.156,3416,1.156,3417,2.061,3418,2.061,3419,2.061,3420,2.789,3421,1.156,3422,2.061,3423,1.156,3424,2.789,3425,1.156,3426,2.061,3427,1.156,3428,2.061,3429,2.061,3430,1.156,3431,1.156,3432,2.061,3433,7.235,3434,2.061,3435,1.156,3436,3.888,3437,5.519,3438,2.789,3439,1.156,3440,1.156,3441,1.156,3442,3.387,3443,1.156,3444,1.156,3445,2.789,3446,1.156,3447,2.061,3448,1.156,3449,1.156,3450,1.156,3451,3.387,3452,1.156,3453,1.156,3454,1.156,3455,1.156,3456,3.387,3457,1.156,3458,1.156,3459,2.789,3460,1.156,3461,2.061,3462,2.789,3463,2.061,3464,1.156,3465,1.156,3466,1.156,3467,2.061,3468,2.789,3469,1.156,3470,1.156,3471,2.061,3472,1.156,3473,1.156,3474,1.156,3475,1.156,3476,1.156,3477,1.156,3478,2.789,3479,2.061,3480,1.156,3481,1.156,3482,3.387,3483,1.156,3484,2.789,3485,1.156,3486,1.156,3487,1.156,3488,2.061,3489,1.156,3490,1.156,3491,1.156,3492,2.789,3493,2.061,3494,2.061,3495,1.156,3496,4.678,3497,2.061,3498,2.789,3499,3.387,3500,1.156,3501,1.156,3502,1.156,3503,2.061,3504,1.156,3505,2.789,3506,1.156,3507,2.061,3508,1.156,3509,1.156,3510,1.156,3511,1.156,3512,2.789,3513,1.156,3514,2.789,3515,2.061,3516,1.156,3517,2.061,3518,1.156,3519,1.156,3520,2.061,3521,2.061,3522,1.156,3523,1.156,3524,2.061,3525,1.156,3526,1.156,3527,1.156,3528,1.156,3529,1.156,3530,2.789,3531,1.156,3532,1.156,3533,1.156,3534,1.156,3535,1.156,3536,3.387,3537,2.061,3538,2.789,3539,1.156,3540,1.156,3541,1.156,3542,1.156,3543,1.156,3544,2.061,3545,1.156,3546,1.156,3547,1.156,3548,1.156,3549,1.156,3550,1.156,3551,1.156,3552,1.156,3553,1.156,3554,1.156,3555,1.156,3556,1.156,3557,1.156,3558,1.156,3559,3.387,3560,1.156,3561,2.061,3562,1.156,3563,1.156,3564,1.156,3565,1.156,3566,1.156,3567,1.156,3568,1.156,3569,1.156,3570,1.156,3571,2.789,3572,1.156,3573,1.156,3574,1.156,3575,2.061,3576,1.156,3577,1.156,3578,1.156,3579,1.156,3580,1.156,3581,1.156,3582,2.061,3583,2.061,3584,3.888,3585,2.789,3586,1.156,3587,2.061,3588,1.156,3589,1.156,3590,1.156,3591,1.156,3592,2.789,3593,2.061,3594,1.156,3595,2.061,3596,2.061,3597,2.061,3598,1.156,3599,1.156,3600,1.156,3601,1.156,3602,1.156,3603,1.156,3604,2.061,3605,1.156,3606,1.156,3607,1.156,3608,1.156,3609,2.789,3610,1.156,3611,1.156,3612,1.156,3613,1.156,3614,1.156,3615,1.156,3616,1.156,3617,1.156,3618,1.156,3619,1.156,3620,1.156,3621,2.061,3622,1.156,3623,1.156,3624,1.156,3625,1.156,3626,1.156,3627,1.156,3628,1.156,3629,1.156,3630,1.156,3631,1.156,3632,1.156,3633,1.156,3634,1.156,3635,1.156,3636,1.156,3637,1.156,3638,1.156,3639,1.156,3640,2.789,3641,2.061,3642,1.156,3643,1.156,3644,1.156,3645,1.156,3646,1.156,3647,2.061,3648,1.156,3649,1.156,3650,1.156,3651,1.156,3652,1.156,3653,1.156,3654,1.156,3655,1.156,3656,2.061,3657,1.156,3658,1.156,3659,1.156,3660,1.156,3661,1.156,3662,1.156,3663,1.156,3664,1.156,3665,1.156,3666,1.156,3667,1.156,3668,1.156,3669,1.156,3670,1.156,3671,1.156,3672,1.156,3673,1.156,3674,1.156,3675,1.156]],["title/modules.html",[3676,5.285]],["body/modules.html",[30,0.008,146,0.008,147,0.008,3676,6.37]],["title/overview.html",[3677,5.285]],["body/overview.html",[2,1.332,30,0.008,146,0.008,147,0.008,224,1.781,478,2.669,3677,6.304,3678,7.149,3679,7.149,3680,7.149]],["title/properties.html",[233,0.61,2730,2.93]],["body/properties.html",[30,0.009,146,0.008,147,0.008,233,0.832,2076,5.026,3681,7.186]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":940,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["0.0.0",{"_index":3681,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":1861,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.4",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["0xff",{"_index":1686,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["1",{"_index":748,"title":{"components/ProjectsComponent-1.html":{}},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"license.html":{}}}],["1.0.9",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3189,"title":{},"body":{"license.html":{}}}],["100",{"_index":1991,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["11",{"_index":3202,"title":{},"body":{"license.html":{}}}],["12",{"_index":770,"title":{},"body":{"components/ConfigComponent.html":{}}}],["13",{"_index":771,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["14",{"_index":293,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["15",{"_index":772,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":773,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["17",{"_index":2842,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":2740,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":2839,"title":{},"body":{"index.html":{}}}],["17.2.0",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["17.2.1",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":3208,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":2987,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3206,"title":{},"body":{"license.html":{}}}],["2007",{"_index":2922,"title":{},"body":{"license.html":{}}}],["2021",{"_index":840,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":839,"title":{},"body":{"components/ConfigComponent.html":{}}}],["21",{"_index":3679,"title":{},"body":{"overview.html":{}}}],["28",{"_index":3555,"title":{},"body":{"license.html":{}}}],["29",{"_index":2920,"title":{},"body":{"license.html":{}}}],["3",{"_index":2919,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1948,"title":{},"body":{"components/OrganizationComponent.html":{},"license.html":{}}}],["36",{"_index":3680,"title":{},"body":{"overview.html":{}}}],["4",{"_index":3239,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":942,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["404",{"_index":941,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundComponent.html":{}}}],["409",{"_index":1270,"title":{},"body":{"components/InvitationComponent.html":{}}}],["47",{"_index":3678,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3271,"title":{},"body":{"license.html":{}}}],["6.0.1",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3446,"title":{},"body":{"license.html":{}}}],["6b",{"_index":3298,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3321,"title":{},"body":{"license.html":{}}}],["7",{"_index":3235,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1685,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["8.0.0",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":2880,"title":{},"body":{"index.html":{}}}],["90",{"_index":1950,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["991",{"_index":410,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["_val",{"_index":782,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":3371,"title":{},"body":{"license.html":{}}}],["above",{"_index":227,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":3236,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3630,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":3655,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":3015,"title":{},"body":{"license.html":{}}}],["accept",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["acceptance",{"_index":3456,"title":{},"body":{"license.html":{}}}],["acceptbuttonstyleclass",{"_index":1663,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["accepticon",{"_index":1666,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["acceptinvitation",{"_index":480,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["acceptinvitation(invitationhash",{"_index":1305,"title":{},"body":{"injectables/InvitationService.html":{}}}],["acceptinvitationerror",{"_index":615,"title":{},"body":{"interfaces/AuthState.html":{}}}],["acceptinvitationfailure",{"_index":560,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["acceptinvitationsuccess",{"_index":481,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["access",{"_index":15,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["accessdeniedcomponent",{"_index":1,"title":{"components/AccessDeniedComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["accessible",{"_index":3523,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":694,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":2681,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["accompanied",{"_index":3278,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3634,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3234,"title":{},"body":{"license.html":{}}}],["according",{"_index":3625,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":382,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["achieve",{"_index":3639,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3169,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3503,"title":{},"body":{"license.html":{}}}],["action",{"_index":639,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/MembersEffects.html":{}}}],["actions",{"_index":494,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{},"license.html":{}}}],["activated",{"_index":1119,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["active",{"_index":327,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":1775,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activemembers",{"_index":1441,"title":{},"body":{"components/MembersComponent.html":{}}}],["activeroute",{"_index":1877,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":3085,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3551,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3528,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":145,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["actually",{"_index":3344,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3064,"title":{},"body":{"license.html":{}}}],["add",{"_index":2890,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":3233,"title":{},"body":{"license.html":{}}}],["adding",{"_index":711,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":763,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["address",{"_index":3579,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":3061,"title":{},"body":{"license.html":{}}}],["adds",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["adjust",{"_index":289,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":3205,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3377,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3622,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3378,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3571,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3483,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3164,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["against",{"_index":3223,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":3262,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3567,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3608,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3514,"title":{},"body":{"license.html":{}}}],["aim",{"_index":3011,"title":{},"body":{"license.html":{}}}],["alerts",{"_index":149,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts'},{'name",{"_index":52,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alerts.component.html",{"_index":150,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts.component.scss",{"_index":151,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertscomponent",{"_index":51,"title":{"components/AlertsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alleging",{"_index":3491,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3038,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":2936,"title":{},"body":{"license.html":{}}}],["allows",{"_index":379,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["allprojects",{"_index":2156,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectserror",{"_index":2157,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectsstatus",{"_index":2158,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["along",{"_index":3238,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1717,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":3502,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3294,"title":{},"body":{"license.html":{}}}],["although",{"_index":3007,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":3457,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2991,"title":{},"body":{"license.html":{}}}],["android",{"_index":2776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular",{"_index":1120,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["angular's",{"_index":1785,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":1850,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":31,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["angular/compiler",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":803,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1848,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":1858,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":1854,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":3192,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":3245,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3073,"title":{},"body":{"license.html":{}}}],["api",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["api.authoptions",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["api.authoptionsautocontenttype",{"_index":2055,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.authurl",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.invitationurl",{"_index":1313,"title":{},"body":{"injectables/InvitationService.html":{}}}],["api.noauthoptions",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["api.organizationurl",{"_index":2049,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.projecturl",{"_index":2153,"title":{},"body":{"injectables/ProjectService.html":{}}}],["api.teamurl",{"_index":2573,"title":{},"body":{"injectables/TeamService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["app.component.html",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["appconfig",{"_index":223,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["appefects",{"_index":472,"title":{},"body":{"interfaces/AppState.html":{}}}],["applicable",{"_index":3078,"title":{},"body":{"license.html":{}}}],["application",{"_index":363,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":676,"title":{},"body":{"components/ConfigComponent.html":{}}}],["applications",{"_index":2831,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":287,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":745,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyfilterglobal",{"_index":1573,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["applyfilterglobal($event",{"_index":1596,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["applyscale",{"_index":687,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appropriate",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":3228,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3629,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":435,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["appstore",{"_index":473,"title":{},"body":{"interfaces/AppState.html":{}}}],["apptopbar",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["archiveperiod",{"_index":1925,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["area",{"_index":3017,"title":{},"body":{"license.html":{}}}],["arise",{"_index":3025,"title":{},"body":{"license.html":{}}}],["arising",{"_index":3612,"title":{},"body":{"license.html":{}}}],["around",{"_index":2410,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":3524,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3538,"title":{},"body":{"license.html":{}}}],["array",{"_index":774,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["article",{"_index":3201,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":2864,"title":{},"body":{"index.html":{}}}],["asking",{"_index":2969,"title":{},"body":{"license.html":{}}}],["assert",{"_index":2986,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1058,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["assets",{"_index":3473,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":353,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":1824,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":3603,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":3633,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3419,"title":{},"body":{"license.html":{}}}],["assures",{"_index":3045,"title":{},"body":{"license.html":{}}}],["async",{"_index":1486,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["async)?.pictureurl",{"_index":2001,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["attach",{"_index":3641,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":3431,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":755,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":3002,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":3403,"title":{},"body":{"license.html":{}}}],["auth",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{}}}],["auth'},{'name",{"_index":56,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["auth.actions",{"_index":567,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":1045,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.invitation.back_to_login",{"_index":1294,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_is_required",{"_index":1289,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_label",{"_index":1288,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_is_required",{"_index":1291,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_label",{"_index":1290,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_is_required",{"_index":1293,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_label",{"_index":1292,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_label",{"_index":1285,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_length",{"_index":1286,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_not_strong",{"_index":1287,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error",{"_index":1271,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_username_exists",{"_index":1272,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_wrong_hash",{"_index":1273,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_is_required",{"_index":1283,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_label",{"_index":1282,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_length",{"_index":1284,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_description",{"_index":1281,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_message",{"_index":1280,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.login.authorization_error",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":1066,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":2298,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":2293,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":2292,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":2295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":2294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":2297,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":2296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":2289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":2290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":2291,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":2281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":2282,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":2287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":2286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":2288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":2285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":2284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":2320,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":445,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":447,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":55,"title":{"components/AuthComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["autheffects",{"_index":444,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{}}}],["authenticate",{"_index":482,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{}}}],["authenticate(request",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticaterequestdto",{"_index":578,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{}}}],["authentication",{"_index":641,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{}}}],["authenticationfailure",{"_index":561,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess",{"_index":483,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess(token",{"_index":522,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["author",{"_index":3402,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3355,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":3395,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":3497,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3542,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2955,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":446,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authservice",{"_index":491,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authstate",{"_index":437,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["automatic",{"_index":3465,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":2857,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":776,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["avatarmodule",{"_index":1561,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["avoid",{"_index":1886,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":2943,"title":{},"body":{"license.html":{}}}],["b",{"_index":1224,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["badgemodule",{"_index":1921,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["bar",{"_index":2464,"title":{},"body":{"components/SidebarComponent.html":{}}}],["based",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":3158,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":3180,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":1121,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":3534,"title":{},"body":{"license.html":{}}}],["bell",{"_index":2491,"title":{},"body":{"components/SidebarComponent.html":{}}}],["below",{"_index":3186,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3527,"title":{},"body":{"license.html":{}}}],["best",{"_index":3638,"title":{},"body":{"license.html":{}}}],["better",{"_index":1715,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":3156,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":3264,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":1860,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":1812,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["book",{"_index":2495,"title":{},"body":{"components/SidebarComponent.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"components/TeamsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":832,"title":{},"body":{"components/ConfigComponent.html":{}}}],["both",{"_index":2996,"title":{},"body":{"license.html":{}}}],["box",{"_index":2461,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["breadcrumb",{"_index":1114,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":1109,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":2736,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":2863,"title":{},"body":{"index.html":{}}}],["building",{"_index":2481,"title":{},"body":{"components/SidebarComponent.html":{}}}],["business",{"_index":3548,"title":{},"body":{"license.html":{}}}],["button",{"_index":751,"title":{},"body":{"components/ConfigComponent.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["buttonmodule",{"_index":21,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":2784,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["calendarmodule",{"_index":2190,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["call",{"_index":1825,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":766,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":1747,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":2846,"title":{},"body":{"index.html":{}}}],["can't",{"_index":2912,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":2836,"title":{},"body":{"index.html":{}}}],["carry",{"_index":3241,"title":{},"body":{"license.html":{}}}],["case",{"_index":3116,"title":{},"body":{"license.html":{}}}],["cases",{"_index":3338,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":557,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["catcherror((error",{"_index":507,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["cause",{"_index":3268,"title":{},"body":{"license.html":{}}}],["cd",{"_index":1776,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":3435,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":2825,"title":{},"body":{"index.html":{}}}],["certain",{"_index":730,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":3448,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1059,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["change",{"_index":1727,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":764,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1777,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":2692,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":2697,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":380,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changeslugandcheckvalidity",{"_index":861,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changeslugandcheckvalidity(organizationname",{"_index":872,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changetheme",{"_index":688,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":735,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":2935,"title":{},"body":{"license.html":{}}}],["char.charcodeat(0",{"_index":1684,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["characterized",{"_index":3368,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2960,"title":{},"body":{"license.html":{}}}],["chart",{"_index":2444,"title":{},"body":{"components/SidebarComponent.html":{}}}],["checkname",{"_index":2195,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checkname(name",{"_index":2204,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checks",{"_index":400,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkslug",{"_index":862,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["checkslug(slug",{"_index":875,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["checkusername",{"_index":1012,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":1015,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":2888,"title":{},"body":{"index.html":{}}}],["choose",{"_index":3587,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":3591,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1662,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["circumstances",{"_index":3184,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3193,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3632,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3488,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3499,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["class.active",{"_index":1773,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":1813,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cleanupperiod",{"_index":1926,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clear",{"_index":1322,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":2993,"title":{},"body":{"license.html":{}}}],["cli",{"_index":2838,"title":{},"body":{"index.html":{}}}],["click",{"_index":1130,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":1763,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":2845,"title":{},"body":{"index.html":{}}}],["clock",{"_index":2441,"title":{},"body":{"components/SidebarComponent.html":{}}}],["clone",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":821,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["close",{"_index":330,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CloseComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["close'},{'name",{"_index":58,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["close.component.html",{"_index":671,"title":{},"body":{"components/CloseComponent.html":{}}}],["close.component.scss",{"_index":672,"title":{},"body":{"components/CloseComponent.html":{}}}],["closecomponent",{"_index":57,"title":{"components/CloseComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["closed",{"_index":372,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":3628,"title":{},"body":{"license.html":{}}}],["cms",{"_index":2828,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":2879,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":2900,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":2899,"title":{},"body":{"index.html":{}}}],["code",{"_index":228,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":1856,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":2829,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":258,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":236,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colour",{"_index":1687,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["combination",{"_index":3574,"title":{},"body":{"license.html":{}}}],["combine",{"_index":3572,"title":{},"body":{"license.html":{}}}],["combined",{"_index":3259,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3246,"title":{},"body":{"license.html":{}}}],["command",{"_index":1800,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":3106,"title":{},"body":{"license.html":{}}}],["comment",{"_index":2795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":3349,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3515,"title":{},"body":{"license.html":{}}}],["common",{"_index":3343,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":20,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":3154,"title":{},"body":{"license.html":{}}}],["compact",{"_index":835,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":3254,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3263,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3553,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3136,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":3470,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3178,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":727,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/topbar/topbar.component",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":2905,"title":{},"body":{"index.html":{}}}],["computer",{"_index":3081,"title":{},"body":{"license.html":{}}}],["computers",{"_index":3041,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":3573,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":3580,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":728,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":3547,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3047,"title":{},"body":{"license.html":{}}}],["config",{"_index":294,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["config'},{'name",{"_index":60,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["config.component.html",{"_index":682,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":683,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":830,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":828,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":825,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":829,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":827,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":831,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":824,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":826,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":59,"title":{"components/ConfigComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["configsidebarvisible",{"_index":311,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":355,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":242,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["confirmationservice",{"_index":1558,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["confirmdialogmodule",{"_index":1564,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["conjunction",{"_index":740,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":3536,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":3459,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3611,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3669,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3421,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3507,"title":{},"body":{"license.html":{}}}],["console.log('organization",{"_index":932,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["console.log(error",{"_index":943,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["console.log(status",{"_index":1987,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["conspicuously",{"_index":3227,"title":{},"body":{"license.html":{}}}],["const",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["constantly",{"_index":3036,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3168,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1795,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":1122,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":490,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":1013,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["constructor(http",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["constructor(layoutservice",{"_index":695,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(localstorage",{"_index":1344,"title":{},"body":{"injectables/LayoutService.html":{}}}],["constructor(membersservice",{"_index":1496,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["constructor(organizationservice",{"_index":866,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{}}}],["constructor(platformservice",{"_index":2084,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["constructor(private",{"_index":346,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["constructor(projectservice",{"_index":2120,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["constructor(roleservice",{"_index":2344,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["constructor(storage",{"_index":1327,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamservice",{"_index":2523,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["constructor(translate",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":3557,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3326,"title":{},"body":{"license.html":{}}}],["contact",{"_index":3648,"title":{},"body":{"license.html":{}}}],["contain",{"_index":710,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":2896,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":3404,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1740,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":3167,"title":{},"body":{"license.html":{}}}],["contents",{"_index":3511,"title":{},"body":{"license.html":{}}}],["contenttype",{"_index":991,"title":{},"body":{"interfaces/FileDto.html":{}}}],["context",{"_index":3130,"title":{},"body":{"license.html":{}}}],["continue",{"_index":3374,"title":{},"body":{"license.html":{}}}],["continued",{"_index":3358,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":3418,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3563,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2946,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3496,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3498,"title":{},"body":{"license.html":{}}}],["control",{"_index":702,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":3501,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":3099,"title":{},"body":{"license.html":{}}}],["convention",{"_index":385,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["converttodate",{"_index":2805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttodate(body",{"_index":2813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":3086,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3540,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3369,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3094,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3417,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2934,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2931,"title":{},"body":{"license.html":{}}}],["copying",{"_index":3048,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2938,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2923,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3057,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3182,"title":{},"body":{"license.html":{}}}],["core/domain/dto/invitation.dto",{"_index":1628,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/domain/dto/requests/create",{"_index":908,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["core/domain/dto/requests/register",{"_index":1261,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["core/domain/models/enums/permission.enum",{"_index":1469,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/resource",{"_index":1471,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/state",{"_index":1629,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["core/domain/models/organization.entity",{"_index":1970,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["core/domain/models/platform.entity",{"_index":2222,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/project.entity",{"_index":2223,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/team.entity",{"_index":2654,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["core/domain/models/user.entity",{"_index":1630,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":1037,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/api/invitation.api.service",{"_index":1265,"title":{},"body":{"components/InvitationComponent.html":{}}}],["core/services/api/organization.api.service",{"_index":909,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/services/api/project.api.service",{"_index":2224,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/services/api/team.api.service",{"_index":2657,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["core/services/layout.service",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":802,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":910,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":1036,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":1035,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/members/members.actions",{"_index":1475,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/members/members.selectors",{"_index":1479,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/organization/organization.actions",{"_index":912,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/state/organization/organization.selectors",{"_index":916,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/platform/platform.actions",{"_index":2225,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/platform/platform.selectors",{"_index":2227,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.actions",{"_index":2183,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.selectors",{"_index":2185,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/role/role.actions",{"_index":1634,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/role/role.selectors",{"_index":1636,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/team/team.actions",{"_index":2626,"title":{},"body":{"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["core/state/team/team.selectors",{"_index":2625,"title":{},"body":{"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["core/utils/regex.constants",{"_index":1264,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":3607,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2904,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":3139,"title":{},"body":{"license.html":{}}}],["cost",{"_index":3292,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":3489,"title":{},"body":{"license.html":{}}}],["countries",{"_index":3084,"title":{},"body":{"license.html":{}}}],["country",{"_index":3530,"title":{},"body":{"license.html":{}}}],["course",{"_index":3660,"title":{},"body":{"license.html":{}}}],["court",{"_index":3562,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3627,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3518,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":3341,"title":{},"body":{"license.html":{}}}],["covered",{"_index":3070,"title":{},"body":{"license.html":{}}}],["cpp",{"_index":2785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create",{"_index":62,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createbreadcrumbs",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":1108,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":367,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":1915,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createdtime",{"_index":992,"title":{},"body":{"interfaces/FileDto.html":{}}}],["createeffect",{"_index":496,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["createneworganization",{"_index":2011,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createnewproject",{"_index":2196,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewprojectform",{"_index":2191,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewteam",{"_index":2560,"title":{},"body":{"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["createnewteam(dto",{"_index":2564,"title":{},"body":{"injectables/TeamService.html":{}}}],["createnewteamform",{"_index":2630,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["createorganization",{"_index":863,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["createorganization(dto",{"_index":2039,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationcomponent",{"_index":61,"title":{"components/CreateOrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["createorganizationfailure",{"_index":2060,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["createorganizationform",{"_index":853,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["createorganizationrequestdto",{"_index":907,"title":{"interfaces/CreateOrganizationRequestDto.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"injectables/OrganizationService.html":{}}}],["createorganizationsuccess",{"_index":2030,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["createorganizationsuccess(organization",{"_index":2016,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createorganizationteamerror",{"_index":2577,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createorganizationteamstatus",{"_index":2578,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createproject",{"_index":2118,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{}}}],["createproject(dto",{"_index":2145,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createprojecterror",{"_index":2159,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectfailure",{"_index":2136,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectrequestdto",{"_index":973,"title":{"interfaces/CreateProjectRequestDto.html":{}},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/ProjectService.html":{}}}],["createprojectstatus",{"_index":2160,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectsuccess",{"_index":2137,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectsuccess(project",{"_index":2126,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["createreducer",{"_index":625,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["creates",{"_index":1112,"title":{},"body":{"components/HomeComponent.html":{}}}],["createteam",{"_index":2519,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["createteamfailure",{"_index":2550,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamrequestdto",{"_index":975,"title":{"interfaces/CreateTeamRequestDto.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"injectables/TeamService.html":{}}}],["createteamsuccess",{"_index":2551,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamsuccess(team",{"_index":2529,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["creating",{"_index":357,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":616,"title":{},"body":{"interfaces/AuthState.html":{}}}],["criterion",{"_index":3109,"title":{},"body":{"license.html":{}}}],["cross",{"_index":3487,"title":{},"body":{"license.html":{}}}],["cs",{"_index":2793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["css",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":1859,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":3452,"title":{},"body":{"license.html":{}}}],["current",{"_index":248,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["currently",{"_index":320,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentuser",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1733,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":3281,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3288,"title":{},"body":{"license.html":{}}}],["d",{"_index":3253,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3609,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1664,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["dark",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["data",{"_index":1580,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["data.append('picture",{"_index":2053,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["database",{"_index":2447,"title":{},"body":{"components/SidebarComponent.html":{}}}],["date",{"_index":996,"title":{},"body":{"interfaces/FileDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"components/TeamsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":3447,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":904,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["debouncetime(500",{"_index":922,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["debug_file",{"_index":2796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":3207,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3589,"title":{},"body":{"license.html":{}}}],["declares",{"_index":307,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":3410,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":721,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":893,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":744,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":689,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":3195,"title":{},"body":{"license.html":{}}}],["default",{"_index":291,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["defective",{"_index":3602,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3560,"title":{},"body":{"license.html":{}}}],["defined",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":339,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":229,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":3146,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3052,"title":{},"body":{"license.html":{}}}],["delete",{"_index":2774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteorganization",{"_index":1930,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["deleteteam",{"_index":2520,"title":{},"body":{"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["deleteteam(teamid",{"_index":2566,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteteamerror",{"_index":2579,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamfailure",{"_index":2552,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamstatus",{"_index":2580,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamsuccess",{"_index":2553,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamsuccess({teamid",{"_index":2534,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["denied",{"_index":16,"title":{},"body":{"components/AccessDeniedComponent.html":{},"license.html":{}}}],["denied'},{'name",{"_index":50,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["denied.access_denied",{"_index":40,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component",{"_index":1481,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["denied.component.html",{"_index":26,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.scss",{"_index":28,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.ts",{"_index":11,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.insufficient_permission",{"_index":42,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied/access",{"_index":10,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["denominated",{"_index":3516,"title":{},"body":{"license.html":{}}}],["deny",{"_index":3005,"title":{},"body":{"license.html":{}}}],["denying",{"_index":2968,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":2731,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":718,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":2870,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2892,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":3525,"title":{},"body":{"license.html":{}}}],["description",{"_index":226,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":834,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":3300,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2942,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":322,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":949,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["details",{"_index":978,"title":{},"body":{"components/DetailsComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/ProjectDetailsComponent.html":{},"license.html":{}}}],["details'},{'name",{"_index":65,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["details.component.html",{"_index":979,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.scss",{"_index":980,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.ts",{"_index":2113,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["details.the",{"_index":3658,"title":{},"body":{"license.html":{}}}],["details/project",{"_index":2112,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["detailscomponent",{"_index":64,"title":{"components/DetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["detected",{"_index":1784,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":1782,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":247,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":3336,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2854,"title":{},"body":{"index.html":{}}}],["develop",{"_index":3635,"title":{},"body":{"license.html":{}}}],["developers",{"_index":2983,"title":{},"body":{"license.html":{}}}],["development",{"_index":2850,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":323,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device_state",{"_index":2797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":982,"title":{},"body":{"components/DevicesComponent.html":{},"license.html":{}}}],["devices'},{'name",{"_index":67,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devices.component.html",{"_index":983,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.scss",{"_index":984,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devicescomponent",{"_index":66,"title":{"components/DevicesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devtools",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["dialogmodule",{"_index":1562,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["differ",{"_index":3578,"title":{},"body":{"license.html":{}}}],["different",{"_index":731,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":3400,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3181,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3306,"title":{},"body":{"license.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directives",{"_index":144,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2862,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3074,"title":{},"body":{"license.html":{}}}],["directory",{"_index":2867,"title":{},"body":{"index.html":{}}}],["disable",{"_index":374,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["disabled",{"_index":1229,"title":{},"body":{"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":3218,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3592,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3397,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":3544,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":553,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["display",{"_index":1118,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["displayed",{"_index":2418,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":3096,"title":{},"body":{"license.html":{}}}],["dist",{"_index":2866,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":905,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["distinguishing",{"_index":3581,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2932,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2830,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":3549,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3049,"title":{},"body":{"license.html":{}}}],["dividermodule",{"_index":1920,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["docker",{"_index":2868,"title":{},"body":{"index.html":{}}}],["document",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":1222,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":986,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation'},{'name",{"_index":69,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documentation.component.html",{"_index":987,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":988,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentationcomponent",{"_index":68,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documented",{"_index":3384,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["domain/dto/file.dto",{"_index":2048,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/invitation.dto",{"_index":1311,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/members.dto",{"_index":1534,"title":{},"body":{"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["domain/dto/organization.dto",{"_index":2047,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/platform.dto",{"_index":2100,"title":{},"body":{"injectables/PlatformService.html":{}}}],["domain/dto/project.dto",{"_index":2150,"title":{},"body":{"injectables/ProjectService.html":{}}}],["domain/dto/requests/authenticate",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/create",{"_index":2046,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["domain/dto/requests/invitation",{"_index":1312,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/requests/register",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["domain/dto/requests/reset",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/team.dto",{"_index":2571,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/token.dto",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":627,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/invitation.entity",{"_index":1543,"title":{},"body":{"interfaces/MembersState.html":{}}}],["domain/models/menu",{"_index":1757,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/organization.entity",{"_index":2059,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["domain/models/platform.entity",{"_index":2103,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["domain/models/project.entity",{"_index":2161,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["domain/models/team.entity",{"_index":2587,"title":{},"body":{"interfaces/TeamState.html":{}}}],["domain/models/token.entity",{"_index":629,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":630,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{}}}],["domain/your",{"_index":2874,"title":{},"body":{"index.html":{}}}],["domains",{"_index":3027,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":3337,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3467,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":1001,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":2878,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1563,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["dt",{"_index":1567,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["dto",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["due",{"_index":2908,"title":{},"body":{"index.html":{}}}],["durable",{"_index":3280,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":3335,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3148,"title":{},"body":{"license.html":{}}}],["e",{"_index":3315,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":1821,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":2887,"title":{},"body":{"index.html":{}}}],["each",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":3069,"title":{},"body":{"license.html":{}}}],["effect",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":3216,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3196,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3043,"title":{},"body":{"license.html":{}}}],["effects",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":3481,"title":{},"body":{"license.html":{}}}],["el",{"_index":2392,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":3649,"title":{},"body":{"license.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["elementref",{"_index":892,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":1073,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":3275,"title":{},"body":{"license.html":{}}}],["emit",{"_index":360,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":341,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1644,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["emitting",{"_index":1731,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":3662,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1838,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":2706,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enable",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableaddaction",{"_index":2199,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enabledeleteaction",{"_index":2636,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["enablefiltering",{"_index":1581,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enableglobalsearch",{"_index":1582,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enableinviteaction",{"_index":1583,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enablepagination",{"_index":1584,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enableremoveaction",{"_index":1585,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enables",{"_index":3088,"title":{},"body":{"license.html":{}}}],["enablesorting",{"_index":1586,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["end",{"_index":383,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enforce",{"_index":3517,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3222,"title":{},"body":{"license.html":{}}}],["english",{"_index":2705,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":2833,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":3312,"title":{},"body":{"license.html":{}}}],["entered",{"_index":3554,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3244,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3570,"title":{},"body":{"license.html":{}}}],["entity",{"_index":3471,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":2765,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":2338,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["enums/platform",{"_index":2078,"title":{},"body":{"interfaces/Platform.html":{}}}],["enums/resource",{"_index":2339,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["env",{"_index":2914,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":2436,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["environment.appname",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environments/environment",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["equal",{"_index":404,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":3171,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":3003,"title":{},"body":{"license.html":{}}}],["error",{"_index":509,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error('method",{"_index":1975,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["error.status",{"_index":939,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{}}}],["errorsubscription",{"_index":854,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":373,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["eslint/ban",{"_index":819,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":1853,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":377,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["essential",{"_index":3131,"title":{},"body":{"license.html":{}}}],["even",{"_index":3621,"title":{},"body":{"license.html":{}}}],["event",{"_index":919,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["event.files.length",{"_index":1981,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.files[0",{"_index":1982,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.model",{"_index":1758,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":1728,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["event.preventdefault",{"_index":1889,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.target",{"_index":920,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["events",{"_index":342,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["eventtarget",{"_index":1657,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["everyone",{"_index":2929,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1880,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":2872,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":3080,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":3388,"title":{},"body":{"license.html":{}}}],["exclamation",{"_index":2479,"title":{},"body":{"components/SidebarComponent.html":{}}}],["excluded",{"_index":3325,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3558,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":3644,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3508,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3176,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3564,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3122,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1823,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":767,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":1819,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":3482,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3217,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1832,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":1837,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["expected",{"_index":3347,"title":{},"body":{"license.html":{}}}],["expects",{"_index":3346,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":2682,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":2994,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":378,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["explicitly",{"_index":1826,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["express",{"_index":2751,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expressed",{"_index":3594,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3430,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3030,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3543,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":3258,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3098,"title":{},"body":{"license.html":{}}}],["f",{"_index":3415,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3177,"title":{},"body":{"license.html":{}}}],["fails",{"_index":3443,"title":{},"body":{"license.html":{}}}],["failure",{"_index":645,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["fair",{"_index":3170,"title":{},"body":{"license.html":{}}}],["false",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["family",{"_index":3330,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":3066,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3340,"title":{},"body":{"license.html":{}}}],["feature",{"_index":3101,"title":{},"body":{"license.html":{}}}],["features",{"_index":2841,"title":{},"body":{"index.html":{}}}],["fee",{"_index":2976,"title":{},"body":{"license.html":{}}}],["feel",{"_index":705,"title":{},"body":{"components/ConfigComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["filedto",{"_index":989,"title":{"interfaces/FileDto.html":{}},"body":{"interfaces/FileDto.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["filedto.url",{"_index":2070,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["filename",{"_index":993,"title":{},"body":{"interfaces/FileDto.html":{}}}],["files",{"_index":2859,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesize",{"_index":994,"title":{},"body":{"interfaces/FileDto.html":{}}}],["fileupload",{"_index":1961,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadhandlerevent",{"_index":1946,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadmodule",{"_index":1923,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["filled",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["finally",{"_index":3034,"title":{},"body":{"license.html":{}}}],["find",{"_index":3308,"title":{},"body":{"license.html":{}}}],["first",{"_index":2871,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":1253,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":3597,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3279,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2703,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":3155,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":837,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":3051,"title":{},"body":{"license.html":{}}}],["following",{"_index":3512,"title":{},"body":{"license.html":{}}}],["font",{"_index":733,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":998,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":71,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["footer.component.html",{"_index":999,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1000,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":70,"title":{"components/FooterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forbid",{"_index":3215,"title":{},"body":{"license.html":{}}}],["force",{"_index":3173,"title":{},"body":{"license.html":{}}}],["foreach((value",{"_index":1979,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["forgot",{"_index":73,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassword",{"_index":484,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{}}}],["forgotpassword(username",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":72,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassworderror",{"_index":617,"title":{},"body":{"interfaces/AuthState.html":{}}}],["forgotpasswordfailure",{"_index":562,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["forgotpasswordform",{"_index":1007,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":1071,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["forgotpasswordsuccess",{"_index":533,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["form",{"_index":3111,"title":{},"body":{"license.html":{}}}],["format",{"_index":3382,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":869,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["formdata",{"_index":2052,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["forms",{"_index":3269,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":681,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":1906,"title":{},"body":{"components/NotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":97,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["found.component.html",{"_index":1907,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1908,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1905,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_available",{"_index":1910,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_found",{"_index":1909,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1904,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["foundation",{"_index":2926,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":1884,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":2924,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":2944,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":2979,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":906,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["fromevent(this.nameinput.nativeelement",{"_index":925,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["fromevent(this.sluginput.nativeelement",{"_index":917,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":1038,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":3199,"title":{},"body":{"license.html":{}}}],["full",{"_index":2877,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":325,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["functionality",{"_index":674,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":3359,"title":{},"body":{"license.html":{}}}],["functions",{"_index":246,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":3009,"title":{},"body":{"license.html":{}}}],["further",{"_index":1828,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":3032,"title":{},"body":{"license.html":{}}}],["fw",{"_index":2426,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":2704,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":2909,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":3144,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2861,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":2837,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":1847,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getallprojects",{"_index":2142,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getapplicationname",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":2693,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["getcontainerclass",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":791,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getinvitationdetails",{"_index":1302,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getinvitationdetails(invitationhash",{"_index":1307,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getitem",{"_index":1363,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1369,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1376,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmembers",{"_index":1528,"title":{},"body":{"injectables/MembersService.html":{}}}],["getmenumode",{"_index":787,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getmyteams",{"_index":2561,"title":{},"body":{"injectables/TeamService.html":{}}}],["getorganization",{"_index":2037,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizationinitials",{"_index":1931,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationinitials(organization",{"_index":1937,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationteams",{"_index":2562,"title":{},"body":{"injectables/TeamService.html":{}}}],["getplatforms",{"_index":2097,"title":{},"body":{"injectables/PlatformService.html":{}}}],["getrefreshtoken",{"_index":1323,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":795,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getroles",{"_index":2356,"title":{},"body":{"injectables/RoleService.html":{}}}],["getscale",{"_index":783,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":1845,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getting",{"_index":2821,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1324,"title":{},"body":{"injectables/JwtService.html":{}}}],["getuserinitials",{"_index":1574,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["getuserinitials(member",{"_index":1599,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["getvisible",{"_index":778,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":2898,"title":{},"body":{"index.html":{}}}],["gi",{"_index":1226,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":2895,"title":{},"body":{"index.html":{}}}],["give",{"_index":3237,"title":{},"body":{"license.html":{}}}],["given",{"_index":1113,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":3250,"title":{},"body":{"license.html":{}}}],["giving",{"_index":2989,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":2918,"title":{},"body":{"license.html":{}}}],["go",{"_index":2782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gotoprofilepage",{"_index":2694,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":3391,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2984,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3411,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3159,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3462,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":2975,"title":{},"body":{"license.html":{}}}],["greater",{"_index":409,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":3636,"title":{},"body":{"license.html":{}}}],["green",{"_index":297,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":2948,"title":{},"body":{"license.html":{}}}],["gui",{"_index":3661,"title":{},"body":{"license.html":{}}}],["guides",{"_index":1075,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides'},{'name",{"_index":76,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["guides.component.html",{"_index":1076,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides.component.scss",{"_index":1077,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guidescomponent",{"_index":75,"title":{"components/GuidesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["handle",{"_index":635,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["handles",{"_index":1818,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handleupdate",{"_index":2071,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["handling",{"_index":716,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hascreatepermission",{"_index":1442,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["hasdeletepermission",{"_index":1443,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsComponent.html":{}}}],["hash",{"_index":1682,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["haspermission",{"_index":2807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["haspermission(user",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasreadpermission",{"_index":1444,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["hasupdatepermission",{"_index":1927,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["having",{"_index":3175,"title":{},"body":{"license.html":{}}}],["header",{"_index":1660,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["heart",{"_index":2450,"title":{},"body":{"components/SidebarComponent.html":{}}}],["height",{"_index":1857,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":2876,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":3504,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":326,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":1125,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":3437,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3396,"title":{},"body":{"license.html":{}}}],["home",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":78,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["home.component.html",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/devices",{"_index":2439,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/documentation",{"_index":2496,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/guides",{"_index":2502,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/sdks",{"_index":2499,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/support",{"_index":2505,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/issues",{"_index":2434,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/logs",{"_index":2431,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/messages",{"_index":2437,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/performance",{"_index":2445,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/projects",{"_index":2428,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/queries",{"_index":2448,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/releases",{"_index":2462,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/replays",{"_index":2459,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/resources",{"_index":2456,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/screen",{"_index":2454,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/sessions",{"_index":2442,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings",{"_index":2467,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account",{"_index":2469,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/close",{"_index":2478,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/details",{"_index":2471,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/notifications",{"_index":2476,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/security",{"_index":2473,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/alerts",{"_index":2492,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/members",{"_index":2489,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/organization",{"_index":2482,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/projects",{"_index":2484,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/teams",{"_index":2487,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/stats",{"_index":2465,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/vitals",{"_index":2451,"title":{},"body":{"components/SidebarComponent.html":{}}}],["homecomponent",{"_index":77,"title":{"components/HomeComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["hope",{"_index":3646,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":271,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":1814,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding",{"_index":1851,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":1895,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":1811,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":1772,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":3309,"title":{},"body":{"license.html":{}}}],["household",{"_index":3331,"title":{},"body":{"license.html":{}}}],["hover",{"_index":1822,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":337,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["htmlinputelement).value",{"_index":921,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["http",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":2856,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory",{"_index":2809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://fsf.org",{"_index":2928,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":3666,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":3674,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":1806,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":3659,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":1836,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["iconurl",{"_index":2075,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{}}}],["id",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["identifiable",{"_index":3532,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1797,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identifiers",{"_index":1809,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":1808,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["if(isusernametaken",{"_index":1067,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":1882,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":2869,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1714,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":3129,"title":{},"body":{"license.html":{}}}],["implemented",{"_index":1976,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["implements",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"index.html":{}}}],["implied",{"_index":3559,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["important",{"_index":2907,"title":{},"body":{"index.html":{}}}],["importing",{"_index":3495,"title":{},"body":{"license.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["impose",{"_index":3420,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3561,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3614,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3617,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":321,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inbox",{"_index":2433,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inc",{"_index":2927,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3610,"title":{},"body":{"license.html":{}}}],["include",{"_index":351,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":3124,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1804,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":3140,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":3267,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":3010,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":3667,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3334,"title":{},"body":{"license.html":{}}}],["increments",{"_index":747,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":690,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":3416,"title":{},"body":{"license.html":{}}}],["independent",{"_index":3256,"title":{},"body":{"license.html":{}}}],["index",{"_index":161,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indicate",{"_index":386,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":369,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":412,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":3265,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":3019,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3350,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["inform",{"_index":3318,"title":{},"body":{"license.html":{}}}],["information",{"_index":1741,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":3463,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3492,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3077,"title":{},"body":{"license.html":{}}}],["initial",{"_index":354,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":726,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":350,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":633,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["initiate",{"_index":3485,"title":{},"body":{"license.html":{}}}],["inject",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(document",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(platform_id",{"_index":1382,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["injectable",{"_index":298,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["injectables",{"_index":478,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"overview.html":{}}}],["injected",{"_index":1789,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":719,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["input",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["inputmaskmodule",{"_index":1235,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputnumbermodule",{"_index":1922,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inputs",{"_index":692,"title":{},"body":{"components/ConfigComponent.html":{},"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["inputstyle",{"_index":235,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":812,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":680,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":849,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["inside",{"_index":2399,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":3006,"title":{},"body":{"license.html":{}}}],["installation",{"_index":3353,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3372,"title":{},"body":{"license.html":{}}}],["instance",{"_index":358,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["instead",{"_index":3672,"title":{},"body":{"license.html":{}}}],["intact",{"_index":3230,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2947,"title":{},"body":{"license.html":{}}}],["intention",{"_index":3219,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3091,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":717,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":3095,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":3282,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3479,"title":{},"body":{"license.html":{}}}],["interface",{"_index":222,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["interfaces",{"_index":224,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":3361,"title":{},"body":{"license.html":{}}}],["internal",{"_index":2336,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":2401,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":3624,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3138,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3153,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3251,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":664,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/MembersState.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":80,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitation.component.html",{"_index":1237,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":1238,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.dto",{"_index":1491,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["invitationcomponent",{"_index":79,"title":{"components/InvitationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitationdto",{"_index":1295,"title":{"interfaces/InvitationDto.html":{}},"body":{"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"interfaces/MembersDto.html":{},"components/MembersTableComponent.html":{}}}],["invitationhash",{"_index":1240,"title":{},"body":{"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["invitationid",{"_index":1231,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{}}}],["invitationrequestdto",{"_index":1298,"title":{"interfaces/InvitationRequestDto.html":{}},"body":{"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{}}}],["invitations",{"_index":1489,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["invitationservice",{"_index":493,"title":{"injectables/InvitationService.html":{}},"body":{"injectables/AuthEffects.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{}}}],["invitationstatus",{"_index":1538,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmember",{"_index":1539,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmembers",{"_index":1445,"title":{},"body":{"components/MembersComponent.html":{}}}],["invitemember",{"_index":1303,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["invitemember(dto",{"_index":1309,"title":{},"body":{"injectables/InvitationService.html":{}}}],["invitemembererror",{"_index":1540,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitememberfailure",{"_index":1520,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess",{"_index":1521,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess(invitation",{"_index":1502,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["invitenewuserform",{"_index":1568,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ios",{"_index":2777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["irrevocable",{"_index":3161,"title":{},"body":{"license.html":{}}}],["isaddnewprojectdialogvisible",{"_index":2192,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isaddnewteamdialogvisible",{"_index":2631,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["isdesktop",{"_index":413,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isinvitedialogvisible",{"_index":1569,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isiso8601",{"_index":2811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isiso8601(value",{"_index":2814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":855,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["isloadingallprojects",{"_index":2173,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["isloadingauthstate",{"_index":1031,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingcreatenewproject",{"_index":2193,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingcreatenewteam",{"_index":2632,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["isloadingcreateproject",{"_index":2228,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingdeleteteam",{"_index":2633,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["isloadingmembers",{"_index":1446,"title":{},"body":{"components/MembersComponent.html":{}}}],["isloadingmyteams",{"_index":2605,"title":{},"body":{"components/TeamsComponent.html":{}}}],["isloadingorganization",{"_index":913,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["isloadingorganizationteams",{"_index":2606,"title":{},"body":{"components/TeamsComponent.html":{}}}],["isloadingremovemembers",{"_index":1570,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingsendinvitation",{"_index":1571,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ismobile",{"_index":419,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isnametaken",{"_index":2143,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["isnametaken(name",{"_index":2148,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["isoutsideclicked",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":401,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isplatformbrowser",{"_index":1381,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1383,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["isslugtaken",{"_index":856,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["isslugtaken(slug",{"_index":964,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["issuccess",{"_index":1032,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["issue",{"_index":2798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["issues",{"_index":1317,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues'},{'name",{"_index":82,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["issues.component.html",{"_index":1318,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues.component.scss",{"_index":1319,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issuescomponent",{"_index":81,"title":{"components/IssuesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["isupdateorganizationpictureloading",{"_index":1972,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isuploadinprogress",{"_index":1928,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isusernameavialable",{"_index":618,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isusernametaken",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1762,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":1898,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":1769,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":1816,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":714,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":3375,"title":{},"body":{"license.html":{}}}],["java",{"_index":2783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":2786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json.parse(localstorageconfig",{"_index":430,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["json.stringify(organization",{"_index":933,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["json.stringify(this.config",{"_index":434,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["june",{"_index":2921,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":492,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{}}}],["karma",{"_index":2886,"title":{},"body":{"index.html":{}}}],["keep",{"_index":318,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":3132,"title":{},"body":{"license.html":{}}}],["key",{"_index":1364,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1370,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":1722,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":1724,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":3087,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2939,"title":{},"body":{"license.html":{}}}],["know",{"_index":2963,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":3520,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3529,"title":{},"body":{"license.html":{}}}],["label",{"_index":1116,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["landscape",{"_index":415,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":701,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":2723,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":2405,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":296,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["laravel",{"_index":2790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["larger",{"_index":3260,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":2341,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1254,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":3584,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2894,"title":{},"body":{"index.html":{}}}],["law",{"_index":3079,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3054,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3490,"title":{},"body":{"license.html":{}}}],["layout",{"_index":244,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":172,"title":{"injectables/LayoutService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["layoutstate",{"_index":304,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["leaks",{"_index":1842,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":2990,"title":{},"body":{"license.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["length",{"_index":1367,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":3671,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":3675,"title":{},"body":{"license.html":{}}}],["liability",{"_index":3399,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3076,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3121,"title":{},"body":{"license.html":{}}}],["library",{"_index":359,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":2917,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3058,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3060,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3062,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2940,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3466,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3409,"title":{},"body":{"license.html":{}}}],["light",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":3460,"title":{},"body":{"license.html":{}}}],["limit",{"_index":3220,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2910,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":3595,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3398,"title":{},"body":{"license.html":{}}}],["line",{"_index":376,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["link",{"_index":739,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":3149,"title":{},"body":{"license.html":{}}}],["linking",{"_index":3670,"title":{},"body":{"license.html":{}}}],["links",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":2430,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["listener",{"_index":1131,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1711,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/Role.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":3486,"title":{},"body":{"license.html":{}}}],["load",{"_index":648,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["loadallprojects",{"_index":2119,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{}}}],["loadallprojectsfailure",{"_index":2138,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess",{"_index":2139,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess({projects",{"_index":2132,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadcurrentorganization",{"_index":911,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationfailure",{"_index":2031,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess",{"_index":2032,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess(organization",{"_index":2021,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["loadcurrentuser",{"_index":485,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loadcurrentuserfailure",{"_index":563,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess",{"_index":564,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess(user",{"_index":529,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":760,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":636,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["loadmyteams",{"_index":2521,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadmyteamsfailure",{"_index":2554,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadmyteamssuccess",{"_index":2555,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadmyteamssuccess({teams",{"_index":2541,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadorganizationmembers",{"_index":1474,"title":{},"body":{"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmembersfailure",{"_index":1522,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess",{"_index":1523,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess(members",{"_index":1508,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadorganizationteams",{"_index":2522,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadorganizationteamsfailure",{"_index":2556,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess",{"_index":2557,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess({teams",{"_index":2546,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadplatforms",{"_index":2083,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["loadplatformsfailure",{"_index":2094,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadplatformssuccess",{"_index":2089,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadroles",{"_index":1633,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolesfailure",{"_index":2353,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolessuccess",{"_index":2349,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loads",{"_index":2368,"title":{},"body":{"components/ScreenLoadsComponent.html":{},"components/SidebarComponent.html":{}}}],["loads'},{'name",{"_index":122,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loads.component.html",{"_index":2369,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.scss",{"_index":2370,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.ts",{"_index":2367,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads/screen",{"_index":2366,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["local",{"_index":302,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":2402,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":301,"title":{"injectables/LocalStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{}}}],["localstorageconfig",{"_index":426,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["location",{"_index":2832,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":2799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":2800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":2826,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":2823,"title":{},"body":{"index.html":{}}}],["login",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["login.component.html",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loginform",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":2695,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1434,"title":{},"body":{"components/LogsComponent.html":{},"index.html":{}}}],["logs'},{'name",{"_index":86,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["logs.component.html",{"_index":1435,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1436,"title":{},"body":{"components/LogsComponent.html":{}}}],["logscomponent",{"_index":85,"title":{"components/LogsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["long",{"_index":3172,"title":{},"body":{"license.html":{}}}],["look",{"_index":704,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":3615,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3618,"title":{},"body":{"license.html":{}}}],["machine",{"_index":3272,"title":{},"body":{"license.html":{}}}],["made",{"_index":3362,"title":{},"body":{"license.html":{}}}],["mail",{"_index":3651,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":3305,"title":{},"body":{"license.html":{}}}],["major",{"_index":3127,"title":{},"body":{"license.html":{}}}],["make",{"_index":2901,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":3190,"title":{},"body":{"license.html":{}}}],["making",{"_index":1783,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":706,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":2848,"title":{},"body":{"index.html":{}}}],["managing",{"_index":700,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":707,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":3505,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1780,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":3008,"title":{},"body":{"license.html":{}}}],["map",{"_index":502,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["map((event",{"_index":918,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["map((invitation",{"_index":1501,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((members",{"_index":1507,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((organization",{"_index":2015,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["map((project",{"_index":2125,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["map((projects",{"_index":2131,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["map((result",{"_index":2025,"title":{},"body":{"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/RoleEffects.html":{}}}],["map((segment",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((team",{"_index":2528,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["map((teams",{"_index":2540,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["map((token",{"_index":519,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":528,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":3556,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3000,"title":{},"body":{"license.html":{}}}],["marks",{"_index":722,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":3056,"title":{},"body":{"license.html":{}}}],["matching",{"_index":147,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":833,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":3376,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":1883,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["meaning",{"_index":3423,"title":{},"body":{"license.html":{}}}],["means",{"_index":723,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":3198,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3212,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1786,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":3226,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3240,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3108,"title":{},"body":{"license.html":{}}}],["member",{"_index":1601,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.email",{"_index":1697,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.email.charat(0",{"_index":1681,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.firstname",{"_index":1678,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.firstname?.charat(0",{"_index":1679,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.invitationid",{"_index":1675,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.lastname",{"_index":1677,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.lastname?.charat(0",{"_index":1680,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.pictureurl",{"_index":1699,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.role.name",{"_index":1698,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.userid",{"_index":1674,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.firstname",{"_index":1695,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.lastname",{"_index":1696,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["memberid",{"_index":1533,"title":{},"body":{"injectables/MembersService.html":{},"components/MembersTableComponent.html":{}}}],["members",{"_index":90,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/PlatformState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members'},{'name",{"_index":88,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members.actions",{"_index":1525,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["members.component.html",{"_index":1439,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.component.scss",{"_index":1440,"title":{},"body":{"components/MembersComponent.html":{}}}],["members/members.effects",{"_index":449,"title":{},"body":{"interfaces/AppState.html":{}}}],["members/members.reducer",{"_index":451,"title":{},"body":{"interfaces/AppState.html":{}}}],["memberscomponent",{"_index":87,"title":{"components/MembersComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["membersdto",{"_index":1487,"title":{"interfaces/MembersDto.html":{}},"body":{"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["memberseffects",{"_index":448,"title":{"injectables/MembersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MembersEffects.html":{}}}],["membersreducer",{"_index":450,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersservice",{"_index":1497,"title":{"injectables/MembersService.html":{}},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{}}}],["membersstate",{"_index":438,"title":{"interfaces/MembersState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["memberstablecomponent",{"_index":89,"title":{"components/MembersTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["memory",{"_index":1380,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1379,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["menu",{"_index":268,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":2689,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":1725,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{}}}],["menuhoveractive",{"_index":313,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":1110,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":1766,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":1765,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":2419,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":93,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menuitemcomponent",{"_index":92,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menumode",{"_index":238,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":810,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":1767,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":316,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":685,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusource",{"_index":1734,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":1768,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":3596,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3090,"title":{},"body":{"license.html":{}}}],["merging",{"_index":3475,"title":{},"body":{"license.html":{}}}],["message",{"_index":1658,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["messages",{"_index":1900,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages'},{'name",{"_index":95,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messages.component.html",{"_index":1901,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":1902,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagescomponent",{"_index":94,"title":{"components/MessagesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messageservice",{"_index":846,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["met",{"_index":3163,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["method",{"_index":1793,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":693,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":2764,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["misrepresentation",{"_index":3405,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":335,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["model",{"_index":2393,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/permission.enum",{"_index":2725,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/platform",{"_index":2081,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["models/enums/resource",{"_index":2726,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/user.entity",{"_index":1297,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["modification",{"_index":3050,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3112,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2999,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3243,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2973,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3082,"title":{},"body":{"license.html":{}}}],["modules",{"_index":3676,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":2835,"title":{},"body":{"index.html":{}}}],["more",{"_index":3290,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":3449,"title":{},"body":{"license.html":{}}}],["move",{"_index":348,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["myteams",{"_index":2581,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["myteamserror",{"_index":2582,"title":{},"body":{"interfaces/TeamState.html":{}}}],["myteamsstatus",{"_index":2583,"title":{},"body":{"interfaces/TeamState.html":{}}}],["na",{"_index":1977,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name/taken?name",{"_index":2154,"title":{},"body":{"injectables/ProjectService.html":{}}}],["name:your",{"_index":2875,"title":{},"body":{"index.html":{}}}],["namechecksubscription",{"_index":2194,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["named",{"_index":230,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["nameinput",{"_index":857,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["names",{"_index":3408,"title":{},"body":{"license.html":{}}}],["native",{"_index":2398,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":3257,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":2855,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":708,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":3604,"title":{},"body":{"license.html":{}}}],["need",{"_index":2889,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":3033,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":3092,"title":{},"body":{"license.html":{}}}],["new",{"_index":356,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/ProjectState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["newhref",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["newpassword",{"_index":2324,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":375,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":2852,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["ngondestroy",{"_index":864,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["ngoninit",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{}}}],["ngrx",{"_index":2847,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":556,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":626,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":34,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["node",{"_index":2778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["non",{"_index":1057,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":3296,"title":{},"body":{"license.html":{}}}],["none",{"_index":1667,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["normal",{"_index":3125,"title":{},"body":{"license.html":{}}}],["normally",{"_index":3329,"title":{},"body":{"license.html":{}}}],["notfoundcomponent",{"_index":96,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["nothing",{"_index":3461,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3102,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3097,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1751,"title":{},"body":{"injectables/MenuService.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":99,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifications.component.html",{"_index":1912,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":1913,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscomponent",{"_index":98,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifies",{"_index":3450,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3444,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3394,"title":{},"body":{"license.html":{}}}],["null",{"_index":428,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["number",{"_index":288,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["numbered",{"_index":3583,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":775,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":295,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["object's",{"_index":403,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":1723,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":1719,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":1123,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":3568,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3311,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3200,"title":{},"body":{"license.html":{}}}],["observable",{"_index":366,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["observables",{"_index":344,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":3295,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":3458,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3016,"title":{},"body":{"license.html":{}}}],["of(acceptinvitationfailure",{"_index":508,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticate(request",{"_index":512,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":523,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(createprojectfailure",{"_index":2127,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(createteamfailure",{"_index":2530,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(deleteteamfailure",{"_index":2536,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":534,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(invitememberfailure",{"_index":1503,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadallprojectsfailure",{"_index":2133,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadcurrentorganizationfailure",{"_index":2017,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":537,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadmyteamsfailure",{"_index":2542,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadorganizationmembers",{"_index":1516,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationmembersfailure",{"_index":1509,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationteamsfailure",{"_index":2547,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadplatformsfailure",{"_index":2091,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["of(loadrolesfailure",{"_index":2350,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["of(registernewuserfailure",{"_index":541,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(removememberfailure",{"_index":1513,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(resetpasswordfailure",{"_index":548,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(updateorganizationpicturefailure",{"_index":2027,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["offer",{"_index":2988,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3320,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3299,"title":{},"body":{"license.html":{}}}],["official",{"_index":3113,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":555,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["oftype(acceptinvitation",{"_index":498,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(acceptinvitationsuccess",{"_index":511,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticate",{"_index":514,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":525,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(createorganization",{"_index":2013,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(createproject",{"_index":2123,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(createteam",{"_index":2526,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(deleteteam",{"_index":2532,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(forgotpassword",{"_index":531,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(invitemember",{"_index":1499,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadallprojects",{"_index":2129,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadcurrentorganization",{"_index":2019,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":536,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadmyteams",{"_index":2538,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadorganizationmembers",{"_index":1505,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadorganizationteams",{"_index":2544,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadplatforms",{"_index":2087,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["oftype(loadroles",{"_index":2347,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["oftype(registernewuser",{"_index":539,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":543,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(removemember",{"_index":1511,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removemembersuccess",{"_index":1515,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(resetpassword",{"_index":545,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":550,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(updateorganizationpicture",{"_index":2023,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["on(acceptinvitation",{"_index":665,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationfailure",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationsuccess",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticate",{"_index":640,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationfailure",{"_index":646,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationsuccess",{"_index":643,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(createorganization",{"_index":2064,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationfailure",{"_index":2066,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationsuccess",{"_index":2065,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createproject",{"_index":2165,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectfailure",{"_index":2168,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectsuccess",{"_index":2166,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createteam",{"_index":2593,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamfailure",{"_index":2596,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamsuccess",{"_index":2594,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteam",{"_index":2597,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamfailure",{"_index":2601,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamsuccess",{"_index":2598,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(forgotpassword",{"_index":654,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordfailure",{"_index":656,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordsuccess",{"_index":655,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(invitemember",{"_index":1547,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitememberfailure",{"_index":1552,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitemembersuccess",{"_index":1548,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadallprojects",{"_index":2162,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectsfailure",{"_index":2164,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectssuccess",{"_index":2163,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadcurrentorganization",{"_index":2061,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationfailure",{"_index":2063,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationsuccess",{"_index":2062,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentuser",{"_index":637,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentuserfailure",{"_index":650,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentusersuccess",{"_index":649,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadmyteams",{"_index":2591,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadmyteamssuccess",{"_index":2592,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationmembers",{"_index":1544,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmembersfailure",{"_index":1546,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmemberssuccess",{"_index":1545,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationteams",{"_index":2588,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamsfailure",{"_index":2590,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamssuccess",{"_index":2589,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadplatforms",{"_index":2104,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformsfailure",{"_index":2107,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformssuccess",{"_index":2105,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadroles",{"_index":2361,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolesfailure",{"_index":2364,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolessuccess",{"_index":2362,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(registernewuser",{"_index":660,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewuserfailure",{"_index":662,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewusersuccess",{"_index":661,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(removemember",{"_index":1553,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removememberfailure",{"_index":1555,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removemembersuccess",{"_index":1554,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(resetpassword",{"_index":657,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordfailure",{"_index":659,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordsuccess",{"_index":658,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(setcurrentuser",{"_index":651,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(settoken",{"_index":652,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(signout",{"_index":653,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(updateorganizationpicture",{"_index":2067,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturefailure",{"_index":2072,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturesuccess",{"_index":2068,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["once",{"_index":758,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":752,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":691,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":422,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":844,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["one",{"_index":759,"title":{},"body":{"components/ConfigComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["oninit",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{}}}],["onmenustatechange",{"_index":1736,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":1737,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":324,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["open",{"_index":1743,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":371,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":396,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["operate",{"_index":3620,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3302,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3134,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3221,"title":{},"body":{"license.html":{}}}],["operator",{"_index":352,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":420,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":243,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":1798,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":847,"title":{"interfaces/Organization.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["organization'},{'name",{"_index":63,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organization.actions",{"_index":2035,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["organization.archive_period",{"_index":2002,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.archive_period_description",{"_index":2003,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.avatar",{"_index":2000,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period",{"_index":2004,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period_description",{"_index":2005,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.html",{"_index":851,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":852,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.ts",{"_index":843,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:108",{"_index":881,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:142",{"_index":880,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:148",{"_index":878,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:156",{"_index":883,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:161",{"_index":873,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:167",{"_index":876,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:64",{"_index":898,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:65",{"_index":871,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:76",{"_index":886,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:81",{"_index":891,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:82",{"_index":890,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:84",{"_index":896,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:85",{"_index":895,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:86",{"_index":888,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:88",{"_index":879,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.delete",{"_index":2006,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.delete_description",{"_index":2007,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.error",{"_index":948,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.error_description",{"_index":951,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.failed_to_upload_picture",{"_index":1989,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id",{"_index":1994,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id_description",{"_index":1995,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name",{"_index":1998,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_description",{"_index":1999,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_is_required",{"_index":969,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_label",{"_index":968,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug",{"_index":1996,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug.split",{"_index":1978,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_description",{"_index":1997,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_is_required",{"_index":971,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_label",{"_index":970,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_description",{"_index":967,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_message",{"_index":966,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/create",{"_index":842,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/organization.effects",{"_index":453,"title":{},"body":{"interfaces/AppState.html":{}}}],["organization/organization.reducer",{"_index":455,"title":{},"body":{"interfaces/AppState.html":{}}}],["organizationcomponent",{"_index":100,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organizationdto",{"_index":2008,"title":{"interfaces/OrganizationDto.html":{}},"body":{"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{}}}],["organizationeffects",{"_index":452,"title":{"injectables/OrganizationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/OrganizationEffects.html":{}}}],["organizationerrorsubscription",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizationid",{"_index":1916,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["organizationname",{"_index":874,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationreducer",{"_index":454,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizations",{"_index":3063,"title":{},"body":{"license.html":{}}}],["organizationservice",{"_index":867,"title":{"injectables/OrganizationService.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{}}}],["organizationstate",{"_index":439,"title":{"interfaces/OrganizationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizationsubscription",{"_index":858,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationteams",{"_index":2584,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["organizationteamserror",{"_index":2585,"title":{},"body":{"interfaces/TeamState.html":{}}}],["organizationteamsstatus",{"_index":2586,"title":{},"body":{"interfaces/TeamState.html":{}}}],["origin",{"_index":3406,"title":{},"body":{"license.html":{}}}],["original",{"_index":757,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":1891,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["others",{"_index":2967,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":416,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":3613,"title":{},"body":{"license.html":{}}}],["outlined",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":3166,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1129,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":338,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":703,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":309,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":370,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":3677,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3500,"title":{},"body":{"license.html":{}}}],["owner",{"_index":1447,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["p",{"_index":1228,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{},"index.html":{}}}],["package",{"_index":2730,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":3249,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3126,"title":{},"body":{"license.html":{}}}],["page",{"_index":2397,"title":{},"body":{"components/SidebarComponent.html":{}}}],["panelmodule",{"_index":1438,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["paper",{"_index":3650,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3434,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3513,"title":{},"body":{"license.html":{}}}],["param",{"_index":804,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":368,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{}}}],["params.platforms",{"_index":2106,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["params.roles",{"_index":2363,"title":{},"body":{"interfaces/RoleState.html":{}}}],["parent",{"_index":725,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":1771,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":3065,"title":{},"body":{"license.html":{}}}],["particular",{"_index":3117,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3089,"title":{},"body":{"license.html":{}}}],["parts",{"_index":362,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":3303,"title":{},"body":{"license.html":{}}}],["party's",{"_index":3477,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1794,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":724,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":505,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"license.html":{}}}],["password'},{'name",{"_index":74,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["password.back_to_login",{"_index":1070,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":1053,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":1005,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1006,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1004,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:125",{"_index":2315,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":1019,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":1017,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":1016,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":2312,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1014,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":2316,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1023,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":1025,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1026,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1021,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1030,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":1027,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1028,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":2313,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":1018,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":2314,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":1020,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":1046,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":1048,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":2326,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":2327,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":2328,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":2329,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":1052,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":2322,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":1047,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":1068,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":1069,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":1065,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":1064,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":2321,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":1003,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/reset",{"_index":2309,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordmodule",{"_index":1236,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patent",{"_index":3433,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3037,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1879,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":3014,"title":{},"body":{"license.html":{}}}],["payment",{"_index":3550,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3316,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3319,"title":{},"body":{"license.html":{}}}],["pending",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":762,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":3600,"title":{},"body":{"license.html":{}}}],["performing",{"_index":3145,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3442,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1468,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["permission.create",{"_index":1455,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permission.delete",{"_index":1457,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.read",{"_index":1459,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permission.update",{"_index":1954,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["permissions",{"_index":2337,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissiontype",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissionvalue",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissive",{"_index":3232,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3266,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3425,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2930,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3367,"title":{},"body":{"license.html":{}}}],["personal",{"_index":3328,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":3566,"title":{},"body":{"license.html":{}}}],["php",{"_index":2791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physical",{"_index":3276,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3293,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["picture",{"_index":2045,"title":{},"body":{"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["pictureurl",{"_index":1917,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{}}}],["pieces",{"_index":2962,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":518,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["pipe(filter((event",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pipe(map((value",{"_index":1451,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["pixels",{"_index":411,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":3301,"title":{},"body":{"license.html":{}}}],["platform",{"_index":2073,"title":{"interfaces/Platform.html":{}},"body":{"interfaces/Platform.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"components/ProjectsTableComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform.actions",{"_index":2095,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["platform.dto",{"_index":2116,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["platform.entity",{"_index":2110,"title":{},"body":{"interfaces/Project.html":{}}}],["platform.type",{"_index":2256,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform.version",{"_index":2257,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform/platform.effects",{"_index":471,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform/platform.reducer",{"_index":469,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1378,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformdto",{"_index":2079,"title":{"interfaces/PlatformDto.html":{}},"body":{"interfaces/PlatformDto.html":{},"injectables/PlatformService.html":{},"interfaces/ProjectDto.html":{}}}],["platformeffects",{"_index":470,"title":{"injectables/PlatformEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/PlatformEffects.html":{}}}],["platformid",{"_index":974,"title":{},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/LocalStorage.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsTableComponent.html":{},"injectables/SessionStorage.html":{}}}],["platformreducer",{"_index":468,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platforms",{"_index":2090,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["platformservice",{"_index":2085,"title":{"injectables/PlatformService.html":{}},"body":{"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{}}}],["platformstate",{"_index":440,"title":{"interfaces/PlatformState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platformtype",{"_index":2077,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"miscellaneous/enumerations.html":{}}}],["play",{"_index":2458,"title":{},"body":{"components/SidebarComponent.html":{}}}],["please",{"_index":3673,"title":{},"body":{"license.html":{}}}],["plus",{"_index":3480,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":3645,"title":{},"body":{"license.html":{}}}],["portion",{"_index":3323,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":417,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":3289,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3247,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3623,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3637,"title":{},"body":{"license.html":{}}}],["power",{"_index":3214,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2941,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3023,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":2937,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3046,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":3020,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":3478,"title":{},"body":{"license.html":{}}}],["preference",{"_index":2407,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":3110,"title":{},"body":{"license.html":{}}}],["present",{"_index":3577,"title":{},"body":{"license.html":{}}}],["presents",{"_index":3105,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3401,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1841,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":3360,"title":{},"body":{"license.html":{}}}],["previous",{"_index":3004,"title":{},"body":{"license.html":{}}}],["price",{"_index":2959,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3552,"title":{},"body":{"license.html":{}}}],["primefileupload",{"_index":1929,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeflex",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":2757,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":901,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1622,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/badge",{"_index":1965,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/breadcrumb",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":36,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/calendar",{"_index":2221,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/confirmdialog",{"_index":1623,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/dialog",{"_index":1624,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/divider",{"_index":1966,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/dropdown",{"_index":1625,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/fileupload",{"_index":1967,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputmask",{"_index":1259,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputnumber",{"_index":1968,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputswitch",{"_index":801,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":902,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/panel",{"_index":1467,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["primeng/password",{"_index":1260,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/progressspinner",{"_index":1969,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/radiobutton",{"_index":799,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":37,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":800,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/table",{"_index":1626,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/toast",{"_index":903,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeone",{"_index":838,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":3445,"title":{},"body":{"license.html":{}}}],["private",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":3001,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":3354,"title":{},"body":{"license.html":{}}}],["processing",{"_index":1887,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":3539,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3137,"title":{},"body":{"license.html":{}}}],["product",{"_index":3277,"title":{},"body":{"license.html":{}}}],["products",{"_index":3018,"title":{},"body":{"license.html":{}}}],["profile",{"_index":331,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["profileiconurl",{"_index":2342,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":310,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["program",{"_index":2950,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3225,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3663,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3118,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2956,"title":{},"body":{"license.html":{}}}],["progressspinnermodule",{"_index":1924,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["prohibit",{"_index":3022,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3210,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3546,"title":{},"body":{"license.html":{}}}],["project",{"_index":102,"title":{"interfaces/Project.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["project.actions",{"_index":2140,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["project/project.effects",{"_index":457,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/project.reducer",{"_index":459,"title":{},"body":{"interfaces/AppState.html":{}}}],["project?.name",{"_index":2248,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.type",{"_index":2249,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.version",{"_index":2251,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project_release",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projectdetailscomponent",{"_index":101,"title":{"components/ProjectDetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectdto",{"_index":2114,"title":{"interfaces/ProjectDto.html":{}},"body":{"interfaces/ProjectDto.html":{},"injectables/ProjectService.html":{}}}],["projecteffects",{"_index":456,"title":{"injectables/ProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ProjectEffects.html":{}}}],["projectid",{"_index":2109,"title":{},"body":{"interfaces/Project.html":{},"interfaces/ProjectDto.html":{}}}],["projectreducer",{"_index":458,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["projects",{"_index":105,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects'},{'name",{"_index":104,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects.component.html",{"_index":2170,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.component.scss",{"_index":2171,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projectscomponent",{"_index":103,"title":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectservice",{"_index":2121,"title":{"injectables/ProjectService.html":{}},"body":{"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["projectstablecomponent",{"_index":107,"title":{"components/ProjectsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectstate",{"_index":441,"title":{"interfaces/ProjectState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["prominent",{"_index":3107,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3100,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":1864,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":3072,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3464,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3083,"title":{},"body":{"license.html":{}}}],["properties",{"_index":233,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":3044,"title":{},"body":{"license.html":{}}}],["protect",{"_index":2965,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3012,"title":{},"body":{"license.html":{}}}],["protection",{"_index":2992,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":3381,"title":{},"body":{"license.html":{}}}],["prove",{"_index":3601,"title":{},"body":{"license.html":{}}}],["provide",{"_index":255,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["provided",{"_index":1790,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":345,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["providers",{"_index":845,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["provides",{"_index":340,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provision",{"_index":3031,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3439,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3588,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3590,"title":{},"body":{"license.html":{}}}],["public",{"_index":684,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":3407,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3383,"title":{},"body":{"license.html":{}}}],["publish",{"_index":3229,"title":{},"body":{"license.html":{}}}],["published",{"_index":3585,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2893,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":3040,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3332,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3535,"title":{},"body":{"license.html":{}}}],["px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["python",{"_index":2787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qualify",{"_index":3455,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3599,"title":{},"body":{"license.html":{}}}],["queries",{"_index":2260,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries'},{'name",{"_index":109,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queries.component.html",{"_index":2261,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries.component.scss",{"_index":2262,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queriescomponent",{"_index":108,"title":{"components/QueriesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queryparams",{"_index":1881,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["question",{"_index":2501,"title":{},"body":{"components/SidebarComponent.html":{}}}],["radiobuttonmodule",{"_index":679,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":381,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/enumerations.html":{}}}],["reactiveformsmodule",{"_index":850,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["read",{"_index":2773,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":3273,"title":{},"body":{"license.html":{}}}],["readily",{"_index":3522,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3386,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1362,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":3029,"title":{},"body":{"license.html":{}}}],["reason",{"_index":3533,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3291,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":3453,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1750,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":2980,"title":{},"body":{"license.html":{}}}],["receives",{"_index":3468,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3541,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":3366,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3531,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2977,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3114,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":3640,"title":{},"body":{"license.html":{}}}],["referring",{"_index":2958,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3053,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":3569,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":1337,"title":{},"body":{"injectables/JwtService.html":{}}}],["refreshexpiresin",{"_index":2683,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken(refreshtoken",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":3392,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3248,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3157,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":1223,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":111,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["register(dto",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":2264,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2265,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":110,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["registerform",{"_index":1239,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":486,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["registernewuserfailure",{"_index":565,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registernewusersuccess",{"_index":487,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registerrequestdto",{"_index":589,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{}}}],["registrationerror",{"_index":619,"title":{},"body":{"interfaces/AuthState.html":{}}}],["registry",{"_index":2897,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":3438,"title":{},"body":{"license.html":{}}}],["reject",{"_index":1670,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["rejectbuttonstyleclass",{"_index":1665,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["rejecticon",{"_index":1668,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["related",{"_index":675,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":3183,"title":{},"body":{"license.html":{}}}],["released",{"_index":2953,"title":{},"body":{"license.html":{}}}],["releases",{"_index":2301,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases'},{'name",{"_index":113,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases.component.html",{"_index":2302,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases.component.scss",{"_index":2303,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releasescomponent",{"_index":112,"title":{"components/ReleasesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["relevant",{"_index":1744,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":3426,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2858,"title":{},"body":{"index.html":{}}}],["relying",{"_index":3521,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3310,"title":{},"body":{"license.html":{}}}],["remains",{"_index":2951,"title":{},"body":{"license.html":{}}}],["remote",{"_index":2824,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1518,"title":{},"body":{"injectables/MembersEffects.html":{},"license.html":{}}}],["remove",{"_index":3393,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":1365,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1372,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removemember",{"_index":1494,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["removemember(member",{"_index":1602,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["removemember(memberid",{"_index":1531,"title":{},"body":{"injectables/MembersService.html":{}}}],["removemember(team",{"_index":2644,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["removemembererror",{"_index":1541,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removememberfailure",{"_index":1524,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removememberstatus",{"_index":1542,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removemembersuccess",{"_index":1495,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removes",{"_index":756,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removing",{"_index":712,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":729,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":3616,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":2844,"title":{},"body":{"index.html":{}}}],["repair",{"_index":3606,"title":{},"body":{"license.html":{}}}],["replace('lara",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":816,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":754,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacing",{"_index":738,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replays",{"_index":2305,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays'},{'name",{"_index":115,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["replays.component.html",{"_index":2306,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays.component.scss",{"_index":2307,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replayscomponent",{"_index":114,"title":{"components/ReplaysComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["represent",{"_index":240,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":742,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["request",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.dto",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{}}}],["request.dto).pipe",{"_index":501,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.password",{"_index":506,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.ts",{"_index":669,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["request.dto.username",{"_index":504,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.password",{"_index":517,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.teamid",{"_index":2535,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["request.username",{"_index":516,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":3152,"title":{},"body":{"license.html":{}}}],["required",{"_index":3356,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":3242,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3314,"title":{},"body":{"license.html":{}}}],["requires",{"_index":2998,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":3067,"title":{},"body":{"license.html":{}}}],["reset",{"_index":117,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetinviteform",{"_index":1575,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["resetpassword",{"_index":488,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(dto",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":116,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetpassworderror",{"_index":620,"title":{},"body":{"interfaces/AuthState.html":{}}}],["resetpasswordfailure",{"_index":566,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetpasswordform",{"_index":2310,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":593,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["resetpasswordsuccess",{"_index":547,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetprojectsform",{"_index":2197,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["resets",{"_index":1126,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsource",{"_index":1735,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resetteamsform",{"_index":2634,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["resolved",{"_index":3339,"title":{},"body":{"license.html":{}}}],["resources",{"_index":2332,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":119,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resources.component.html",{"_index":2333,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":2334,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resourcescomponent",{"_index":118,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resourcetype",{"_index":1470,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["respect",{"_index":2974,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":2972,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":3469,"title":{},"body":{"license.html":{}}}],["restoreconfig",{"_index":425,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["restorescale",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["restoretheme",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["restrict",{"_index":3039,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3211,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3424,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3422,"title":{},"body":{"license.html":{}}}],["result",{"_index":957,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/PlatformEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["resulting",{"_index":3068,"title":{},"body":{"license.html":{}}}],["results",{"_index":146,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retains",{"_index":3370,"title":{},"body":{"license.html":{}}}],["return",{"_index":405,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["returning",{"_index":402,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":3626,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3575,"title":{},"body":{"license.html":{}}}],["right",{"_index":3364,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2966,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":237,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":814,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":23,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":3598,"title":{},"body":{"license.html":{}}}],["role",{"_index":1232,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["role.actions",{"_index":2354,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["role/role.effects",{"_index":461,"title":{},"body":{"interfaces/AppState.html":{}}}],["role/role.reducer",{"_index":463,"title":{},"body":{"interfaces/AppState.html":{}}}],["roleeffects",{"_index":460,"title":{"injectables/RoleEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/RoleEffects.html":{}}}],["roleid",{"_index":1300,"title":{},"body":{"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rolereducer",{"_index":462,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["roles",{"_index":1572,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["roleservice",{"_index":2345,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleEffects.html":{},"injectables/RoleService.html":{}}}],["rolestate",{"_index":442,"title":{"interfaces/RoleState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["rom",{"_index":3373,"title":{},"body":{"license.html":{}}}],["root",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["route",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":1729,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":870,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["routerlink",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routeurl",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":1787,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":3484,"title":{},"body":{"license.html":{}}}],["ruby",{"_index":2789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rules",{"_index":3380,"title":{},"body":{"license.html":{}}}],["run",{"_index":2851,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":2881,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":3135,"title":{},"body":{"license.html":{}}}],["rust",{"_index":2788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":300,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1852,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":3642,"title":{},"body":{"license.html":{}}}],["sake",{"_index":2997,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3494,"title":{},"body":{"license.html":{}}}],["same",{"_index":2978,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":3313,"title":{},"body":{"license.html":{}}}],["saveconfig",{"_index":432,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["saverefreshtoken",{"_index":1325,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":1332,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":1326,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1334,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":3307,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":2860,"title":{},"body":{"index.html":{}}}],["scale",{"_index":239,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":807,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":686,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scheme",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":3664,"title":{},"body":{"license.html":{}}}],["scope",{"_index":3545,"title":{},"body":{"license.html":{}}}],["screen",{"_index":121,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["screenloadscomponent",{"_index":120,"title":{"components/ScreenLoadsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["scripts",{"_index":3141,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":1225,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{}}}],["sdks",{"_index":2372,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks'},{'name",{"_index":124,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sdks.component.html",{"_index":2373,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks.component.scss",{"_index":2374,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdkscomponent",{"_index":123,"title":{"components/SdksComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["secondarily",{"_index":3075,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2311,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":3188,"title":{},"body":{"license.html":{}}}],["sections",{"_index":3270,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1263,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":2376,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security'},{'name",{"_index":126,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["security.component.html",{"_index":2377,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security.component.scss",{"_index":2378,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securitycomponent",{"_index":125,"title":{"components/SecurityComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["see",{"_index":2906,"title":{},"body":{"index.html":{},"license.html":{}}}],["segment.path",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":1050,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectacceptinvitationerror",{"_index":1269,"title":{},"body":{"components/InvitationComponent.html":{}}}],["select(selectactivemembers",{"_index":1450,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectallprojects",{"_index":2181,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["select(selectauthorizationerror",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcreatenewteamstatus",{"_index":2662,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["select(selectcreateprojectstatus",{"_index":2235,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["select(selectcurrentorganization",{"_index":930,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectcurrentuser",{"_index":1042,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectdeleteteamstatus",{"_index":2667,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":1044,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectinvitationsendstatus",{"_index":1641,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectinvitedmembers",{"_index":1461,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectmyteams",{"_index":2617,"title":{},"body":{"components/TeamsComponent.html":{}}}],["select(selectorganizationerror",{"_index":937,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["select(selectorganizationteams",{"_index":2619,"title":{},"body":{"components/TeamsComponent.html":{}}}],["select(selectownerasarray",{"_index":1465,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectregistrationerror",{"_index":2280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectremovememberstatus",{"_index":1671,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectresetpassworderror",{"_index":2318,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["select(selectupdateorganizationpicturestatus",{"_index":1986,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selectacceptinvitationerror",{"_index":1262,"title":{},"body":{"components/InvitationComponent.html":{}}}],["selectactivemembers",{"_index":1476,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectallprojects",{"_index":2184,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["selectauthorizationerror",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["selectcreatenewteamstatus",{"_index":2655,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["selectcreateprojectstatus",{"_index":2229,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectcurrentorganization",{"_index":914,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["selectcurrentuser",{"_index":1033,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["selectdeleteteamstatus",{"_index":2656,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["selected",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["selectedlanguage",{"_index":2690,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":2722,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectforgotpassworderror",{"_index":1034,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["selecthaspermission",{"_index":1473,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.organization",{"_index":1952,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selecthaspermission(resourcetype.project",{"_index":2176,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["selecthaspermission(resourcetype.team",{"_index":2609,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.user",{"_index":1454,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectinvitationsendstatus",{"_index":1631,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectinvitedmembers",{"_index":1477,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectmyteams",{"_index":2623,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["selectorganizationerror",{"_index":915,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["selectorganizationteams",{"_index":2624,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selectownerasarray",{"_index":1478,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectplatforms",{"_index":2226,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectregistrationerror",{"_index":2278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selectremovememberstatus",{"_index":1632,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectresetpassworderror",{"_index":2317,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectroles",{"_index":1635,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectupdateorganizationpicturestatus",{"_index":1973,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["sell",{"_index":3510,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3493,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":3055,"title":{},"body":{"license.html":{}}}],["send",{"_index":1314,"title":{},"body":{"injectables/InvitationService.html":{}}}],["sendinvite",{"_index":1576,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["sends",{"_index":1739,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":3322,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3255,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1805,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":3252,"title":{},"body":{"license.html":{}}}],["serve",{"_index":2853,"title":{},"body":{"index.html":{}}}],["served",{"_index":2911,"title":{},"body":{"index.html":{}}}],["server",{"_index":1716,"title":{},"body":{"injectables/MemoryStorage.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["serves",{"_index":3128,"title":{},"body":{"license.html":{}}}],["service",{"_index":699,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":1749,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":558,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/api/invitation.api.service",{"_index":568,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["services/api/members.api.service",{"_index":1526,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["services/api/organization.api.service",{"_index":2029,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["services/api/platform.api.service",{"_index":2093,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["services/api/project.api.service",{"_index":2135,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["services/api/role.api.service",{"_index":2352,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["services/api/team.api.service",{"_index":2549,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["services/token",{"_index":559,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":3605,"title":{},"body":{"license.html":{}}}],["sessions",{"_index":2383,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions'},{'name",{"_index":128,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessions.component.html",{"_index":2384,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.component.scss",{"_index":2385,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessionscomponent",{"_index":127,"title":{"components/SessionsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessionstorage",{"_index":2379,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{}}}],["set",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["setcurrentuser",{"_index":631,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setinputstyle(_val",{"_index":793,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1366,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1374,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":789,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":797,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":398,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":785,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":677,"title":{},"body":{"components/ConfigComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":106,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settings.component.html",{"_index":2387,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":2388,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":129,"title":{"components/SettingsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settoken",{"_index":632,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setupsidenavitems",{"_index":2394,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":2414,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":780,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":232,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":945,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["shall",{"_index":3194,"title":{},"body":{"license.html":{}}}],["shape",{"_index":305,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":2945,"title":{},"body":{"license.html":{}}}],["shared",{"_index":3147,"title":{},"body":{"license.html":{}}}],["shared/components/access",{"_index":1480,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["shared/components/members",{"_index":1482,"title":{},"body":{"components/MembersComponent.html":{}}}],["shared/components/projects",{"_index":2186,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["shared/components/teams",{"_index":2621,"title":{},"body":{"components/TeamsComponent.html":{}}}],["shield",{"_index":2474,"title":{},"body":{"components/SidebarComponent.html":{}}}],["short",{"_index":3653,"title":{},"body":{"license.html":{}}}],["show",{"_index":2981,"title":{},"body":{"license.html":{}}}],["showadddialog",{"_index":2198,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["showconfigsidebar",{"_index":334,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showdeleteconfirmation",{"_index":2635,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["showdeleteconfirmation(team",{"_index":2648,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["showinvitedialog",{"_index":1577,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shown",{"_index":328,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showprofilesidebar",{"_index":329,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showremovememberconfirmation",{"_index":1578,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["showremovememberconfirmation(member",{"_index":1607,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shows",{"_index":750,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":2413,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":332,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":131,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebar.component.html",{"_index":2391,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2390,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":130,"title":{"components/SidebarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebarmodule",{"_index":678,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":317,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.devices",{"_index":2438,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":2424,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help",{"_index":2493,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_documentation",{"_index":2494,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_guides",{"_index":2500,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_sdks",{"_index":2497,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_support",{"_index":2503,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":2425,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.issues",{"_index":2432,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.logs",{"_index":2429,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.messages",{"_index":2435,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.performance",{"_index":2443,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.projects",{"_index":2427,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.queries",{"_index":2446,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.releases",{"_index":2460,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.replays",{"_index":2457,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.resources",{"_index":2455,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.screen_loads",{"_index":2452,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sessions",{"_index":2440,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings",{"_index":2466,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account",{"_index":2468,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_close",{"_index":2477,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_details",{"_index":2470,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_notifications",{"_index":2475,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_security",{"_index":2472,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_alerts",{"_index":2490,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_members",{"_index":2488,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_organization",{"_index":2480,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_projects",{"_index":2483,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_teams",{"_index":2485,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.stats",{"_index":2463,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.vitals",{"_index":2449,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":3665,"title":{},"body":{"license.html":{}}}],["significant",{"_index":3352,"title":{},"body":{"license.html":{}}}],["signout",{"_index":489,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{}}}],["similar",{"_index":3209,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":3565,"title":{},"body":{"license.html":{}}}],["single",{"_index":3537,"title":{},"body":{"license.html":{}}}],["sitemap",{"_index":2486,"title":{},"body":{"components/SidebarComponent.html":{}}}],["size",{"_index":290,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sizes",{"_index":777,"title":{},"body":{"components/ConfigComponent.html":{}}}],["slug",{"_index":877,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["slug.tolowercase().replaceall",{"_index":958,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["slug/taken?slug",{"_index":2051,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["slugchecksubscription",{"_index":859,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["sluginput",{"_index":860,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["snippet",{"_index":1745,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":2925,"title":{},"body":{"license.html":{}}}],["sold",{"_index":3333,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3174,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3185,"title":{},"body":{"license.html":{}}}],["solution",{"_index":2827,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":3287,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2957,"title":{},"body":{"license.html":{}}}],["special",{"_index":3042,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3133,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":3151,"title":{},"body":{"license.html":{}}}],["specified",{"_index":734,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":3582,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3586,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":3576,"title":{},"body":{"license.html":{}}}],["spring",{"_index":2781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.selectors.ts",{"_index":2808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date.interceptor.ts",{"_index":2806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.enum.ts",{"_index":2766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../platform",{"_index":2767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resource",{"_index":2769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":2770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/domain/dto/file.dto.ts",{"_index":990,"title":{},"body":{"interfaces/FileDto.html":{}}}],["src/app/core/domain/dto/invitation.dto.ts",{"_index":1296,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["src/app/core/domain/dto/members.dto.ts",{"_index":1488,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["src/app/core/domain/dto/organization.dto.ts",{"_index":2009,"title":{},"body":{"interfaces/OrganizationDto.html":{}}}],["src/app/core/domain/dto/platform.dto.ts",{"_index":2080,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["src/app/core/domain/dto/project.dto.ts",{"_index":2115,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":668,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{}}}],["src/app/core/domain/dto/requests/create",{"_index":972,"title":{},"body":{"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":1072,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/requests/invitation",{"_index":1299,"title":{},"body":{"interfaces/InvitationRequestDto.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":2299,"title":{},"body":{"interfaces/RegisterRequestDto.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":2330,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/team.dto.ts",{"_index":2517,"title":{},"body":{"interfaces/TeamDto.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":2684,"title":{},"body":{"interfaces/TokenDto.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":2724,"title":{},"body":{"interfaces/UserDto.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":2772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/platform",{"_index":2775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":2794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/invitation.entity.ts",{"_index":1230,"title":{},"body":{"interfaces/Invitation.html":{}}}],["src/app/core/domain/models/menu",{"_index":1726,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["src/app/core/domain/models/organization.entity.ts",{"_index":1914,"title":{},"body":{"interfaces/Organization.html":{}}}],["src/app/core/domain/models/platform.entity.ts",{"_index":2074,"title":{},"body":{"interfaces/Platform.html":{}}}],["src/app/core/domain/models/project.entity.ts",{"_index":2108,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/core/domain/models/team.entity.ts",{"_index":2514,"title":{},"body":{"interfaces/Team.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":2680,"title":{},"body":{"interfaces/Token.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":2335,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["src/app/core/interceptors/date.interceptor.ts",{"_index":2812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts",{"_index":1301,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:12",{"_index":1304,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:15",{"_index":1310,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:23",{"_index":1308,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:30",{"_index":1306,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/members.api.service.ts",{"_index":1527,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:10",{"_index":1529,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:13",{"_index":1530,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:17",{"_index":1532,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/organization.api.service.ts",{"_index":2036,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:12",{"_index":2038,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:15",{"_index":2040,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:25",{"_index":2041,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:29",{"_index":2042,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:36",{"_index":2044,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/platform.api.service.ts",{"_index":2096,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:10",{"_index":2098,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:13",{"_index":2099,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/project.api.service.ts",{"_index":2141,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:11",{"_index":2144,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:14",{"_index":2147,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:18",{"_index":2146,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:22",{"_index":2149,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/role.api.service.ts",{"_index":2355,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:10",{"_index":2357,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:13",{"_index":2358,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/team.api.service.ts",{"_index":2559,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:11",{"_index":2563,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:14",{"_index":2569,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:18",{"_index":2568,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:22",{"_index":2570,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:29",{"_index":2565,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:33",{"_index":2567,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":225,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["src/app/core/services/layout.service.ts:100",{"_index":1355,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:115",{"_index":1360,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:130",{"_index":1356,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:139",{"_index":1358,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:145",{"_index":1357,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:151",{"_index":1359,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:156",{"_index":1350,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:180",{"_index":1354,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:190",{"_index":1353,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:199",{"_index":1348,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:211",{"_index":1346,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:220",{"_index":1347,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:227",{"_index":1349,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:232",{"_index":1351,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:240",{"_index":1352,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:92",{"_index":1345,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1361,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["src/app/core/services/memory",{"_index":1706,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":1730,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":1748,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":1754,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":1753,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":1756,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":1738,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":1746,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":2380,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["src/app/core/services/token",{"_index":1320,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/state/app.state.ts",{"_index":436,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":479,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:111",{"_index":554,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:122",{"_index":542,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:139",{"_index":544,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:146",{"_index":510,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:163",{"_index":513,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":495,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:38",{"_index":538,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:50",{"_index":524,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:71",{"_index":535,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:85",{"_index":549,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:99",{"_index":530,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":614,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/state/members/members.effects.ts",{"_index":1493,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:19",{"_index":1498,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:26",{"_index":1510,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:38",{"_index":1504,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:50",{"_index":1514,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:62",{"_index":1519,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.reducer.ts",{"_index":1537,"title":{},"body":{"interfaces/MembersState.html":{}}}],["src/app/core/state/organization/organization.effects.ts",{"_index":2010,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:14",{"_index":2022,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:26",{"_index":2018,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:38",{"_index":2028,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:8",{"_index":2012,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.reducer.ts",{"_index":2056,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["src/app/core/state/platform/platform.effects.ts",{"_index":2082,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:12",{"_index":2086,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:18",{"_index":2092,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.reducer.ts",{"_index":2102,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["src/app/core/state/project/project.effects.ts",{"_index":2117,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:14",{"_index":2134,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:26",{"_index":2128,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:8",{"_index":2122,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.reducer.ts",{"_index":2155,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["src/app/core/state/role/role.effects.ts",{"_index":2343,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:14",{"_index":2351,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:8",{"_index":2346,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.reducer.ts",{"_index":2360,"title":{},"body":{"interfaces/RoleState.html":{}}}],["src/app/core/state/team/team.effects.ts",{"_index":2518,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:14",{"_index":2548,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:26",{"_index":2543,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:38",{"_index":2531,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:50",{"_index":2537,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:8",{"_index":2525,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.reducer.ts",{"_index":2576,"title":{},"body":{"interfaces/TeamState.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1002,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":1234,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:147",{"_index":1243,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:158",{"_index":1244,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:164",{"_index":1246,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:177",{"_index":1242,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:60",{"_index":1257,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:62",{"_index":1241,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:74",{"_index":1248,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:75",{"_index":1249,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:77",{"_index":1255,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:95",{"_index":1258,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:96",{"_index":1247,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:97",{"_index":1256,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:99",{"_index":1245,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":2263,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":2270,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":2268,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":2269,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":2271,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":2267,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":2266,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":2273,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":2274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":2275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":2277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":2272,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":2276,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":2308,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/features/create",{"_index":841,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["src/app/features/devices/devices.component.ts",{"_index":981,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/help/documentation/documentation.component.ts",{"_index":985,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/features/help/guides/guides.component.ts",{"_index":1074,"title":{},"body":{"components/GuidesComponent.html":{}}}],["src/app/features/help/sdks/sdks.component.ts",{"_index":2371,"title":{},"body":{"components/SdksComponent.html":{}}}],["src/app/features/help/support/support.component.ts",{"_index":2510,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":673,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:101",{"_index":798,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:109",{"_index":749,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:121",{"_index":736,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:143",{"_index":753,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:163",{"_index":743,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:171",{"_index":746,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:179",{"_index":732,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":720,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":696,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":768,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":769,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":779,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":781,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":784,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":786,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:79",{"_index":788,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:83",{"_index":790,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:88",{"_index":792,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:92",{"_index":794,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:97",{"_index":796,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":997,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":1761,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":1840,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":1778,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":1839,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":1844,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":1833,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":1834,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":1817,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":1846,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":1815,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":1829,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":1799,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":1791,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":1810,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":1803,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":1835,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":1843,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":2389,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":2395,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":2417,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":2416,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":2411,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":2415,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":2685,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:35",{"_index":2711,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:36",{"_index":2715,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:37",{"_index":2696,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:40",{"_index":2708,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":2702,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:50",{"_index":2707,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:52",{"_index":2713,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:54",{"_index":2712,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:55",{"_index":2716,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:57",{"_index":2701,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:62",{"_index":2700,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:67",{"_index":2698,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:71",{"_index":2699,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:120",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:123",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:130",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:131",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:133",{"_index":1134,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:140",{"_index":1132,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:156",{"_index":1133,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":1111,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:219",{"_index":1124,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:233",{"_index":1128,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:244",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:255",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:269",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:49",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:50",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/issues/issues.component.ts",{"_index":1316,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/features/logs/logs.component.ts",{"_index":1433,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/features/messages/messages.component.ts",{"_index":1899,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/features/peformance/queries/queries.component.ts",{"_index":2259,"title":{},"body":{"components/QueriesComponent.html":{}}}],["src/app/features/peformance/resources/resources.component.ts",{"_index":2331,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/features/peformance/screen",{"_index":2365,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["src/app/features/peformance/vitals/vitals.component.ts",{"_index":2727,"title":{},"body":{"components/VitalsComponent.html":{}}}],["src/app/features/project",{"_index":2111,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["src/app/features/projects/projects.component.ts",{"_index":2169,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/releases/releases.component.ts",{"_index":2300,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["src/app/features/replays/replays.component.ts",{"_index":2304,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts",{"_index":2382,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/settings/account/close/close.component.ts",{"_index":670,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/features/settings/account/details/details.component.ts",{"_index":977,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/settings/account/notifications/notifications.component.ts",{"_index":1911,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/features/settings/account/security/security.component.ts",{"_index":2375,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/features/settings/alerts/alerts.component.ts",{"_index":148,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/features/settings/members/members.component.ts",{"_index":1437,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:38",{"_index":1448,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:41",{"_index":1460,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:44",{"_index":1458,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:47",{"_index":1456,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:50",{"_index":1464,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:51",{"_index":1452,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:54",{"_index":1462,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:57",{"_index":1466,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:61",{"_index":1449,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts",{"_index":1919,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:110",{"_index":1940,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:114",{"_index":1936,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:118",{"_index":1942,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:123",{"_index":1938,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:135",{"_index":1941,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:148",{"_index":1947,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:183",{"_index":1944,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:187",{"_index":1935,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:75",{"_index":1964,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:76",{"_index":1934,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:85",{"_index":1960,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:86",{"_index":1955,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:89",{"_index":1953,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:92",{"_index":1956,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:93",{"_index":1949,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:94",{"_index":1951,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:95",{"_index":1958,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:97",{"_index":1963,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:99",{"_index":1939,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/projects/projects.component.ts",{"_index":2172,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:32",{"_index":2174,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:35",{"_index":2178,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:38",{"_index":2177,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:42",{"_index":2180,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:43",{"_index":2182,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:47",{"_index":2175,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2386,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts",{"_index":2602,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:37",{"_index":2607,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:40",{"_index":2612,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:43",{"_index":2611,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:46",{"_index":2610,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:50",{"_index":2616,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:51",{"_index":2614,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:52",{"_index":2620,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:55",{"_index":2618,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:59",{"_index":2608,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/stats/stats.component.ts",{"_index":2506,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/shared/components/access",{"_index":9,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["src/app/shared/components/members",{"_index":1556,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["src/app/shared/components/not",{"_index":1903,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/shared/components/projects",{"_index":2189,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["src/app/shared/components/teams",{"_index":2629,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["ssr",{"_index":2843,"title":{},"body":{"index.html":{}}}],["stand",{"_index":3028,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{}}}],["standard",{"_index":2913,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":3115,"title":{},"body":{"license.html":{}}}],["start",{"_index":3643,"title":{},"body":{"license.html":{}}}],["started",{"_index":2822,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":3654,"title":{},"body":{"license.html":{}}}],["state",{"_index":306,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["state.allprojects",{"_index":2167,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["state.members?.invitations",{"_index":1550,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.owner",{"_index":1549,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.users",{"_index":1551,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.organization",{"_index":2069,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["state.organizationteams",{"_index":2595,"title":{},"body":{"interfaces/TeamState.html":{}}}],["state.organizationteams?.filter((team",{"_index":2599,"title":{},"body":{"interfaces/TeamState.html":{}}}],["stated",{"_index":3162,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3428,"title":{},"body":{"license.html":{}}}],["states",{"_index":1127,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":624,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":647,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["statestatus.loading",{"_index":638,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.pending",{"_index":634,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.success",{"_index":644,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["static",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":308,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":312,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":3231,"title":{},"body":{"license.html":{}}}],["stats",{"_index":2507,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":133,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["stats.component.html",{"_index":2508,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":2509,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":132,"title":{"components/StatsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["status",{"_index":621,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["status.enum",{"_index":628,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["status.enum.ts",{"_index":2771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":2985,"title":{},"body":{"license.html":{}}}],["stopwatch",{"_index":2453,"title":{},"body":{"components/SidebarComponent.html":{}}}],["storage",{"_index":349,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":303,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":1321,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:10",{"_index":1328,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":1707,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":1329,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":1708,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":1335,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1377,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":1331,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":1709,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":1333,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":1710,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1371,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":1330,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1373,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1375,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":1712,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":1713,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1368,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":868,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["stored",{"_index":2865,"title":{},"body":{"index.html":{}}}],["str",{"_index":1611,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["str.split('').foreach((char",{"_index":1683,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["stream",{"_index":995,"title":{},"body":{"interfaces/FileDto.html":{}}}],["string",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/SessionStorage.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["string(this.index",{"_index":1876,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":2404,"title":{},"body":{"components/SidebarComponent.html":{}}}],["stringtocolour",{"_index":1579,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["stringtocolour(str",{"_index":1609,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["stringval",{"_index":1597,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["style",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["styleurls",{"_index":1764,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":1801,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":3474,"title":{},"body":{"license.html":{}}}],["subject",{"_index":299,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":3506,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3187,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":1774,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":3150,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":3668,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":364,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((data",{"_index":923,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["subscribe((error",{"_index":938,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":1051,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((organization",{"_index":931,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["subscribe((status",{"_index":1645,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["subscribe((user",{"_index":1043,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":1779,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":1732,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":887,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["subscriptions",{"_index":1831,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":3297,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3348,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3026,"title":{},"body":{"license.html":{}}}],["success",{"_index":642,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":1517,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["successsubscription",{"_index":1008,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":234,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":3519,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3357,"title":{},"body":{"license.html":{}}}],["summary",{"_index":946,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["supplement",{"_index":3387,"title":{},"body":{"license.html":{}}}],["support",{"_index":2511,"title":{},"body":{"components/SupportComponent.html":{},"license.html":{}}}],["support'},{'name",{"_index":135,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["support.component.html",{"_index":2512,"title":{},"body":{"components/SupportComponent.html":{}}}],["support.component.scss",{"_index":2513,"title":{},"body":{"components/SupportComponent.html":{}}}],["supportcomponent",{"_index":134,"title":{"components/SupportComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["supports",{"_index":3304,"title":{},"body":{"license.html":{}}}],["sure",{"_index":2902,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":2970,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3427,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3619,"title":{},"body":{"license.html":{}}}],["svelte",{"_index":2780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":526,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["switchmap((request",{"_index":499,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["symbol",{"_index":1792,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":709,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":3013,"title":{},"body":{"license.html":{}}}],["t",{"_index":2873,"title":{},"body":{"index.html":{}}}],["table",{"_index":1559,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table'},{'name",{"_index":91,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["table.actions",{"_index":1694,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.added_on",{"_index":2674,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.avatar",{"_index":1693,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component",{"_index":1484,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["table.component.html",{"_index":1565,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.scss",{"_index":1566,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts",{"_index":1557,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:100",{"_index":1615,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:102",{"_index":1619,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:103",{"_index":1617,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:105",{"_index":1598,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:107",{"_index":2212,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:108",{"_index":2638,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:109",{"_index":1606,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:110",{"_index":2651,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:111",{"_index":2214,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:112",{"_index":2217,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:113",{"_index":2216,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:114",{"_index":2220,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:115",{"_index":1605,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:116",{"_index":2218,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:118",{"_index":2207,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:120",{"_index":2642,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:129",{"_index":2208,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:131",{"_index":2643,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:133",{"_index":2203,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:135",{"_index":2639,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:137",{"_index":2210,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:139",{"_index":2647,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:143",{"_index":2206,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:145",{"_index":2649,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:151",{"_index":1604,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:159",{"_index":1608,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:165",{"_index":2641,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:182",{"_index":1603,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:183",{"_index":2211,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:188",{"_index":2209,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:195",{"_index":2205,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:200",{"_index":2650,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:206",{"_index":2645,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:222",{"_index":1600,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:230",{"_index":1610,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:237",{"_index":2646,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:243",{"_index":2640,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:61",{"_index":1587,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:70",{"_index":1613,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:72",{"_index":1588,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:73",{"_index":2637,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:74",{"_index":2200,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:75",{"_index":1595,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:78",{"_index":1589,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:81",{"_index":1594,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:83",{"_index":2213,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:84",{"_index":1590,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:85",{"_index":2201,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:87",{"_index":1592,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:90",{"_index":1591,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:93",{"_index":1593,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:95",{"_index":1621,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:96",{"_index":1614,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:99",{"_index":2202,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.delete_confirmation",{"_index":1661,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.delete_confirmation_message",{"_index":1659,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.email",{"_index":1691,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_is_required",{"_index":1702,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_label",{"_index":1701,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.error",{"_index":1647,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.failed_to_create_project",{"_index":2237,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.failed_to_create_team",{"_index":2663,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.failed_to_delete_team",{"_index":2668,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.failed_to_remove_member",{"_index":1672,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.failed_to_send_invite",{"_index":1648,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.first_name",{"_index":1689,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invalid_email",{"_index":1703,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invite_sent",{"_index":1650,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.last_name",{"_index":1690,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.name",{"_index":2246,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_is_required",{"_index":2254,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_label",{"_index":2253,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_members_found",{"_index":1700,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.no_projects_found",{"_index":2252,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_teams_found",{"_index":2677,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.platform",{"_index":2247,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_is_required",{"_index":2258,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_label",{"_index":2255,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.project_created",{"_index":2238,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.removed_memeber",{"_index":1673,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.removed_team",{"_index":2669,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.role",{"_index":1692,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_is_required",{"_index":1705,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_label",{"_index":1704,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.slug",{"_index":2673,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.slug_is_required",{"_index":2679,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.slug_label",{"_index":2678,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.success",{"_index":1649,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.team_created",{"_index":2664,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table/members",{"_index":1483,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["table/projects",{"_index":2187,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["table/teams",{"_index":2622,"title":{},"body":{"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["tablemodule",{"_index":1560,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["tablet",{"_index":414,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tailwind",{"_index":836,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1627,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["take(1",{"_index":1642,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["takes",{"_index":697,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":3327,"title":{},"body":{"license.html":{}}}],["tap",{"_index":551,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1656,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/TeamsTableComponent.html":{}}}],["team",{"_index":976,"title":{"interfaces/Team.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"interfaces/ProjectState.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["team.actions",{"_index":2558,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["team.teamid",{"_index":2600,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["team/team.effects",{"_index":465,"title":{},"body":{"interfaces/AppState.html":{}}}],["team/team.reducer",{"_index":467,"title":{},"body":{"interfaces/AppState.html":{}}}],["team?.createdat",{"_index":2676,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["team?.slug",{"_index":2675,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["teamdto",{"_index":2516,"title":{"interfaces/TeamDto.html":{}},"body":{"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["teameffects",{"_index":464,"title":{"injectables/TeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TeamEffects.html":{}}}],["teamid",{"_index":2515,"title":{},"body":{"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["teamreducer",{"_index":466,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["teams",{"_index":139,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams'},{'name",{"_index":137,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams.component.html",{"_index":2603,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.scss",{"_index":2604,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teamscomponent",{"_index":136,"title":{"components/TeamsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamservice",{"_index":2524,"title":{"injectables/TeamService.html":{}},"body":{"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["teamstablecomponent",{"_index":138,"title":{"components/TeamsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamstate",{"_index":443,"title":{"interfaces/TeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["technological",{"_index":3197,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":2849,"title":{},"body":{"index.html":{}}}],["tells",{"_index":3103,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1718,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["term",{"_index":3160,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":3652,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":3432,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3454,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3441,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3429,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2982,"title":{},"body":{"license.html":{}}}],["test",{"_index":2884,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2891,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2883,"title":{},"body":{"index.html":{}}}],["text",{"_index":1117,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["theme",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["therefore",{"_index":2971,"title":{},"body":{"license.html":{}}}],["things",{"_index":2964,"title":{},"body":{"license.html":{}}}],["third",{"_index":3224,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":497,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["this.active",{"_index":1866,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":823,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":515,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":532,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":527,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":540,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":546,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.blockbodyscroll",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.changeslugandcheckvalidity(data",{"_index":926,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkname(data",{"_index":2230,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.checkslug(data",{"_index":924,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.checkslug(slug",{"_index":961,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkusername(data",{"_index":1039,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config",{"_index":429,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.config.menumode",{"_index":406,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":387,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":424,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.confirmationservice.confirm",{"_index":1655,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.createbreadcrumbs(child",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createnewprojectform",{"_index":2242,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('name')?.value",{"_index":2239,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('platform')?.value?.platformid",{"_index":2240,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewteamform",{"_index":2671,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.createnewteamform.get('slug')?.value",{"_index":2665,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.createorganizationform.get('name')?.value",{"_index":954,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.setvalue(slug",{"_index":960,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.value",{"_index":955,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1720,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":1721,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.document",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.dt?.filterglobal(($event.target",{"_index":1637,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.errorsubscription",{"_index":936,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":935,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":1061,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":884,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.hidemenu",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.delete(api.membersurl",{"_index":1536,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.delete(api.teamurl",{"_index":2575,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.get",{"_index":1315,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["this.http.get(api.authurl",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(api.membersurl",{"_index":1535,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.get(api.organizationurl",{"_index":2050,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(api.platformurl",{"_index":2101,"title":{},"body":{"injectables/PlatformService.html":{}}}],["this.http.get(api.projecturl",{"_index":2151,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.get(api.roleurl",{"_index":2359,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.get(api.teamurl",{"_index":2572,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.patch",{"_index":2054,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.post",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{}}}],["this.http.post(api.projecturl",{"_index":2152,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.post(api.teamurl",{"_index":2574,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.index",{"_index":1875,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.invitationhash",{"_index":1279,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.acceptinvitation(request.invitationhash",{"_index":500,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.invitationservice.getinvitationdetails(this.invitationhash",{"_index":1266,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.invitemember(request).pipe",{"_index":1500,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.invitenewuserform",{"_index":1654,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('email')?.value",{"_index":1651,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('role')?.value?.roleid",{"_index":1652,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isaddnewprojectdialogvisible",{"_index":2234,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isaddnewteamdialogvisible",{"_index":2659,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.isdesktop",{"_index":393,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isinvitedialogvisible",{"_index":1640,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isnametaken",{"_index":2245,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isoverlay",{"_index":390,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isslugtaken",{"_index":965,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.isusernametaken",{"_index":1063,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":1892,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":1890,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":1888,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":1893,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":1872,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":552,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":521,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":520,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":1868,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":2718,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":817,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":811,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":809,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":813,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":818,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.restoreconfig",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.layoutservice.saveconfig",{"_index":808,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":815,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":805,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":1227,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.localstorage.getitem(\"ui_config",{"_index":427,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.localstorage.setitem(\"ui_config",{"_index":433,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.loginform.get('password')?.value",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.membersservice.getmembers().pipe",{"_index":1506,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.removemember(request.memberid).pipe",{"_index":1512,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.menuoutsideclicklistener",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":1870,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":1897,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":1863,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":1885,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":1871,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":1752,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":1759,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":1862,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":1896,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":944,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.model",{"_index":2421,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":2423,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.namechecksubscription",{"_index":2243,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.namechecksubscription?.unsubscribe",{"_index":2231,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.onconfigupdate",{"_index":431,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.organizationerrorsubscription",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationerrorsubscription?.unsubscribe",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationservice",{"_index":963,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.organizationservice.createorganization(request).pipe",{"_index":2014,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.getorganization().pipe",{"_index":2020,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.updateorganizationpicture(request.file).pipe",{"_index":2024,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationsubscription",{"_index":928,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationsubscription?.unsubscribe",{"_index":953,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":388,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":392,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":1874,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.platformservice.getplatforms().pipe",{"_index":2088,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["this.primefileupload.clear",{"_index":1990,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.progress",{"_index":1984,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.uploading",{"_index":1983,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.projectservice",{"_index":2244,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.projectservice.createproject(request).pipe",{"_index":2124,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getallprojects().pipe",{"_index":2130,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.registerform.get('email')?.setvalue(details.email",{"_index":1267,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1276,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1277,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1278,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1275,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1274,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.removemember(member",{"_index":1669,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.removemember(team",{"_index":2661,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.renderer.listen",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.resetinviteform",{"_index":1638,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":2325,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetprojectsform",{"_index":2232,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.resetsource.asobservable",{"_index":1755,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":1760,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetteamsform",{"_index":2658,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.restorescale",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["this.restoretheme",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.roleservice.getroles().pipe",{"_index":2348,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["this.root",{"_index":1894,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":1878,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1268,"title":{},"body":{"components/InvitationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":2279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":934,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/settings/account",{"_index":2720,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.saveconfig",{"_index":423,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.scale",{"_index":822,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.secret",{"_index":2323,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedlanguage",{"_index":2717,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":2422,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.slugchecksubscription",{"_index":962,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.slugchecksubscription?.unsubscribe",{"_index":952,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":399,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":391,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":397,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":394,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":395,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1385,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1388,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1389,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":1343,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":1341,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1390,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1387,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1391,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":1339,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":1338,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1392,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":1342,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":1340,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":929,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.store.dispatch",{"_index":1060,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(createorganization(dto",{"_index":956,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.dispatch(createproject(dto",{"_index":2241,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(createteam(dto",{"_index":2666,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.dispatch(deleteteam",{"_index":2670,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.dispatch(invitemember(dto",{"_index":1653,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadallprojects",{"_index":2188,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["this.store.dispatch(loadcurrentorganization",{"_index":927,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":1040,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadmyteams",{"_index":2628,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadorganizationmembers",{"_index":1485,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.dispatch(loadorganizationteams",{"_index":2627,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadplatforms",{"_index":2233,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(loadroles",{"_index":1639,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":2283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(removemember",{"_index":1676,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(signout",{"_index":2719,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.dispatch(updateorganizationpicture",{"_index":1985,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select",{"_index":1453,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingallprojects",{"_index":2179,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["this.store.select(isloadingauthstate",{"_index":1024,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingcreatenewteam",{"_index":2652,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.select(isloadingcreateproject",{"_index":2215,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(isloadingdeleteteam",{"_index":2653,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.select(isloadingmembers",{"_index":1463,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.select(isloadingmyteams",{"_index":2613,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.select(isloadingorganization",{"_index":889,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.select(isloadingorganizationteams",{"_index":2615,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.select(isloadingremovemembers",{"_index":1616,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsendinvitation",{"_index":1618,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isupdateorganizationpictureloading",{"_index":1957,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select(selectcurrentorganization",{"_index":1959,"title":{},"body":{"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectplatforms",{"_index":2219,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(selectroles",{"_index":1620,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.successsubscription",{"_index":1049,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":1055,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.teamservice.createnewteam(request).pipe",{"_index":2527,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(request.teamid).pipe",{"_index":2533,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getmyteams().pipe",{"_index":2539,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getorganizationteams().pipe",{"_index":2545,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.isslugtaken(slug).subscribe",{"_index":2672,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.toslugvalue(organizationname",{"_index":959,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant",{"_index":950,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":2319,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('create",{"_index":947,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant('members",{"_index":1646,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.translateservice.instant('organization.error",{"_index":1988,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.translateservice.instant('projects",{"_index":2236,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.translateservice.instant('teams",{"_index":2660,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":2721,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":1873,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":1062,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":1056,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":1041,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":1054,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":3024,"title":{},"body":{"license.html":{}}}],["though",{"_index":3390,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":3035,"title":{},"body":{"license.html":{}}}],["three",{"_index":3285,"title":{},"body":{"license.html":{}}}],["through",{"_index":343,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["throw",{"_index":1974,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["thus",{"_index":3179,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":2504,"title":{},"body":{"components/SidebarComponent.html":{}}}],["time",{"_index":3451,"title":{},"body":{"license.html":{}}}],["titlecase",{"_index":2250,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["toastmodule",{"_index":848,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["todo",{"_index":347,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{}}}],["toggle",{"_index":314,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":389,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":1820,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":622,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{}}}],["token_key",{"_index":1336,"title":{},"body":{"injectables/JwtService.html":{}}}],["tokendto",{"_index":598,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{}}}],["tools",{"_index":3143,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":2686,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":141,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbar.component.html",{"_index":2687,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":2688,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":140,"title":{"components/TopbarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbarmenubutton",{"_index":2691,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toslugvalue",{"_index":865,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["toslugvalue(slug",{"_index":882,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["track",{"_index":319,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["trade",{"_index":3413,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3412,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3414,"title":{},"body":{"license.html":{}}}],["trail",{"_index":1115,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":3363,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":3093,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3365,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3472,"title":{},"body":{"license.html":{}}}],["transition",{"_index":1849,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":41,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["translate.addlangs(['en",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":35,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["translatemodule",{"_index":24,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translateservice",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":2403,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":3317,"title":{},"body":{"license.html":{}}}],["treated",{"_index":3389,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3204,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["trigger",{"_index":1781,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":1855,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":1742,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":2834,"title":{},"body":{"index.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tslib",{"_index":2760,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":698,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type.enum",{"_index":1472,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":2768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":820,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":231,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["typical",{"_index":3342,"title":{},"body":{"license.html":{}}}],["typically",{"_index":761,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":3021,"title":{},"body":{"license.html":{}}}],["unblock",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["under",{"_index":3059,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1796,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniquely",{"_index":1807,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":2882,"title":{},"body":{"index.html":{}}}],["unless",{"_index":3351,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3165,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3071,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3191,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":3385,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":1643,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["unsubscribes",{"_index":1830,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":3440,"title":{},"body":{"license.html":{}}}],["unused",{"_index":1992,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["up",{"_index":2412,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":741,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":1770,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":361,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":1918,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updateorganizationnameandslug",{"_index":1932,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationnameandslug(name",{"_index":1943,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationpicture",{"_index":1971,"title":{},"body":{"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicture(picture",{"_index":2043,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["updateorganizationpicturefailure",{"_index":2033,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess",{"_index":2034,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess(result",{"_index":2026,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["updatepictureerror",{"_index":2057,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updatepicturestatus",{"_index":2058,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updates",{"_index":421,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updating",{"_index":713,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["uploadnewavatar",{"_index":1933,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["uploadnewavatar($event",{"_index":1945,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":765,"title":{},"body":{"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["use",{"_index":1802,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":245,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":3647,"title":{},"body":{"license.html":{}}}],["user",{"_index":336,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":2406,"title":{},"body":{"components/SidebarComponent.html":{}}}],["user.dto",{"_index":1492,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["user.entity",{"_index":1233,"title":{},"body":{"interfaces/Invitation.html":{}}}],["userdto",{"_index":602,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/MembersDto.html":{},"interfaces/UserDto.html":{}}}],["userid",{"_index":2340,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":503,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":623,"title":{},"body":{"interfaces/AuthState.html":{}}}],["usernamechecksubscription",{"_index":1009,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":1010,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1490,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["userservice",{"_index":2420,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":2408,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":1011,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":3345,"title":{},"body":{"license.html":{}}}],["using",{"_index":365,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utilizes",{"_index":2840,"title":{},"body":{"index.html":{}}}],["valid",{"_index":3284,"title":{},"body":{"license.html":{}}}],["validators",{"_index":900,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["validators.email",{"_index":1252,"title":{},"body":{"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1022,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1250,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1251,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":885,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["value",{"_index":292,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.charat(0",{"_index":1980,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["value.key",{"_index":1867,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":1869,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.routeevent",{"_index":1865,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.tostring(16).padstart(2",{"_index":1688,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{}}}],["values",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["varaibles",{"_index":2915,"title":{},"body":{"index.html":{}}}],["variable",{"_index":384,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["variables",{"_index":2903,"title":{},"body":{"index.html":{}}}],["various",{"_index":241,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["vars",{"_index":1993,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["verbatim",{"_index":2933,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":2076,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":2949,"title":{},"body":{"license.html":{}}}],["via",{"_index":2885,"title":{},"body":{"index.html":{}}}],["view",{"_index":2400,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":899,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('dt",{"_index":1612,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["viewchild('fileupload",{"_index":1962,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["viewchild('menubutton",{"_index":2710,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('name",{"_index":894,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["viewchild('slug",{"_index":897,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["viewchild('topbarmenu",{"_index":2709,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":2714,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":1029,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":3379,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3436,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":315,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":333,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":806,"title":{},"body":{"components/ConfigComponent.html":{}}}],["vitals",{"_index":143,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["vitals.component.html",{"_index":2728,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitals.component.scss",{"_index":2729,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitalscomponent",{"_index":142,"title":{"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["void",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":3261,"title":{},"body":{"license.html":{}}}],["vue",{"_index":2779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["w",{"_index":3656,"title":{},"body":{"license.html":{}}}],["waive",{"_index":3213,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3631,"title":{},"body":{"license.html":{}}}],["want",{"_index":2961,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":3104,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2995,"title":{},"body":{"license.html":{}}}],["way",{"_index":2954,"title":{},"body":{"license.html":{}}}],["ways",{"_index":3274,"title":{},"body":{"license.html":{}}}],["web",{"_index":2396,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["webpage",{"_index":737,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":3657,"title":{},"body":{"license.html":{}}}],["well",{"_index":715,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":3476,"title":{},"body":{"license.html":{}}}],["whether",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":3123,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3324,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3119,"title":{},"body":{"license.html":{}}}],["width",{"_index":408,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":407,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":418,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1386,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":2381,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1384,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":3203,"title":{},"body":{"license.html":{}}}],["wish",{"_index":2916,"title":{},"body":{"index.html":{},"license.html":{}}}],["within",{"_index":1788,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["without",{"_index":1827,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["work",{"_index":2952,"title":{},"body":{"license.html":{}}}],["work's",{"_index":3142,"title":{},"body":{"license.html":{}}}],["working",{"_index":3120,"title":{},"body":{"license.html":{}}}],["works",{"_index":152,"title":{},"body":{"components/AlertsComponent.html":{},"components/CloseComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/GuidesComponent.html":{},"components/IssuesComponent.html":{},"components/LogsComponent.html":{},"components/MessagesComponent.html":{},"components/NotificationsComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/QueriesComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["worldwide",{"_index":3509,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":2409,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrench",{"_index":2498,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":3593,"title":{},"body":{"license.html":{}}}],["written",{"_index":3283,"title":{},"body":{"license.html":{}}}],["years",{"_index":3286,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":3526,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessDeniedComponent.html":{"url":"components/AccessDeniedComponent.html","title":"component - AccessDeniedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessDeniedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/access-denied/access-denied.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-denied\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RouterModule\n                            RippleModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./access-denied.component.html\n            \n\n\n\n            \n                styleUrl\n                ./access-denied.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-access-denied',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RouterModule,\n    RippleModule,\n    TranslateModule\n  ],\n  templateUrl: './access-denied.component.html',\n  styleUrl: './access-denied.component.scss'\n})\nexport class AccessDeniedComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n          \n          \n            {{'access-denied.access_denied' | translate}}\n          \n          {{'access-denied.insufficient_permission' | translate}}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{\\'access-denied.access_denied\\' | translate}}                    {{\\'access-denied.insufficient_permission\\' | translate}}                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessDeniedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsComponent.html":{"url":"components/AlertsComponent.html","title":"component - AlertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/alerts/alerts.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alerts\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./alerts.component.html\n            \n\n\n\n            \n                styleUrl\n                ./alerts.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  standalone: true,\n  imports: [],\n  templateUrl: './alerts.component.html',\n  styleUrl: './alerts.component.scss'\n})\nexport class AlertsComponent {\n\n}\n\n    \n\n    \n        alerts works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'alerts works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                replaceThemeLink\n                            \n                            \n                                    Private\n                                restoreScale\n                            \n                            \n                                    Private\n                                restoreTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, layoutService: LayoutService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceThemeLink(href: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LayoutService } from './core/services/layout.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  constructor(\n    translate: TranslateService,\n    private layoutService: LayoutService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n  ngOnInit(): void {\n    this.layoutService.restoreConfig();\n    this.restoreScale();\n  }\n\n  ngAfterViewInit() {\n    this.restoreTheme();\n  }\n\n  private restoreScale() {\n    this.document.documentElement.style.fontSize =\n      this.layoutService.config.scale + 'px';\n  }\n\n  private restoreTheme() {\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace('lara-light-blue', this.layoutService.config.theme);\n    this.replaceThemeLink(newHref);\n  }\n\n  private replaceThemeLink(href: string) {\n    const id = 'theme-css';\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            membersState\n                                        \n                                \n                                \n                                        \n                                            organizationState\n                                        \n                                \n                                \n                                        \n                                            platformState\n                                        \n                                \n                                \n                                        \n                                            projectState\n                                        \n                                \n                                \n                                        \n                                            roleState\n                                        \n                                \n                                \n                                        \n                                            teamState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersState:         MembersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationState:         OrganizationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformState:         PlatformState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectState:         ProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleState:         RoleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamState:         TeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\nimport { MembersEffects } from './members/members.effects';\nimport { MembersState, membersReducer } from './members/members.reducer';\nimport { OrganizationEffects } from './organization/organization.effects';\nimport {\n  OrganizationState,\n  organizationReducer,\n} from './organization/organization.reducer';\nimport { ProjectEffects } from './project/project.effects';\nimport { ProjectState, projectReducer } from './project/project.reducer';\nimport { RoleEffects } from './role/role.effects';\nimport { RoleState, roleReducer } from './role/role.reducer';\nimport { TeamEffects } from './team/team.effects';\nimport { TeamState, teamReducer } from './team/team.reducer';\nimport { PlatformState, platformReducer } from './platform/platform.reducer';\nimport { PlatformEffects } from './platform/platform.effects';\n\nexport interface AppState {\n  authState: AuthState;\n  organizationState: OrganizationState;\n  membersState: MembersState;\n  roleState: RoleState;\n  teamState: TeamState;\n  projectState: ProjectState;\n  platformState: PlatformState;\n}\n\nexport const appEfects = [\n  AuthEffects,\n  OrganizationEffects,\n  MembersEffects,\n  RoleEffects,\n  TeamEffects,\n  ProjectEffects,\n  PlatformEffects\n];\n\nexport const appStore = {\n  authState: authReducer,\n  organizationState: organizationReducer,\n  membersState: membersReducer,\n  roleState: roleReducer,\n  teamState: teamReducer,\n  projectState: projectReducer,\n  platformState: platformReducer\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation$\n                            \n                            \n                                acceptInvitationSuccess$\n                            \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:111\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n\n  acceptInvitation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  acceptInvitationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acceptInvitationError\n                                        \n                                \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acceptInvitationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acceptInvitationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  acceptInvitationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  acceptInvitationError: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Accept Invitation\n  on(acceptInvitation, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Accept invitation success\n  on(acceptInvitationSuccess, (state) => ({\n    ...state,\n    acceptInvitationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Accept invitation failure\n  on(acceptInvitationFailure, (state, { error }) => ({\n    ...state,\n    acceptInvitationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseComponent.html":{"url":"components/CloseComponent.html","title":"component - CloseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/close/close.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./close.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  standalone: true,\n  imports: [],\n  templateUrl: './close.component.html',\n  styleUrl: './close.component.scss'\n})\nexport class CloseComponent {\n\n}\n\n    \n\n    \n        close works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'close works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:179\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:121\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:163\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:109\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:143\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:79\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:88\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:92\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:97\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n    this.layoutService.saveConfig();\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOrganizationComponent.html":{"url":"components/CreateOrganizationComponent.html","title":"component - CreateOrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/create-organization/create-organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-create-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganizationForm\n                            \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSlugAndCheckValidity\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createOrganization\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, store: Store, formBuilder: FormBuilder, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSlugAndCheckValidity\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSlugAndCheckValidity(organizationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../core/domain/dto/requests/create-organization-request.dto';\nimport { OrganizationService } from '../../core/services/api/organization.api.service';\nimport { AppState } from '../../core/state/app.state';\nimport {\n  createOrganization,\n  loadCurrentOrganization,\n} from '../../core/state/organization/organization.actions';\nimport {\n  isLoadingOrganization,\n  selectCurrentOrganization,\n  selectOrganizationError,\n} from '../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-create-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './create-organization.component.html',\n  styleUrl: './create-organization.component.scss',\n})\nexport class CreateOrganizationComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('name') nameInput!: ElementRef;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  createOrganizationForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  });\n\n  isSlugTaken: boolean | null = null;\n  isLoading = this.store.select(isLoadingOrganization);\n\n  private slugCheckSubscription?: Subscription;\n  private organizationSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.changeSlugAndCheckValidity(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.organizationSubscription = this.store\n      .select(selectCurrentOrganization)\n      .subscribe((organization) => {\n        if (organization != null) {\n          console.log('Organization: ' + JSON.stringify(organization));\n          this.router.navigate(['/home']);\n          this.errorSubscription?.unsubscribe();\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 404 &&\n          error.status !== 401\n        ) {\n          console.log(error);\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('create-organization.error'),\n            detail: this.translateService.instant(\n              'create-organization.error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n    this.organizationSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n  }\n\n  createOrganization() {\n    const dto: CreateOrganizationRequestDto = {\n      name: this.createOrganizationForm.get('name')?.value ?? '',\n      slug: this.createOrganizationForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createOrganization(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private changeSlugAndCheckValidity(organizationName: string) {\n    const slug = this.toSlugValue(organizationName);\n    this.createOrganizationForm.get('slug')?.setValue(slug);\n    this.checkSlug(slug);\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n            {{ \"create-organization.welcome_message\" | translate }}\n          \n          {{\n            \"create-organization.welcome_description\" | translate\n          }}\n        \n        \n          \n            {{ \"create-organization.name_label\" | translate }}\n            \n              \n              \n            \n            {{ \"create-organization.name_is_required\" | translate }}\n\n            {{ \"create-organization.slug_label\" | translate }}\n            \n              @if (isSlugTaken !== null && !isSlugTaken) {\n                \n              } @else {\n                \n              }\n              \n            \n            {{ \"create-organization.slug_is_required\" | translate }}\n\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ \"create-organization.welcome_message\" | translate }}                    {{            \"create-organization.welcome_description\" | translate          }}                                      {{ \"create-organization.name_label\" | translate }}                                                                {{ \"create-organization.name_is_required\" | translate }}            {{ \"create-organization.slug_label\" | translate }}                          @if (isSlugTaken !== null && !isSlugTaken) {                              } @else {                              }                                      {{ \"create-organization.slug_is_required\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrganizationRequestDto.html":{"url":"interfaces/CreateOrganizationRequestDto.html","title":"interface - CreateOrganizationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrganizationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-organization-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateOrganizationRequestDto {\n  slug: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectRequestDto.html":{"url":"interfaces/CreateProjectRequestDto.html","title":"interface - CreateProjectRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectRequestDto {\n    name: string;\n    platformId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTeamRequestDto.html":{"url":"interfaces/CreateTeamRequestDto.html","title":"interface - CreateTeamRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTeamRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-team-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateTeamRequestDto {\n    slug: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/details/details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent {\n\n}\n\n    \n\n    \n        details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/devices/devices.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n            \n                styleUrl\n                ./devices.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-devices',\n  standalone: true,\n  imports: [],\n  templateUrl: './devices.component.html',\n  styleUrl: './devices.component.scss'\n})\nexport class DevicesComponent {\n\n}\n\n    \n\n    \n        devices works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'devices works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  standalone: true,\n  imports: [],\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.scss'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        documentation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'documentation works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileDto.html":{"url":"interfaces/FileDto.html","title":"interface - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentType\n                                        \n                                \n                                \n                                        \n                                            createdTime\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            fileSize\n                                        \n                                \n                                \n                                        \n                                            stream\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stream\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stream:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileDto {\n  fileName: string;\n  url: string;\n  contentType: string;\n  fileSize: number;\n  createdTime: Date;\n  stream: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GuidesComponent.html":{"url":"components/GuidesComponent.html","title":"component - GuidesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GuidesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/guides/guides.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-guides\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./guides.component.html\n            \n\n\n\n            \n                styleUrl\n                ./guides.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  standalone: true,\n  imports: [],\n  templateUrl: './guides.component.html',\n  styleUrl: './guides.component.scss'\n})\nexport class GuidesComponent {\n\n}\n\n    \n\n    \n        guides works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'guides works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GuidesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationErrorSubscription\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:244\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:219\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:233\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:255\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:269\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\nimport { loadCurrentOrganization } from '../../core/state/organization/organization.actions';\nimport { selectOrganizationError } from '../../core/state/organization/organization.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n  private organizationErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.home = { icon: 'pi pi-home', routerLink: '/home' };\n  }\n\n  ngAfterViewInit() {\n    this.organizationErrorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error &&\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 401\n        ) {\n          console.log(error);\n          this.router.navigate(['/create-organization']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n    this.organizationErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, routerLink: [url] });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/invitation.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./user.entity\";\n\nexport interface Invitation {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                invitationHash\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService, invitationService: InvitationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        invitationHash\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  isLoadingAuthState,\n  selectAcceptInvitationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport {\n  acceptInvitation,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { InvitationService } from '../../../../core/services/api/invitation.api.service';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss',\n})\nexport class InvitationComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n  @Input()\n  private invitationHash?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private invitationService: InvitationService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    this.invitationService.getInvitationDetails(this.invitationHash ?? '').subscribe({\n      next: (details) => {\n        this.registerForm.get('email')?.setValue(details.email);\n      },\n      error: () => {\n        this.router.navigate(['/auth'])\n      }\n    })\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAcceptInvitationError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 409) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_username_exists',\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_wrong_hash',\n              ),\n            });\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(\n      acceptInvitation({ dto: dto, invitationHash: this.invitationHash ?? '' }),\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.invitation.welcome_message\" | translate }}\n  \n  {{\n    \"auth.invitation.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.invitation.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.invitation.username_is_required\" | translate }}\n    {{ \"auth.invitation.username_length\" | translate }}\n\n    {{ \"auth.invitation.password_label\" | translate }}\n    \n    {{ \"auth.invitation.password_length\" | translate }}\n    {{ \"auth.invitation.password_not_strong\" | translate }}\n\n    {{\n      \"auth.invitation.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.invitation.email_is_required\" | translate }}\n\n    {{ \"auth.invitation.first_name_label\" | translate }}\n    \n    {{ \"auth.invitation.first_name_is_required\" | translate }}\n\n    {{ \"auth.invitation.last_name_label\" | translate }}\n    \n    {{ \"auth.invitation.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.invitation.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.invitation.welcome_message\" | translate }}    {{    \"auth.invitation.welcome_description\" | translate  }}      {{ \"auth.invitation.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.invitation.username_is_required\" | translate }}    {{ \"auth.invitation.username_length\" | translate }}    {{ \"auth.invitation.password_label\" | translate }}        {{ \"auth.invitation.password_length\" | translate }}    {{ \"auth.invitation.password_not_strong\" | translate }}    {{      \"auth.invitation.email_label\" | translate    }}                        {{ \"auth.invitation.email_is_required\" | translate }}    {{ \"auth.invitation.first_name_label\" | translate }}        {{ \"auth.invitation.first_name_is_required\" | translate }}    {{ \"auth.invitation.last_name_label\" | translate }}        {{ \"auth.invitation.last_name_is_required\" | translate }}          {{ \"auth.invitation.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationDto.html":{"url":"interfaces/InvitationDto.html","title":"interface - InvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/invitation.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"../models/user.entity\";\n\nexport interface InvitationDto {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationRequestDto.html":{"url":"interfaces/InvitationRequestDto.html","title":"interface - InvitationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/invitation-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InvitationRequestDto {\n    email: string,\n    roleId: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitationService.html":{"url":"injectables/InvitationService.html","title":"injectable - InvitationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/invitation.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation\n                            \n                            \n                                getInvitationDetails\n                            \n                            \n                                inviteMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/invitation.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation\n                        \n                    \n                \n            \n            \n                \nacceptInvitation(invitationHash: string, dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInvitationDetails\n                        \n                    \n                \n            \n            \n                \ngetInvitationDetails(invitationHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember\n                        \n                    \n                \n            \n            \n                \ninviteMember(dto: InvitationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            InvitationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InvitationDto } from '../../domain/dto/invitation.dto';\nimport { InvitationRequestDto } from '../../domain/dto/requests/invitation-request.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvitationService {\n  constructor(private http: HttpClient) {}\n\n  inviteMember(dto: InvitationRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/send',\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getInvitationDetails(invitationHash: string): Observable {\n    return this.http.get(\n      api.invitationUrl + '/details/' + invitationHash,\n      api.noAuthOptions,\n    );\n  }\n\n  acceptInvitation(invitationHash: string, dto: RegisterRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/accept/' + invitationHash,\n      dto,\n      api.noAuthOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssuesComponent.html":{"url":"components/IssuesComponent.html","title":"component - IssuesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssuesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/issues/issues.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issues\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./issues.component.html\n            \n\n\n\n            \n                styleUrl\n                ./issues.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-issues',\n  standalone: true,\n  imports: [],\n  templateUrl: './issues.component.html',\n  styleUrl: './issues.component.scss'\n})\nexport class IssuesComponent {\n\n}\n\n    \n\n    \n        issues works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'issues works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssuesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                restoreConfig\n                            \n                            \n                                saveConfig\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:211\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:220\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:199\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:227\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:156\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreConfig\n                        \n                    \n                \n            \n            \n                \nrestoreConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:190\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:180\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:100\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:130\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:145\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:139\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:151\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:115\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/logs/logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logs\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logs.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-logs',\n  standalone: true,\n  imports: [],\n  templateUrl: './logs.component.html',\n  styleUrl: './logs.component.scss'\n})\nexport class LogsComponent {\n\n}\n\n    \n\n    \n        logs works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logs works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersComponent.html":{"url":"components/MembersComponent.html","title":"component - MembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/members/members.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-members\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                                MembersTableComponent\n                                AccessDeniedComponent\n                            TranslateModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMembers\n                            \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                invitedMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/members/members.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/members/members.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectActiveMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invitedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { PanelModule } from 'primeng/panel';\nimport { ToastModule } from 'primeng/toast';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadOrganizationMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingMembers,\n  selectActiveMembers,\n  selectInvitedMembers,\n  selectOwnerAsArray,\n} from '../../../core/state/members/members.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { MembersTableComponent } from '../../../shared/components/members-table/members-table.component';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-members',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    MembersTableComponent,\n    AccessDeniedComponent,\n    TranslateModule,\n    PanelModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './members.component.html',\n  styleUrl: './members.component.scss',\n})\nexport class MembersComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  );\n  isLoadingMembers = this.store.select(isLoadingMembers);\n  activeMembers = this.store\n    .select(selectActiveMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  invitedMembers = this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  owner = this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit() {\n    this.store.dispatch(loadOrganizationMembers());\n  }\n}\n\n    \n\n    \n        \n@if (hasReadPermission | async) {\n   -->\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n   -->\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {   -->                                             -->} @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersDto.html":{"url":"interfaces/MembersDto.html","title":"interface - MembersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/members.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invitations\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invitations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitations:     InvitationDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InvitationDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         UserDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     UserDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InvitationDto } from \"./invitation.dto\";\nimport { UserDto } from \"./user.dto\";\n\nexport interface MembersDto {\n    users: UserDto[];\n    invitations: InvitationDto[];\n    owner: UserDto;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersEffects.html":{"url":"injectables/MembersEffects.html","title":"injectable - MembersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inviteMember$\n                            \n                            \n                                loadOrganizationMembers$\n                            \n                            \n                                removeMember$\n                            \n                            \n                                removeMemberSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(membersService: MembersService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/members/members.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        membersService\n                                                  \n                                                        \n                                                                        MembersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMemberSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:62\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { MembersService } from '../../services/api/members.api.service';\nimport { Injectable } from '@angular/core';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class MembersEffects {\n  constructor(\n    private membersService: MembersService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  inviteMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMemberSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersService.html":{"url":"injectables/MembersService.html","title":"injectable - MembersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/members.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMembers\n                            \n                            \n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/members.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMembers\n                        \n                    \n                \n            \n            \n                \ngetMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  constructor(private http: HttpClient) {}\n\n  getMembers(): Observable {\n    return this.http.get(api.membersUrl, api.authOptions);\n  }\n\n  removeMember(memberId: string) {\n    return this.http.delete(api.membersUrl + '/' + memberId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersState.html":{"url":"interfaces/MembersState.html","title":"interface - MembersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            invitationStatus\n                                        \n                                \n                                \n                                        \n                                            invitedMember\n                                        \n                                \n                                \n                                        \n                                            inviteMemberError\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            removeMemberError\n                                        \n                                \n                                \n                                        \n                                            removeMemberStatus\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitedMember\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitedMember:         Invitation | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invitation | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         MembersDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Invitation } from '../../domain/models/invitation.entity';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface MembersState {\n  members: MembersDto | null;\n  error: any | null;\n  inviteMemberError: any | null;\n  removeMemberError: any | null;\n  invitedMember: Invitation | null;\n  status: StateStatus;\n  invitationStatus: StateStatus;\n  removeMemberStatus: StateStatus;\n}\n\nexport const initialState: MembersState = {\n  members: null,\n  error: undefined,\n  inviteMemberError: null,\n  invitedMember: null,\n  removeMemberError: null,\n  status: StateStatus.PENDING,\n  invitationStatus: StateStatus.PENDING,\n  removeMemberStatus: StateStatus.PENDING\n};\n\nexport const membersReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadOrganizationMembers, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationMembersSuccess, (state, members) => ({\n    ...state,\n    members: members,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationMembersFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  on(inviteMember, (state) => ({\n    ...state,\n    inviteMemberError: null,\n    invitedMember: null,\n    invitationStatus: StateStatus.LOADING,\n  })),\n\n  on(inviteMemberSuccess, (state, invitedMember) => ({\n    ...state,\n    invitedMember: invitedMember,\n    members: {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      owner: state.members?.owner!,\n      invitations: [...state.members?.invitations || [], invitedMember],\n      users: state.members?.users || []\n    },\n    inviteMemberError: null,\n    invitationStatus: StateStatus.SUCCESS,\n  })),\n\n  on(inviteMemberFailure, (state, { error }) => ({\n    ...state,\n    inviteMemberError: error,\n    invitationStatus: StateStatus.ERROR,\n  })),\n\n  on(removeMember, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.LOADING,\n  })),\n\n  on(removeMemberSuccess, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeMemberFailure, (state, { error }) => ({\n    ...state,\n    removeMemberError: error,\n    removeMemberStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersTableComponent.html":{"url":"components/MembersTableComponent.html","title":"component - MembersTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/members-table/members-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-members-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ToastModule\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                inviteNewUserForm\n                            \n                            \n                                isInviteDialogVisible\n                            \n                            \n                                isLoadingRemoveMembers\n                            \n                            \n                                isLoadingSendInvitation\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetInviteForm\n                            \n                            \n                                sendInvite\n                            \n                            \n                                showInviteDialog\n                            \n                            \n                                showRemoveMemberConfirmation\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enableInviteAction\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     User[] | InvitationDto[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:84\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableInviteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:75\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetInviteForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetInviteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendInvite\n                        \n                    \n                \n            \n            \n                \nsendInvite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInviteDialog\n                        \n                    \n                \n            \n            \n                \nshowInviteDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRemoveMemberConfirmation\n                        \n                    \n                \n            \n            \n                \nshowRemoveMemberConfirmation(member: any, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteNewUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInviteDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingRemoveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingSendInvitation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSendInvitation)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectRoles)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { filter, take } from 'rxjs';\nimport { InvitationDto } from '../../../core/domain/dto/invitation.dto';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Role, User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport {\n  inviteMember,\n  removeMember,\n} from '../../../core/state/members/members.actions';\nimport {\n  isLoadingRemoveMembers,\n  isLoadingSendInvitation,\n  selectInvitationSendStatus,\n  selectRemoveMemberStatus,\n} from '../../../core/state/members/members.selectors';\nimport { loadRoles } from '../../../core/state/role/role.actions';\nimport { selectRoles } from '../../../core/state/role/role.selectors';\n\n@Component({\n  selector: 'app-members-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastModule,\n    ConfirmDialogModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './members-table.component.html',\n  styleUrl: './members-table.component.scss',\n})\nexport class MembersTableComponent {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: User[] | InvitationDto[] = undefined;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableInviteAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  roles = this.store.select(selectRoles);\n  inviteNewUserForm = this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  });\n  isInviteDialogVisible: boolean = false;\n\n  isLoadingSendInvitation = this.store.select(isLoadingSendInvitation);\n  isLoadingRemoveMembers = this.store.select(isLoadingRemoveMembers);\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showInviteDialog() {\n    this.resetInviteForm();\n    this.store.dispatch(loadRoles());\n    this.isInviteDialogVisible = true;\n  }\n\n  sendInvite() {\n    this.store\n      .select(selectInvitationSendStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_send_invite',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant('members-table.invite_sent'),\n          });\n          this.isInviteDialogVisible = !this.isInviteDialogVisible;\n        }\n      });\n\n    const dto = {\n      email: this.inviteNewUserForm.get('email')?.value ?? '',\n      roleId: this.inviteNewUserForm.get('role')?.value?.roleId ?? '',\n    };\n    this.store.dispatch(inviteMember(dto));\n  }\n\n  private resetInviteForm() {\n    this.inviteNewUserForm = this.formBuilder.group({\n      role: [undefined as Role | undefined, [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showRemoveMemberConfirmation(member: any, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'members-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'members-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(member);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(member: any) {\n    this.store\n      .select(selectRemoveMemberStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_remove_member',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant(\n              'members-table.removed_memeber',\n            ),\n          });\n        }\n      });\n\n    let memberId = '';\n    if (member.userId) {\n      memberId = member.userId;\n    } else if (member.invitationId) {\n      memberId = member.invitationId;\n    }\n    this.store.dispatch(removeMember({ memberId: memberId }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getUserInitials(member: any): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"members-table.first_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.last_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.email\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.role\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.avatar\" | translate }}\n        \n      \n      \n        \n          {{ \"members-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ member?.firstName }}\n      \n      \n        {{ member?.lastName }}\n      \n      \n        {{ member.email }}\n      \n      \n        {{ member.role.name }}\n      \n      \n        @if (!member.pictureUrl || member.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"members-table.no_members_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"members-table.email_label\" | translate }}\n        \n          \n          \n        \n        {{ \"members-table.email_is_required\" | translate }}\n        {{ \"members-table.invalid_email\" | translate }}\n\n        {{ \"members-table.role_label\" | translate }}\n        \n        {{ \"members-table.role_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"members-table.first_name\" | translate }}                                                          {{ \"members-table.last_name\" | translate }}                                                          {{ \"members-table.email\" | translate }}                                                          {{ \"members-table.role\" | translate }}                                                          {{ \"members-table.avatar\" | translate }}                                      {{ \"members-table.actions\" | translate }}                                        {{ member?.firstName }}                    {{ member?.lastName }}                    {{ member.email }}                    {{ member.role.name }}                    @if (!member.pictureUrl || member.pictureUrl === null) {                  } @else {                  }                                            {{ \"members-table.no_members_found\" | translate }}                          {{ \"members-table.email_label\" | translate }}                                            {{ \"members-table.email_is_required\" | translate }}        {{ \"members-table.invalid_email\" | translate }}        {{ \"members-table.role_label\" | translate }}                {{ \"members-table.role_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/messages/messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  standalone: true,\n  imports: [],\n  templateUrl: './messages.component.html',\n  styleUrl: './messages.component.scss'\n})\nexport class MessagesComponent {\n\n}\n\n    \n\n    \n        messages works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'messages works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            RouterModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [CommonModule, ButtonModule, RippleModule, RouterModule, TranslateModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        404\n        \n          {{ \"not-found.not_found\" | translate }}\n        \n        \n          {{ \"not-found.not_available\" | translate }}\n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        404                  {{ \"not-found.not_found\" | translate }}                          {{ \"not-found.not_available\" | translate }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/notifications/notifications.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notifications.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})\nexport class NotificationsComponent {\n\n}\n\n    \n\n    \n        notifications works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notifications works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/organization.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Organization {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/organization/organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            PanelModule\n                            TranslateModule\n                            DividerModule\n                            BadgeModule\n                            InputTextModule\n                            ButtonModule\n                            RippleModule\n                            InputNumberModule\n                            FormsModule\n                            AvatarModule\n                            FileUploadModule\n                            ToastModule\n                            ProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archivePeriod\n                            \n                            \n                                cleanupPeriod\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                isUploadInProgress\n                            \n                            \n                                organization\n                            \n                            \n                                    \n                                primeFileUpload\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                deleteOrganization\n                            \n                            \n                                getOrganizationInitials\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                stringToColour\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateOrganizationNameAndSlug\n                            \n                            \n                                uploadNewAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, organizationService: OrganizationService, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \ndeleteOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationInitials\n                        \n                    \n                \n            \n            \n                \ngetOrganizationInitials(organization: Organization | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organization\n                                            \n                                                            Organization | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationNameAndSlug\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationNameAndSlug(name: string, slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadNewAvatar\n                        \n                    \n                \n            \n            \n                \nuploadNewAvatar($event: FileUploadHandlerEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        FileUploadHandlerEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        archivePeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanupPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUploadInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isUpdateOrganizationPictureLoading)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        primeFileUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileUpload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileUpload')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport {\n  FileUpload,\n  FileUploadHandlerEvent,\n  FileUploadModule\n} from 'primeng/fileupload';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Organization } from '../../../core/domain/models/organization.entity';\nimport { OrganizationService } from '../../../core/services/api/organization.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { updateOrganizationPicture } from '../../../core/state/organization/organization.actions';\nimport {\n  isUpdateOrganizationPictureLoading,\n  selectCurrentOrganization,\n  selectUpdateOrganizationPictureStatus,\n} from '../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PanelModule,\n    TranslateModule,\n    DividerModule,\n    BadgeModule,\n    InputTextModule,\n    ButtonModule,\n    RippleModule,\n    InputNumberModule,\n    FormsModule,\n    AvatarModule,\n    FileUploadModule,\n    ToastModule,\n    ProgressSpinnerModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './organization.component.html',\n  styleUrl: './organization.component.scss',\n})\nexport class OrganizationComponent implements OnDestroy, AfterViewInit {\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('fileUpload') primeFileUpload!: FileUpload;\n\n  constructor(\n    private store: Store,\n    private organizationService: OrganizationService,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  organization = this.store.select(selectCurrentOrganization);\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  );\n  isSlugTaken: boolean | null = null;\n  archivePeriod: number = 30;\n  cleanupPeriod: number = 90;\n  isUploadInProgress = this.store.select(isUpdateOrganizationPictureLoading);\n\n  private slugCheckSubscription?: Subscription;\n\n  ngAfterViewInit() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n  }\n\n  deleteOrganization() {\n    throw new Error('Method not implemented.');\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  getOrganizationInitials(organization: Organization | null): string {\n    if (organization == null) {\n      return 'NA';\n    } else {\n      let result = '';\n      organization.slug.split('-').forEach((value) => {\n        result += value.charAt(0);\n      });\n      return result;\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  uploadNewAvatar($event: FileUploadHandlerEvent) {\n    if ($event.files.length > 0) {\n      const file = $event.files[0];\n      this.primeFileUpload.uploading = true;\n      this.primeFileUpload.progress = 0;\n      this.store.dispatch(updateOrganizationPicture({ file: file }));\n      this.store\n        .select(selectUpdateOrganizationPictureStatus)\n        .pipe(\n          filter(\n            (status) =>\n              status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n          ),\n          take(1), // unsubscribe after one emitted value\n        )\n        .subscribe((status) => {\n          console.log(status);\n          if (status && status == StateStatus.ERROR) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant('organization.error'),\n              detail: this.translateService.instant(\n                'organization.failed_to_upload_picture',\n              ),\n            });\n          } else {\n            this.primeFileUpload.clear();\n          }\n          this.primeFileUpload.uploading = false;\n          this.primeFileUpload.progress = 100;\n        });\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateOrganizationNameAndSlug(name: string, slug: string) {\n    throw new Error('Method not implemented.');\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n        {{ \"organization.id\" | translate }}\n      \n      {{ \"organization.id_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.slug\" | translate }}\n      \n      {{ \"organization.slug_description\" | translate }}\n    \n    \n      \n        @if (!isSlugTaken) {\n          \n        } @else {\n          \n        }\n        \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.name\" | translate }}\n      \n      {{ \"organization.name_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      {{ \"organization.avatar\" | translate }}\n    \n    \n      @if (\n        !(organization | async)?.pictureUrl ||\n        (organization | async)?.pictureUrl === null\n      ) {\n        \n      } @else {\n        \n      }\n\n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.archive_period\" | translate }}\n      \n      {{ \"organization.archive_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.cleanup_period\" | translate }}\n      \n      {{ \"organization.cleanup_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.delete\" | translate }}\n      \n      {{ \"organization.delete_description\" | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ \"organization.id\" | translate }}            {{ \"organization.id_description\" | translate }}                                          {{ \"organization.slug\" | translate }}            {{ \"organization.slug_description\" | translate }}                      @if (!isSlugTaken) {                  } @else {                  }                                          {{ \"organization.name\" | translate }}            {{ \"organization.name_description\" | translate }}                                  {{ \"organization.avatar\" | translate }}              @if (        !(organization | async)?.pictureUrl ||        (organization | async)?.pictureUrl === null      ) {              } @else {              }                                      {{ \"organization.archive_period\" | translate }}            {{ \"organization.archive_period_description\" | translate }}                                                {{ \"organization.cleanup_period\" | translate }}            {{ \"organization.cleanup_period_description\" | translate }}                                              {{ \"organization.delete\" | translate }}            {{ \"organization.delete_description\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDto.html":{"url":"interfaces/OrganizationDto.html","title":"interface - OrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/organization.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDto {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationEffects.html":{"url":"injectables/OrganizationEffects.html","title":"injectable - OrganizationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrganization$\n                            \n                            \n                                loadCurrentOrganization$\n                            \n                            \n                                updateOrganizationPicture$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/organization/organization.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { OrganizationService } from \"../../services/api/organization.api.service\";\nimport { createOrganization, createOrganizationSuccess, loadCurrentOrganization, loadCurrentOrganizationFailure, loadCurrentOrganizationSuccess, updateOrganizationPicture, updateOrganizationPictureFailure, updateOrganizationPictureSuccess } from \"./organization.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class OrganizationEffects {\n  constructor(\n    private organizationService: OrganizationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createNewOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateOrganizationPicture$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/organization.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getOrganization\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                updateOrganizationPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/organization.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(dto: CreateOrganizationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrganizationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganization\n                        \n                    \n                \n            \n            \n                \ngetOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationPicture(picture: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../domain/dto/requests/create-organization-request.dto';\nimport { OrganizationDto } from '../../domain/dto/organization.dto';\nimport { api } from './api';\nimport { FileDto } from '../../domain/dto/file.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationService {\n  constructor(private http: HttpClient) {}\n\n  createOrganization(\n    dto: CreateOrganizationRequestDto,\n  ): Observable {\n    return this.http.post(\n      api.organizationUrl,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getOrganization(): Observable {\n    return this.http.get(api.organizationUrl, api.authOptions);\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.organizationUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  updateOrganizationPicture(picture: File): Observable {\n    const data = new FormData();\n    data.append('picture', picture);\n    return this.http.patch(\n      api.organizationUrl + '/update-picture',\n      data,\n      api.authOptionsAutoContentType,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationState.html":{"url":"interfaces/OrganizationState.html","title":"interface - OrganizationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            organization\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatePictureError\n                                        \n                                \n                                \n                                        \n                                            updatePictureStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organization:         Organization | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organization | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Organization } from '../../domain/models/organization.entity';\nimport {\n  createOrganization,\n  createOrganizationFailure,\n  createOrganizationSuccess,\n  loadCurrentOrganization,\n  loadCurrentOrganizationFailure,\n  loadCurrentOrganizationSuccess,\n  updateOrganizationPicture,\n  updateOrganizationPictureFailure,\n  updateOrganizationPictureSuccess,\n} from './organization.actions';\n\nexport interface OrganizationState {\n  organization: Organization | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updatePictureError: any | null;\n  status: StateStatus;\n  updatePictureStatus: StateStatus;\n}\n\nexport const initialState: OrganizationState = {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n  updatePictureError: undefined,\n  updatePictureStatus: StateStatus.PENDING\n};\n\nexport const organizationReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle update organization picture\n  on(updateOrganizationPicture, (state) => ({\n    ...state,\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.LOADING,\n  })),\n\n  //Handle update organization picture success\n  on(updateOrganizationPictureSuccess, (state, fileDto) => ({\n    ...state,\n    organization: {...state.organization!, pictureUrl: fileDto.url},\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handleupdate organization picture failure\n  on(updateOrganizationPictureFailure, (state, { error }) => ({\n    ...state,\n    updatePictureError: error,\n    updatePictureStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/platform.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"./enums/platform-type.enum\";\n\nexport interface Platform {\n    platformId: string;\n    type: PlatformType;\n    version: string;\n    iconUrl: string | null;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformDto.html":{"url":"interfaces/PlatformDto.html","title":"interface - PlatformDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/platform.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"../models/enums/platform-type.enum\";\n\nexport interface PlatformDto {\n  platformId: string;\n  type: PlatformType;\n  version: string;\n  iconUrl: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformEffects.html":{"url":"injectables/PlatformEffects.html","title":"injectable - PlatformEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformService: PlatformService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/platform/platform.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformService\n                                                  \n                                                        \n                                                                        PlatformService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/platform/platform.effects.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { PlatformService } from '../../services/api/platform.api.service';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\n@Injectable()\nexport class PlatformEffects {\n  constructor(\n    private platformService: PlatformService,\n    private actions$: Actions,\n  ) {}\n\n  loadPlatforms$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformService.html":{"url":"injectables/PlatformService.html","title":"injectable - PlatformService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/platform.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatforms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/platform.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/platform.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PlatformDto } from '../../domain/dto/platform.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlatformService {\n  constructor(private http: HttpClient) {}\n\n  getPlatforms(): Observable {\n    return this.http.get(api.platformUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformState.html":{"url":"interfaces/PlatformState.html","title":"interface - PlatformState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:         Platform[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Platform } from '../../domain/models/platform.entity';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\nexport interface PlatformState {\n  platforms: Platform[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: PlatformState = {\n  platforms: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const platformReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadPlatforms, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadPlatformsSuccess, (state, params) => ({\n    ...state,\n    platforms: params.platforms,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadPlatformsFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         Platform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Platform } from \"./platform.entity\"\n\nexport interface Project {\n    projectId: string,\n    name: string,\n    platform: Platform\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectDetailsComponent.html":{"url":"components/ProjectDetailsComponent.html","title":"component - ProjectDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/project-details/project-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./project-details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-project-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './project-details.component.html',\n  styleUrl: './project-details.component.scss'\n})\nexport class ProjectDetailsComponent {\n\n}\n\n    \n\n    \n        project-details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'project-details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDto.html":{"url":"interfaces/ProjectDto.html","title":"interface - ProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from \"./platform.dto\";\n\nexport interface ProjectDto {\n    projectId: string,\n    name: string,\n    platform: PlatformDto\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectEffects.html":{"url":"injectables/ProjectEffects.html","title":"injectable - ProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createProject$\n                            \n                            \n                                loadAllProjects$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/project/project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAllProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess } from \"./project.actions\";\nimport { Injectable } from \"@angular/core\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\n\n@Injectable()\nexport class ProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadAllProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/project.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProject\n                            \n                            \n                                getAllProjects\n                            \n                            \n                                isNameTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/project.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject(dto: CreateProjectRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateProjectRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProjects\n                        \n                    \n                \n            \n            \n                \ngetAllProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n            \n                \nisNameTaken(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProjectDto } from '../../domain/dto/project.dto';\nimport { CreateProjectRequestDto } from '../../domain/dto/requests/create-project-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private http: HttpClient) {}\n\n  getAllProjects(): Observable {\n    return this.http.get(api.projectUrl, api.authOptions);\n  }\n\n  createProject(dto: CreateProjectRequestDto): Observable {\n    return this.http.post(api.projectUrl, dto, api.authOptions);\n  }\n\n  isNameTaken(name: string): Observable {\n    return this.http.get(\n      api.projectUrl + '/name/taken?name=' + name,\n      api.authOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectState.html":{"url":"interfaces/ProjectState.html","title":"interface - ProjectState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allProjects\n                                        \n                                \n                                \n                                        \n                                            allProjectsError\n                                        \n                                \n                                \n                                        \n                                            allProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            createProjectError\n                                        \n                                \n                                \n                                        \n                                            createProjectStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Project } from '../../domain/models/project.entity';\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess } from './project.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface ProjectState {\n  allProjects: Project[] | null;\n  allProjectsError: any | null;\n  createProjectError: any | null;\n  allProjectsStatus: StateStatus;\n  createProjectStatus: StateStatus;\n}\n\nexport const initialState: ProjectState = {\n  allProjects: null,\n  allProjectsError: undefined,\n  allProjectsStatus: StateStatus.PENDING,\n  createProjectError: undefined,\n  createProjectStatus: StateStatus.PENDING\n};\n\nexport const projectReducer = createReducer(\n  initialState,\n\n  //Handle loading all projects\n  on(loadAllProjects, (state) => ({\n    ...state,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadAllProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    allProjects: projects,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadAllProjectsFailure, (state, { error }) => ({\n    ...state,\n    allProjectsError: error,\n    allProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createProject, (state) => ({\n    ...state,\n    createProjectError: null,\n    createProjectStatus: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createProjectSuccess, (state, project) => ({\n    ...state,\n    allProjects: [...(state.allProjects || []), project],\n    createProjectError: null,\n    createProjectStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createProjectFailure, (state, { error }) => ({\n    ...state,\n    createProjectError: error,\n    createProjectStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/projects.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  standalone: true,\n  imports: [],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss'\n})\nexport class ProjectsComponent {\n\n}\n\n    \n\n    \n        projects works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'projects works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent-1.html":{"url":"components/ProjectsComponent-1.html","title":"component - ProjectsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-settings\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                            TranslateModule\n                                ProjectsTableComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingAllProjects\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/projects/projects.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/projects/projects.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingAllProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PanelModule } from 'primeng/panel';\nimport { map } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { ProjectsTableComponent } from '../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-projects-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TranslateModule,\n    ProjectsTableComponent,\n  ],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  );\n\n  isLoadingAllProjects = this.store.select(isLoadingAllProjects);\n  projects = this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAllProjects());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n    \n      \n    \n  } @else {\n    \n  }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {      }  '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsTableComponent.html":{"url":"components/ProjectsTableComponent.html","title":"component - ProjectsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/projects-table/projects-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-projects-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewProjectForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewProjectDialogVisible\n                            \n                            \n                                isLoadingCreateNewProject\n                            \n                            \n                                isNameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                nameCheckSubscription\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkName\n                            \n                            \n                                createNewProject\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                resetProjectsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:102\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:96\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:90\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkName\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProject\n                        \n                    \n                \n            \n            \n                \ncreateNewProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetProjectsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetProjectsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewProjectDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateProject)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        nameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platforms\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectPlatforms)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Platform } from '../../../core/domain/models/platform.entity';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../core/services/api/project.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadPlatforms } from '../../../core/state/platform/platform.actions';\nimport { selectPlatforms } from '../../../core/state/platform/platform.selectors';\nimport { createProject } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingCreateProject,\n  selectCreateProjectStatus,\n} from '../../../core/state/project/project.selectors';\n\n@Component({\n  selector: 'app-projects-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './projects-table.component.html',\n  styleUrl: './projects-table.component.scss',\n})\nexport class ProjectsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private projectService: ProjectService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Project[] = undefined;\n\n  @ViewChild('name') nameInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  createNewProjectForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  });\n  isAddNewProjectDialogVisible: boolean = false;\n  isNameTaken: boolean | null = null;\n  isLoadingCreateNewProject = this.store.select(isLoadingCreateProject);\n  platforms = this.store.select(selectPlatforms);\n\n  private nameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkName(data));\n  }\n\n  ngOnDestroy() {\n    this.nameCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetProjectsForm();\n    this.store.dispatch(loadPlatforms());\n    this.isAddNewProjectDialogVisible = true;\n  }\n\n  createNewProject() {\n    this.store\n      .select(selectCreateProjectStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('projects-table.error'),\n            detail: this.translateService.instant(\n              'projects-table.failed_to_create_project',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('projects-table.success'),\n            detail: this.translateService.instant(\n              'projects-table.project_created',\n            ),\n          });\n          this.isAddNewProjectDialogVisible =\n            !this.isAddNewProjectDialogVisible;\n        }\n      });\n\n    const dto = {\n      name: this.createNewProjectForm.get('name')?.value ?? '',\n      platformId:\n        this.createNewProjectForm.get('platform')?.value?.platformId ?? '',\n    };\n    this.store.dispatch(createProject(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private resetProjectsForm() {\n    this.createNewProjectForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      platform: [undefined as Platform | undefined, [Validators.required]],\n    });\n  }\n\n  private checkName(name: string) {\n    this.nameCheckSubscription?.unsubscribe();\n    this.nameCheckSubscription = this.projectService\n      .isNameTaken(name)\n      .subscribe({\n        next: (result) => {\n          this.isNameTaken = result;\n        },\n        error: () => {\n          this.isNameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"projects-table.name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"projects-table.platform\" | translate }}\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        {{ project?.name }}\n      \n      \n        \n          \n          {{ project?.platform?.type | titlecase }}\n          {{ project?.platform?.version }}\n        \n      \n    \n  \n  \n    \n      {{ \"projects-table.no_projects_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"projects-table.name_label\" | translate }}\n        \n          @if (isNameTaken !== null && !isNameTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"projects-table.name_is_required\" | translate }}\n\n        {{ \"projects-table.platform_label\" | translate }}\n        \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n        \n        {{ \"projects-table.platform_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"projects-table.name\" | translate }}                                                          {{ \"projects-table.platform\" | translate }}                                                            {{ project?.name }}                                        {{ project?.platform?.type | titlecase }}          {{ project?.platform?.version }}                                {{ \"projects-table.no_projects_found\" | translate }}                          {{ \"projects-table.name_label\" | translate }}                  @if (isNameTaken !== null && !isNameTaken) {                      } @else {                      }                          {{ \"projects-table.name_is_required\" | translate }}        {{ \"projects-table.platform_label\" | translate }}                                                          {{ platform.type | titlecase }} {{ platform.version }}                                                                        {{ platform.type | titlecase }} {{ platform.version }}                                      {{ \"projects-table.platform_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueriesComponent.html":{"url":"components/QueriesComponent.html","title":"component - QueriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/queries/queries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queries\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./queries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./queries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-queries',\n  standalone: true,\n  imports: [],\n  templateUrl: './queries.component.html',\n  styleUrl: './queries.component.scss'\n})\nexport class QueriesComponent {\n\n}\n\n    \n\n    \n        queries works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'queries works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesComponent.html":{"url":"components/ReleasesComponent.html","title":"component - ReleasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/releases/releases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-releases\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./releases.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-releases',\n  standalone: true,\n  imports: [],\n  templateUrl: './releases.component.html',\n  styleUrl: './releases.component.scss'\n})\nexport class ReleasesComponent {\n\n}\n\n    \n\n    \n        releases works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'releases works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReplaysComponent.html":{"url":"components/ReplaysComponent.html","title":"component - ReplaysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReplaysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/replays/replays.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-replays\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./replays.component.html\n            \n\n\n\n            \n                styleUrl\n                ./replays.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-replays',\n  standalone: true,\n  imports: [],\n  templateUrl: './replays.component.html',\n  styleUrl: './replays.component.scss'\n})\nexport class ReplaysComponent {\n\n}\n\n    \n\n    \n        replays works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'replays works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReplaysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/resources/resources.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n            \n                styleUrl\n                ./resources.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  standalone: true,\n  imports: [],\n  templateUrl: './resources.component.html',\n  styleUrl: './resources.component.scss'\n})\nexport class ResourcesComponent {\n\n}\n\n    \n\n    \n        resources works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'resources works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            internal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        internal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        internal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleEffects.html":{"url":"injectables/RoleEffects.html","title":"injectable - RoleEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRoles$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/role/role.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/role/role.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { RoleService } from '../../services/api/role.api.service';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\n@Injectable()\nexport class RoleEffects {\n  constructor(\n    private roleService: RoleService,\n    private actions$: Actions,\n  ) {}\n\n  loadRoles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/role.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/role.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/role.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Role } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleService {\n  constructor(private http: HttpClient) {}\n\n  getRoles(): Observable {\n    return this.http.get(api.roleUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleState.html":{"url":"interfaces/RoleState.html","title":"interface - RoleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Role } from '../../domain/models/user.entity';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\nexport interface RoleState {\n  roles: Role[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: RoleState = {\n    roles: null,\n    error: undefined,\n    status: StateStatus.PENDING\n}\n\nexport const roleReducer = createReducer(\n    initialState,\n\n    //Handle loading current organization members\n  on(loadRoles, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadRolesSuccess, (state, params) => ({\n    ...state,\n    roles: params.roles,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadRolesFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n)\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenLoadsComponent.html":{"url":"components/ScreenLoadsComponent.html","title":"component - ScreenLoadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScreenLoadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/screen-loads/screen-loads.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen-loads\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./screen-loads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./screen-loads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-loads',\n  standalone: true,\n  imports: [],\n  templateUrl: './screen-loads.component.html',\n  styleUrl: './screen-loads.component.scss'\n})\nexport class ScreenLoadsComponent {\n\n}\n\n    \n\n    \n        screen-loads works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'screen-loads works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreenLoadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SdksComponent.html":{"url":"components/SdksComponent.html","title":"component - SdksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SdksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/sdks/sdks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sdks\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sdks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sdks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sdks',\n  standalone: true,\n  imports: [],\n  templateUrl: './sdks.component.html',\n  styleUrl: './sdks.component.scss'\n})\nexport class SdksComponent {\n\n}\n\n    \n\n    \n        sdks works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sdks works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SdksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecurityComponent.html":{"url":"components/SecurityComponent.html","title":"component - SecurityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecurityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/security/security.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-security\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./security.component.html\n            \n\n\n\n            \n                styleUrl\n                ./security.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-security',\n  standalone: true,\n  imports: [],\n  templateUrl: './security.component.html',\n  styleUrl: './security.component.scss'\n})\nexport class SecurityComponent {\n\n}\n\n    \n\n    \n        security works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'security works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecurityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionsComponent.html":{"url":"components/SessionsComponent.html","title":"component - SessionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/sessions/sessions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sessions\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sessions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sessions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sessions',\n  standalone: true,\n  imports: [],\n  templateUrl: './sessions.component.html',\n  styleUrl: './sessions.component.scss'\n})\nexport class SessionsComponent {\n\n}\n\n    \n\n    \n        sessions works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sessions works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  standalone: true,\n  imports: [],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport class SettingsComponent {\n\n}\n\n    \n\n    \n        settings works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        // {\n        //   label: sidenav.Home,\n        //   icon: 'pi pi-fw pi-home',\n        //   routerLink: ['/home'],\n        // },\n        {\n          label: sidenav.Projects,\n          icon: 'pi pi-fw pi-code',\n          routerLink: ['/home/projects'],\n        },\n        {\n          label: sidenav.Logs,\n          icon: 'pi pi-fw pi-list',\n          routerLink: ['/home/logs'],\n        },\n        {\n          label: sidenav.Issues,\n          icon: 'pi pi-fw pi-inbox',\n          routerLink: ['/home/issues'],\n        },\n        {\n          label: sidenav.Messages,\n          icon: 'pi pi-fw pi-envelope',\n          routerLink: ['/home/messages'],\n        },\n        {\n          label: sidenav.Devices,\n          icon: 'pi pi-fw pi-mobile',\n          routerLink: ['/home/devices'],\n        },\n        {\n          label: sidenav.Sessions,\n          icon: 'pi pi-fw pi-clock',\n          routerLink: ['/home/sessions'],\n        },\n        {\n          label: sidenav.Performance,\n          icon: 'pi pi-fw pi-chart-line',\n          routerLink: ['/home/performance'],\n          expanded: true,\n          items: [\n            {\n              label: sidenav.Queries,\n              icon: 'pi pi-fw pi-database',\n              routerLink: ['/home/queries'],\n            },\n            {\n              label: sidenav.Vitals,\n              icon: 'pi pi-fw pi-heart',\n              routerLink: ['/home/vitals'],\n            },\n            {\n              label: sidenav.Screen_Loads,\n              icon: 'pi pi-fw pi-stopwatch',\n              routerLink: ['/home/screen-loads'],\n            },\n            {\n              label: sidenav.Resources,\n              icon: 'pi pi-fw pi-server',\n              routerLink: ['/home/resources'],\n            },\n          ],\n        },\n        {\n          label: sidenav.Replays,\n          icon: 'pi pi-fw pi-play',\n          routerLink: ['/home/replays'],\n        },\n        {\n          label: sidenav.Releases,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/releases'],\n        },\n        {\n          label: sidenav.Stats,\n          icon: 'pi pi-fw pi-chart-bar',\n          routerLink: ['/home/stats'],\n        },\n      ],\n    });\n    this.model.push({\n      label: sidenav.Settings,\n      routerLink: ['/home/settings'],\n      items: [\n        {\n          label: sidenav.Settings_Account,\n          icon: 'pi pi-fw pi-user',\n          expanded: false,\n          routerLink: ['/home/settings/account'],\n          items: [\n            {\n              label: sidenav.Settings_Account_Details,\n              routerLink: ['/home/settings/account/details'],\n              icon: 'pi pi-fw pi-list'\n            },\n            {\n              label: sidenav.Settings_Account_Security,\n              routerLink: ['/home/settings/account/security'],\n              icon: 'pi pi-fw pi-shield'\n            },\n            {\n              label: sidenav.Settings_Account_Notifications,\n              routerLink: ['/home/settings/account/notifications'],\n              icon: 'pi pi-fw pi-envelope'\n            },\n            {\n              label: sidenav.Settings_Account_Close,\n              routerLink: ['/home/settings/account/close'],\n              icon: 'pi pi-fw pi-exclamation-circle'\n            }\n          ]\n        },\n        {\n          label: sidenav.Settings_Organization,\n          icon: 'pi pi-fw pi-building',\n          routerLink: ['/home/settings/organization']\n        },\n        {\n          label: sidenav.Settings_Projects,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/settings/projects']\n        },\n        {\n          label: sidenav.Settings_Teams,\n          icon: 'pi pi-fw pi-sitemap',\n          routerLink: ['/home/settings/teams']\n        },\n        {\n          label: sidenav.Settings_Members,\n          icon: 'pi pi-fw pi-users',\n          routerLink: ['/home/settings/members']\n        },\n        {\n          label: sidenav.Settings_Alerts,\n          icon: 'pi pi-fw pi-bell',\n          routerLink: ['/home/settings/alerts']\n        }\n      ]\n    })\n    this.model.push({\n      label: sidenav.Help,\n      items: [\n        {\n          label: sidenav.Help_Documentation,\n          icon: 'pi pi-fw pi-book',\n          routerLink: ['/home/help/documentation']\n        },\n        {\n          label: sidenav.Help_SDKS,\n          icon: 'pi pi-fw pi-wrench',\n          routerLink: ['/home/help/sdks']\n        },\n        {\n          label: sidenav.Help_Guides,\n          icon: 'pi pi-fw pi-question-circle',\n          routerLink: ['/home/help/guides']\n        },\n        {\n          label: sidenav.Help_Support,\n          icon: 'pi pi-fw pi-ticket',\n          routerLink: ['/home/help/support']\n        },\n      ]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/stats/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  standalone: true,\n  imports: [],\n  templateUrl: './stats.component.html',\n  styleUrl: './stats.component.scss'\n})\nexport class StatsComponent {\n\n}\n\n    \n\n    \n        stats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'stats works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportComponent.html":{"url":"components/SupportComponent.html","title":"component - SupportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/support/support.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./support.component.html\n            \n\n\n\n            \n                styleUrl\n                ./support.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  standalone: true,\n  imports: [],\n  templateUrl: './support.component.html',\n  styleUrl: './support.component.scss'\n})\nexport class SupportComponent {\n\n}\n\n    \n\n    \n        support works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'support works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Team {\n    teamId: string;\n    slug: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamDto.html":{"url":"interfaces/TeamDto.html","title":"interface - TeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/team.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TeamDto {\n  teamId: string;\n  slug: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamEffects.html":{"url":"injectables/TeamEffects.html","title":"injectable - TeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTeam$\n                            \n                            \n                                deleteTeam$\n                            \n                            \n                                loadMyTeams$\n                            \n                            \n                                loadOrganizationTeams$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/team/team.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\nimport { TeamService } from \"../../services/api/team.api.service\";\nimport { createTeam, createTeamFailure, createTeamSuccess, deleteTeam, deleteTeamFailure, deleteTeamSuccess, loadMyTeams, loadMyTeamsFailure, loadMyTeamsSuccess, loadOrganizationTeams, loadOrganizationTeamsFailure, loadOrganizationTeamsSuccess } from \"./team.actions\";\n\n@Injectable()\nexport class TeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  deleteTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/team.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                getMyTeams\n                            \n                            \n                                getOrganizationTeams\n                            \n                            \n                                isSlugTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/team.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam(dto: CreateTeamRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTeamRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \ndeleteTeam(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyTeams\n                        \n                    \n                \n            \n            \n                \ngetMyTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationTeams\n                        \n                    \n                \n            \n            \n                \ngetOrganizationTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TeamDto } from '../../domain/dto/team.dto';\nimport { api } from './api';\nimport { CreateTeamRequestDto } from '../../domain/dto/requests/create-team-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeamService {\n  constructor(private http: HttpClient) {}\n\n  getOrganizationTeams(): Observable {\n    return this.http.get(api.teamUrl, api.authOptions);\n  }\n\n  getMyTeams(): Observable {\n    return this.http.get(api.teamUrl + '/my', api.authOptions);\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.teamUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  createNewTeam(dto: CreateTeamRequestDto): Observable {\n    return this.http.post(api.teamUrl, dto, api.authOptions);\n  }\n\n  deleteTeam(teamId: string) {\n    return this.http.delete(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamState.html":{"url":"interfaces/TeamState.html","title":"interface - TeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createOrganizationTeamError\n                                        \n                                \n                                \n                                        \n                                            createOrganizationTeamStatus\n                                        \n                                \n                                \n                                        \n                                            deleteTeamError\n                                        \n                                \n                                \n                                        \n                                            deleteTeamStatus\n                                        \n                                \n                                \n                                        \n                                            myTeams\n                                        \n                                \n                                \n                                        \n                                            myTeamsError\n                                        \n                                \n                                \n                                        \n                                            myTeamsStatus\n                                        \n                                \n                                \n                                        \n                                            organizationTeams\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsError\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n  createTeam,\n  createTeamFailure,\n  createTeamSuccess,\n  deleteTeam,\n  deleteTeamFailure,\n  deleteTeamSuccess,\n  loadMyTeams,\n  loadMyTeamsSuccess,\n  loadOrganizationTeams,\n  loadOrganizationTeamsFailure,\n  loadOrganizationTeamsSuccess,\n} from './team.actions';\n\nexport interface TeamState {\n  organizationTeams: Team[] | null;\n  myTeams: Team[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  organizationTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  myTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createOrganizationTeamError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  deleteTeamError: any | null;\n  organizationTeamsStatus: StateStatus;\n  myTeamsStatus: StateStatus;\n  createOrganizationTeamStatus: StateStatus;\n  deleteTeamStatus: StateStatus;\n}\n\nexport const initialState: TeamState = {\n  organizationTeams: null,\n  organizationTeamsError: undefined,\n  organizationTeamsStatus: StateStatus.PENDING,\n  myTeams: null,\n  myTeamsError: undefined,\n  myTeamsStatus: StateStatus.PENDING,\n  createOrganizationTeamError: undefined,\n  createOrganizationTeamStatus: StateStatus.PENDING,\n  deleteTeamError: undefined,\n  deleteTeamStatus: StateStatus.PENDING,\n};\n\nexport const teamReducer = createReducer(\n  initialState,\n\n  //Handle loading organization teams\n  on(loadOrganizationTeams, (state) => ({\n    ...state,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    organizationTeams: teams,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    organizationTeamsError: error,\n    organizationTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading current user teams\n  on(loadMyTeams, (state) => ({\n    ...state,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    myTeams: teams,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    myTeamsError: error,\n    myTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createTeam, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createTeamSuccess, (state, team) => ({\n    ...state,\n    organizationTeams: [...(state.organizationTeams || []), team],\n    createOrganizationTeamError: null,\n    createOrganizationTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createTeamFailure, (state, { error }) => ({\n    ...state,\n    createOrganizationTeamError: error,\n    createOrganizationTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(deleteTeam, (state) => ({\n    ...state,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(deleteTeamSuccess, (state, { teamId }) => ({\n    ...state,\n    organizationTeams:\n      state.organizationTeams?.filter((team) => team.teamId !== teamId) ?? null,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(deleteTeamFailure, (state, { error }) => ({\n    ...state,\n    deleteTeamError: error,\n    deleteTeamStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/teams.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                                TeamsTableComponent\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                isLoadingOrganizationTeams\n                            \n                            \n                                myTeams\n                            \n                            \n                                organizationTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/teams.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/teams.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingOrganizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { PanelModule } from 'primeng/panel';\nimport { TeamsTableComponent } from '../../../shared/components/teams-table/teams-table.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  isLoadingMyTeams,\n  isLoadingOrganizationTeams,\n  selectMyTeams,\n  selectOrganizationTeams,\n} from '../../../core/state/team/team.selectors';\nimport {\n  loadMyTeams,\n  loadOrganizationTeams,\n} from '../../../core/state/team/team.actions';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-teams',\n  standalone: true,\n  templateUrl: './teams.component.html',\n  styleUrl: './teams.component.scss',\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TeamsTableComponent,\n    TranslateModule,\n  ],\n})\nexport class TeamsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  );\n\n  isLoadingOrganizationTeams = this.store.select(isLoadingOrganizationTeams);\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n  organizationTeams = this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store.dispatch(loadMyTeams());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n  \n    \n  \n\n  \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsTableComponent.html":{"url":"components/TeamsTableComponent.html","title":"component - TeamsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/teams-table/teams-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-teams-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTeamForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewTeamDialogVisible\n                            \n                            \n                                isLoadingCreateNewTeam\n                            \n                            \n                                isLoadingDeleteTeam\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createNewTeam\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetTeamsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableDeleteAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, teamService: TeamService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:108\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:102\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:96\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:90\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(team: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetTeamsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetTeamsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(team: Team, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeamForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewTeamDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateNewTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingDeleteTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingDeleteTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { Team } from '../../../core/domain/models/team.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport {\n  isLoadingCreateNewTeam,\n  isLoadingDeleteTeam,\n  selectCreateNewTeamStatus,\n  selectDeleteTeamStatus,\n} from '../../../core/state/team/team.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { createTeam, deleteTeam } from '../../../core/state/team/team.actions';\nimport { TeamService } from '../../../core/services/api/team.api.service';\nimport { CalendarModule } from 'primeng/calendar';\n\n@Component({\n  selector: 'app-teams-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './teams-table.component.html',\n  styleUrl: './teams-table.component.scss',\n})\nexport class TeamsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private teamService: TeamService,\n    private confirmationService: ConfirmationService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Team[] = undefined;\n\n  @ViewChild('slug') slugInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableDeleteAction: boolean = false;\n\n  createNewTeamForm = this.formBuilder.group({\n    slug: ['', [Validators.required]],\n  });\n  isAddNewTeamDialogVisible: boolean = false;\n  isSlugTaken: boolean | null = null;\n  isLoadingCreateNewTeam = this.store.select(isLoadingCreateNewTeam);\n  isLoadingDeleteTeam = this.store.select(isLoadingDeleteTeam);\n\n  private slugCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetTeamsForm();\n    this.isAddNewTeamDialogVisible = true;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showDeleteConfirmation(team: Team, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'teams-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('teams-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(team);\n      },\n      reject: () => {},\n    });\n  }\n\n  createNewTeam() {\n    this.store\n      .select(selectCreateNewTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('teams-table.error'),\n            detail: this.translateService.instant(\n              'teams-table.failed_to_create_team',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('teams-table.success'),\n            detail: this.translateService.instant('teams-table.team_created'),\n          });\n          this.isAddNewTeamDialogVisible = !this.isAddNewTeamDialogVisible;\n        }\n      });\n\n    const dto = {\n      slug: this.createNewTeamForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createTeam(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(team: any) {\n    this.store\n      .select(selectDeleteTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('teams-table.error'),\n            detail: this.translateService.instant(\n              'teams-table.failed_to_delete_team',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('teams-table.success'),\n            detail: this.translateService.instant('teams-table.removed_team'),\n          });\n        }\n      });\n\n    this.store.dispatch(deleteTeam({ teamId: team.teamId }));\n  }\n\n  private resetTeamsForm() {\n    this.createNewTeamForm = this.formBuilder.group({\n      slug: ['', [Validators.required]],\n    });\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.teamService.isSlugTaken(slug).subscribe({\n      next: (result) => {\n        this.isSlugTaken = result;\n      },\n      error: () => {\n        this.isSlugTaken = null;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"teams-table.slug\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"teams-table.added_on\" | translate }}\n          \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          {{ \"teams-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ team?.slug }}\n      \n      \n        {{ team?.createdAt | date }}\n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"teams-table.no_teams_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"teams-table.slug_label\" | translate }}\n        \n          @if (isSlugTaken !== null && !isSlugTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"teams-table.slug_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"teams-table.slug\" | translate }}                                                          {{ \"teams-table.added_on\" | translate }}                                                                                                          {{ \"teams-table.actions\" | translate }}                                        {{ team?.slug }}                    {{ team?.createdAt | date }}                                            {{ \"teams-table.no_teams_found\" | translate }}                          {{ \"teams-table.slug_label\" | translate }}                  @if (isSlugTaken !== null && !isSlugTaken) {                      } @else {                      }                          {{ \"teams-table.slug_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                organization\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{ flag: 'gb', label: 'English', value: 'en' }]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { environment } from '../../../../../environments/environment';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { selectCurrentOrganization } from '../../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DropdownModule,\n    AvatarModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    FormsModule,\n  ],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{ flag: 'gb', label: 'English', value: 'en' }];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  organization = this.store.select(selectCurrentOrganization);\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut());\n    this.router.navigate(['/auth']);\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/settings/account']);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ getAppName() }}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n        Logout\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getAppName() }}                                                                        {{ selectedLanguage.label }}                                                            {{ language.label }}                                              Logout            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VitalsComponent.html":{"url":"components/VitalsComponent.html","title":"component - VitalsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VitalsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/vitals/vitals.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vitals\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./vitals.component.html\n            \n\n\n\n            \n                styleUrl\n                ./vitals.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vitals',\n  standalone: true,\n  imports: [],\n  templateUrl: './vitals.component.html',\n  styleUrl: './vitals.component.scss'\n})\nexport class VitalsComponent {\n\n}\n\n    \n\n    \n        vitals works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'vitals works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VitalsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.2.1\n        \n            @angular/common : ^17.2.1\n        \n            @angular/compiler : ^17.2.1\n        \n            @angular/core : ^17.2.1\n        \n            @angular/forms : ^17.2.1\n        \n            @angular/platform-browser : ^17.2.1\n        \n            @angular/platform-browser-dynamic : ^17.2.1\n        \n            @angular/platform-server : ^17.2.1\n        \n            @angular/router : ^17.2.1\n        \n            @angular/ssr : ^17.2.0\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            PlatformType   (src/.../platform-type.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/platform-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlatformType\n                    \n                \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : ANDROID\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : WEB\n                            \n                        \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : IOS\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : SERVER\n                            \n                        \n                        \n                            \n                                 NODE\n                            \n                        \n                        \n                            \n                                Value : NODE\n                            \n                        \n                        \n                            \n                                 REACT\n                            \n                        \n                        \n                            \n                                Value : REACT\n                            \n                        \n                        \n                            \n                                 ANGULAR\n                            \n                        \n                        \n                            \n                                Value : ANGULAR\n                            \n                        \n                        \n                            \n                                 VUE\n                            \n                        \n                        \n                            \n                                Value : VUE\n                            \n                        \n                        \n                            \n                                 SVELTE\n                            \n                        \n                        \n                            \n                                Value : SVELTE\n                            \n                        \n                        \n                            \n                                 SPRING\n                            \n                        \n                        \n                            \n                                Value : SPRING\n                            \n                        \n                        \n                            \n                                 GO\n                            \n                        \n                        \n                            \n                                Value : GO\n                            \n                        \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CPP\n                            \n                        \n                        \n                            \n                                Value : CPP\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : JS\n                            \n                        \n                        \n                            \n                                 PYTHON\n                            \n                        \n                        \n                            \n                                Value : PYTHON\n                            \n                        \n                        \n                            \n                                 RUST\n                            \n                        \n                        \n                            \n                                Value : RUST\n                            \n                        \n                        \n                            \n                                 RUBY\n                            \n                        \n                        \n                            \n                                Value : RUBY\n                            \n                        \n                        \n                            \n                                 LARAVEL\n                            \n                        \n                        \n                            \n                                Value : LARAVEL\n                            \n                        \n                        \n                            \n                                 PHP\n                            \n                        \n                        \n                            \n                                Value : PHP\n                            \n                        \n                        \n                            \n                                 EXPRESS\n                            \n                        \n                        \n                            \n                                Value : EXPRESS\n                            \n                        \n                        \n                            \n                                 NEST\n                            \n                        \n                        \n                            \n                                Value : NEST\n                            \n                        \n                        \n                            \n                                 CS\n                            \n                        \n                        \n                            \n                                Value : CS\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                Value : COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                Value : DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                Value : DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                Value : LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                Value : LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                Value : LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                Value : PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                Value : PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                Value : PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                Value : TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n                        \n                            \n                                Value : INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToDate   (src/.../date.interceptor.ts)\n                        \n                        \n                            hasPermission   (src/.../auth.selectors.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            isIso8601   (src/.../date.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/date.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(body: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isIso8601\n                        \n                    \n                \n            \n            \n                \nisIso8601(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(user: User, permissionType: ResourceType, permissionValue: Permission)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionType\n                                            \n                                                            ResourceType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionValue\n                                            \n                                                            Permission\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    47 Components\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    36 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
