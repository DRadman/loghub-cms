var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessDeniedComponent.html",[0,0.151,1,0.848]],["body/components/AccessDeniedComponent.html",[0,0.241,1,1.448,2,1.136,3,0.083,4,0.063,5,0.905,6,0.905,7,0.905,8,0.073,9,4.549,10,3.39,11,4.549,12,0.905,13,1.846,14,1.846,15,1.676,16,5.422,17,1.193,18,1.108,19,1.223,20,2.824,21,3.418,22,4.165,23,3.985,24,2.999,25,1.223,26,6.15,27,1.284,28,6.15,29,0.418,30,0.009,31,1.647,32,0.473,33,2.156,34,1.741,35,1.741,36,2.232,37,2.602,38,0.083,39,0.473,40,6.15,41,3.422,42,6.15,43,0.905,44,1.223,45,1.223,46,0.905,47,1.484,48,0.905,49,0.453,50,0.905,51,0.883,52,0.905,53,0.883,54,0.905,55,0.883,56,0.905,57,0.883,58,0.905,59,0.883,60,0.905,61,0.883,62,0.819,63,1.223,64,0.883,65,1.223,66,0.883,67,0.905,68,0.883,69,0.905,70,0.883,71,0.905,72,0.883,73,0.861,74,1.223,75,0.883,76,0.905,77,0.883,78,0.905,79,0.883,80,0.905,81,0.883,82,0.905,83,0.883,84,0.905,85,0.883,86,0.905,87,0.883,88,0.905,89,0.883,90,0.84,91,1.386,92,0.883,93,0.905,94,0.883,95,0.905,96,0.883,97,0.905,98,0.883,99,0.905,100,0.883,101,0.883,102,0.76,103,1.164,104,0.905,105,1.164,106,1.223,107,0.883,108,0.883,109,0.905,110,0.883,111,0.905,112,0.883,113,0.905,114,0.883,115,0.905,116,0.883,117,0.84,118,0.883,119,0.905,120,0.883,121,0.905,122,0.905,123,0.883,124,0.905,125,0.883,126,0.905,127,0.883,128,0.905,129,0.883,130,0.883,131,0.905,132,0.883,133,0.905,134,0.883,135,0.905,136,0.883,137,0.905,138,0.883,139,0.861,140,0.883,141,0.905,142,0.883,143,0.905,144,0.905,145,0.905,146,0.006,147,0.006]],["title/components/AlertsComponent.html",[0,0.151,51,0.848]],["body/components/AlertsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,1.49,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,148,4.881,149,7.677,150,6.446,151,6.446,152,2.154]],["title/components/AppComponent.html",[0,0.151,53,0.848]],["body/components/AppComponent.html",[0,0.223,1,0.765,2,1.029,3,0.072,4,0.055,5,0.784,6,0.784,7,0.784,8,0.063,12,0.784,13,1.834,14,1.834,15,0.765,17,1.081,18,1.003,19,1.108,25,1.108,27,1.163,29,0.385,30,0.01,31,1.427,32,0.41,33,1.869,34,1.509,35,1.509,38,0.072,39,0.41,41,2.554,43,0.784,44,1.108,45,1.108,46,0.784,47,1.396,48,0.784,49,0.517,50,0.784,51,0.765,52,0.784,53,1.362,54,0.784,55,0.765,56,0.784,57,0.765,58,0.784,59,0.765,60,0.784,61,0.765,62,0.71,63,1.108,64,0.765,65,1.108,66,0.765,67,0.784,68,0.765,69,0.784,70,0.765,71,0.784,72,0.765,73,0.746,74,1.108,75,0.765,76,0.784,77,0.765,78,0.784,79,0.765,80,0.784,81,0.765,82,0.784,83,0.765,84,0.784,85,0.765,86,0.784,87,0.765,88,0.784,89,0.765,90,0.728,91,1.285,92,0.765,93,0.784,94,0.765,95,0.784,96,0.765,97,0.784,98,0.765,99,0.784,100,0.765,101,0.765,102,0.658,103,1.055,104,0.784,105,1.055,106,1.108,107,0.765,108,0.765,109,0.784,110,0.765,111,0.784,112,0.765,113,0.784,114,0.765,115,0.784,116,0.765,117,0.728,118,0.765,119,0.784,120,0.765,121,0.784,122,0.784,123,0.765,124,0.784,125,0.765,126,0.784,127,0.765,128,0.784,129,0.765,130,0.765,131,0.784,132,0.765,133,0.784,134,0.765,135,0.784,136,0.765,137,0.784,138,0.765,139,0.746,140,0.765,141,0.784,142,0.765,143,0.784,144,0.784,145,0.784,146,0.006,147,0.006,153,3.943,154,2.258,155,3.169,156,3.695,157,2.398,158,5.695,159,5.571,160,5.571,161,0.337,162,1.559,163,4.016,164,3.444,165,2.537,166,4.911,167,7.02,168,7.02,169,1.413,170,3.943,171,3.444,172,4.336,173,5.888,174,1.813,175,3.943,176,1.314,177,0.492,178,1.252,179,3.943,180,1.973,181,2.637,182,3.943,183,4.911,184,1.193,185,3.943,186,4.911,187,3.943,188,3.943,189,2.755,190,2.602,191,3.168,192,3.943,193,3.943,194,3.943,195,3.943,196,3.943,197,3.943,198,3.476,199,3.476,200,3.476,201,2.411,202,5.695,203,4.911,204,5.191,205,3.476,206,3.476,207,3.943,208,2.755,209,2.938,210,3.476,211,3.476,212,5.695,213,2.602,214,3.476,215,3.476,216,3.476,217,4.911,218,3.476,219,3.476,220,3.476,221,3.476]],["title/interfaces/AppConfig.html",[222,0.44,223,3.255]],["body/interfaces/AppConfig.html",[3,0.038,4,0.029,8,0.034,18,1.264,29,0.227,30,0.01,32,0.219,38,0.063,39,0.84,49,0.253,146,0.004,147,0.004,157,0.904,161,0.179,165,1.522,172,4.356,177,0.727,180,1.593,184,1.563,201,0.684,208,4.179,209,4.151,213,5.134,222,0.843,223,6.014,224,0.533,225,1.687,226,3.018,227,4.151,228,2.611,229,3.255,230,6.433,231,1.828,232,3.255,233,0.848,234,4.464,235,5.468,236,5.468,237,5.638,238,5.565,239,5.797,240,2.403,241,6.25,242,5.651,243,3.762,244,5.214,245,4.708,246,5.127,247,5.231,248,3.568,249,4.605,250,4.912,251,4.35,252,3.509,253,2.882,254,5.319,255,3.255,256,5.462,257,5.493,258,3.762,259,3.762,260,4.506,261,3.762,262,3.762,263,2.315,264,4.912,265,3.509,266,2.563,267,4.706,268,4.315,269,4.706,270,5.358,271,2.763,272,2.763,273,2.737,274,2.563,275,3.332,276,2.563,277,4.767,278,2.563,279,2.763,280,3.527,281,4.599,282,2.763,283,2.763,284,3.762,285,2.563,286,3.872,287,2.403,288,3.612,289,2.563,290,2.563,291,1.723,292,1.559,293,3.255,294,4.706,295,4.502,296,5.074,297,2.763,298,0.736,299,5.638,300,1.521,301,2.882,302,2.27,303,1.316,304,5.468,305,2.763,306,3.795,307,1.687,308,5.074,309,5.074,310,5.074,311,5.296,312,4.806,313,4.806,314,4.151,315,5.074,316,1.687,317,1.687,318,1.565,319,1.565,320,4.458,321,1.565,322,4.806,323,5.296,324,3.509,325,4.65,326,1.687,327,2.403,328,4.056,329,3.509,330,1.565,331,3.892,332,4.502,333,3.051,334,2.763,335,2.403,336,1.354,337,1.687,338,1.687,339,2.763,340,1.316,341,2.763,342,3.892,343,2.403,344,1.687,345,0.963,346,0.963,347,1.565,348,1.687,349,1.255,350,2.403,351,1.565,352,2.763,353,3.255,354,1.565,355,5.296,356,2.656,357,3.762,358,3.164,359,2.563,360,3.762,361,2.763,362,3.762,363,3.018,364,2.566,365,2.156,366,2.934,367,2.563,368,2.27,369,3.255,370,5.296,371,1.687,372,1.467,373,0.76,374,0.76,375,0.76,376,0.781,377,0.781,378,0.781,379,2.27,380,2.27,381,2.563,382,2.763,383,2.403,384,3.527,385,2.763,386,2.563,387,1.687,388,1.687,389,2.763,390,1.687,391,3.509,392,3.509,393,2.763,394,2.763,395,3.509,396,1.687,397,3.509,398,1.386,399,1.687,400,3.509,401,2.763,402,2.763,403,1.687,404,1.687,405,1.732,406,1.687,407,2.563,408,2.763,409,2.763,410,3.509,411,2.763,412,3.255,413,3.509,414,2.763,415,1.687,416,1.467,417,1.687,418,1.687,419,2.763,420,1.687,421,1.467,422,1.687,423,1.687,424,1.687,425,1.687,426,3.509,427,1.687,428,0.65,429,1.687,430,1.687,431,1.687,432,1.687,433,1.687,434,1.687]],["title/interfaces/AppState.html",[222,0.44,435,1.939]],["body/interfaces/AppState.html",[3,0.099,4,0.075,8,0.087,29,0.468,30,0.01,38,0.139,146,0.007,147,0.007,161,0.461,177,0.757,201,2.242,222,0.545,224,1.371,233,0.832,435,3.058,436,5.405,437,7.034,438,7.034,439,7.034,440,7.034,441,7.034,442,7.034,443,7.034,444,5.534,445,5.405,446,6.072,447,5.405,448,5.534,449,5.405,450,6.072,451,5.405,452,5.534,453,5.405,454,6.072,455,5.405,456,5.534,457,5.405,458,6.072,459,5.405,460,5.534,461,5.405,462,6.072,463,5.405,464,5.534,465,5.405,466,6.072,467,5.405,468,6.072,469,5.405,470,5.534,471,5.405,472,5.405,473,5.405]],["title/components/AuthComponent.html",[0,0.151,55,0.848]],["body/components/AuthComponent.html",[0,0.249,1,0.942,2,1.187,3,0.089,4,0.067,5,0.966,6,0.966,7,0.966,8,0.078,12,0.966,13,1.851,14,1.851,15,0.942,17,1.247,18,1.157,19,1.278,25,1.278,27,1.342,29,0.334,30,0.009,32,0.505,33,2.302,38,0.089,39,0.505,43,0.966,44,1.278,45,1.278,46,0.966,47,1.524,48,0.966,49,0.474,50,0.966,51,0.942,52,0.966,53,0.942,54,0.966,55,1.487,56,0.966,57,0.942,58,0.966,59,0.942,60,0.966,61,0.942,62,0.875,63,1.278,64,0.942,65,1.278,66,0.942,67,0.966,68,0.942,69,0.966,70,0.942,71,0.966,72,0.942,73,0.919,74,1.278,75,0.942,76,0.966,77,0.942,78,0.966,79,0.942,80,0.966,81,0.942,82,0.966,83,0.942,84,0.966,85,0.942,86,0.966,87,0.942,88,0.966,89,0.942,90,0.897,91,1.432,92,0.942,93,0.966,94,0.942,95,0.966,96,0.942,97,0.966,98,0.942,99,0.966,100,0.942,101,0.942,102,0.811,103,1.216,104,0.966,105,1.216,106,1.278,107,0.942,108,0.942,109,0.966,110,0.942,111,0.966,112,0.942,113,0.966,114,0.942,115,0.966,116,0.942,117,0.897,118,0.942,119,0.966,120,0.942,121,0.966,122,0.966,123,0.942,124,0.966,125,0.942,126,0.966,127,0.942,128,0.966,129,0.942,130,0.942,131,0.966,132,0.942,133,0.966,134,0.942,135,0.966,136,0.942,137,0.966,138,0.942,139,0.919,140,0.942,141,0.966,142,0.942,143,0.966,144,0.966,145,0.966,146,0.007,147,0.007,158,6.347,474,4.857,475,5.664,476,6.425,477,6.425]],["title/injectables/AuthEffects.html",[298,0.935,444,3.51]],["body/injectables/AuthEffects.html",[3,0.063,4,0.048,8,0.056,29,0.395,30,0.01,32,0.359,38,0.063,39,0.359,49,0.255,146,0.005,147,0.005,161,0.295,165,1.992,169,1.285,174,1.931,176,0.815,177,0.305,178,0.776,233,0.612,286,2.673,291,2.499,292,2.261,298,1.084,300,0.943,303,2.166,405,2.772,444,4.07,478,1.286,479,3.455,480,4.922,481,6.479,482,5.477,483,5.823,484,4.922,485,3.949,486,5.307,487,6.479,488,4.922,489,5.307,490,3.455,491,4.607,492,6.102,493,5.306,494,4.344,495,3.455,496,5.491,497,5.47,498,5.065,499,5.895,500,5.065,501,5.065,502,3.42,503,3.879,504,5.065,505,3.605,506,5.065,507,5.288,508,5.065,509,2.895,510,3.455,511,5.065,512,6.605,513,3.455,514,5.065,515,3.539,516,6.605,517,6.605,518,2.898,519,5.065,520,5.065,521,5.065,522,5.065,523,6.605,524,3.455,525,5.065,526,4.408,527,6.605,528,6.605,529,6.605,530,3.455,531,5.065,532,5.065,533,5.287,534,5.065,535,3.455,536,5.065,537,5.065,538,3.455,539,5.065,540,5.065,541,5.065,542,3.455,543,5.065,544,3.455,545,5.065,546,5.065,547,5.287,548,5.065,549,3.455,550,5.065,551,5.997,552,5.065,553,4.465,554,3.455,555,2.166,556,2.065,557,2.166,558,3.455,559,3.455,560,3.046,561,3.046,562,3.046,563,3.046,564,3.046,565,3.046,566,3.046,567,3.046,568,3.046]],["title/injectables/AuthService.html",[298,0.935,491,2.738]],["body/injectables/AuthService.html",[3,0.088,4,0.066,8,0.077,29,0.445,30,0.01,32,0.498,38,0.088,39,0.498,49,0.613,73,0.905,117,0.883,146,0.007,147,0.007,157,2.058,161,0.408,162,1.78,169,1.213,174,1.993,176,1.962,177,0.735,178,1.869,180,2.216,184,1.58,201,1.557,298,1.361,300,1.306,345,2.193,346,2.193,356,2.123,366,4.368,405,2.854,478,1.779,482,5.325,484,4.739,488,4.739,491,3.986,503,4.184,505,3.505,569,4.782,570,4.443,571,6.075,572,5.325,573,2.859,574,4.356,575,4.782,576,3.49,577,6.359,578,5.675,579,4.782,580,6.359,581,6.359,582,4.782,583,4.443,584,4.782,585,4.782,586,6.359,587,4.782,588,6.359,589,5.026,590,4.782,591,4.019,592,6.359,593,6.119,594,4.782,595,4.782,596,2.859,597,3.638,598,3.842,599,4.782,600,4.215,601,4.087,602,3.564,603,4.782,604,4.215,605,4.782,606,6.371,607,7.928,608,7.186,609,6.359,610,2.859,611,5.11,612,4.782,613,4.782]],["title/interfaces/AuthState.html",[222,0.44,437,3.51]],["body/interfaces/AuthState.html",[3,0.065,4,0.049,8,0.057,29,0.386,30,0.01,38,0.112,73,1.154,117,1.126,146,0.005,147,0.005,161,0.304,177,0.728,201,1.684,222,0.359,224,0.902,231,1.287,233,0.625,248,3.404,275,2.401,281,3.243,306,4.317,336,3.483,356,2.707,373,1.287,374,1.287,377,1.323,378,1.323,428,2.842,437,4.899,446,3.135,480,2.65,481,3.135,482,3.855,483,3.135,484,2.65,485,2.126,486,2.857,487,3.135,488,2.65,489,4.157,505,3.642,509,3.035,533,3.135,547,3.135,560,3.135,561,3.135,562,3.135,563,3.135,564,3.135,565,3.135,566,3.135,567,3.135,572,4.544,578,4.99,600,3.135,601,2.034,614,3.556,615,7.662,616,8.005,617,7.662,618,7.114,619,7.662,620,7.662,621,4.882,622,6.44,623,7.114,624,3.534,625,3.243,626,1.323,627,2.229,628,1.951,629,3.556,630,2.857,631,3.556,632,3.556,633,3.822,634,2.229,635,5.255,636,2.126,637,3.556,638,4.654,639,3.135,640,3.556,641,4.56,642,3.642,643,3.556,644,4.075,645,4.438,646,3.556,647,4.309,648,3.243,649,3.556,650,3.556,651,3.556,652,3.556,653,3.556,654,3.556,655,3.556,656,3.556,657,3.556,658,3.556,659,3.556,660,3.556,661,3.556,662,3.556,663,4.261,664,4.024,665,3.556,666,3.556,667,3.556]],["title/interfaces/AuthenticateRequestDto.html",[222,0.44,578,3.255]],["body/interfaces/AuthenticateRequestDto.html",[3,0.125,4,0.094,8,0.11,30,0.009,38,0.125,146,0.008,147,0.008,161,0.582,177,0.701,184,1.645,222,0.687,224,1.729,233,0.959,503,4.561,505,4.239,578,5.913,668,6.816,669,4.075]],["title/components/CloseComponent.html",[0,0.151,57,0.848]],["body/components/CloseComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,1.49,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,330,5.721,670,4.881,671,6.446,672,6.446]],["title/components/ConfigComponent.html",[0,0.151,59,0.848]],["body/components/ConfigComponent.html",[0,0.209,1,0.372,2,0.589,3,0.035,4,0.027,5,0.815,6,0.381,7,0.381,8,0.066,12,0.381,13,1.746,14,1.746,15,0.372,17,0.619,18,0.574,19,0.634,20,1.66,21,2.009,23,2.343,24,1.763,25,0.634,27,0.666,29,0.363,30,0.01,31,0.694,32,0.199,34,0.733,35,0.733,36,0.94,37,1.096,38,0.035,39,0.686,41,3.489,43,0.381,44,1.138,45,1.138,46,0.381,47,0.949,48,0.381,49,0.501,50,0.381,51,0.372,52,0.381,53,0.372,54,0.381,55,0.372,56,0.381,57,0.372,58,0.381,59,1.11,60,0.381,61,0.372,62,0.345,63,0.634,64,0.372,65,0.634,66,0.372,67,0.381,68,0.372,69,0.381,70,0.372,71,0.381,72,0.372,73,0.363,74,0.634,75,0.372,76,0.381,77,0.372,78,0.381,79,0.372,80,0.381,81,0.372,82,0.381,83,0.372,84,0.381,85,0.372,86,0.381,87,0.372,88,0.381,89,0.372,90,0.354,91,0.815,92,0.372,93,0.381,94,0.372,95,0.381,96,0.372,97,0.381,98,0.372,99,0.381,100,0.372,101,0.372,102,0.32,103,0.604,104,0.381,105,0.604,106,0.634,107,0.372,108,0.372,109,0.381,110,0.372,111,0.381,112,0.372,113,0.381,114,0.372,115,0.381,116,0.372,117,0.354,118,0.372,119,0.381,120,0.372,121,0.381,122,0.381,123,0.372,124,0.381,125,0.372,126,0.381,127,0.372,128,0.381,129,0.372,130,0.372,131,0.381,132,0.372,133,0.381,134,0.372,135,0.381,136,0.372,137,0.381,138,0.372,139,0.363,140,0.372,141,0.381,142,0.372,143,0.381,144,0.381,145,0.381,146,0.003,147,0.003,161,0.164,162,1.778,165,0.578,166,2.812,169,1.211,172,4.176,173,5.424,174,1.884,176,1.604,177,0.654,178,1.427,180,1.86,181,2.395,183,2.812,184,1.521,186,4.673,189,1.339,190,1.265,191,1.54,198,1.69,199,2.812,200,1.69,201,1.726,202,3.61,203,2.812,204,4.259,205,1.69,206,1.69,210,1.69,211,1.69,212,3.61,213,5.575,214,1.69,215,1.69,216,1.69,217,2.812,218,1.69,219,1.69,220,1.69,221,1.69,226,2.854,231,1.483,233,0.385,234,2.854,235,3.052,236,4.521,237,2.862,238,3.052,239,5.424,242,4.264,244,3.982,245,4.451,249,2.228,251,2.105,254,4.268,256,3.151,258,3.558,259,3.95,260,2.992,263,2.624,264,2.377,268,4.062,273,1.999,275,2.914,280,4.608,281,3.323,285,2.377,286,3.019,287,4.753,288,3.273,289,2.377,290,3.558,291,1.77,292,1.998,293,3.558,294,3.558,325,4.737,332,2.105,333,2.862,336,1.88,340,3.587,356,3.335,358,2.567,363,4.174,368,4.608,373,0.694,374,0.694,375,0.694,376,0.713,380,2.105,398,2.105,405,1.819,494,2.343,673,1.917,674,4.598,675,4.753,676,5.722,677,4.598,678,4.096,679,4.096,680,4.096,681,2.161,682,3.189,683,3.189,684,3.587,685,5.952,686,5.301,687,4.774,688,3.189,689,5.722,690,5.722,691,4.774,692,1.999,693,6.594,694,2.105,695,1.429,696,3.189,697,2.812,698,2.563,699,3.998,700,4.208,701,3.558,702,4.208,703,4.774,704,4.774,705,4.774,706,3.558,707,4.774,708,3.836,709,3.836,710,4.208,711,4.774,712,4.774,713,5.044,714,3.336,715,4.208,716,4.774,717,4.774,718,3.291,719,3.291,720,1.917,721,2.812,722,2.812,723,2.812,724,3.189,725,2.812,726,2.812,727,2.812,728,3.189,729,2.563,730,2.812,731,2.563,732,1.917,733,5.722,734,2.812,735,3.189,736,1.917,737,2.812,738,3.189,739,5.813,740,5.301,741,4.264,742,4.774,743,1.917,744,3.189,745,4.208,746,1.917,747,3.189,748,2.228,749,1.917,750,3.189,751,2.563,752,6.066,753,1.917,754,3.189,755,3.189,756,2.812,757,2.812,758,4.774,759,2.105,760,6.066,761,3.61,762,4.096,763,3.052,764,3.61,765,2.563,766,3.189,767,3.189,768,1.917,769,1.917,770,4.774,771,4.208,772,4.208,773,4.208,774,2.563,775,3.189,776,2.812,777,3.189,778,1.917,779,1.917,780,1.917,781,1.917,782,6.802,783,1.917,784,1.917,785,1.917,786,1.917,787,1.917,788,1.917,789,1.917,790,1.917,791,1.917,792,1.917,793,1.917,794,1.917,795,1.917,796,1.917,797,1.917,798,1.917,799,1.917,800,1.917,801,1.917,802,1.69,803,0.974,804,3.998,805,3.189,806,1.917,807,1.917,808,4.774,809,2.812,810,1.917,811,2.812,812,1.917,813,2.812,814,1.917,815,1.917,816,1.917,817,2.812,818,1.917,819,1.917,820,1.917,821,1.917,822,4.096,823,3.189,824,3.189,825,3.189,826,3.189,827,3.189,828,3.189,829,3.189,830,3.189,831,3.189,832,3.189,833,4.208,834,6.352,835,3.189,836,3.189,837,3.189,838,4.774,839,3.189,840,3.189]],["title/components/CreateOrganizationComponent.html",[0,0.151,61,0.848]],["body/components/CreateOrganizationComponent.html",[0,0.175,1,0.509,2,0.759,3,0.048,4,0.036,5,0.521,6,0.521,7,0.521,8,0.042,12,0.521,13,1.791,14,1.791,15,0.509,17,0.797,18,0.74,19,0.817,20,2.053,21,2.485,23,2.898,24,2.18,25,0.817,27,0.858,29,0.427,30,0.01,31,0.949,32,0.273,33,1.243,34,1.003,35,1.003,36,1.286,37,1.5,38,0.048,39,0.273,41,3.571,43,0.521,44,0.817,45,0.817,46,0.521,47,1.14,48,0.521,49,0.542,50,0.521,51,0.509,52,0.521,53,0.509,54,0.521,55,0.509,56,0.521,57,0.509,58,0.521,59,0.509,60,0.521,61,1.113,62,1.511,63,0.817,64,0.509,65,0.817,66,0.509,67,0.521,68,0.509,69,0.521,70,0.509,71,0.521,72,0.509,73,0.496,74,0.817,75,0.509,76,0.521,77,0.509,78,0.521,79,0.509,80,0.521,81,0.509,82,0.521,83,0.509,84,0.521,85,0.509,86,0.521,87,0.509,88,0.521,89,0.509,90,0.484,91,1.007,92,0.509,93,0.521,94,0.509,95,0.521,96,0.509,97,0.521,98,0.509,99,0.521,100,0.509,101,0.509,102,0.438,103,0.778,104,0.521,105,0.778,106,0.817,107,0.509,108,0.509,109,0.521,110,0.509,111,0.521,112,0.509,113,0.521,114,0.509,115,0.521,116,0.509,117,0.484,118,0.509,119,0.521,120,0.509,121,0.521,122,0.521,123,0.509,124,0.521,125,0.509,126,0.521,127,0.509,128,0.521,129,0.509,130,0.509,131,0.521,132,0.509,133,0.521,134,0.509,135,0.521,136,0.509,137,0.521,138,0.509,139,0.496,140,0.509,141,0.521,142,0.509,143,0.521,144,0.521,145,0.521,146,0.004,147,0.004,154,1.665,155,2.485,156,2.898,161,0.224,162,1.15,163,3.28,164,2.813,165,2.544,169,1.042,171,3.387,174,1.923,176,1.352,177,0.665,178,1.689,180,1.839,181,2.369,184,1.415,201,1.649,231,1.487,233,0.497,263,1.884,275,1.617,291,1.567,292,1.418,300,0.716,364,1.333,373,1.487,374,1.487,375,1.834,376,1.529,377,1.529,378,1.529,405,0.899,428,2.273,435,1.164,502,1.128,509,1.738,518,2.35,591,1.383,601,1.5,626,0.976,681,2.673,803,1.333,841,8.222,842,8.222,843,2.621,844,2.78,845,2.255,846,4.034,847,2.629,848,2.78,849,3.028,850,2.898,851,3.621,852,3.621,853,5.066,854,3.343,855,2.898,856,5.146,857,4.466,858,5.066,859,4.466,860,4.466,861,4.108,862,3.621,863,4.64,864,3.147,865,3.301,866,2.311,867,4.923,868,3.066,869,3.95,870,3.79,871,4.108,872,4.108,873,2.621,874,2.621,875,3.621,876,2.621,877,3.486,878,2.621,879,2.621,880,2.621,881,2.621,882,3.301,883,2.621,884,2.35,885,3.28,886,2.621,887,3.79,888,2.621,889,4.108,890,2.621,891,2.621,892,3.562,893,2.255,894,3.621,895,2.621,896,2.621,897,3.621,898,2.621,899,1.439,900,1.5,901,1.286,902,1.567,903,1.439,904,1.643,905,3.175,906,1.643,907,3.062,908,2.621,909,2.621,910,1.243,911,1.954,912,2.311,913,2.621,914,2.311,915,2.311,916,2.106,917,2.311,918,2.575,919,2.089,920,2.35,921,2.456,922,2.575,923,2.575,924,2.311,925,2.311,926,2.621,927,2.311,928,2.621,929,2.015,930,2.621,931,2.621,932,2.621,933,2.621,934,1.73,935,2.711,936,1.73,937,2.311,938,1.643,939,3.775,940,1.73,941,2.106,942,2.311,943,2.311,944,1.5,945,1.5,946,1.5,947,2.621,948,2.621,949,1.439,950,1.439,951,2.621,952,3.621,953,2.621,954,2.621,955,2.621,956,2.621,957,3.147,958,2.106,959,2.621,960,2.621,961,2.621,962,2.311,963,2.621,964,2.106,965,3.621,966,4.108,967,4.108,968,4.108,969,4.108,970,4.108,971,4.108]],["title/interfaces/CreateOrganizationRequestDto.html",[222,0.44,907,3.255]],["body/interfaces/CreateOrganizationRequestDto.html",[3,0.125,4,0.094,8,0.109,30,0.009,38,0.125,49,0.637,146,0.008,147,0.008,161,0.581,177,0.701,184,1.644,222,0.686,224,1.726,233,0.958,669,4.068,847,3.12,877,4.558,907,5.907,972,5.468]],["title/interfaces/CreateProjectRequestDto.html",[222,0.44,973,3.51]],["body/interfaces/CreateProjectRequestDto.html",[3,0.125,4,0.094,8,0.109,30,0.009,38,0.125,49,0.637,102,1.136,146,0.008,147,0.008,161,0.581,177,0.701,184,1.644,222,0.686,224,1.726,233,0.958,669,4.068,972,5.468,973,6.369,974,5.701]],["title/interfaces/CreateTeamRequestDto.html",[222,0.44,975,3.51]],["body/interfaces/CreateTeamRequestDto.html",[3,0.126,4,0.096,8,0.111,30,0.009,38,0.126,146,0.008,147,0.008,161,0.59,177,0.611,184,1.559,222,0.697,224,1.753,233,0.967,669,4.131,877,4.58,972,5.553,975,6.426,976,4.131]],["title/components/DetailsComponent.html",[0,0.151,64,0.848]],["body/components/DetailsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,1.49,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,977,4.881,978,5.364,979,5.682,980,5.682]],["title/components/DevicesComponent.html",[0,0.151,66,0.848]],["body/components/DevicesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,1.49,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,981,4.881,982,6.767,983,6.446,984,6.446]],["title/components/DocumentationComponent.html",[0,0.151,68,0.848]],["body/components/DocumentationComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,1.49,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,985,4.881,986,7.677,987,6.446,988,6.446]],["title/components/FooterComponent.html",[0,0.151,70,0.848]],["body/components/FooterComponent.html",[0,0.249,1,0.948,2,1.191,3,0.089,4,0.068,5,0.972,6,0.972,7,0.972,8,0.079,12,0.972,13,1.852,14,1.852,15,0.948,17,1.252,18,1.162,19,0.972,25,1.283,27,1.347,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.972,44,1.283,45,1.283,46,0.972,47,1.527,48,0.972,49,0.475,50,0.972,51,0.948,52,0.972,53,0.948,54,0.972,55,0.948,56,0.972,57,0.948,58,0.972,59,0.948,60,0.972,61,0.948,62,0.88,63,1.283,64,0.948,65,1.283,66,0.948,67,0.972,68,0.948,69,0.972,70,1.49,71,0.972,72,0.948,73,0.925,74,1.283,75,0.948,76,0.972,77,0.948,78,0.972,79,0.948,80,0.972,81,0.948,82,0.972,83,0.948,84,0.972,85,0.948,86,0.972,87,0.948,88,0.972,89,0.948,90,0.902,91,1.436,92,0.948,93,0.972,94,0.948,95,0.972,96,0.948,97,0.972,98,0.948,99,0.972,100,0.948,101,0.948,102,0.816,103,1.221,104,0.972,105,1.221,106,1.283,107,0.948,108,0.948,109,0.972,110,0.948,111,0.972,112,0.948,113,0.972,114,0.948,115,0.972,116,0.948,117,0.902,118,0.948,119,0.972,120,0.948,121,0.972,122,0.972,123,0.948,124,0.972,125,0.948,126,0.972,127,0.948,128,0.972,129,0.948,130,0.948,131,0.972,132,0.948,133,0.972,134,0.948,135,0.972,136,0.948,137,0.972,138,0.948,139,0.925,140,0.948,141,0.972,142,0.948,143,0.972,144,0.972,145,0.972,146,0.007,147,0.007,989,4.886,990,6.451,991,6.451,992,6.451,993,6.451]],["title/components/ForgotPasswordComponent.html",[0,0.151,72,0.848]],["body/components/ForgotPasswordComponent.html",[0,0.18,1,0.531,2,0.784,3,0.05,4,0.038,5,0.544,6,0.544,7,0.544,8,0.044,12,0.544,13,1.797,14,1.797,15,0.531,17,0.824,18,0.765,19,0.845,20,2.11,21,2.554,22,3.112,24,2.24,25,0.845,27,0.887,29,0.424,30,0.01,31,0.99,32,0.285,33,1.297,34,1.047,35,1.047,36,1.342,38,0.05,39,0.285,41,3.609,43,0.544,44,0.845,45,0.845,46,0.544,47,1.167,48,0.544,49,0.432,50,0.544,51,0.531,52,0.544,53,0.531,54,0.544,55,0.531,56,0.544,57,0.531,58,0.544,59,0.531,60,0.544,61,0.531,62,0.493,63,0.845,64,0.531,65,0.845,66,0.531,67,0.544,68,0.531,69,0.544,70,0.531,71,0.544,72,1.139,73,1.328,74,0.845,75,0.531,76,0.544,77,0.531,78,0.544,79,0.531,80,0.544,81,0.531,82,0.544,83,0.531,84,0.544,85,0.531,86,0.544,87,0.531,88,0.544,89,0.531,90,0.505,91,1.035,92,0.531,93,0.544,94,0.531,95,0.544,96,0.531,97,0.544,98,0.531,99,0.544,100,0.531,101,0.531,102,0.457,103,0.804,104,0.544,105,0.804,106,0.845,107,0.531,108,0.531,109,0.544,110,0.531,111,0.544,112,0.531,113,0.544,114,0.531,115,0.544,116,0.531,117,0.505,118,0.531,119,0.544,120,0.531,121,0.544,122,0.544,123,0.531,124,0.544,125,0.531,126,0.544,127,0.531,128,0.544,129,0.531,130,0.531,131,0.544,132,0.531,133,0.544,134,0.531,135,0.544,136,0.531,137,0.544,138,0.531,139,0.518,140,0.531,141,0.544,142,0.531,143,0.544,144,0.544,145,0.544,146,0.004,147,0.004,154,1.721,155,2.554,156,2.978,161,0.234,162,1.188,163,3.356,164,2.878,165,2.561,169,1.077,171,3.441,174,1.902,176,1.002,177,0.641,178,1.741,180,1.692,181,2.307,184,0.961,231,0.99,233,0.513,263,1.254,275,1.672,291,1.61,292,1.457,300,0.747,336,1.077,364,1.391,373,1.538,374,1.538,375,1.538,376,1.018,377,1.018,378,1.018,428,2.397,435,1.215,484,5.01,485,1.635,491,4.397,502,1.177,503,3.097,505,2.083,509,2.013,515,1.912,518,1.565,570,4.439,583,1.912,626,1.018,642,1.342,681,2.747,803,1.391,844,2.857,845,2.331,846,4.087,848,2.857,849,3.112,850,2.978,854,3.436,855,2.978,864,3.22,868,3.115,869,3.846,870,3.85,884,2.429,885,2.429,887,4.087,892,2.978,893,1.501,899,1.501,900,1.565,901,1.342,902,1.635,903,1.501,904,1.715,905,2.662,906,1.715,910,1.297,918,1.715,919,1.391,920,1.565,921,1.635,922,1.715,923,1.715,929,2.554,934,1.806,935,1.806,936,1.806,938,1.715,939,2.039,941,2.198,944,2.978,945,2.978,946,2.978,949,2.857,950,3.69,957,2.331,994,8.148,995,8.148,996,2.412,997,3.744,998,3.744,999,5.205,1000,4.589,1001,3.879,1002,3.879,1003,3.637,1004,3.165,1005,1.715,1006,4.247,1007,3.165,1008,2.736,1009,2.736,1010,2.736,1011,2.736,1012,2.736,1013,2.412,1014,3.165,1015,2.736,1016,2.968,1017,2.736,1018,2.412,1019,2.412,1020,2.736,1021,3.165,1022,2.412,1023,1.912,1024,4.589,1025,1.715,1026,2.736,1027,1.501,1028,1.715,1029,2.039,1030,2.039,1031,2.039,1032,1.806,1033,1.912,1034,1.912,1035,1.912,1036,2.736,1037,8.22,1038,3.744,1039,2.736,1040,2.736,1041,2.412,1042,2.412,1043,2.412,1044,2.412,1045,2.736,1046,1.912,1047,2.412,1048,3.165,1049,2.039,1050,2.412,1051,2.412,1052,2.039,1053,2.736,1054,2.039,1055,3.165,1056,3.744,1057,4.247,1058,3.744,1059,3.744,1060,4.247,1061,4.247,1062,3.744]],["title/interfaces/ForgotPasswordRequestDto.html",[222,0.44,1063,3.85]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.126,4,0.096,8,0.111,30,0.009,38,0.126,146,0.008,147,0.008,161,0.59,177,0.611,184,1.559,222,0.697,224,1.753,233,0.967,505,3.39,669,4.131,1063,7.05,1064,6.91,1065,4.58]],["title/components/GuidesComponent.html",[0,0.151,75,0.848]],["body/components/GuidesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,1.49,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,1066,4.881,1067,7.677,1068,6.446,1069,6.446]],["title/components/HomeComponent.html",[0,0.151,77,0.848]],["body/components/HomeComponent.html",[0,0.154,1,0.422,2,0.653,3,0.04,4,0.03,5,0.432,6,0.432,7,0.432,8,0.035,12,0.432,13,1.766,14,1.766,15,0.422,17,0.686,18,0.637,19,0.703,20,1.813,25,0.703,27,0.739,29,0.416,30,0.01,31,0.787,32,0.226,33,1.03,34,0.832,35,0.832,38,0.04,39,0.59,43,0.432,44,0.703,45,1.209,46,0.432,47,1.025,48,0.432,49,0.38,50,0.432,51,0.422,52,0.432,53,0.422,54,0.432,55,0.422,56,0.432,57,0.422,58,0.432,59,1,60,0.432,61,0.422,62,0.392,63,0.703,64,0.422,65,0.703,66,0.422,67,0.432,68,0.422,69,0.432,70,1,71,0.432,72,0.422,73,0.412,74,0.703,75,0.422,76,0.432,77,1,78,0.432,79,0.422,80,0.432,81,0.422,82,0.432,83,0.422,84,0.432,85,0.422,86,0.432,87,0.422,88,0.432,89,0.422,90,0.401,91,0.889,92,0.422,93,0.432,94,0.422,95,0.432,96,0.422,97,0.432,98,0.422,99,0.432,100,0.422,101,0.422,102,0.363,103,0.67,104,0.432,105,0.67,106,0.703,107,0.422,108,0.422,109,0.432,110,0.422,111,0.432,112,0.422,113,0.432,114,0.422,115,0.432,116,0.422,117,0.401,118,0.422,119,0.432,120,0.422,121,0.432,122,0.432,123,0.422,124,0.432,125,0.422,126,0.432,127,0.422,128,0.432,129,0.422,130,1.18,131,0.432,132,0.422,133,0.432,134,0.422,135,0.432,136,0.422,137,0.432,138,0.422,139,0.412,140,1.18,141,0.432,142,0.422,143,0.432,144,0.432,145,0.432,146,0.004,147,0.004,154,1.434,155,2.194,156,2.558,161,0.186,162,0.99,163,2.948,164,2.528,165,2.389,169,0.897,171,3.144,172,3.896,173,4.776,174,1.941,176,0.834,177,0.666,178,1.366,180,1.84,181,2.37,184,1.123,189,1.519,190,1.435,191,1.747,201,2.086,208,2.472,213,2.335,226,1.299,231,1.866,233,0.428,237,1.519,240,3.601,244,4.329,248,2.62,253,2.952,254,3.634,256,4.012,261,2.636,263,0.997,266,2.636,268,2.828,269,3.841,270,3.333,286,2.72,291,1.094,292,0.99,295,2.952,300,0.593,321,1.62,325,4.244,327,2.472,331,2.472,332,2.335,335,1.519,356,0.965,363,3.081,364,1.105,373,1.281,374,1.281,375,1.619,376,1.316,377,1.316,378,1.316,405,1.768,428,1.594,435,0.965,485,1.299,509,1.214,626,0.809,675,2.472,684,3.811,694,2.335,699,2.472,714,3.125,737,3.118,756,4.543,765,6.3,774,4.141,804,3.125,809,3.942,811,1.916,813,1.916,817,3.118,844,2.454,847,0.997,864,2.828,868,2.699,870,3.517,887,3.517,893,1.941,899,1.193,901,1.066,910,1.03,911,1.62,912,1.916,915,1.916,916,1.747,919,2.274,920,2.558,927,1.916,929,1.066,937,1.916,938,1.363,939,2.636,940,2.952,942,1.916,943,1.916,950,1.193,1025,1.363,1027,1.193,1028,1.363,1032,1.435,1070,2.174,1071,5.649,1072,4.472,1073,3.537,1074,3.537,1075,4.472,1076,4.472,1077,4.472,1078,4.472,1079,4.472,1080,4.472,1081,4.472,1082,4.472,1083,5.671,1084,5.153,1085,4.472,1086,5.153,1087,5.153,1088,5.153,1089,4.472,1090,1.519,1091,5.671,1092,6.832,1093,6.906,1094,3.537,1095,2.174,1096,3.537,1097,4.885,1098,3.537,1099,5.153,1100,2.174,1101,7.537,1102,5.958,1103,2.174,1104,3.537,1105,5.649,1106,7.266,1107,5.671,1108,5.147,1109,3.333,1110,3.942,1111,2.636,1112,2.636,1113,2.842,1114,3.537,1115,4.141,1116,2.174,1117,5.153,1118,3.537,1119,3.118,1120,2.174,1121,3.118,1122,4.543,1123,3.537,1124,2.174,1125,2.174,1126,2.174,1127,2.174,1128,5.153,1129,5.671,1130,3.537,1131,3.537,1132,2.174,1133,3.537,1134,3.118,1135,2.174,1136,2.174,1137,2.174,1138,2.174,1139,2.174,1140,2.174,1141,2.174,1142,2.174,1143,2.174,1144,2.174,1145,2.174,1146,2.174,1147,3.118,1148,2.174,1149,1.519,1150,2.174,1151,2.174,1152,2.174,1153,2.174,1154,3.537,1155,2.174,1156,6.408,1157,3.537,1158,3.537,1159,5.153,1160,2.174,1161,2.174,1162,2.174,1163,2.174,1164,3.537,1165,5.671,1166,2.174,1167,2.174,1168,2.174,1169,2.174,1170,3.537,1171,4.472,1172,2.174,1173,1.916,1174,1.916,1175,1.916,1176,1.916,1177,2.174,1178,2.174,1179,2.174,1180,1.519,1181,2.636,1182,2.842,1183,2.174,1184,2.174,1185,2.174,1186,2.174,1187,2.174,1188,3.537,1189,2.174,1190,2.174,1191,1.916,1192,4.472,1193,2.174,1194,2.174,1195,2.174,1196,3.537,1197,2.174,1198,1.193,1199,5.153,1200,1.916,1201,2.174,1202,3.537,1203,2.174,1204,2.174,1205,2.174,1206,3.537,1207,2.174,1208,2.174,1209,2.174,1210,3.537,1211,2.174,1212,3.537,1213,2.174,1214,2.174,1215,2.174,1216,3.118,1217,2.174,1218,2.174,1219,2.174,1220,2.636,1221,1.747]],["title/interfaces/Invitation.html",[222,0.44,664,2.883]],["body/interfaces/Invitation.html",[3,0.122,4,0.092,8,0.107,29,0.347,30,0.009,38,0.122,146,0.008,147,0.008,161,0.569,177,0.735,184,1.637,222,0.673,224,1.692,233,0.947,664,5.17,1065,4.529,1222,6.669,1223,7.565,1224,4.756,1225,6.669]],["title/components/InvitationComponent.html",[0,0.151,79,0.848]],["body/components/InvitationComponent.html",[0,0.17,1,0.486,2,0.732,3,0.046,4,0.035,5,0.499,6,0.499,7,0.499,8,0.04,12,0.499,13,1.786,14,1.786,15,0.486,17,0.77,18,1.008,19,0.789,20,1.994,21,2.414,22,2.942,24,2.118,25,0.789,27,0.828,29,0.433,30,0.01,31,0.908,32,0.261,33,1.188,34,0.959,35,0.959,36,1.23,38,0.046,39,0.261,41,3.981,43,0.499,44,0.789,45,0.789,46,0.499,47,1.113,48,0.499,49,0.412,50,0.499,51,0.486,52,0.499,53,0.486,54,0.499,55,0.486,56,0.499,57,0.486,58,0.499,59,0.486,60,0.499,61,0.486,62,0.452,63,0.789,64,0.486,65,0.789,66,0.486,67,0.499,68,0.486,69,0.499,70,0.486,71,0.499,72,0.486,73,0.475,74,0.789,75,0.486,76,0.499,77,0.486,78,0.499,79,1.086,80,0.499,81,0.486,82,0.499,83,0.486,84,0.499,85,0.486,86,0.499,87,0.486,88,0.499,89,0.486,90,0.463,91,0.979,92,0.486,93,0.499,94,0.486,95,0.499,96,0.486,97,0.499,98,0.486,99,0.499,100,0.486,101,0.486,102,0.419,103,0.751,104,0.499,105,0.751,106,0.789,107,0.486,108,0.486,109,0.499,110,0.486,111,0.499,112,0.486,113,0.499,114,0.486,115,0.499,116,0.486,117,0.463,118,0.486,119,0.499,120,0.486,121,0.499,122,0.499,123,0.486,124,0.499,125,0.486,126,0.499,127,0.486,128,0.499,129,0.486,130,0.486,131,0.499,132,0.486,133,0.499,134,0.486,135,0.499,136,0.486,137,0.499,138,0.486,139,0.475,140,0.486,141,0.499,142,0.486,143,0.499,144,0.499,145,0.499,146,0.004,147,0.004,154,1.608,155,2.414,156,2.815,161,0.214,162,1.11,163,3.2,164,2.744,165,2.512,169,1.006,171,3.33,174,1.867,176,0.935,177,0.622,178,1.581,180,1.624,181,2.224,184,1.126,201,0.816,231,0.908,233,0.479,263,2.256,275,1.562,291,1.522,292,1.705,300,0.684,336,0.987,364,2.016,373,0.908,374,0.908,375,1.782,376,0.933,377,0.933,378,0.933,428,2.241,435,1.113,480,2.956,485,1.499,491,4.255,493,4.743,502,1.079,503,2.952,505,2.414,509,2.091,515,1.752,518,1.434,570,4.743,572,4.169,583,1.752,589,2.618,591,2.597,601,1.434,626,0.933,664,2.618,681,2.597,692,2.486,803,1.275,844,2.701,845,2.177,846,3.977,848,2.701,849,2.942,850,2.815,854,3.248,855,2.815,864,3.07,868,3.014,869,3.707,870,3.726,884,2.269,885,4.246,887,3.726,892,2.815,893,1.376,899,1.376,900,1.434,901,1.23,902,1.499,903,1.376,904,1.572,905,2.486,906,1.572,910,1.188,918,1.572,919,1.275,920,1.434,921,1.499,922,1.572,923,1.572,929,1.946,934,1.655,935,1.655,936,1.655,938,1.572,939,1.868,944,2.269,945,2.269,946,2.269,949,2.177,950,3.07,957,2.177,978,1.752,1001,3.667,1002,3.667,1003,3.438,1004,2.956,1005,1.572,1007,2.956,1014,2.956,1016,2.771,1021,2.956,1023,1.752,1025,1.572,1027,1.376,1028,1.572,1029,1.868,1030,1.868,1031,1.868,1032,1.655,1033,1.752,1034,1.752,1035,1.752,1046,1.752,1048,2.956,1052,1.868,1054,1.868,1055,2.956,1065,2.597,1221,3.187,1226,2.507,1227,3.954,1228,3.667,1229,3.966,1230,3.966,1231,4.338,1232,4.932,1233,3.966,1234,2.507,1235,2.507,1236,2.507,1237,2.507,1238,2.507,1239,2.507,1240,2.507,1241,2.507,1242,2.956,1243,3.187,1244,3.187,1245,3.248,1246,3.248,1247,2.507,1248,2.507,1249,2.507,1250,2.507,1251,2.015,1252,1.868,1253,2.21,1254,2.507,1255,2.015,1256,2.015,1257,2.507,1258,2.507,1259,2.507,1260,2.015,1261,2.507,1262,2.507,1263,3.966,1264,2.507,1265,2.507,1266,2.21,1267,2.21,1268,2.21,1269,2.21,1270,2.21,1271,2.507,1272,3.966,1273,3.966,1274,3.966,1275,3.966,1276,3.966,1277,3.966,1278,3.966,1279,3.966,1280,3.966,1281,3.966,1282,3.966,1283,3.966,1284,3.966,1285,3.966,1286,3.966]],["title/interfaces/InvitationDto.html",[222,0.44,1287,3.052]],["body/interfaces/InvitationDto.html",[3,0.122,4,0.092,8,0.107,29,0.347,30,0.009,38,0.122,146,0.008,147,0.008,161,0.569,177,0.735,184,1.637,222,0.673,224,1.692,233,0.947,1065,4.529,1223,7.565,1224,4.756,1287,5.473,1288,6.669,1289,6.669]],["title/interfaces/InvitationRequestDto.html",[222,0.44,1290,3.51]],["body/interfaces/InvitationRequestDto.html",[3,0.125,4,0.094,8,0.11,30,0.009,38,0.125,146,0.008,147,0.008,161,0.582,177,0.701,184,1.645,222,0.687,224,1.729,233,0.959,669,4.075,1065,4.561,1290,6.375,1291,6.816,1292,6.038]],["title/injectables/InvitationService.html",[298,0.935,493,3.052]],["body/injectables/InvitationService.html",[3,0.102,4,0.077,8,0.09,29,0.449,30,0.01,32,0.581,38,0.102,39,0.581,49,0.595,146,0.007,147,0.007,157,2.404,161,0.477,162,1.968,169,1.417,174,1.905,176,1.905,177,0.714,178,1.815,180,2.05,184,1.57,298,1.505,300,1.525,345,2.561,346,2.561,366,3.775,405,2.641,478,2.079,480,5.241,493,4.914,573,3.339,574,4.621,576,3.859,589,5.331,591,4.485,596,3.339,597,4.022,601,4.022,604,4.924,606,5.65,608,6.199,610,3.339,663,3.903,978,3.903,1232,7.121,1287,3.903,1290,6.491,1293,5.586,1294,7.032,1295,5.241,1296,5.586,1297,7.032,1298,5.586,1299,7.032,1300,5.586,1301,7.032,1302,5.586,1303,5.586,1304,5.586,1305,7.696,1306,5.586,1307,4.163]],["title/components/IssuesComponent.html",[0,0.151,81,0.848]],["body/components/IssuesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,1.49,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,1308,4.881,1309,7.677,1310,6.446,1311,6.446]],["title/injectables/JwtService.html",[298,0.935,492,3.51]],["body/injectables/JwtService.html",[3,0.101,4,0.076,8,0.088,29,0.362,30,0.01,32,0.572,38,0.101,39,0.572,49,0.563,146,0.007,147,0.007,157,2.365,161,0.469,162,1.947,169,1.394,174,1.996,176,1.801,177,0.675,178,1.716,180,2.207,181,2.904,184,1.634,201,2.266,298,1.489,301,5.299,302,3.626,303,3.444,345,2.519,346,2.519,349,4.16,405,2.388,428,2.484,475,6.135,478,2.044,492,5.592,571,4.095,622,6.174,684,5.673,1312,8.596,1313,4.095,1314,5.61,1315,8.029,1316,8.029,1317,6.959,1318,6.959,1319,5.494,1320,5.494,1321,5.494,1322,5.494,1323,4.415,1324,6.959,1325,4.415,1326,6.959,1327,5.494,1328,5.494,1329,5.494,1330,6.959,1331,6.959,1332,5.494,1333,5.494,1334,5.494,1335,5.494]],["title/injectables/LayoutService.html",[172,2.397,298,0.935]],["body/injectables/LayoutService.html",[3,0.034,4,0.026,8,0.03,18,1.298,29,0.208,30,0.01,32,0.193,38,0.057,39,0.819,49,0.383,146,0.003,147,0.003,157,0.798,161,0.158,162,0.868,165,2.027,169,0.47,172,4.192,174,1.78,176,0.437,177,0.706,178,0.416,180,2.077,181,1.93,184,1.375,201,0.603,208,3.931,209,3.483,213,4.435,222,0.786,223,5.624,225,1.489,226,2.39,227,2.98,228,1.854,229,2.311,230,5.891,231,1.692,232,2.311,233,0.812,234,3.571,235,4.668,236,4.668,237,4.936,238,5.145,239,5.008,240,1.295,241,5.4,242,5.692,243,3.877,244,4.84,245,4.417,246,4.376,247,3.877,248,3.037,249,3.266,250,3.483,251,3.085,252,2.492,253,2.047,254,5.249,255,2.311,256,5.147,257,5.035,258,2.311,259,2.311,260,4.212,261,2.311,262,2.311,263,1.422,264,3.483,265,3.212,266,1.381,267,5.008,268,4.28,269,4.451,270,5.548,271,1.489,272,1.489,273,2.506,274,1.381,275,3.332,276,1.381,277,4.548,278,1.381,279,1.489,280,2.167,281,4.327,282,1.489,283,1.489,284,2.311,285,1.381,286,4.247,287,1.295,288,2.287,289,1.381,290,1.381,291,2.229,292,2.016,293,2.98,294,5.264,295,4.839,296,4.18,297,1.489,298,0.664,299,5.997,300,1.777,301,3.713,302,2.047,303,1.162,304,5.624,305,3.212,306,3.902,307,1.489,308,5.23,309,5.23,310,5.23,311,5.547,312,5.033,313,5.033,314,4.193,315,5.4,316,1.489,317,1.489,318,1.381,319,1.381,320,4.193,321,1.381,322,5.891,323,6.137,324,4.52,325,4.922,326,1.489,327,2.167,328,3.756,329,4.52,330,1.381,331,3.931,332,4.662,333,3.266,334,4.18,335,3.266,336,1.574,337,1.489,338,1.489,339,3.756,340,1.944,341,3.756,342,4.696,343,3.266,344,2.492,345,0.85,346,0.85,347,1.381,348,1.489,349,1.108,350,3.266,351,2.311,352,3.756,353,4.193,354,2.311,355,6.204,356,3.136,357,4.668,358,3.926,359,3.483,360,4.668,361,3.756,362,4.668,363,3.744,364,3.184,365,2.93,366,3.465,367,3.483,368,3.085,369,4.193,370,6.204,371,2.492,372,2.167,373,0.671,374,0.671,375,0.671,376,0.69,377,0.69,378,0.69,379,3.085,380,3.085,381,3.483,382,3.756,383,3.266,384,4.376,385,3.756,386,3.483,387,2.492,388,2.492,389,3.756,390,1.489,391,3.212,392,3.212,393,2.492,394,2.492,395,3.212,396,2.492,397,3.212,398,2.047,399,1.489,400,4.52,401,4.52,402,3.756,403,3.212,404,3.212,405,1.93,406,1.489,407,3.483,408,3.756,409,4.18,410,4.52,411,4.18,412,4.668,413,5.033,414,4.52,415,3.212,416,2.794,417,3.212,418,1.489,419,4.52,420,2.492,421,2.167,422,3.756,423,1.489,424,1.489,425,3.756,426,3.212,427,1.489,428,0.573,429,1.489,430,1.489,431,1.489,432,3.756,433,1.489,434,1.489,478,0.69,1336,1.853,1337,1.853,1338,1.853,1339,1.853,1340,1.853,1341,1.853,1342,1.853,1343,1.853,1344,1.853,1345,1.853,1346,1.853,1347,1.853,1348,1.853,1349,1.853,1350,1.853,1351,1.853,1352,1.853]],["title/interfaces/LayoutState.html",[222,0.44,304,3.255]],["body/interfaces/LayoutState.html",[3,0.039,4,0.029,8,0.034,18,1.349,29,0.229,30,0.01,32,0.221,38,0.063,39,0.802,49,0.256,146,0.004,147,0.004,157,0.913,161,0.181,165,1.532,172,4.11,177,0.703,180,1.601,184,1.383,201,0.691,208,3.549,209,3.277,213,4.367,222,0.84,223,5.484,224,0.538,225,1.704,226,3.036,227,3.785,228,2.629,229,3.277,230,6.446,231,1.592,232,3.277,233,0.851,234,3.955,235,4.479,236,4.479,237,4.921,238,4.726,239,4.931,240,1.482,241,5.659,242,5.581,243,3.277,244,4.939,245,4.716,246,4.623,247,4.173,248,3.224,249,3.549,250,3.785,251,3.352,252,3.533,253,2.902,254,5.352,255,3.277,256,5.499,257,5.558,258,2.584,259,2.584,260,3.975,261,2.584,262,2.584,263,1.59,264,3.785,265,2.786,266,1.581,267,4.173,268,4.549,269,5.249,270,5.666,271,1.704,272,1.704,273,2.173,274,1.581,275,3.498,276,1.581,277,5.312,278,1.581,279,1.704,280,2.423,281,4.694,282,1.704,283,1.704,284,2.584,285,1.581,286,3.806,287,1.482,288,2.515,289,1.581,290,1.581,291,1.571,292,1.421,293,2.584,294,4.479,295,4.519,296,4.081,297,1.704,298,0.742,299,5.649,300,1.529,301,2.902,302,2.288,303,1.33,304,6.025,305,3.533,306,4.044,307,2.786,308,6.109,309,6.109,310,6.109,311,6.191,312,5.913,313,5.913,314,5.102,315,5.795,316,2.786,317,2.786,318,2.584,319,2.584,320,5.484,321,2.584,322,5.096,323,5.659,324,4.499,325,4.867,326,2.786,327,3.549,328,5.316,329,4.499,330,2.584,331,4.784,332,5.085,333,3.912,334,3.533,335,3.073,336,1.731,337,2.786,338,2.786,339,2.786,340,1.33,341,2.786,342,3.912,343,2.423,344,1.704,345,0.973,346,0.973,347,1.581,348,1.704,349,1.268,350,2.423,351,1.581,352,2.786,353,3.277,354,1.581,355,5.316,356,2.668,357,3.785,358,3.183,359,2.584,360,3.785,361,2.786,362,3.785,363,3.036,364,2.582,365,2.173,366,2.948,367,2.584,368,2.288,369,3.277,370,5.316,371,1.704,372,1.482,373,0.768,374,0.768,375,0.768,376,0.789,377,0.789,378,0.789,379,2.288,380,2.288,381,2.584,382,2.786,383,2.423,384,3.549,385,2.786,386,2.584,387,1.704,388,1.704,389,2.786,390,1.704,391,3.533,392,3.533,393,2.786,394,2.786,395,3.533,396,1.704,397,3.533,398,1.4,399,1.704,400,3.533,401,2.786,402,2.786,403,1.704,404,1.704,405,1.742,406,1.704,407,2.584,408,2.786,409,2.786,410,3.533,411,2.786,412,3.277,413,3.533,414,2.786,415,1.704,416,1.482,417,1.704,418,1.704,419,2.786,420,1.704,421,1.482,422,1.704,423,1.704,424,1.704,425,1.704,426,3.533,427,1.704,428,0.656,429,1.704,430,1.704,431,1.704,432,1.704,433,1.704,434,1.704]],["title/injectables/LocalStorage.html",[298,0.935,301,2.883]],["body/injectables/LocalStorage.html",[3,0.095,4,0.072,8,0.083,29,0.386,30,0.01,31,1.874,32,0.539,38,0.095,39,0.539,49,0.579,146,0.007,147,0.007,154,2.098,157,2.228,161,0.572,162,1.874,165,2.24,169,1.884,174,2.027,176,1.852,177,0.719,178,1.764,180,2.167,181,2.859,184,1.666,189,3.617,201,1.685,233,0.81,288,4.492,292,2.198,298,1.433,301,4.421,303,3.244,345,2.373,349,4.981,356,2.298,405,2.548,428,2.429,478,1.926,694,4.421,974,3.416,1313,3.857,1314,5.487,1323,4.159,1325,4.159,1353,8.685,1354,6.546,1355,5.382,1356,5.368,1357,5.382,1358,5.382,1359,5.967,1360,5.905,1361,5.382,1362,5.382,1363,4.563,1364,5.382,1365,4.563,1366,5.382,1367,4.563,1368,4.159,1369,4.159,1370,4.563,1371,4.992,1372,3.857,1373,4.563,1374,4.563,1375,4.563,1376,4.563,1377,5.905,1378,5.176,1379,4.563,1380,4.563,1381,4.563,1382,4.563,1383,4.563,1384,4.563]],["title/components/LoginComponent.html",[0,0.151,83,0.848]],["body/components/LoginComponent.html",[0,0.182,1,0.539,2,0.794,3,0.051,4,0.039,5,0.553,6,0.553,7,0.553,8,0.045,12,0.553,13,1.798,14,1.798,15,0.539,17,0.834,18,0.774,19,0.855,20,2.131,21,2.579,22,3.143,24,2.263,25,0.855,27,0.898,29,0.435,30,0.01,31,1.006,32,0.289,33,1.317,34,1.063,35,1.063,36,1.363,38,0.051,39,0.289,41,3.882,43,0.553,44,0.855,45,0.855,46,0.553,47,1.177,48,0.553,49,0.436,50,0.553,51,0.539,52,0.553,53,0.539,54,0.553,55,0.539,56,0.553,57,0.539,58,0.553,59,0.539,60,0.553,61,0.539,62,0.501,63,0.855,64,0.539,65,0.855,66,0.539,67,0.553,68,0.539,69,0.553,70,0.539,71,0.553,72,0.539,73,0.526,74,0.855,75,0.539,76,0.553,77,0.539,78,0.553,79,0.539,80,0.553,81,0.539,82,0.553,83,1.148,84,0.553,85,0.539,86,0.553,87,0.539,88,0.553,89,0.539,90,0.513,91,1.046,92,0.539,93,0.553,94,0.539,95,0.553,96,0.539,97,0.553,98,0.539,99,0.553,100,0.539,101,0.539,102,0.464,103,0.814,104,0.553,105,0.814,106,0.855,107,0.539,108,0.539,109,0.553,110,0.539,111,0.553,112,0.539,113,0.553,114,0.539,115,0.553,116,0.539,117,0.513,118,0.539,119,0.553,120,0.539,121,0.553,122,0.553,123,0.539,124,0.553,125,0.539,126,0.553,127,0.539,128,0.553,129,0.539,130,0.539,131,0.553,132,0.539,133,0.553,134,0.539,135,0.553,136,0.539,137,0.553,138,0.539,139,0.526,140,0.539,141,0.553,142,0.539,143,0.553,144,0.553,145,0.553,146,0.004,147,0.004,154,1.742,155,2.579,156,3.008,161,0.237,162,1.203,163,3.385,164,2.903,165,2.523,169,1.091,171,3.461,174,1.928,176,1.014,177,0.624,178,1.638,180,1.879,181,2.321,184,0.971,231,1.006,233,0.52,263,1.274,275,1.693,291,1.626,292,1.471,300,0.759,336,1.094,364,1.413,373,1.006,374,1.006,375,1.556,376,1.034,377,1.034,378,1.034,405,1.475,428,2.314,435,1.234,482,3.204,485,1.661,491,4.423,502,1.196,503,3.123,505,2.579,509,1.804,515,1.942,518,1.59,570,4.471,583,1.942,626,1.034,681,2.775,803,1.413,844,2.886,845,2.359,846,4.106,848,2.886,849,3.143,850,3.008,854,3.47,855,3.008,864,3.248,868,3.133,869,3.87,870,3.872,884,2.459,885,3.385,887,3.872,892,3.008,893,1.525,899,1.525,900,1.59,901,1.363,902,1.661,903,1.525,904,1.742,905,2.695,906,1.742,910,1.317,918,1.742,919,1.413,920,1.59,921,1.661,922,1.742,923,1.742,929,2.109,934,1.834,935,1.834,936,1.834,938,1.742,944,1.59,945,1.59,946,1.59,949,1.525,950,2.359,957,2.359,1001,3.918,1002,3.918,1003,3.674,1004,3.204,1005,1.742,1007,3.204,1014,3.204,1016,3.004,1021,3.204,1023,1.942,1025,1.742,1027,1.525,1028,1.742,1029,2.071,1030,2.071,1031,2.071,1032,1.834,1033,1.942,1034,1.942,1035,1.942,1046,1.942,1048,3.204,1052,2.071,1054,2.071,1055,3.204,1058,3.79,1059,3.79,1227,4.225,1228,3.918,1242,3.204,1251,2.233,1252,2.071,1385,2.779,1386,6.766,1387,4.299,1388,4.299,1389,5.258,1390,6.766,1391,5.917,1392,4.299,1393,2.779,1394,2.779,1395,2.779,1396,2.779,1397,2.779,1398,2.779,1399,2.779,1400,2.779,1401,2.779,1402,2.779,1403,2.779,1404,2.779,1405,2.779,1406,2.071,1407,2.233,1408,2.779,1409,2.779,1410,2.779,1411,2.779,1412,2.779,1413,2.779,1414,2.45,1415,2.45,1416,4.299,1417,4.299,1418,4.299,1419,4.299,1420,4.299,1421,4.299,1422,4.299,1423,4.299,1424,4.299]],["title/components/LogsComponent.html",[0,0.151,85,0.848]],["body/components/LogsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,1.49,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,1425,4.881,1426,6.767,1427,6.446,1428,6.446]],["title/components/MembersComponent.html",[0,0.151,87,0.848]],["body/components/MembersComponent.html",[0,0.213,1,1.312,2,0.97,3,0.066,4,0.05,5,0.722,6,0.722,7,0.722,8,0.058,10,2.705,12,0.722,13,1.827,14,1.827,15,0.704,17,1.019,18,0.946,19,1.044,20,2.5,24,2.655,25,1.044,27,1.097,29,0.448,30,0.01,31,1.314,32,0.378,34,1.389,35,1.389,38,0.066,39,0.378,43,0.722,44,1.044,45,1.044,46,0.722,47,1.344,48,0.722,49,0.455,50,0.722,51,0.704,52,0.722,53,0.704,54,0.722,55,0.704,56,0.722,57,0.704,58,0.722,59,0.704,60,0.722,61,0.704,62,0.654,63,1.044,64,0.704,65,1.044,66,0.704,67,0.722,68,0.704,69,0.722,70,0.704,71,0.722,72,0.704,73,0.687,74,1.044,75,0.704,76,0.722,77,0.704,78,0.722,79,0.704,80,0.722,81,0.704,82,0.722,83,0.704,84,0.722,85,0.704,86,0.722,87,1.312,88,0.722,89,1.312,90,1.139,91,1.227,92,0.704,93,0.722,94,0.704,95,0.722,96,0.704,97,0.722,98,0.704,99,0.722,100,0.704,101,0.704,102,0.606,103,0.994,104,0.722,105,0.994,106,1.044,107,0.704,108,0.704,109,0.722,110,0.704,111,0.722,112,0.704,113,0.722,114,0.704,115,0.722,116,0.704,117,0.67,118,0.704,119,0.722,120,0.704,121,0.722,122,0.722,123,0.704,124,0.722,125,0.704,126,0.722,127,0.704,128,0.722,129,0.704,130,0.704,131,0.722,132,0.704,133,0.722,134,0.704,135,0.722,136,0.704,137,0.722,138,0.704,139,0.687,140,0.704,141,0.722,142,0.704,143,0.722,144,0.722,145,0.722,146,0.005,147,0.005,154,2.128,155,3.026,161,0.31,162,1.469,164,3.316,169,0.921,174,1.897,176,0.856,177,0.321,178,0.815,180,0.967,181,1.245,233,0.635,291,2.385,292,2.362,300,0.991,346,1.664,435,1.612,502,1.562,626,1.351,845,2.882,846,3.386,848,3.386,868,3.32,901,1.78,903,1.992,910,1.72,929,3.668,1027,1.992,1090,2.536,1429,3.629,1430,4.957,1431,5.251,1432,5.251,1433,6.169,1434,4.957,1435,5.438,1436,5.764,1437,6.169,1438,6.76,1439,4.957,1440,3.629,1441,3.629,1442,5.251,1443,6.008,1444,3.629,1445,6.008,1446,7.477,1447,4.219,1448,3.629,1449,4.629,1450,3.629,1451,4.219,1452,3.629,1453,5.251,1454,3.629,1455,5.251,1456,3.629,1457,5.251,1458,3.629,1459,2.916,1460,2.076,1461,2.916,1462,2.17,1463,2.916,1464,2.17,1465,2.916,1466,2.916,1467,3.2,1468,3.629,1469,3.629,1470,3.629,1471,3.2,1472,2.916,1473,2.916,1474,3.629,1475,3.2,1476,2.916,1477,3.629,1478,4.219]],["title/interfaces/MembersDto.html",[222,0.44,1479,3.255]],["body/interfaces/MembersDto.html",[3,0.121,4,0.092,8,0.106,29,0.405,30,0.009,38,0.121,146,0.008,147,0.008,161,0.565,177,0.733,222,0.667,224,1.678,233,0.942,602,6.658,1287,5.981,1439,6.878,1479,5.81,1480,6.615,1481,7.545,1482,6.379,1483,6.615,1484,6.615]],["title/injectables/MembersEffects.html",[298,0.935,448,3.51]],["body/injectables/MembersEffects.html",[3,0.089,4,0.067,8,0.078,29,0.425,30,0.01,32,0.504,38,0.089,39,0.504,49,0.357,146,0.007,147,0.007,161,0.414,165,2.169,169,1.627,174,1.878,176,1.143,177,0.428,178,1.089,233,0.775,291,2.368,292,2.142,298,1.373,300,1.323,448,5.155,478,1.803,493,5.832,494,4.774,496,5.376,497,5.312,499,5.349,502,3.095,507,5.129,509,2.807,526,4.991,553,5.655,555,3.037,556,2.897,557,3.037,568,4.271,639,5.655,1295,5.705,1466,6.575,1485,4.845,1486,5.349,1487,7.213,1488,4.845,1489,6.575,1490,4.845,1491,6.415,1492,6.415,1493,6.415,1494,6.415,1495,6.415,1496,4.845,1497,6.415,1498,6.415,1499,6.415,1500,6.415,1501,6.415,1502,4.845,1503,6.415,1504,6.415,1505,6.415,1506,4.845,1507,6.415,1508,6.415,1509,6.415,1510,5.655,1511,4.845,1512,4.271,1513,4.271,1514,4.271,1515,4.271,1516,4.271,1517,4.271,1518,4.845]],["title/injectables/MembersService.html",[298,0.935,1489,3.51]],["body/injectables/MembersService.html",[3,0.112,4,0.085,8,0.098,29,0.444,30,0.01,32,0.637,38,0.112,39,0.637,49,0.548,146,0.008,147,0.008,157,2.635,161,0.523,162,2.082,169,1.553,174,1.891,176,1.755,177,0.658,178,1.672,180,1.982,184,1.481,298,1.593,300,1.671,345,2.807,346,2.807,366,3.933,405,2.553,478,2.278,573,3.659,574,4.772,576,4.084,596,3.659,597,4.257,610,4.449,1479,4.562,1486,5.2,1489,5.98,1519,6.121,1520,8.341,1521,6.121,1522,6.121,1523,7.442,1524,6.121,1525,6.56,1526,5.396,1527,6.121,1528,6.121]],["title/interfaces/MembersState.html",[222,0.44,438,3.51]],["body/interfaces/MembersState.html",[3,0.084,4,0.063,8,0.074,29,0.406,30,0.01,38,0.128,90,1.582,146,0.006,147,0.006,161,0.391,177,0.739,178,1.028,201,2.01,222,0.461,224,1.161,231,2.235,233,0.746,248,2.326,306,4.244,373,2.235,374,2.235,375,1.656,376,1.703,377,2.297,378,1.703,428,2.823,438,5.615,450,4.033,509,3.024,621,4.591,624,4.522,625,3.87,626,1.703,627,2.868,628,2.511,633,3.87,634,4.38,635,4.177,636,2.735,638,4.38,642,2.244,644,3.835,645,2.735,647,3.835,648,3.87,664,4.937,847,2.098,1049,3.41,1050,4.033,1051,4.033,1198,2.511,1295,3.41,1439,3.676,1466,3.676,1479,5.575,1481,4.033,1482,3.41,1486,3.197,1487,4.033,1512,4.033,1513,4.033,1514,4.033,1515,4.033,1516,4.033,1517,4.033,1526,4.033,1529,4.575,1530,8.366,1531,8.568,1532,8.366,1533,8.366,1534,8.366,1535,4.575,1536,4.575,1537,4.575,1538,4.575,1539,4.575,1540,4.575,1541,4.575,1542,4.575,1543,4.575,1544,4.575,1545,4.575,1546,4.575,1547,4.575]],["title/components/MembersTableComponent.html",[0,0.151,89,0.848]],["body/components/MembersTableComponent.html",[0,0.155,1,0.426,2,0.658,3,0.065,4,0.03,5,0.437,6,0.437,7,0.437,8,0.035,12,0.437,13,1.767,14,1.767,15,0.426,17,0.692,18,1.361,19,0.709,20,1.825,21,2.209,23,2.575,24,1.938,25,0.709,27,0.745,29,0.433,30,0.01,31,0.795,32,0.228,34,0.84,35,0.84,36,1.077,37,1.256,38,0.04,39,0.228,41,3.822,43,0.437,44,0.709,45,0.709,46,0.437,47,1.031,48,0.437,49,0.45,50,0.437,51,0.426,52,0.437,53,0.426,54,0.437,55,0.426,56,0.437,57,0.426,58,0.437,59,0.426,60,0.437,61,0.426,62,0.395,63,0.709,64,0.426,65,0.709,66,0.426,67,0.437,68,0.426,69,0.437,70,0.426,71,0.437,72,0.426,73,0.416,74,0.709,75,0.426,76,0.437,77,0.426,78,0.437,79,0.426,80,0.437,81,0.426,82,0.437,83,0.426,84,0.437,85,0.426,86,0.437,87,0.426,88,0.437,89,1.006,90,1.596,91,0.895,92,0.426,93,0.437,94,0.426,95,0.437,96,0.426,97,0.437,98,0.426,99,0.437,100,0.426,101,0.426,102,0.367,103,0.675,104,0.437,105,0.675,106,0.709,107,0.426,108,0.426,109,0.437,110,0.426,111,0.437,112,0.426,113,0.437,114,0.426,115,0.437,116,0.426,117,0.405,118,0.426,119,0.437,120,0.426,121,0.437,122,0.437,123,0.426,124,0.437,125,0.426,126,0.437,127,0.426,128,0.437,129,0.426,130,0.426,131,0.437,132,0.426,133,0.437,134,0.426,135,0.437,136,0.426,137,0.437,138,0.426,139,0.416,140,0.426,141,0.437,142,0.426,143,0.437,144,0.437,145,0.437,146,0.004,147,0.004,161,0.187,162,0.998,165,2.022,169,0.904,171,3.156,174,1.932,176,1.222,177,0.678,178,1.164,180,1.627,181,2.095,184,0.831,201,0.715,231,1.291,233,0.431,263,3.178,275,3.093,286,3.223,291,2.338,292,2.174,300,0.599,336,1.773,373,1.291,374,1.291,375,1.291,376,1.327,377,1.327,378,1.327,435,0.975,509,1.223,518,2.039,591,1.158,621,4.209,624,1.158,626,0.817,628,1.205,642,1.749,644,2.845,647,2.845,663,1.534,681,2.376,692,2.235,751,4.165,759,2.353,803,1.116,845,1.957,846,3.803,848,2.471,849,2.691,850,2.575,855,2.575,868,2.712,869,3.681,884,2.575,885,3.493,893,1.205,899,1.205,900,1.256,901,1.077,902,1.312,903,1.205,910,1.04,919,3.621,920,1.256,921,1.312,929,1.749,944,2.965,945,2.965,946,2.965,949,2.845,950,2.471,1065,2.735,1090,1.534,1109,3.355,1149,3.146,1180,1.534,1181,2.657,1198,3.909,1220,3.863,1224,3.396,1244,3.618,1287,3.146,1292,1.534,1295,1.636,1467,1.935,1471,1.935,1475,7.267,1486,3.146,1525,5.025,1548,8.244,1549,1.764,1550,5.569,1551,4.581,1552,3.618,1553,3.355,1554,3.618,1555,3.355,1556,3.618,1557,2.865,1558,2.865,1559,3.618,1560,4.502,1561,4.502,1562,5.183,1563,5.183,1564,3.618,1565,2.865,1566,5.183,1567,5.183,1568,5.183,1569,3.565,1570,2.691,1571,3.618,1572,3.618,1573,4.502,1574,3.618,1575,4.502,1576,3.618,1577,2.195,1578,2.195,1579,2.195,1580,2.195,1581,1.764,1582,1.764,1583,1.764,1584,2.195,1585,2.195,1586,2.865,1587,4.165,1588,1.764,1589,3.565,1590,2.195,1591,3.565,1592,2.195,1593,1.935,1594,2.195,1595,3.565,1596,2.195,1597,2.865,1598,2.195,1599,1.764,1600,2.195,1601,3.565,1602,2.195,1603,3.565,1604,1.764,1605,3.565,1606,2.195,1607,1.636,1608,1.764,1609,1.764,1610,1.636,1611,1.764,1612,1.636,1613,2.195,1614,1.764,1615,2.195,1616,2.195,1617,2.195,1618,1.764,1619,2.195,1620,2.195,1621,2.195,1622,1.764,1623,2.195,1624,2.195,1625,4.502,1626,2.195,1627,2.865,1628,2.657,1629,2.657,1630,2.865,1631,6.434,1632,2.865,1633,2.195,1634,2.865,1635,2.195,1636,2.195,1637,2.195,1638,2.195,1639,2.195,1640,1.935,1641,1.764,1642,1.935,1643,1.935,1644,1.935,1645,1.935,1646,1.935,1647,1.764,1648,1.935,1649,1.764,1650,1.935,1651,1.935,1652,3.143,1653,1.935,1654,2.195,1655,1.935,1656,2.195,1657,2.195,1658,2.195,1659,3.565,1660,3.565,1661,2.195,1662,3.565,1663,3.565,1664,3.565,1665,3.565,1666,3.565,1667,3.143,1668,3.565,1669,3.565,1670,3.565,1671,3.565,1672,3.565,1673,3.565,1674,3.565,1675,3.565,1676,3.565,1677,3.565]],["title/injectables/MemoryStorage.html",[298,0.935,1371,3.255]],["body/injectables/MemoryStorage.html",[3,0.098,4,0.074,8,0.086,29,0.278,30,0.01,32,0.557,38,0.098,39,0.557,49,0.586,146,0.007,147,0.007,154,2.17,161,0.644,162,1.916,165,2.276,174,2.016,176,1.876,177,0.743,178,1.787,180,2.19,181,2.729,184,1.667,201,1.744,233,0.827,288,4.55,291,1.656,292,2.112,298,1.465,347,3.991,349,4.512,405,2.589,428,2.543,478,1.993,694,4.519,940,3.534,1313,3.991,1314,5.558,1355,5.501,1356,5.641,1357,5.501,1358,5.501,1359,6.064,1361,5.501,1362,5.501,1364,4.303,1366,4.303,1368,4.303,1369,4.303,1371,5.102,1372,3.991,1570,4.512,1678,8.654,1679,5.355,1680,5.355,1681,5.355,1682,5.355,1683,4.303,1684,5.355,1685,5.355,1686,4.721,1687,5.355,1688,4.519,1689,5.355,1690,5.355,1691,5.355,1692,6.846,1693,5.355,1694,4.721,1695,5.355,1696,5.355]],["title/interfaces/MenuChangeEvent.html",[222,0.44,1697,3.51]],["body/interfaces/MenuChangeEvent.html",[3,0.124,4,0.094,8,0.109,30,0.009,38,0.124,146,0.008,147,0.008,161,0.579,177,0.699,178,1.777,184,1.547,222,0.684,224,1.72,233,0.956,275,3.297,1356,5.695,1697,6.356,1698,6.782,1699,4.739,1700,6.782,1701,7.606]],["title/injectables/MenuService.html",[298,0.935,685,3.255]],["body/injectables/MenuService.html",[2,1.486,3,0.071,4,0.054,8,0.063,18,1.258,29,0.334,30,0.01,32,0.406,38,0.071,39,0.82,49,0.287,117,1.565,146,0.006,147,0.006,157,1.679,161,0.333,162,1.547,165,2.503,174,1.806,176,0.92,177,0.568,178,0.876,180,1.473,181,1.897,226,3.305,228,3.839,233,0.668,234,3.839,245,3.996,248,3.265,268,4.417,275,2.751,291,2.161,292,2.252,298,1.183,299,6.241,300,1.065,306,3.814,325,5.206,340,3.465,342,3.863,343,3.863,345,1.789,353,5.207,356,3.764,357,5.998,358,4.379,360,5.207,364,4.091,366,4.158,372,4.487,379,4.611,380,4.868,384,4.882,478,1.451,674,4.442,675,3.863,685,6.317,763,4.786,804,2.726,919,4.345,1113,5.16,1115,4.442,1570,3.839,1697,6.746,1699,2.726,1702,3.901,1703,5.528,1704,5.528,1705,6.986,1706,7.806,1707,7.806,1708,7.317,1709,5.528,1710,3.901,1711,6.986,1712,5.16,1713,5.16,1714,6.502,1715,6.422,1716,5.661,1717,6.422,1718,3.901,1719,6.415,1720,3.901,1721,7.094,1722,6.467,1723,7.094,1724,5.528,1725,3.901,1726,3.901,1727,5.528,1728,3.901,1729,3.901,1730,3.901,1731,3.901,1732,3.901]],["title/components/MenuitemComponent.html",[0,0.151,92,0.848]],["body/components/MenuitemComponent.html",[0,0.19,1,0.302,2,0.494,3,0.029,4,0.022,5,0.31,6,0.31,7,0.31,8,0.025,12,0.31,13,1.713,14,1.709,15,0.302,17,0.519,18,0.752,19,0.532,20,1.426,22,2.103,23,2.012,24,1.514,25,0.532,29,0.327,30,0.01,31,0.564,32,0.162,33,0.738,34,0.596,35,0.596,37,0.891,38,0.029,39,0.84,41,2.353,43,0.31,44,0.532,45,1.092,46,0.31,47,0.83,48,0.31,49,0.308,50,0.31,51,0.302,52,0.31,53,0.302,54,0.31,55,0.302,56,0.31,57,0.302,58,0.31,59,0.302,60,0.31,61,0.302,62,0.281,63,0.532,64,0.302,65,0.532,66,0.302,67,0.31,68,0.302,69,0.31,70,0.302,71,0.31,72,0.302,73,0.295,74,0.532,75,0.302,76,0.31,77,0.302,78,0.31,79,0.302,80,0.31,81,0.302,82,0.31,83,0.302,84,0.31,85,0.302,86,0.31,87,0.302,88,0.31,89,0.302,90,0.288,91,0.7,92,1.435,93,0.31,94,0.302,95,0.31,96,0.302,97,0.31,98,0.302,99,0.31,100,0.302,101,0.302,102,0.26,103,0.507,104,0.31,105,0.507,106,0.532,107,0.302,108,0.302,109,0.31,110,0.302,111,0.31,112,0.302,113,0.31,114,0.302,115,0.31,116,0.302,117,0.868,118,0.302,119,0.31,120,0.302,121,0.31,122,0.31,123,0.302,124,0.31,125,0.302,126,0.31,127,0.302,128,0.31,129,0.302,130,0.302,131,0.31,132,0.302,133,0.31,134,0.302,135,0.31,136,0.302,137,0.31,138,0.302,139,0.295,140,0.302,141,0.31,142,0.302,143,0.31,144,0.31,145,0.31,146,0.003,147,0.003,154,1.084,155,1.726,157,2.867,161,0.658,162,0.749,164,2.844,165,0.807,169,1.537,172,3.819,174,1.744,176,0.631,177,0.706,178,0.601,180,1.252,181,1.432,184,1.285,190,1.028,201,0.507,204,2.15,226,2.103,228,1.6,229,4.321,231,1.274,233,0.323,234,3.284,244,2.617,245,4.853,247,1.994,248,3.196,251,1.028,253,2.755,254,5.032,256,1.766,257,4.051,262,2.622,263,3.737,268,4.794,273,4.176,274,1.994,275,2.163,277,1.87,281,3.634,286,3.423,288,2.936,291,1.699,292,1.864,295,3.827,300,0.425,306,3.805,314,3.825,319,1.994,320,1.994,325,4.565,327,5.788,342,3.586,350,1.87,354,1.994,356,1.188,358,4.176,363,4.565,364,0.792,365,2.205,366,2.518,367,1.994,368,4,369,1.994,372,1.87,373,0.969,374,0.969,375,0.969,376,0.996,377,0.58,378,0.58,379,1.766,380,2.322,384,1.87,398,1.766,405,1.989,416,1.87,421,2.917,428,0.828,635,3.068,675,2.458,684,3.217,685,5.637,692,1.677,694,1.766,695,1.161,698,2.15,699,2.458,706,4.094,708,3.354,713,2.359,714,5.029,718,2.827,719,2.827,721,2.359,725,6.345,726,2.359,727,3.101,729,3.354,741,3.825,748,1.088,759,2.322,761,3.101,763,2.622,802,1.373,804,3.285,844,1.931,864,3.45,868,1.854,870,4.151,887,4.326,919,3.95,940,1.766,1049,1.994,1092,5.542,1102,4.686,1108,1.994,1112,4.686,1122,4.144,1147,2.359,1149,1.088,1173,1.373,1174,1.373,1175,1.373,1180,1.87,1182,2.15,1191,3.68,1221,4.124,1356,5.04,1372,3.111,1570,2.103,1628,3.111,1629,1.994,1641,2.827,1699,3.586,1701,1.373,1706,3.68,1707,2.359,1708,3.101,1712,3.777,1713,3.777,1714,4.144,1719,5.512,1722,2.15,1733,1.557,1734,7.805,1735,2.676,1736,2.359,1737,3.518,1738,2.676,1739,5.493,1740,5.493,1741,4.701,1742,4.174,1743,6.06,1744,2.676,1745,2.676,1746,3.518,1747,3.518,1748,5.132,1749,5.493,1750,2.676,1751,2.676,1752,3.518,1753,4.174,1754,5.132,1755,3.101,1756,3.518,1757,4.525,1758,5.132,1759,3.68,1760,3.68,1761,3.101,1762,3.101,1763,1.557,1764,2.676,1765,6.818,1766,5.111,1767,4.174,1768,5.132,1769,4.174,1770,2.359,1771,1.557,1772,5.111,1773,6.06,1774,2.15,1775,1.557,1776,3.68,1777,4.174,1778,4.174,1779,4.174,1780,4.174,1781,2.676,1782,1.557,1783,3.518,1784,2.676,1785,2.676,1786,2.676,1787,2.676,1788,2.676,1789,1.557,1790,2.676,1791,3.68,1792,2.676,1793,3.518,1794,3.518,1795,3.354,1796,3.101,1797,3.518,1798,3.101,1799,2.359,1800,2.359,1801,1.557,1802,2.676,1803,2.676,1804,2.676,1805,1.557,1806,1.557,1807,1.557,1808,2.676,1809,4.525,1810,2.359,1811,1.557,1812,1.557,1813,3.68,1814,4.174,1815,1.557,1816,1.557,1817,1.557,1818,1.557,1819,1.557,1820,1.557,1821,2.676,1822,1.373,1823,1.557,1824,1.557,1825,1.557,1826,1.557,1827,1.557,1828,3.518,1829,2.676,1830,1.557,1831,1.557,1832,1.557,1833,1.557,1834,2.676,1835,1.557,1836,1.557,1837,1.557,1838,5.493,1839,2.676,1840,4.701,1841,2.676,1842,2.676,1843,1.557,1844,2.676,1845,2.676,1846,2.676,1847,1.557,1848,1.557,1849,2.676,1850,1.557,1851,1.557,1852,1.373,1853,1.557,1854,3.518,1855,1.557,1856,1.557,1857,2.676,1858,1.373,1859,1.557,1860,1.557,1861,1.557,1862,2.676,1863,1.557,1864,1.557,1865,1.557,1866,2.676,1867,1.557,1868,1.557,1869,1.557,1870,5.132]],["title/components/MessagesComponent.html",[0,0.151,94,0.848]],["body/components/MessagesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,1.49,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,1871,4.881,1872,7.677,1873,6.446,1874,6.446]],["title/components/NotFoundComponent.html",[0,0.151,96,0.848]],["body/components/NotFoundComponent.html",[0,0.241,1,0.885,2,1.138,3,0.083,4,0.063,5,0.907,6,0.907,7,0.907,8,0.073,12,0.907,13,1.846,14,1.846,15,0.885,17,1.195,18,1.11,19,1.225,20,2.827,21,3.422,22,4.17,23,3.99,24,3.002,25,1.225,27,1.286,29,0.418,30,0.01,31,1.651,32,0.474,33,2.161,34,1.745,35,1.745,36,2.237,37,2.608,38,0.083,39,0.474,41,3.425,43,0.907,44,1.225,45,1.225,46,0.907,47,1.486,48,0.907,49,0.454,50,0.907,51,0.885,52,0.907,53,0.885,54,0.907,55,0.885,56,0.907,57,0.885,58,0.907,59,0.885,60,0.907,61,0.885,62,0.821,63,1.225,64,0.885,65,1.225,66,0.885,67,0.907,68,0.885,69,0.907,70,0.885,71,0.907,72,0.885,73,0.863,74,1.225,75,0.885,76,0.907,77,0.885,78,0.907,79,0.885,80,0.907,81,0.885,82,0.907,83,0.885,84,0.907,85,0.885,86,0.907,87,0.885,88,0.907,89,0.885,90,0.842,91,1.387,92,0.885,93,0.907,94,0.885,95,0.907,96,1.45,97,0.907,98,0.885,99,0.907,100,0.885,101,0.885,102,0.761,103,1.166,104,0.907,105,1.166,106,1.225,107,0.885,108,0.885,109,0.907,110,0.885,111,0.907,112,0.885,113,0.907,114,0.885,115,0.907,116,0.885,117,0.842,118,0.885,119,0.907,120,0.885,121,0.907,122,0.907,123,0.885,124,0.907,125,0.885,126,0.907,127,0.885,128,0.907,129,0.885,130,0.885,131,0.907,132,0.885,133,0.907,134,0.885,135,0.907,136,0.885,137,0.907,138,0.885,139,0.863,140,0.885,141,0.907,142,0.885,143,0.907,144,0.907,145,0.907,146,0.006,147,0.006,941,4.949,1875,4.56,1876,4.56,1877,4.56,1878,5.43,1879,6.159,1880,6.159,1881,6.159,1882,6.159]],["title/components/NotificationsComponent.html",[0,0.151,98,0.848]],["body/components/NotificationsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,1.49,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,1723,6.767,1883,4.881,1884,6.446,1885,6.446]],["title/interfaces/Organization.html",[222,0.44,847,2.003]],["body/interfaces/Organization.html",[3,0.118,4,0.089,8,0.103,30,0.009,38,0.118,49,0.625,146,0.008,147,0.008,161,0.549,177,0.777,184,1.686,222,0.649,224,1.632,233,0.927,847,3.516,877,4.476,1886,6.435,1887,4.852,1888,7.478,1889,7.478,1890,4.852,1891,4.64]],["title/components/OrganizationComponent.html",[0,0.151,100,0.848]],["body/components/OrganizationComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,1.49,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,847,3.52,851,5.682,852,5.682,1892,4.881]],["title/interfaces/OrganizationDto.html",[222,0.44,1893,3.51]],["body/interfaces/OrganizationDto.html",[3,0.118,4,0.089,8,0.103,30,0.009,38,0.118,49,0.625,146,0.008,147,0.008,161,0.549,177,0.777,184,1.686,222,0.649,224,1.632,233,0.927,877,4.476,1887,4.852,1888,7.478,1889,7.478,1890,4.852,1891,4.64,1893,6.162,1894,6.435]],["title/injectables/OrganizationEffects.html",[298,0.935,452,3.51]],["body/injectables/OrganizationEffects.html",[3,0.102,4,0.077,8,0.089,29,0.432,30,0.01,32,0.578,38,0.102,39,0.578,49,0.409,146,0.007,147,0.007,161,0.474,165,2.113,169,1.778,174,1.81,176,1.31,177,0.491,178,1.248,233,0.847,291,2.167,292,1.961,298,1.5,300,1.517,452,5.631,478,2.067,494,4.929,496,5.21,497,5.053,499,4.896,502,2.391,507,5.053,509,2.766,526,4.812,555,3.482,556,3.321,557,3.482,863,4.14,866,4.897,867,6.325,911,6.008,1895,5.555,1896,7.676,1897,5.555,1898,7.007,1899,7.007,1900,8.061,1901,7.007,1902,8.061,1903,5.555,1904,7.007,1905,7.007,1906,7.007,1907,5.555,1908,5.555,1909,4.897,1910,4.897,1911,4.897,1912,4.897]],["title/injectables/OrganizationService.html",[298,0.935,867,3.255]],["body/injectables/OrganizationService.html",[3,0.106,4,0.08,8,0.093,29,0.446,30,0.01,32,0.6,38,0.106,39,0.6,49,0.576,146,0.007,147,0.007,157,2.483,161,0.493,162,2.008,169,1.464,174,1.927,176,1.842,177,0.69,178,1.755,180,2.081,184,1.442,298,1.536,300,1.575,345,2.646,346,2.646,366,4.262,405,2.68,478,2.147,573,3.449,574,4.675,576,3.938,591,3.787,596,3.449,597,4.105,601,3.301,606,4.636,610,4.669,847,2.646,856,5.348,863,5.348,867,5.348,877,3.787,907,6.09,964,5.766,1307,5.348,1893,4.636,1913,5.77,1914,8.172,1915,5.77,1916,7.176,1917,5.77,1918,5.77,1919,5.77,1920,4.636,1921,5.77,1922,7.811,1923,5.087]],["title/interfaces/OrganizationState.html",[222,0.44,439,3.51]],["body/interfaces/OrganizationState.html",[3,0.097,4,0.074,8,0.085,29,0.412,30,0.01,38,0.138,62,1.354,146,0.007,147,0.007,161,0.454,177,0.665,201,2.218,222,0.536,224,1.348,231,1.923,233,0.823,248,2.701,306,4.221,356,3.339,373,1.923,374,1.923,375,1.923,376,1.977,377,1.977,378,1.977,428,2.739,439,6.042,454,4.683,509,3.093,621,4.86,624,4.185,625,4.27,626,1.977,627,3.33,628,2.916,633,4.27,634,3.33,635,5.015,636,3.176,638,4.27,642,3.341,644,3.738,645,4.072,647,3.738,648,4.27,847,4.178,863,3.959,911,3.959,1198,2.916,1909,4.683,1910,4.683,1911,4.683,1912,4.683,1924,5.313,1925,5.313,1926,5.313,1927,5.313,1928,5.313,1929,5.313,1930,5.313,1931,5.313,1932,5.313]],["title/interfaces/Platform.html",[222,0.44,1933,2.611]],["body/interfaces/Platform.html",[3,0.116,4,0.088,8,0.101,29,0.328,30,0.01,38,0.116,146,0.008,147,0.008,161,0.539,177,0.798,184,1.66,222,0.637,224,1.602,233,0.916,428,2.514,974,5.563,1464,3.774,1887,4.822,1890,4.822,1891,4.62,1933,4.533,1934,6.313,1935,7.431,1936,5.89,1937,6.773,1938,6.313]],["title/interfaces/PlatformDto.html",[222,0.44,1939,3.255]],["body/interfaces/PlatformDto.html",[3,0.116,4,0.088,8,0.101,29,0.328,30,0.01,38,0.116,146,0.008,147,0.008,161,0.539,177,0.798,184,1.66,222,0.637,224,1.602,233,0.916,428,2.514,974,5.563,1464,3.774,1887,4.822,1890,4.822,1891,4.62,1935,7.431,1936,5.89,1937,6.773,1939,5.651,1940,6.313,1941,6.313]],["title/injectables/PlatformEffects.html",[298,0.935,470,3.51]],["body/injectables/PlatformEffects.html",[3,0.108,4,0.082,8,0.095,29,0.44,30,0.01,32,0.615,38,0.108,39,0.615,49,0.435,146,0.008,147,0.008,161,0.504,165,2.196,169,1.847,174,1.717,176,1.393,177,0.522,178,1.327,233,0.88,291,1.827,292,1.653,298,1.558,300,1.612,470,5.85,478,2.198,494,4.995,496,4.947,497,4.563,502,2.542,507,4.563,509,2.498,526,4.947,555,3.702,556,3.53,557,3.702,957,3.996,1942,5.905,1943,6.62,1944,5.905,1945,6.924,1946,5.905,1947,7.28,1948,7.28,1949,6.418,1950,6.958,1951,5.85,1952,7.28,1953,5.905,1954,5.905,1955,5.206,1956,5.206]],["title/injectables/PlatformService.html",[298,0.935,1945,3.51]],["body/injectables/PlatformService.html",[3,0.117,4,0.088,8,0.102,29,0.449,30,0.01,32,0.663,38,0.117,39,0.663,49,0.47,146,0.008,147,0.008,157,2.743,161,0.544,162,2.134,169,1.617,174,1.798,176,1.503,177,0.563,178,1.432,180,1.698,298,1.632,300,1.74,345,2.922,346,2.922,366,4.003,405,2.187,478,2.372,573,3.81,574,4.837,576,4.185,596,3.81,597,4.362,610,3.81,1939,4.75,1945,6.127,1957,6.373,1958,8.455,1959,6.373,1960,6.373,1961,6.373,1962,6.373]],["title/interfaces/PlatformState.html",[222,0.44,440,3.51]],["body/interfaces/PlatformState.html",[3,0.104,4,0.079,8,0.092,29,0.423,30,0.01,38,0.142,90,1.053,146,0.007,147,0.007,161,0.487,177,0.687,201,2.32,222,0.575,224,1.447,231,2.065,233,0.861,248,2.9,306,4.05,373,2.065,374,2.065,375,2.065,376,2.123,377,2.123,378,2.123,428,2.734,440,6.244,468,5.029,509,3.053,611,4.584,621,4.809,624,4.295,625,4.466,626,2.123,627,3.576,628,3.131,633,4.466,634,3.576,635,4.645,636,3.41,638,3.576,642,2.798,644,3.131,645,3.41,647,3.131,648,4.466,847,2.616,1198,3.131,1933,4.866,1943,4.584,1950,5.029,1951,6.866,1955,5.029,1956,5.029,1963,5.704,1964,5.704,1965,5.704,1966,5.704,1967,5.704,1968,5.704]],["title/interfaces/Project.html",[102,0.729,222,0.44]],["body/interfaces/Project.html",[3,0.122,4,0.092,8,0.107,29,0.347,30,0.009,38,0.122,49,0.633,102,1.308,146,0.008,147,0.008,161,0.569,177,0.735,184,1.637,222,0.673,224,1.692,233,0.947,1933,5.388,1969,6.669,1970,7.565,1971,6.669]],["title/components/ProjectDetailsComponent.html",[0,0.151,101,0.848]],["body/components/ProjectDetailsComponent.html",[0,0.248,1,0.936,2,1.181,3,0.088,4,0.067,5,0.959,6,0.959,7,0.959,8,0.077,12,0.959,13,1.851,14,1.851,15,0.936,17,1.241,18,1.152,19,0.959,25,1.272,27,1.335,29,0.251,30,0.009,32,0.502,38,0.088,39,0.502,43,0.959,44,1.272,45,1.272,46,0.959,47,1.519,48,0.959,49,0.471,50,0.959,51,0.936,52,0.959,53,0.936,54,0.959,55,0.936,56,0.959,57,0.936,58,0.959,59,0.936,60,0.959,61,0.936,62,0.869,63,1.272,64,0.936,65,1.272,66,0.936,67,0.959,68,0.936,69,0.959,70,0.936,71,0.959,72,0.936,73,0.913,74,1.272,75,0.936,76,0.959,77,0.936,78,0.959,79,0.936,80,0.959,81,0.936,82,0.959,83,0.936,84,0.959,85,0.936,86,0.959,87,0.936,88,0.959,89,0.936,90,0.891,91,1.427,92,0.936,93,0.959,94,0.936,95,0.959,96,0.936,97,0.959,98,0.936,99,0.959,100,0.936,101,1.483,102,1.431,103,1.211,104,0.959,105,1.211,106,1.272,107,0.936,108,0.936,109,0.959,110,0.936,111,0.959,112,0.936,113,0.959,114,0.936,115,0.959,116,0.936,117,0.891,118,0.936,119,0.959,120,0.936,121,0.959,122,0.959,123,0.936,124,0.959,125,0.936,126,0.959,127,0.936,128,0.959,129,0.936,130,0.936,131,0.959,132,0.936,133,0.959,134,0.936,135,0.959,136,0.936,137,0.959,138,0.936,139,0.913,140,0.936,141,0.959,142,0.936,143,0.959,144,0.959,145,0.959,146,0.007,147,0.007,152,2.137,978,5.339,979,5.637,980,5.637,1972,4.822,1973,4.822,1974,4.822]],["title/interfaces/ProjectDto.html",[222,0.44,1975,3.51]],["body/interfaces/ProjectDto.html",[3,0.122,4,0.092,8,0.107,29,0.347,30,0.009,38,0.122,49,0.633,146,0.008,147,0.008,161,0.569,177,0.735,184,1.637,222,0.673,224,1.692,233,0.947,1933,5.13,1939,6.396,1970,7.565,1975,6.294,1976,6.669,1977,6.669]],["title/injectables/ProjectEffects.html",[298,0.935,456,3.51]],["body/injectables/ProjectEffects.html",[3,0.101,4,0.077,8,0.089,29,0.432,30,0.01,32,0.576,38,0.101,39,0.576,49,0.408,105,1.323,146,0.007,147,0.007,161,0.472,165,2.108,169,1.773,174,1.807,176,1.305,177,0.489,178,1.243,233,0.845,291,2.162,292,1.956,298,1.496,300,1.51,456,5.616,478,2.059,494,4.925,496,5.203,497,5.046,499,4.884,502,2.381,507,5.046,509,2.762,526,4.803,555,3.468,556,3.307,557,3.468,1978,5.532,1979,5.999,1980,6.468,1981,5.532,1982,6.318,1983,5.532,1984,6.989,1985,6.989,1986,6.989,1987,6.989,1988,6.989,1989,5.532,1990,6.989,1991,6.989,1992,6.989,1993,6.989,1994,6.989,1995,5.532,1996,5.532,1997,4.877,1998,4.877,1999,4.877,2000,4.877,2001,4.877]],["title/injectables/ProjectService.html",[298,0.935,1982,3.255]],["body/injectables/ProjectService.html",[3,0.106,4,0.08,8,0.093,29,0.446,30,0.01,32,0.604,38,0.106,39,0.604,49,0.621,102,0.969,146,0.007,147,0.007,157,2.498,161,0.495,162,2.015,169,1.472,174,1.931,176,1.847,177,0.692,178,1.759,180,2.086,184,1.446,298,1.541,300,1.584,345,2.661,346,2.661,366,4.268,405,2.687,478,2.16,573,3.469,574,4.684,576,3.953,591,3.801,596,3.469,597,4.12,601,3.32,610,4.682,973,6.58,1307,4.325,1920,4.663,1975,4.663,1979,5.367,1982,5.367,2002,5.803,2003,8.189,2004,6.349,2005,5.803,2006,7.202,2007,5.803,2008,5.803,2009,6.349,2010,5.803,2011,5.803,2012,5.803,2013,5.803,2014,5.803,2015,5.803]],["title/interfaces/ProjectState.html",[222,0.44,441,3.51]],["body/interfaces/ProjectState.html",[3,0.094,4,0.071,8,0.083,29,0.407,30,0.01,38,0.135,62,1.333,102,1.389,105,1.401,146,0.007,147,0.007,161,0.438,177,0.717,201,2.17,222,0.518,224,1.303,231,1.859,233,0.806,306,4.201,356,3.285,373,1.859,374,1.859,377,1.911,378,1.911,428,2.768,441,5.945,458,4.528,509,2.686,624,4.467,625,4.178,626,1.911,627,3.22,628,2.819,633,4.178,634,4.178,635,4.971,636,3.07,638,4.178,642,3.269,644,3.658,645,3.984,647,3.658,648,4.178,976,4.423,1198,3.658,1979,3.828,1980,4.127,1997,4.528,1998,4.528,1999,4.528,2000,4.528,2001,4.528,2016,5.136,2017,8.464,2018,8.58,2019,8.58,2020,8.58,2021,8.58,2022,5.136,2023,5.136,2024,5.136,2025,5.136,2026,5.136,2027,5.136,2028,5.136,2029,5.136]],["title/components/ProjectsComponent.html",[0,0.151,103,0.827]],["body/components/ProjectsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.511,104,0.971,105,1.552,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2030,4.881,2031,5.682,2032,5.682]],["title/components/ProjectsComponent-1.html",[0,0.126,103,0.689,748,2.542]],["body/components/ProjectsComponent-1.html",[0,0.222,1,1.357,2,1.022,3,0.072,4,0.054,5,0.777,6,0.777,7,0.777,8,0.063,10,2.913,12,0.777,13,1.834,14,1.834,15,0.758,17,1.074,18,0.997,19,1.101,20,2.606,24,2.767,25,1.101,27,1.156,29,0.448,30,0.01,31,1.415,32,0.407,34,1.496,35,1.496,38,0.072,39,0.407,43,0.777,44,1.101,45,1.101,46,0.777,47,1.391,48,0.777,49,0.474,50,0.777,51,0.758,52,0.777,53,0.758,54,0.777,55,0.758,56,0.777,57,0.758,58,0.777,59,0.758,60,0.777,61,0.758,62,0.704,63,1.101,64,0.758,65,1.101,66,0.758,67,0.777,68,0.758,69,0.777,70,0.758,71,0.777,72,0.758,73,0.74,74,1.101,75,0.758,76,0.777,77,0.758,78,0.777,79,0.758,80,0.777,81,0.758,82,0.777,83,0.758,84,0.777,85,0.758,86,0.777,87,0.758,88,0.777,89,0.758,90,0.722,91,1.279,92,0.758,93,0.777,94,0.758,95,0.777,96,0.758,97,0.777,98,0.758,99,0.777,100,0.758,101,0.758,102,0.653,103,1.397,104,0.777,105,1.492,106,1.101,107,1.357,108,0.758,109,0.777,110,0.758,111,0.777,112,0.758,113,0.777,114,0.758,115,0.777,116,0.758,117,0.722,118,0.758,119,0.777,120,0.758,121,0.777,122,0.777,123,0.758,124,0.777,125,0.758,126,0.777,127,0.758,128,0.777,129,0.758,130,0.758,131,0.777,132,0.758,133,0.777,134,0.758,135,0.777,136,0.758,137,0.777,138,0.758,139,0.74,140,0.758,141,0.777,142,0.758,143,0.777,144,0.777,145,0.777,146,0.006,147,0.006,154,2.244,155,3.154,161,0.334,162,1.549,164,3.43,169,0.991,174,1.808,176,0.922,177,0.345,178,0.878,180,1.041,181,1.899,233,0.669,291,2.163,292,2.145,300,1.067,346,1.792,435,1.735,502,1.682,626,1.454,677,4.449,748,2.731,868,3.403,910,1.852,929,2.716,1027,2.145,1090,2.731,1430,5.166,1434,5.166,1436,5.931,1443,4.449,1445,5.619,1447,4.449,1451,4.449,1459,3.14,1460,2.236,1461,3.14,1462,2.336,1463,3.14,1464,2.336,1465,3.14,1472,3.14,1473,3.14,1476,3.14,1478,4.449,1980,3.14,2031,4.88,2032,4.88,2033,3.908,2034,6.992,2035,3.908,2036,3.908,2037,6.992,2038,3.908,2039,3.908,2040,5.536,2041,3.908,2042,5.536,2043,3.908,2044,3.445,2045,3.908,2046,3.445,2047,3.908,2048,3.445,2049,3.908]],["title/components/ProjectsTableComponent.html",[0,0.151,107,0.848]],["body/components/ProjectsTableComponent.html",[0,0.157,1,0.433,2,0.667,3,0.041,4,0.031,5,0.444,6,0.444,7,0.444,8,0.036,12,0.444,13,1.77,14,1.77,15,0.433,17,0.701,18,1.367,19,0.719,20,1.845,21,2.234,23,2.605,24,1.96,25,0.719,27,0.755,29,0.439,30,0.01,31,0.808,32,0.232,34,0.854,35,0.854,36,1.095,37,1.277,38,0.041,39,0.232,41,3.531,43,0.444,44,0.719,45,0.719,46,0.444,47,1.041,48,0.444,49,0.54,50,0.444,51,0.433,52,0.444,53,0.433,54,0.444,55,0.433,56,0.444,57,0.433,58,0.444,59,0.433,60,0.444,61,0.433,62,0.402,63,0.719,64,0.433,65,0.719,66,0.433,67,0.444,68,0.433,69,0.444,70,0.433,71,0.444,72,0.433,73,0.422,74,0.719,75,0.433,76,0.444,77,0.433,78,0.444,79,0.433,80,0.444,81,0.433,82,0.444,83,0.433,84,0.444,85,0.433,86,0.444,87,0.433,88,0.444,89,0.433,90,0.412,91,0.906,92,0.433,93,0.444,94,0.433,95,0.444,96,0.433,97,0.444,98,0.433,99,0.444,100,0.433,101,0.433,102,0.874,103,0.684,104,0.444,105,1.582,106,0.719,107,1.016,108,0.433,109,0.444,110,0.433,111,0.444,112,0.433,113,0.444,114,0.433,115,0.444,116,0.433,117,0.412,118,0.433,119,0.444,120,0.433,121,0.444,122,0.444,123,0.433,124,0.444,125,0.433,126,0.444,127,0.433,128,0.444,129,0.433,130,0.433,131,0.444,132,0.433,133,0.444,134,0.433,135,0.444,136,0.433,137,0.444,138,0.433,139,0.422,140,0.433,141,0.444,142,0.433,143,0.444,144,0.444,145,0.444,146,0.004,147,0.004,154,1.465,156,2.605,161,0.191,162,1.011,163,2.994,165,2.322,169,0.917,171,3.178,174,1.971,176,1.234,177,0.697,178,1.382,180,1.797,181,2.315,184,1.353,201,1.177,231,0.808,233,0.437,263,3.196,275,3.105,286,2.762,291,2.309,292,2.124,300,0.609,364,1.135,373,0.808,374,0.808,375,1.308,376,0.83,377,0.83,378,0.83,405,0.766,428,2.004,435,0.991,502,0.96,509,1.24,518,2.067,591,1.178,621,3.556,624,1.178,626,0.83,628,1.225,642,1.095,644,1.983,647,1.983,681,2.403,692,2.265,759,1.473,803,1.135,844,2.499,845,1.983,846,3.825,848,2.499,849,2.722,850,2.605,855,2.605,857,4.014,864,2.872,865,2.904,868,2.877,869,3.52,877,1.178,882,2.904,884,2.605,885,3.52,887,2.499,892,2.605,893,1.983,894,3.185,899,1.225,900,1.277,901,1.095,902,1.334,903,1.225,904,1.399,905,2.265,906,1.399,910,1.058,918,1.399,919,2.923,920,1.277,921,2.16,922,1.399,923,1.399,925,1.967,929,1.095,944,2.067,945,2.067,946,2.067,949,1.983,950,1.983,957,2.872,958,1.793,974,1.473,1005,1.399,1149,2.525,1198,3.93,1549,1.793,1550,3.659,1551,4.62,1552,3.659,1553,3.393,1554,3.659,1555,3.393,1556,3.659,1557,2.904,1558,2.904,1559,3.659,1565,2.904,1570,2.722,1571,3.659,1572,3.659,1574,3.659,1576,3.659,1581,1.793,1582,1.793,1583,1.793,1586,2.904,1587,4.206,1588,1.793,1597,2.904,1599,1.793,1604,1.793,1607,1.663,1608,1.793,1609,1.793,1610,1.663,1611,1.793,1612,1.663,1614,1.793,1622,1.793,1627,1.793,1628,1.663,1629,1.663,1630,1.793,1632,1.793,1634,1.793,1933,3.873,1943,1.793,1951,3.659,1979,1.663,1982,4.829,2004,5.711,2009,1.967,2044,1.967,2046,1.967,2048,7.402,2050,8.396,2051,4.014,2052,4.553,2053,4.553,2054,4.553,2055,4.553,2056,3.613,2057,5.234,2058,5.234,2059,4.614,2060,4.014,2061,2.232,2062,1.967,2063,1.967,2064,2.232,2065,3.613,2066,2.232,2067,2.232,2068,1.967,2069,2.232,2070,2.232,2071,2.232,2072,2.232,2073,2.232,2074,1.967,2075,2.232,2076,3.613,2077,1.967,2078,2.232,2079,1.967,2080,3.613,2081,1.967,2082,1.967,2083,2.232,2084,2.232,2085,2.232,2086,2.232,2087,2.232,2088,2.232,2089,2.232,2090,2.232,2091,2.232,2092,3.613,2093,2.232,2094,2.232,2095,4.553,2096,2.232,2097,3.613,2098,2.232,2099,2.232,2100,2.232,2101,2.232,2102,2.232,2103,2.232,2104,2.232,2105,2.232,2106,3.613,2107,3.613,2108,3.613,2109,3.613,2110,3.613,2111,6.154,2112,3.613,2113,3.613,2114,3.613,2115,3.613,2116,3.613,2117,5.234,2118,5.234,2119,3.613]],["title/components/QueriesComponent.html",[0,0.151,108,0.848]],["body/components/QueriesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,1.49,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2120,4.881,2121,7.677,2122,6.446,2123,6.446]],["title/components/RegisterComponent.html",[0,0.151,110,0.848]],["body/components/RegisterComponent.html",[0,0.175,1,0.51,2,0.761,3,0.048,4,0.036,5,0.523,6,0.523,7,0.523,8,0.042,12,0.523,13,1.792,14,1.792,15,0.51,17,0.799,18,0.742,19,0.819,20,2.057,21,2.49,22,3.035,24,2.185,25,0.819,27,0.86,29,0.436,30,0.01,31,0.952,32,0.274,33,1.247,34,1.006,35,1.006,36,1.29,38,0.048,39,0.274,41,4.003,43,0.523,44,0.819,45,0.819,46,0.523,47,1.142,48,0.523,49,0.423,50,0.523,51,0.51,52,0.523,53,0.51,54,0.523,55,0.51,56,0.523,57,0.51,58,0.523,59,0.51,60,0.523,61,0.51,62,0.474,63,0.819,64,0.51,65,0.819,66,0.51,67,0.523,68,0.51,69,0.523,70,0.51,71,0.523,72,0.51,73,0.498,74,0.819,75,0.51,76,0.523,77,0.51,78,0.523,79,0.51,80,0.523,81,0.51,82,0.523,83,0.51,84,0.523,85,0.51,86,0.523,87,0.51,88,0.523,89,0.51,90,0.486,91,1.01,92,0.51,93,0.523,94,0.51,95,0.523,96,0.51,97,0.523,98,0.51,99,0.523,100,0.51,101,0.51,102,0.439,103,0.78,104,0.523,105,0.78,106,0.819,107,0.51,108,0.51,109,0.523,110,1.115,111,0.523,112,0.51,113,0.523,114,0.51,115,0.523,116,0.51,117,0.486,118,0.51,119,0.523,120,0.51,121,0.523,122,0.523,123,0.51,124,0.523,125,0.51,126,0.523,127,0.51,128,0.523,129,0.51,130,0.51,131,0.523,132,0.51,133,0.523,134,0.51,135,0.523,136,0.51,137,0.523,138,0.51,139,0.498,140,0.51,141,0.523,142,0.51,143,0.523,144,0.523,145,0.523,146,0.004,147,0.004,154,1.669,155,2.49,156,2.904,161,0.225,162,1.153,163,3.286,164,2.818,165,2.5,169,1.045,171,3.391,174,1.864,176,0.971,177,0.611,178,1.608,180,1.661,181,2.269,184,0.937,201,0.856,231,0.952,233,0.498,263,1.206,275,1.622,291,1.57,292,1.421,300,0.718,336,1.035,364,1.337,373,0.952,374,0.952,375,1.491,376,0.979,377,0.979,378,0.979,428,2.276,435,1.168,485,1.572,486,2.113,491,4.334,502,1.132,503,3.031,505,2.49,509,1.742,515,1.838,518,1.504,570,4.831,572,4.929,583,1.838,589,2.718,591,1.388,601,1.504,626,0.979,681,2.679,803,1.337,844,2.786,845,2.26,846,4.038,848,2.786,849,3.035,850,2.904,854,3.35,855,2.904,864,3.152,868,3.07,869,3.783,870,3.794,884,2.356,885,4.305,887,3.794,892,2.904,893,1.443,899,1.443,900,1.504,901,1.29,902,1.572,903,1.443,904,1.649,905,2.582,906,1.649,910,1.247,918,1.649,919,1.337,920,1.504,921,1.572,922,1.649,923,1.649,929,2.02,934,1.736,935,1.736,936,1.736,938,1.649,944,1.504,945,1.504,946,1.504,949,1.443,950,2.26,957,2.26,1001,3.783,1002,3.783,1003,3.547,1004,3.069,1005,1.649,1007,3.069,1014,3.069,1016,2.878,1021,3.069,1023,1.838,1025,1.649,1027,1.443,1028,1.649,1029,1.96,1030,1.96,1031,1.96,1032,1.736,1033,1.838,1034,1.838,1035,1.838,1046,1.838,1048,3.069,1054,1.96,1055,3.069,1065,2.679,1227,4.079,1228,3.783,1231,4.475,1242,3.069,1243,3.309,1244,3.309,1245,3.35,1246,3.35,1251,2.113,1252,1.96,1253,2.319,1255,2.113,1256,2.113,1266,2.319,1267,2.319,1268,2.319,1269,2.319,1270,2.319,1406,1.96,1407,2.113,1415,2.319,2124,2.63,2125,4.119,2126,4.119,2127,4.119,2128,2.63,2129,2.63,2130,2.63,2131,2.63,2132,2.63,2133,2.63,2134,2.63,2135,2.63,2136,2.63,2137,2.63,2138,2.63,2139,2.63,2140,2.63,2141,2.63,2142,2.63,2143,2.63,2144,2.63,2145,4.119,2146,4.119,2147,4.119,2148,4.119,2149,4.119,2150,4.119,2151,4.119,2152,4.119,2153,4.119,2154,4.119,2155,4.119,2156,4.119,2157,4.119,2158,4.119,2159,4.119]],["title/interfaces/RegisterRequestDto.html",[222,0.44,589,2.883]],["body/interfaces/RegisterRequestDto.html",[3,0.119,4,0.09,8,0.105,30,0.009,38,0.119,146,0.008,147,0.008,161,0.556,177,0.769,184,1.701,222,0.657,224,1.654,233,0.934,503,4.495,505,4.179,589,5.1,669,3.897,1065,4.495,1245,5.622,1246,5.622,2160,6.518]],["title/components/ReleasesComponent.html",[0,0.151,112,0.848]],["body/components/ReleasesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,1.49,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2161,4.881,2162,7.677,2163,6.446,2164,6.446]],["title/components/ReplaysComponent.html",[0,0.151,114,0.848]],["body/components/ReplaysComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,1.49,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2165,4.881,2166,7.677,2167,6.446,2168,6.446]],["title/components/ResetPasswordComponent.html",[0,0.151,116,0.848]],["body/components/ResetPasswordComponent.html",[0,0.194,1,0.598,2,0.86,3,0.056,4,0.043,5,0.613,6,0.613,7,0.613,8,0.05,12,0.613,13,1.81,14,1.81,15,0.598,17,0.903,18,0.838,19,0.926,20,2.273,21,2.751,22,3.352,24,2.413,25,0.926,27,0.972,29,0.433,30,0.01,31,1.116,32,0.321,33,1.462,34,1.18,35,1.18,36,1.513,38,0.056,39,0.321,41,3.709,43,0.613,44,0.926,45,0.926,46,0.613,47,1.242,48,0.613,49,0.413,50,0.613,51,0.598,52,0.613,53,0.598,54,0.613,55,0.598,56,0.613,57,0.598,58,0.613,59,0.598,60,0.613,61,0.598,62,0.556,63,0.926,64,0.598,65,0.926,66,0.598,67,0.613,68,0.598,69,0.613,70,0.598,71,0.613,72,0.598,73,0.584,74,0.926,75,0.598,76,0.613,77,0.598,78,0.613,79,0.598,80,0.613,81,0.598,82,0.613,83,0.598,84,0.613,85,0.598,86,0.613,87,0.598,88,0.613,89,0.598,90,0.57,91,1.115,92,0.598,93,0.613,94,0.598,95,0.613,96,0.598,97,0.613,98,0.598,99,0.613,100,0.598,101,0.598,102,0.515,103,0.881,104,0.613,105,0.881,106,0.926,107,0.598,108,0.598,109,0.613,110,0.598,111,0.613,112,0.598,113,0.613,114,0.598,115,0.613,116,1.212,117,1.351,118,0.598,119,0.613,120,0.598,121,0.613,122,0.613,123,0.598,124,0.613,125,0.598,126,0.613,127,0.598,128,0.613,129,0.598,130,0.598,131,0.613,132,0.598,133,0.613,134,0.598,135,0.613,136,0.598,137,0.613,138,0.598,139,0.584,140,0.598,141,0.613,142,0.598,143,0.613,144,0.613,145,0.613,146,0.005,147,0.005,154,1.887,155,2.751,161,0.263,162,1.303,164,3.064,165,2.514,169,1.181,171,3.59,174,1.853,176,0.727,177,0.593,178,1.644,180,1.494,181,1.924,184,0.86,201,1.004,233,0.563,263,2.134,291,1.44,292,1.303,300,0.842,336,1.214,428,1.734,435,1.369,485,1.844,488,5.253,505,3.064,509,1.597,626,1.148,642,1.513,681,2.959,692,2.918,803,1.568,844,3.077,845,2.555,846,4.231,848,3.077,850,3.207,854,3.701,855,3.207,864,3.428,868,3.249,869,4.032,870,4.016,884,2.663,885,2.663,887,4.016,900,1.764,901,1.513,903,1.693,910,1.462,929,2.751,934,2.035,935,2.035,936,2.035,938,1.933,944,2.663,945,2.663,946,2.663,949,2.555,950,3.077,996,2.719,997,4.104,998,4.104,1000,4.943,1003,3.918,1005,1.933,1013,2.719,1016,3.253,1018,2.719,1019,2.719,1022,2.719,1023,2.155,1024,4.943,1025,1.933,1027,1.693,1028,1.933,1032,2.035,1033,2.155,1034,2.155,1035,2.155,1038,2.719,1041,2.719,1042,2.719,1043,2.719,1044,2.719,1046,2.155,1047,2.719,1052,2.298,1056,4.104,1062,4.104,1228,4.179,1242,3.469,1243,3.74,1252,2.298,1255,2.478,1256,2.478,1260,2.478,2169,7.982,2170,7.982,2171,5.607,2172,5.607,2173,4.655,2174,3.084,2175,3.084,2176,3.084,2177,3.084,2178,3.084,2179,3.084,2180,3.084,2181,8.335,2182,3.084,2183,3.084,2184,4.655,2185,4.943,2186,3.084,2187,2.719,2188,4.655,2189,4.655,2190,4.655,2191,4.655]],["title/interfaces/ResetPasswordRequestDto.html",[222,0.44,593,3.51]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.125,4,0.094,8,0.109,30,0.009,38,0.125,146,0.008,147,0.008,161,0.581,177,0.701,184,1.644,222,0.686,224,1.726,233,0.958,505,3.338,593,6.369,669,4.068,2185,7.614,2187,7.614,2192,6.805]],["title/components/ResourcesComponent.html",[0,0.151,118,0.848]],["body/components/ResourcesComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,1.49,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2193,4.881,2194,7.677,2195,6.446,2196,6.446]],["title/interfaces/Role.html",[222,0.44,1224,2.305]],["body/interfaces/Role.html",[3,0.112,4,0.085,8,0.099,29,0.387,30,0.01,38,0.136,49,0.615,146,0.008,147,0.008,161,0.523,177,0.778,184,1.676,222,0.751,224,1.555,233,0.9,260,3.843,275,3.286,336,2.414,428,1.896,503,3.235,1065,3.235,1111,4.569,1224,4.404,1245,4.046,1246,4.046,1292,5.832,1460,4.261,1462,4.453,1464,3.665,1683,5.985,1887,3.507,1890,3.507,1891,4.234,2197,5.404,2198,6.706,2199,6.22,2200,5.404,2201,5.404,2202,4.926,2203,4.926,2204,4.926]],["title/injectables/RoleEffects.html",[298,0.935,460,3.51]],["body/injectables/RoleEffects.html",[3,0.108,4,0.082,8,0.095,29,0.44,30,0.01,32,0.615,38,0.108,39,0.615,49,0.435,146,0.008,147,0.008,161,0.504,165,2.196,169,1.847,174,1.717,176,1.393,177,0.522,178,1.327,233,0.88,291,1.827,292,1.653,298,1.558,300,1.612,460,5.85,478,2.198,494,4.995,496,4.947,497,4.563,502,2.542,507,4.563,509,2.498,526,4.947,555,3.702,556,3.53,557,3.702,957,3.996,1564,5.85,1618,6.62,1949,6.418,2205,5.905,2206,5.905,2207,6.924,2208,5.905,2209,7.28,2210,7.28,2211,6.958,2212,7.28,2213,5.905,2214,5.905,2215,5.206,2216,5.206]],["title/injectables/RoleService.html",[298,0.935,2207,3.51]],["body/injectables/RoleService.html",[3,0.117,4,0.088,8,0.102,29,0.449,30,0.01,32,0.663,38,0.117,39,0.663,49,0.47,146,0.008,147,0.008,157,2.743,161,0.544,162,2.134,169,1.617,174,1.798,176,1.503,177,0.563,178,1.432,180,1.698,298,1.632,300,1.74,345,2.922,346,2.922,366,4.003,405,2.187,478,2.372,573,3.81,574,4.837,576,4.185,596,3.81,597,4.362,610,3.81,630,5.121,1224,3.364,2207,6.127,2217,6.373,2218,8.455,2219,6.373,2220,6.373,2221,6.373]],["title/interfaces/RoleState.html",[222,0.44,442,3.51]],["body/interfaces/RoleState.html",[3,0.104,4,0.079,8,0.092,29,0.423,30,0.01,38,0.142,90,1.053,146,0.007,147,0.007,161,0.487,177,0.687,201,2.32,222,0.575,224,1.447,231,2.065,233,0.861,248,2.9,306,4.05,373,2.065,374,2.065,375,2.065,376,2.123,377,2.123,378,2.123,428,2.734,442,6.244,462,5.029,509,3.053,611,4.584,621,4.809,624,4.295,625,4.466,626,2.123,627,3.576,628,3.131,630,4.584,633,4.466,634,3.576,635,4.645,636,3.41,638,3.576,642,2.798,644,3.131,645,3.41,647,3.131,648,4.466,847,2.616,1198,3.131,1224,4.295,1564,6.866,1618,4.584,2211,5.029,2215,5.029,2216,5.029,2222,5.704,2223,5.704,2224,5.704,2225,5.704,2226,5.704]],["title/components/ScreenLoadsComponent.html",[0,0.151,120,0.848]],["body/components/ScreenLoadsComponent.html",[0,0.248,1,0.936,2,1.181,3,0.088,4,0.067,5,0.959,6,0.959,7,0.959,8,0.077,12,0.959,13,1.851,14,1.851,15,0.936,17,1.241,18,1.152,19,0.959,25,1.272,27,1.335,29,0.251,30,0.009,32,0.502,38,0.088,39,0.502,43,0.959,44,1.272,45,1.272,46,0.959,47,1.519,48,0.959,49,0.471,50,0.959,51,0.936,52,0.959,53,0.936,54,0.959,55,0.936,56,0.959,57,0.936,58,0.959,59,0.936,60,0.959,61,0.936,62,0.869,63,1.272,64,0.936,65,1.272,66,0.936,67,0.959,68,0.936,69,0.959,70,0.936,71,0.959,72,0.936,73,0.913,74,1.272,75,0.936,76,0.959,77,0.936,78,0.959,79,0.936,80,0.959,81,0.936,82,0.959,83,0.936,84,0.959,85,0.936,86,0.959,87,0.936,88,0.959,89,0.936,90,0.891,91,1.427,92,0.936,93,0.959,94,0.936,95,0.959,96,0.936,97,0.959,98,0.936,99,0.959,100,0.936,101,0.936,102,0.805,103,1.211,104,0.959,105,1.211,106,1.272,107,0.936,108,0.936,109,0.959,110,0.936,111,0.959,112,0.936,113,0.959,114,0.936,115,0.959,116,0.936,117,0.891,118,0.936,119,0.959,120,1.483,121,1.704,122,0.959,123,0.936,124,0.959,125,0.936,126,0.959,127,0.936,128,0.959,129,0.936,130,0.936,131,0.959,132,0.936,133,0.959,134,0.936,135,0.959,136,0.936,137,0.959,138,0.936,139,0.913,140,0.936,141,0.959,142,0.936,143,0.959,144,0.959,145,0.959,146,0.007,147,0.007,152,2.137,2227,4.822,2228,4.822,2229,4.822,2230,6.735,2231,6.394,2232,6.394]],["title/components/SdksComponent.html",[0,0.151,123,0.848]],["body/components/SdksComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,1.49,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2233,4.881,2234,7.677,2235,6.446,2236,6.446]],["title/components/SecurityComponent.html",[0,0.151,125,0.848]],["body/components/SecurityComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,1.49,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2237,4.881,2238,7.677,2239,6.446,2240,6.446]],["title/injectables/SessionStorage.html",[298,0.935,2241,3.85]],["body/injectables/SessionStorage.html",[3,0.095,4,0.072,8,0.083,29,0.386,30,0.01,31,1.874,32,0.539,38,0.095,39,0.539,49,0.579,146,0.007,147,0.007,154,2.098,157,2.228,161,0.572,162,1.874,165,2.24,169,1.884,174,2.027,176,1.852,177,0.719,178,1.764,180,2.167,181,2.859,184,1.666,189,3.617,201,1.685,233,0.81,288,4.492,292,2.198,298,1.433,303,3.244,345,2.373,349,4.981,356,2.298,405,2.548,428,2.429,478,1.926,694,4.421,974,3.416,1313,3.857,1314,5.487,1323,4.159,1325,4.159,1354,6.546,1355,5.382,1356,5.368,1357,5.382,1358,5.382,1359,5.967,1360,5.905,1361,5.382,1362,5.382,1363,4.563,1364,5.382,1365,4.563,1366,5.382,1367,4.563,1368,4.159,1369,4.159,1370,4.563,1371,4.992,1372,3.857,1373,4.563,1374,4.563,1375,4.563,1376,4.563,1377,5.905,1379,4.563,1380,4.563,1381,4.563,1382,4.563,1383,4.563,1384,4.563,2241,5.905,2242,8.685,2243,5.176]],["title/components/SessionsComponent.html",[0,0.151,127,0.848]],["body/components/SessionsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,1.49,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2244,4.881,2245,7.677,2246,6.446,2247,6.446]],["title/components/SettingsComponent.html",[0,0.151,129,0.848]],["body/components/SettingsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,1.49,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,677,6.169,2248,4.881,2249,6.446,2250,6.446]],["title/components/SidebarComponent.html",[0,0.151,130,0.848]],["body/components/SidebarComponent.html",[0,0.166,1,0.468,2,0.71,3,0.044,4,0.033,5,0.48,6,0.48,7,0.48,8,0.039,12,0.48,13,1.781,14,1.781,15,1.16,17,0.746,18,0.864,19,0.765,20,1.944,25,0.765,29,0.331,30,0.01,31,0.873,32,0.251,34,0.923,35,0.923,38,0.044,39,0.745,43,0.48,44,0.765,45,1.459,46,0.48,47,1.089,48,0.48,49,0.403,50,0.48,51,0.468,52,0.48,53,0.468,54,0.48,55,0.468,56,0.48,57,0.468,58,0.48,59,0.468,60,0.48,61,0.468,62,0.435,63,0.765,64,0.468,65,0.765,66,0.468,67,0.48,68,0.468,69,0.48,70,0.468,71,0.48,72,0.468,73,0.457,74,0.765,75,0.468,76,0.48,77,0.468,78,0.48,79,0.468,80,0.48,81,0.468,82,0.48,83,0.468,84,0.48,85,0.468,86,0.48,87,0.468,88,0.48,89,0.468,90,0.446,91,0.954,92,1.062,93,0.48,94,0.468,95,0.48,96,0.468,97,0.48,98,0.468,99,0.48,100,0.468,101,0.468,102,0.403,103,0.728,104,0.48,105,0.728,106,0.765,107,0.468,108,0.468,109,0.48,110,0.468,111,0.48,112,0.468,113,0.48,114,0.468,115,0.48,116,0.468,117,0.446,118,0.468,119,0.48,120,0.468,121,0.48,122,0.48,123,0.468,124,0.48,125,0.468,126,0.48,127,0.468,128,0.48,129,0.468,130,1.062,131,0.48,132,0.468,133,0.48,134,0.468,135,0.48,136,0.468,137,0.48,138,0.468,139,0.457,140,0.468,141,0.48,142,0.468,143,0.48,144,0.48,145,0.48,146,0.004,147,0.004,154,1.559,155,2.354,161,0.206,162,2.003,164,3.126,165,1.651,169,1.617,171,3.848,172,4.111,174,1.503,176,1.291,177,0.591,178,0.864,180,1.025,181,1.32,190,1.592,226,1.442,228,1.442,231,0.873,232,2.867,233,0.77,234,3.273,244,4.191,245,4.285,251,1.592,254,3.273,257,2.688,268,2.111,273,3.749,286,1.273,291,0.746,292,0.675,325,3.273,332,2.539,335,1.686,336,1.889,340,3.995,350,2.688,358,3.995,363,3.997,365,2.411,368,3.167,373,0.873,374,0.873,375,1.393,376,1.431,377,0.898,378,0.898,398,2.539,641,3.391,674,3.855,675,3.352,684,3.995,695,1.798,697,3.391,699,3.352,700,4.826,701,3.576,706,2.867,708,4.399,709,3.091,714,4.672,718,3.091,719,3.091,731,3.855,774,4.399,804,3.825,868,1.708,892,4.094,901,1.183,1071,3.391,1102,5.333,1108,6.478,1109,3.576,1115,3.091,1176,2.127,1180,6.021,1181,6.841,1182,6.945,1200,3.391,1224,2.03,1482,1.798,1570,2.3,1647,3.091,1688,1.592,1719,2.867,1721,3.391,1736,3.391,1757,3.391,1761,3.391,1809,3.391,1810,3.391,2230,2.127,2251,2.412,2252,4.798,2253,3.847,2254,7.156,2255,5.895,2256,3.847,2257,3.847,2258,4.826,2259,5.474,2260,6.943,2261,4.826,2262,4.826,2263,4.798,2264,4.798,2265,4.798,2266,4.798,2267,4.229,2268,5.98,2269,4.798,2270,4.798,2271,4.798,2272,4.798,2273,2.412,2274,3.847,2275,4.826,2276,3.847,2277,2.412,2278,2.412,2279,2.412,2280,3.391,2281,2.412,2282,3.847,2283,2.412,2284,2.412,2285,4.798,2286,2.412,2287,2.412,2288,8.617,2289,2.412,2290,2.412,2291,2.412,2292,3.391,2293,2.412,2294,2.412,2295,2.412,2296,2.412,2297,2.412,2298,3.847,2299,2.412,2300,2.412,2301,2.412,2302,2.412,2303,2.412,2304,2.412,2305,2.412,2306,3.847,2307,2.412,2308,2.412,2309,2.412,2310,2.412,2311,2.412,2312,2.412,2313,2.412,2314,2.412,2315,2.412,2316,2.412,2317,2.412,2318,2.412,2319,2.412,2320,2.412,2321,2.412,2322,2.412,2323,3.391,2324,2.412,2325,2.412,2326,2.412,2327,2.412,2328,2.412,2329,2.412,2330,2.412,2331,2.412,2332,2.412,2333,2.412,2334,2.412,2335,2.412,2336,2.412,2337,2.412,2338,2.412,2339,2.412,2340,2.412,2341,2.412,2342,2.412,2343,2.412,2344,2.412,2345,2.412,2346,2.412,2347,2.412,2348,2.412,2349,2.412,2350,2.412,2351,2.412,2352,2.412,2353,2.412,2354,2.412,2355,2.412,2356,2.412,2357,2.412,2358,2.412,2359,2.412,2360,2.412,2361,2.412,2362,2.412,2363,2.412,2364,2.412,2365,2.412,2366,2.412,2367,2.412]],["title/components/StatsComponent.html",[0,0.151,132,0.848]],["body/components/StatsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,1.49,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2368,4.881,2369,7.677,2370,6.446,2371,6.446]],["title/components/SupportComponent.html",[0,0.151,134,0.848]],["body/components/SupportComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,1.49,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,0.947,143,0.971,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2372,4.881,2373,6.767,2374,6.446,2375,6.446]],["title/interfaces/Team.html",[222,0.44,976,2.611]],["body/interfaces/Team.html",[3,0.121,4,0.092,8,0.106,30,0.009,38,0.121,146,0.008,147,0.008,161,0.566,177,0.757,184,1.635,222,0.668,224,1.681,233,0.943,877,4.519,976,4.665,1887,4.899,1890,4.899,1891,4.671,2376,6.626,2377,5.984]],["title/interfaces/TeamDto.html",[222,0.44,2378,3.51]],["body/interfaces/TeamDto.html",[3,0.121,4,0.092,8,0.106,30,0.009,38,0.121,146,0.008,147,0.008,161,0.566,177,0.757,184,1.635,222,0.668,224,1.681,233,0.943,877,4.519,1887,4.899,1890,4.899,1891,4.671,2377,5.984,2378,6.27,2379,6.626]],["title/injectables/TeamEffects.html",[298,0.935,464,3.51]],["body/injectables/TeamEffects.html",[3,0.089,4,0.067,8,0.078,29,0.414,30,0.01,32,0.504,38,0.089,39,0.504,49,0.357,139,1.448,146,0.007,147,0.007,161,0.413,165,1.933,169,1.626,174,1.877,176,1.141,177,0.428,178,1.087,233,0.775,291,2.367,292,2.141,298,1.372,300,1.321,464,5.151,478,1.801,494,4.773,496,5.374,497,5.31,499,5.346,502,3.093,507,5.31,509,2.907,526,4.989,555,3.034,556,2.893,557,3.034,2380,4.839,2381,6.148,2382,5.702,2383,6.148,2384,6.148,2385,4.839,2386,6.096,2387,4.839,2388,6.41,2389,6.41,2390,6.41,2391,6.41,2392,6.41,2393,4.839,2394,6.41,2395,6.41,2396,6.41,2397,6.41,2398,6.41,2399,4.839,2400,6.41,2401,6.41,2402,7.651,2403,6.41,2404,6.41,2405,4.839,2406,6.41,2407,6.41,2408,6.41,2409,6.41,2410,4.839,2411,4.839,2412,4.266,2413,4.266,2414,4.266,2415,4.266,2416,4.839,2417,4.266,2418,4.266,2419,4.266,2420,4.266]],["title/injectables/TeamService.html",[298,0.935,2386,3.255]],["body/injectables/TeamService.html",[3,0.1,4,0.076,8,0.088,29,0.44,30,0.01,32,0.569,38,0.1,39,0.569,49,0.591,146,0.007,147,0.007,157,2.355,161,0.467,162,1.942,169,1.388,174,1.994,176,1.891,177,0.709,178,1.801,180,2.204,184,1.561,298,1.485,300,1.494,345,2.509,346,2.509,366,4.304,405,2.839,478,2.036,573,3.271,574,4.586,576,3.809,591,3.663,596,3.271,597,3.97,601,3.13,610,4.946,856,5.173,877,3.663,964,5.577,975,6.442,976,3.271,1307,4.078,1920,4.397,1923,4.824,2377,4.85,2378,4.397,2382,5.173,2386,5.173,2421,5.472,2422,6.119,2423,8.017,2424,8.017,2425,5.472,2426,6.941,2427,5.472,2428,6.941,2429,5.472,2430,5.472,2431,5.472,2432,5.472,2433,5.472,2434,6.941,2435,5.472,2436,5.472,2437,5.472]],["title/interfaces/TeamState.html",[222,0.44,443,3.51]],["body/interfaces/TeamState.html",[3,0.075,4,0.057,8,0.066,29,0.372,30,0.01,38,0.121,62,1.192,139,1.476,146,0.006,147,0.006,161,0.352,177,0.742,201,1.871,222,0.415,224,1.045,231,2.591,233,0.694,248,2.095,306,4.266,336,1.622,356,2.938,373,2.591,374,2.591,375,2.591,376,2.663,377,2.663,378,2.663,428,2.809,443,5.316,466,3.632,509,2.844,621,2.261,624,4.551,625,3.602,626,1.533,627,2.583,628,2.261,633,3.602,634,4.487,635,4.955,636,3.435,638,4.487,642,3.245,644,3.928,645,3.955,647,3.928,648,4.487,847,1.889,976,5.117,1198,3.928,2377,4.015,2381,3.311,2382,3.071,2383,3.311,2384,3.311,2412,3.632,2413,3.632,2414,3.632,2415,3.632,2417,3.632,2418,3.632,2419,3.632,2420,3.632,2438,4.12,2439,8,2440,8,2441,8.16,2442,8.16,2443,6.873,2444,8.16,2445,8.16,2446,7.193,2447,8.16,2448,8.16,2449,4.12,2450,4.12,2451,4.12,2452,5.746,2453,4.12,2454,4.12,2455,4.12,2456,4.12,2457,4.12,2458,4.12,2459,4.12,2460,4.12,2461,4.12,2462,3.632,2463,4.12]],["title/components/TeamsComponent.html",[0,0.151,136,0.848]],["body/components/TeamsComponent.html",[0,0.216,1,1.327,2,0.988,3,0.068,4,0.052,5,0.741,6,0.741,7,0.741,8,0.06,10,2.775,12,0.741,13,1.829,14,1.829,15,0.723,17,1.038,18,0.963,19,1.064,20,2.537,24,2.694,25,1.064,27,1.117,29,0.444,30,0.01,31,1.348,32,0.387,34,1.425,35,1.425,38,0.068,39,0.387,43,0.741,44,1.064,45,1.064,46,0.741,47,1.36,48,0.741,49,0.461,50,0.741,51,0.723,52,0.741,53,0.723,54,0.741,55,0.723,56,0.741,57,0.723,58,0.741,59,0.723,60,0.741,61,0.723,62,0.671,63,1.064,64,0.723,65,1.064,66,0.723,67,0.741,68,0.723,69,0.741,70,0.723,71,0.741,72,0.723,73,0.705,74,1.064,75,0.723,76,0.741,77,0.723,78,0.741,79,0.723,80,0.741,81,0.723,82,0.741,83,0.723,84,0.741,85,0.723,86,0.741,87,0.723,88,0.741,89,0.723,90,0.688,91,1.245,92,0.723,93,0.741,94,0.723,95,0.741,96,0.723,97,0.741,98,0.723,99,0.741,100,0.723,101,0.723,102,0.622,103,1.013,104,0.741,105,1.013,106,1.064,107,0.723,108,0.723,109,0.741,110,0.723,111,0.741,112,0.723,113,0.741,114,0.723,115,0.741,116,0.723,117,0.688,118,0.723,119,0.741,120,0.723,121,0.741,122,0.741,123,0.723,124,0.741,125,0.723,126,0.741,127,0.723,128,0.741,129,0.723,130,0.723,131,0.741,132,0.723,133,0.741,134,0.723,135,0.741,136,1.327,137,0.741,138,1.327,139,1.185,140,0.723,141,0.741,142,0.723,143,0.741,144,0.741,145,0.741,146,0.006,147,0.006,154,2.168,155,3.07,161,0.318,162,1.497,164,3.356,169,0.945,174,1.909,176,0.878,177,0.329,178,0.837,180,0.992,181,1.835,233,0.646,291,2.403,292,2.328,300,1.017,346,1.707,435,1.653,502,1.603,626,1.386,868,3.349,910,1.765,929,3.356,1027,2.044,1090,2.602,1430,5.029,1434,5.029,1435,5.517,1436,5.822,1443,5.497,1445,6.061,1447,4.298,1449,4.715,1451,4.298,1459,2.992,1460,2.13,1461,2.992,1462,2.226,1463,2.992,1464,2.226,1465,2.992,1472,2.992,1473,2.992,1476,2.992,1478,4.298,2383,2.992,2384,2.992,2443,5.517,2446,5.517,2464,3.724,2465,5.348,2466,5.348,2467,6.841,2468,6.841,2469,3.724,2470,3.724,2471,7.542,2472,3.724,2473,3.724,2474,3.724,2475,5.348,2476,3.724,2477,5.348,2478,3.724,2479,5.348,2480,3.724,2481,5.348,2482,3.724,2483,3.724,2484,3.283,2485,3.724,2486,3.724,2487,3.283,2488,3.283,2489,3.724,2490,3.724]],["title/components/TeamsTableComponent.html",[0,0.151,138,0.848]],["body/components/TeamsTableComponent.html",[0,0.151,1,0.408,2,0.636,3,0.063,4,0.029,5,0.418,6,0.418,7,0.418,8,0.034,12,0.418,13,1.761,14,1.761,15,0.408,17,0.668,18,1.346,19,0.685,20,1.772,21,2.145,23,2.501,24,1.882,25,0.685,27,0.719,29,0.428,30,0.01,31,0.761,32,0.219,34,0.805,35,0.805,36,1.032,37,1.203,38,0.038,39,0.219,41,3.366,43,0.418,44,0.685,45,0.685,46,0.418,47,1.005,48,0.418,49,0.486,50,0.418,51,0.408,52,0.418,53,0.408,54,0.418,55,0.408,56,0.418,57,0.408,58,0.418,59,0.408,60,0.418,61,0.408,62,0.379,63,0.685,64,0.408,65,0.685,66,0.408,67,0.418,68,0.408,69,0.418,70,0.408,71,0.418,72,0.408,73,0.398,74,0.685,75,0.408,76,0.418,77,0.408,78,0.418,79,0.408,80,0.418,81,0.408,82,0.418,83,0.408,84,0.418,85,0.408,86,0.418,87,0.408,88,0.418,89,0.408,90,0.388,91,0.869,92,0.408,93,0.418,94,0.408,95,0.418,96,0.408,97,0.418,98,0.408,99,0.418,100,0.408,101,0.408,102,0.351,103,0.652,104,0.418,105,0.652,106,0.685,107,0.408,108,0.408,109,0.418,110,0.408,111,0.418,112,0.408,113,0.418,114,0.408,115,0.418,116,0.408,117,0.388,118,0.408,119,0.418,120,0.408,121,0.418,122,0.418,123,0.408,124,0.418,125,0.408,126,0.418,127,0.408,128,0.418,129,0.408,130,0.408,131,0.418,132,0.408,133,0.418,134,0.408,135,0.418,136,0.408,137,0.418,138,0.98,139,1.549,140,0.408,141,0.418,142,0.408,143,0.418,144,0.418,145,0.418,146,0.004,147,0.004,154,1.396,156,2.501,161,0.18,162,0.964,163,2.89,165,2.319,169,0.873,171,3.1,174,1.98,176,1.412,177,0.708,178,1.481,180,1.871,181,2.409,184,1.328,201,1.121,231,1.583,233,0.416,263,3.22,275,3.126,286,3.159,291,2.311,292,2.152,300,0.574,373,1.583,374,1.583,375,1.829,376,1.627,377,1.627,378,1.627,405,0.722,428,1.955,435,0.934,502,0.905,509,1.5,518,2.501,591,1.11,621,4.163,624,1.11,626,0.783,628,1.154,642,1.689,644,2.773,647,2.773,663,1.47,681,2.307,692,2.158,751,4.06,759,2.273,803,1.069,844,2.399,845,1.89,846,3.746,848,2.399,849,2.613,850,2.501,855,2.501,856,4.709,859,3.854,860,3.854,862,3.035,864,2.773,865,2.767,868,2.806,869,3.424,875,3.035,877,3.159,882,2.767,884,2.501,885,2.501,887,2.399,892,2.501,893,1.89,897,3.035,899,1.154,900,1.203,901,1.032,902,1.257,903,1.154,904,1.318,905,2.158,906,1.318,910,0.997,917,1.854,918,1.318,919,3.657,920,1.97,921,2.058,922,1.318,923,1.318,924,1.854,929,1.689,944,2.89,945,2.89,946,2.89,949,2.773,950,2.399,952,3.035,957,2.773,958,1.69,962,1.854,965,3.035,976,3.942,1005,1.318,1109,3.258,1149,3.055,1180,1.47,1181,2.566,1198,2.773,1220,3.766,1486,2.406,1549,1.69,1550,5.485,1551,4.479,1552,3.513,1553,3.258,1554,3.513,1555,3.258,1556,3.513,1557,2.767,1558,2.767,1559,3.513,1565,2.767,1570,2.613,1571,3.513,1572,3.513,1574,3.513,1576,3.513,1581,1.69,1582,1.69,1583,1.69,1586,2.767,1587,4.06,1588,1.69,1593,1.854,1597,2.767,1599,1.69,1604,1.69,1607,1.567,1608,1.69,1609,1.69,1610,1.567,1611,1.69,1612,1.567,1614,1.69,1622,1.69,1627,2.767,1628,2.566,1629,2.566,1630,2.767,1632,2.767,1634,2.767,1640,1.854,1641,1.69,1642,1.854,1643,1.854,1644,1.854,1645,1.854,1646,1.854,1647,1.69,1648,1.854,1649,1.69,1650,1.854,1651,1.854,1652,3.035,1653,1.854,1655,1.854,1667,3.035,1891,1.817,2051,3.854,2059,4.454,2060,3.854,2062,1.854,2063,1.854,2068,1.854,2074,1.854,2077,1.854,2079,1.854,2081,1.854,2082,1.854,2377,1.47,2381,1.69,2382,1.567,2386,4.709,2422,4.454,2462,1.854,2484,7.433,2487,1.854,2488,1.854,2491,8.431,2492,4.372,2493,4.372,2494,5.053,2495,5.053,2496,5.053,2497,3.443,2498,4.372,2499,2.103,2500,2.103,2501,2.103,2502,2.103,2503,2.103,2504,2.103,2505,2.103,2506,3.443,2507,2.103,2508,2.103,2509,2.103,2510,3.443,2511,2.103,2512,2.103,2513,2.103,2514,3.443,2515,3.443,2516,2.103,2517,2.103,2518,2.103,2519,2.103,2520,2.103,2521,4.372,2522,6.319,2523,2.103,2524,2.103,2525,2.103,2526,2.103,2527,2.103,2528,2.103,2529,2.103,2530,2.103,2531,2.103,2532,2.103,2533,2.103,2534,2.103,2535,3.443,2536,3.443,2537,3.443,2538,3.443,2539,3.443,2540,3.443,2541,3.443]],["title/interfaces/Token.html",[222,0.44,622,3.255]],["body/interfaces/Token.html",[3,0.123,4,0.093,8,0.108,30,0.009,38,0.123,146,0.008,147,0.008,161,0.573,177,0.695,184,1.639,222,0.677,224,1.703,233,0.95,571,6.41,622,5.861,940,5.19,2542,6.714,2543,7.582,2544,7.582,2545,7.582]],["title/interfaces/TokenDto.html",[222,0.44,598,3.51]],["body/interfaces/TokenDto.html",[3,0.123,4,0.093,8,0.108,30,0.009,38,0.123,146,0.008,147,0.008,161,0.573,177,0.695,184,1.639,222,0.677,224,1.703,233,0.95,571,6.41,598,6.319,940,5.19,2543,7.582,2544,7.582,2545,7.582,2546,6.714]],["title/components/TopbarComponent.html",[0,0.151,140,0.848]],["body/components/TopbarComponent.html",[0,0.205,1,0.657,2,0.922,3,0.062,4,0.047,5,0.673,6,0.673,7,0.673,8,0.054,12,0.673,13,1.82,14,1.82,15,0.657,17,0.968,18,0.899,19,0.992,20,2.402,21,2.907,23,3.39,24,2.551,25,0.992,27,1.042,29,0.446,30,0.01,31,1.226,32,0.352,33,1.604,34,1.295,35,1.295,36,1.661,37,1.936,38,0.062,39,0.352,41,2.288,43,0.673,44,0.992,45,0.992,46,0.673,47,1.301,48,0.673,49,0.482,50,0.673,51,0.657,52,0.673,53,0.657,54,0.673,55,0.657,56,0.673,57,0.657,58,0.673,59,0.657,60,0.673,61,0.657,62,0.61,63,0.992,64,0.657,65,0.992,66,0.657,67,0.673,68,0.657,69,0.673,70,0.657,71,0.673,72,0.657,73,0.641,74,0.992,75,0.657,76,0.673,77,0.657,78,0.673,79,0.657,80,0.673,81,0.657,82,0.673,83,0.657,84,0.673,85,0.657,86,0.673,87,0.657,88,0.673,89,0.657,90,0.625,91,1.179,92,0.657,93,0.673,94,0.657,95,0.673,96,0.657,97,0.673,98,0.657,99,0.673,100,0.657,101,0.657,102,0.565,103,0.945,104,0.673,105,0.945,106,0.992,107,0.657,108,0.657,109,0.673,110,0.657,111,0.673,112,0.657,113,0.673,114,0.657,115,0.673,116,0.657,117,0.625,118,0.657,119,0.673,120,0.657,121,0.673,122,0.673,123,0.657,124,0.673,125,0.657,126,0.673,127,0.657,128,0.673,129,0.657,130,0.657,131,0.673,132,0.657,133,0.673,134,0.657,135,0.673,136,0.657,137,0.673,138,0.657,139,0.641,140,1.269,141,0.673,142,0.657,143,0.673,144,0.673,145,0.673,146,0.005,147,0.005,161,0.289,162,1.396,165,1.787,169,1.266,171,3.701,172,4.338,174,1.982,176,1.177,177,0.699,178,1.121,180,1.742,181,2.033,190,2.234,231,2.146,233,0.603,268,3.253,291,2.023,292,2.042,331,3.487,336,2.333,373,2.146,374,2.146,375,2.146,376,2.205,377,2.205,378,2.205,405,1.161,435,1.503,489,2.72,626,1.26,681,3.128,684,3.715,695,2.523,701,2.523,714,4.141,803,1.721,847,2.718,868,3.35,870,4.141,892,4.316,893,3.253,899,1.858,901,1.661,910,1.604,914,2.984,916,2.72,1025,2.122,1027,1.858,1028,2.122,1102,4.417,1108,3.719,1134,4.399,1260,2.72,1406,2.523,1407,2.72,1414,2.984,1553,4.417,1555,4.417,1607,2.523,1610,2.523,2267,5.225,2547,3.385,2548,4.99,2549,4.99,2550,4.99,2551,5.927,2552,5.927,2553,5.927,2554,4.99,2555,7.296,2556,6.54,2557,7.296,2558,4.99,2559,4.99,2560,3.385,2561,3.385,2562,3.385,2563,3.385,2564,3.385,2565,4.99,2566,4.99,2567,4.99,2568,4.99,2569,3.385,2570,3.385,2571,4.99,2572,4.99,2573,3.385,2574,4.99,2575,3.385,2576,3.385,2577,4.99,2578,3.385,2579,3.385,2580,3.385,2581,3.385,2582,3.385,2583,3.385,2584,3.385,2585,4.99,2586,4.99]],["title/interfaces/User.html",[222,0.44,336,1.72]],["body/interfaces/User.html",[3,0.104,4,0.079,8,0.091,29,0.37,30,0.01,38,0.13,49,0.419,146,0.007,147,0.007,161,0.486,177,0.794,184,1.696,222,0.717,224,1.443,233,0.86,260,3.566,275,3.201,336,2.8,428,2.4,503,4.291,1065,4.291,1111,6.06,1224,4.622,1245,5.366,1246,5.366,1292,3.975,1460,4.069,1462,4.252,1464,3.401,1887,4.651,1890,4.651,1891,4.661,2197,5.015,2198,4.571,2199,4.239,2200,5.015,2201,5.015,2202,6.533,2203,6.533,2204,6.533]],["title/interfaces/UserDto.html",[222,0.44,602,3.255]],["body/interfaces/UserDto.html",[3,0.104,4,0.079,8,0.092,29,0.37,30,0.01,38,0.104,49,0.42,146,0.007,147,0.007,161,0.487,177,0.801,184,1.696,222,0.575,224,1.447,233,0.861,260,3.576,275,3.204,428,2.404,503,4.295,602,5.31,1065,4.295,1111,6.066,1224,4.295,1245,5.372,1246,5.372,1292,3.986,1460,4.076,1462,4.26,1464,3.41,1683,5.725,1887,4.656,1890,4.656,1891,4.664,2198,4.584,2199,4.251,2202,6.54,2203,6.54,2204,6.54,2587,5.704,2588,5.704,2589,5.704]],["title/components/VitalsComponent.html",[0,0.151,142,0.848]],["body/components/VitalsComponent.html",[0,0.249,1,0.947,2,1.19,3,0.089,4,0.068,5,0.971,6,0.971,7,0.971,8,0.078,12,0.971,13,1.851,14,1.851,15,0.947,17,1.251,18,1.161,19,0.971,25,1.282,27,1.346,29,0.254,30,0.009,32,0.508,38,0.089,39,0.508,43,0.971,44,1.282,45,1.282,46,0.971,47,1.527,48,0.971,49,0.475,50,0.971,51,0.947,52,0.971,53,0.947,54,0.971,55,0.947,56,0.971,57,0.947,58,0.971,59,0.947,60,0.971,61,0.947,62,0.879,63,1.282,64,0.947,65,1.282,66,0.947,67,0.971,68,0.947,69,0.971,70,0.947,71,0.971,72,0.947,73,0.924,74,1.282,75,0.947,76,0.971,77,0.947,78,0.971,79,0.947,80,0.971,81,0.947,82,0.971,83,0.947,84,0.971,85,0.947,86,0.971,87,0.947,88,0.971,89,0.947,90,0.901,91,1.435,92,0.947,93,0.971,94,0.947,95,0.971,96,0.947,97,0.971,98,0.947,99,0.971,100,0.947,101,0.947,102,0.815,103,1.22,104,0.971,105,1.22,106,1.282,107,0.947,108,0.947,109,0.971,110,0.947,111,0.971,112,0.947,113,0.971,114,0.947,115,0.971,116,0.947,117,0.901,118,0.947,119,0.971,120,0.947,121,0.971,122,0.971,123,0.947,124,0.971,125,0.947,126,0.971,127,0.947,128,0.971,129,0.947,130,0.947,131,0.971,132,0.947,133,0.971,134,0.947,135,0.971,136,0.947,137,0.971,138,0.947,139,0.924,140,0.947,141,0.971,142,1.49,143,1.587,144,0.971,145,0.971,146,0.007,147,0.007,152,2.154,2590,4.881,2591,6.446,2592,6.446]],["title/dependencies.html",[2593,2.923,2594,4.636]],["body/dependencies.html",[30,0.01,31,2.271,32,0.653,33,2.974,34,2.89,35,2.401,146,0.008,147,0.008,300,1.713,556,3.751,626,2.811,803,3.19,1688,4.141,1822,5.531,2594,5.531,2595,6.274,2596,8.978,2597,6.274,2598,8.105,2599,6.659,2600,6.274,2601,6.274,2602,6.274,2603,8.105,2604,6.274,2605,6.274,2606,6.274,2607,6.274,2608,6.274,2609,6.274,2610,6.274,2611,6.274,2612,6.274,2613,6.274,2614,5.041,2615,6.274,2616,6.274,2617,6.274,2618,6.274,2619,6.274,2620,5.531,2621,6.274,2622,6.274,2623,6.274,2624,6.274,2625,6.274,2626,6.274]],["title/miscellaneous/enumerations.html",[2627,2.711,2628,4.636]],["body/miscellaneous/enumerations.html",[30,0.01,62,1.212,102,1.123,146,0.007,147,0.007,161,0.445,292,2.611,336,2.648,381,5.013,509,2.308,624,3.55,636,4.021,642,3.3,664,4.439,741,5.013,847,3.084,976,4.021,1112,5.013,1224,3.55,1460,4.503,1462,4.021,1688,4.439,1933,4.021,1937,5.405,2258,5.929,2614,5.405,2627,3.882,2628,4.592,2629,5.209,2630,5.209,2631,7.872,2632,5.209,2633,5.209,2634,6.726,2635,5.209,2636,5.929,2637,6.726,2638,5.209,2639,6.726,2640,6.726,2641,6.726,2642,6.726,2643,6.726,2644,6.726,2645,6.726,2646,6.726,2647,5.929,2648,6.726,2649,6.726,2650,6.726,2651,6.726,2652,6.726,2653,6.726,2654,6.726,2655,6.726,2656,6.726,2657,5.209,2658,6.726,2659,6.726,2660,6.726,2661,6.726,2662,6.726,2663,6.726,2664,6.726,2665,6.726,2666,5.209,2667,6.726]],["title/miscellaneous/functions.html",[246,3.675,2627,2.711]],["body/miscellaneous/functions.html",[30,0.009,49,0.628,146,0.008,147,0.008,161,0.556,176,2.008,177,0.752,178,1.913,180,1.734,246,4.547,275,2.562,292,1.821,336,3.241,574,4.416,576,3.572,1097,5.229,1460,4.416,1462,4.615,2627,4.85,2668,7.72,2669,7.72,2670,7.72,2671,6.508,2672,7.72,2673,6.508,2674,7.72,2675,6.508,2676,6.508,2677,6.508,2678,6.508,2679,6.508,2680,7.72,2681,7.72,2682,6.508,2683,6.508]],["title/index.html",[161,0.311,2684,3.206,2685,3.206]],["body/index.html",[0,0.25,2,1.195,4,0.068,17,0.953,30,0.008,49,0.477,102,1.285,146,0.007,147,0.007,154,1.99,228,2.935,245,2.809,280,4.522,281,3.078,302,3.241,306,2.327,340,3.078,356,2.18,363,5.006,365,4.538,375,1.778,379,3.241,383,5.738,576,2.695,597,2.809,706,3.66,741,3.66,765,3.946,870,2.695,1112,5.96,1220,5.395,1406,5.395,1426,4.329,1688,4.778,1699,5.058,1759,4.329,1772,5.705,1774,5.817,1795,5.2,1933,2.935,1936,5.058,2275,4.329,2593,3.946,2599,4.329,2620,4.329,2686,6.472,2687,6.472,2688,7.239,2689,6.472,2690,6.472,2691,6.472,2692,4.329,2693,4.329,2694,4.329,2695,4.91,2696,4.91,2697,4.91,2698,4.91,2699,6.472,2700,4.91,2701,4.91,2702,4.91,2703,4.91,2704,4.91,2705,4.91,2706,4.91,2707,4.91,2708,4.91,2709,4.91,2710,4.91,2711,4.91,2712,4.91,2713,4.329,2714,7.711,2715,8.212,2716,4.91,2717,4.91,2718,4.91,2719,4.91,2720,4.329,2721,4.91,2722,5.705,2723,4.91,2724,6.381,2725,4.91,2726,8.598,2727,4.91,2728,4.91,2729,4.91,2730,4.91,2731,8.896,2732,8.212,2733,6.472,2734,6.381,2735,7.58,2736,6.472,2737,4.91,2738,4.91,2739,7.239,2740,6.381,2741,6.472,2742,6.472,2743,7.239,2744,5.705,2745,6.472,2746,7.695,2747,4.91,2748,6.472,2749,4.91,2750,4.91,2751,4.91,2752,4.329,2753,4.329,2754,4.91,2755,4.91,2756,6.472,2757,4.91,2758,4.91,2759,6.472,2760,4.91,2761,6.472,2762,4.91,2763,4.91,2764,4.329,2765,4.329,2766,7.239,2767,4.91,2768,6.472,2769,4.329,2770,4.91,2771,4.91,2772,4.329,2773,4.329,2774,4.91,2775,4.91,2776,4.329,2777,4.91,2778,4.91,2779,4.329]],["title/license.html",[2684,3.206,2685,3.206,2780,3.206]],["body/license.html",[0,0.132,4,0.112,8,0.033,15,0.826,16,0.999,29,0.059,30,0.005,39,0.118,146,0.003,147,0.002,152,1.964,162,0.317,165,0.342,173,2.045,174,0.267,177,0.179,181,0.389,222,0.466,224,0.696,227,2.045,228,4.662,234,4.199,240,0.792,243,0.845,245,3.362,249,4.343,250,3.68,253,3.605,254,0.678,255,2.858,267,1.509,268,0.622,273,2.669,276,2.045,277,2.68,278,0.845,284,0.845,287,0.792,288,1.158,295,4.635,299,0.792,302,1.336,306,0.537,318,2.045,333,0.792,336,2.505,343,2.332,349,0.678,351,3.173,356,2.052,359,2.045,362,3.173,365,2.092,375,0.41,376,0.422,383,0.792,386,0.845,405,0.389,407,0.845,412,0.845,416,2.975,421,0.792,494,0.648,505,0.556,621,0.622,645,0.678,663,1.415,684,4.593,698,0.911,699,1.415,701,1.509,702,3.753,709,3.081,710,0.999,715,0.999,722,0.999,723,5.934,729,0.911,730,2.942,731,2.682,734,1.785,739,0.999,745,1.785,748,2.68,757,1.785,759,2.81,763,4.632,764,0.999,771,0.999,772,1.785,773,1.785,776,4.598,833,5.338,847,0.928,919,0.576,949,0.622,957,0.622,978,1.415,982,0.999,1049,3.887,1097,0.911,1105,2.419,1110,1.785,1113,1.627,1119,0.999,1121,0.999,1216,3.753,1314,0.792,1356,0.748,1460,3.124,1482,3.887,1510,0.999,1570,1.641,1612,0.845,1649,0.911,1686,0.999,1688,2.531,1694,0.999,1699,2.68,1712,1.627,1713,3.968,1716,1.785,1719,2.045,1722,3.968,1734,0.999,1755,4.353,1760,1.785,1762,5.338,1766,0.999,1770,1.785,1774,5.833,1776,2.942,1791,0.999,1795,0.911,1796,0.999,1798,1.785,1799,4.074,1800,4.353,1813,1.785,1852,0.999,1858,0.999,1878,0.999,1891,0.598,1936,5.12,2199,4.071,2255,0.999,2261,0.999,2262,0.999,2280,0.999,2292,1.785,2323,0.999,2373,2.419,2614,1.627,2636,0.999,2647,4.353,2692,0.999,2693,0.999,2694,0.999,2713,0.999,2714,4.353,2720,2.942,2722,2.942,2724,0.999,2734,1.785,2735,5.48,2740,0.999,2744,2.419,2752,3.381,2753,2.942,2764,5.48,2765,2.419,2769,2.419,2772,6.335,2773,1.785,2776,2.419,2779,1.785,2780,7.801,2781,6.836,2782,3.835,2783,1.133,2784,1.133,2785,2.745,2786,7.617,2787,6.933,2788,7.454,2789,4.258,2790,1.133,2791,1.133,2792,2.025,2793,3.835,2794,7.328,2795,3.835,2796,2.745,2797,6.216,2798,1.133,2799,2.745,2800,1.133,2801,1.133,2802,2.025,2803,4.258,2804,1.133,2805,4.258,2806,1.133,2807,4.938,2808,2.025,2809,1.133,2810,1.133,2811,1.133,2812,6.216,2813,8.225,2814,2.745,2815,8.805,2816,2.025,2817,4.622,2818,4.622,2819,4.258,2820,1.133,2821,1.133,2822,3.338,2823,4.938,2824,2.745,2825,1.133,2826,2.025,2827,1.133,2828,2.745,2829,6.836,2830,3.338,2831,1.133,2832,1.133,2833,2.025,2834,3.338,2835,2.025,2836,5.878,2837,2.025,2838,2.025,2839,3.338,2840,4.622,2841,3.835,2842,1.133,2843,4.938,2844,4.258,2845,7.712,2846,2.745,2847,4.622,2848,1.133,2849,1.133,2850,3.835,2851,4.938,2852,2.025,2853,5.681,2854,3.835,2855,2.025,2856,1.133,2857,1.133,2858,6.362,2859,2.025,2860,1.133,2861,1.133,2862,6.055,2863,2.025,2864,2.745,2865,1.133,2866,1.133,2867,2.025,2868,1.133,2869,3.338,2870,1.133,2871,1.133,2872,1.133,2873,1.133,2874,1.133,2875,2.025,2876,1.133,2877,1.133,2878,1.133,2879,2.025,2880,1.133,2881,2.745,2882,2.025,2883,1.133,2884,1.133,2885,2.025,2886,2.025,2887,6.216,2888,1.133,2889,2.025,2890,2.025,2891,1.133,2892,1.133,2893,2.025,2894,2.745,2895,2.025,2896,2.745,2897,2.025,2898,1.133,2899,1.133,2900,4.258,2901,1.133,2902,1.133,2903,3.835,2904,1.133,2905,3.338,2906,2.025,2907,2.745,2908,1.133,2909,1.133,2910,6.216,2911,3.338,2912,3.835,2913,4.258,2914,2.745,2915,1.133,2916,2.745,2917,2.025,2918,1.133,2919,1.133,2920,1.133,2921,2.745,2922,8.127,2923,1.133,2924,1.133,2925,2.025,2926,2.025,2927,1.133,2928,5.462,2929,1.133,2930,3.338,2931,2.745,2932,2.025,2933,8.043,2934,2.745,2935,5.216,2936,3.338,2937,2.025,2938,1.133,2939,2.025,2940,2.745,2941,5.216,2942,5.462,2943,3.338,2944,2.025,2945,2.025,2946,3.338,2947,1.133,2948,2.745,2949,7.393,2950,2.025,2951,1.133,2952,4.938,2953,1.133,2954,2.745,2955,4.938,2956,1.133,2957,6.362,2958,3.338,2959,2.025,2960,5.681,2961,4.258,2962,1.133,2963,1.133,2964,1.133,2965,4.938,2966,1.133,2967,2.025,2968,1.133,2969,2.745,2970,2.745,2971,1.133,2972,1.133,2973,1.133,2974,5.681,2975,2.745,2976,1.133,2977,1.133,2978,1.133,2979,2.025,2980,5.462,2981,1.133,2982,1.133,2983,1.133,2984,2.745,2985,2.745,2986,2.745,2987,2.745,2988,1.133,2989,1.133,2990,3.835,2991,1.133,2992,2.025,2993,1.133,2994,2.745,2995,1.133,2996,2.745,2997,1.133,2998,1.133,2999,1.133,3000,2.025,3001,1.133,3002,7.186,3003,4.938,3004,1.133,3005,2.025,3006,1.133,3007,1.133,3008,2.025,3009,2.025,3010,1.133,3011,1.133,3012,1.133,3013,2.025,3014,2.745,3015,3.835,3016,1.133,3017,2.025,3018,1.133,3019,1.133,3020,1.133,3021,1.133,3022,4.622,3023,3.338,3024,1.133,3025,3.835,3026,1.133,3027,1.133,3028,1.133,3029,2.745,3030,1.133,3031,1.133,3032,1.133,3033,1.133,3034,2.745,3035,2.745,3036,1.133,3037,1.133,3038,2.025,3039,2.025,3040,2.025,3041,1.133,3042,2.025,3043,1.133,3044,1.133,3045,1.133,3046,1.133,3047,1.133,3048,2.745,3049,1.133,3050,1.133,3051,6.362,3052,2.745,3053,1.133,3054,1.133,3055,1.133,3056,3.835,3057,3.835,3058,1.133,3059,1.133,3060,2.745,3061,1.133,3062,1.133,3063,3.338,3064,1.133,3065,2.025,3066,1.133,3067,1.133,3068,1.133,3069,1.133,3070,1.133,3071,1.133,3072,2.025,3073,2.025,3074,1.133,3075,2.745,3076,1.133,3077,1.133,3078,2.025,3079,1.133,3080,1.133,3081,1.133,3082,1.133,3083,2.025,3084,2.025,3085,2.025,3086,2.025,3087,5.216,3088,2.025,3089,4.258,3090,1.133,3091,1.133,3092,2.025,3093,2.745,3094,3.338,3095,3.338,3096,2.745,3097,3.338,3098,2.745,3099,1.133,3100,3.835,3101,3.835,3102,2.745,3103,1.133,3104,2.025,3105,3.835,3106,2.025,3107,3.338,3108,3.338,3109,2.025,3110,2.745,3111,3.835,3112,1.133,3113,1.133,3114,1.133,3115,2.745,3116,2.745,3117,2.025,3118,1.133,3119,1.133,3120,1.133,3121,1.133,3122,2.025,3123,1.133,3124,1.133,3125,2.745,3126,1.133,3127,1.133,3128,2.025,3129,2.745,3130,1.133,3131,2.025,3132,1.133,3133,2.745,3134,1.133,3135,1.133,3136,1.133,3137,2.025,3138,2.025,3139,4.258,3140,7.023,3141,2.745,3142,2.025,3143,2.025,3144,2.025,3145,2.025,3146,3.338,3147,3.338,3148,2.025,3149,1.133,3150,1.133,3151,1.133,3152,1.133,3153,4.622,3154,4.258,3155,2.025,3156,1.133,3157,1.133,3158,1.133,3159,1.133,3160,2.025,3161,1.133,3162,2.025,3163,1.133,3164,3.835,3165,1.133,3166,5.681,3167,1.133,3168,1.133,3169,1.133,3170,1.133,3171,2.025,3172,1.133,3173,1.133,3174,1.133,3175,2.025,3176,2.745,3177,3.835,3178,2.025,3179,3.338,3180,2.025,3181,1.133,3182,1.133,3183,1.133,3184,1.133,3185,1.133,3186,2.025,3187,1.133,3188,1.133,3189,3.338,3190,1.133,3191,2.025,3192,2.025,3193,1.133,3194,1.133,3195,2.745,3196,1.133,3197,1.133,3198,1.133,3199,1.133,3200,1.133,3201,2.025,3202,1.133,3203,1.133,3204,2.025,3205,1.133,3206,1.133,3207,1.133,3208,2.745,3209,1.133,3210,1.133,3211,1.133,3212,1.133,3213,1.133,3214,3.835,3215,1.133,3216,3.338,3217,1.133,3218,1.133,3219,3.338,3220,1.133,3221,1.133,3222,1.133,3223,1.133,3224,1.133,3225,2.025,3226,4.622,3227,2.745,3228,1.133,3229,3.338,3230,1.133,3231,1.133,3232,2.745,3233,1.133,3234,1.133,3235,2.745,3236,1.133,3237,2.025,3238,1.133,3239,1.133,3240,1.133,3241,1.133,3242,1.133,3243,1.133,3244,1.133,3245,1.133,3246,2.025,3247,1.133,3248,1.133,3249,1.133,3250,2.025,3251,2.025,3252,1.133,3253,1.133,3254,2.745,3255,1.133,3256,2.025,3257,2.025,3258,1.133,3259,2.025,3260,1.133,3261,2.745,3262,4.622,3263,1.133,3264,1.133,3265,2.025,3266,1.133,3267,1.133,3268,1.133,3269,1.133,3270,1.133,3271,2.025,3272,3.338,3273,1.133,3274,3.835,3275,1.133,3276,1.133,3277,1.133,3278,1.133,3279,1.133,3280,2.025,3281,2.025,3282,2.025,3283,2.745,3284,1.133,3285,2.025,3286,1.133,3287,2.745,3288,1.133,3289,2.025,3290,1.133,3291,2.025,3292,2.025,3293,1.133,3294,1.133,3295,2.025,3296,7.186,3297,2.025,3298,1.133,3299,3.835,3300,5.462,3301,2.745,3302,1.133,3303,1.133,3304,1.133,3305,3.338,3306,1.133,3307,1.133,3308,2.745,3309,1.133,3310,2.025,3311,1.133,3312,1.133,3313,1.133,3314,3.338,3315,1.133,3316,1.133,3317,1.133,3318,1.133,3319,1.133,3320,3.338,3321,1.133,3322,1.133,3323,2.745,3324,1.133,3325,2.025,3326,2.745,3327,2.025,3328,1.133,3329,1.133,3330,1.133,3331,2.025,3332,2.745,3333,1.133,3334,1.133,3335,2.025,3336,1.133,3337,1.133,3338,1.133,3339,1.133,3340,1.133,3341,1.133,3342,2.745,3343,2.025,3344,1.133,3345,1.133,3346,3.338,3347,1.133,3348,2.745,3349,1.133,3350,1.133,3351,1.133,3352,2.025,3353,1.133,3354,1.133,3355,1.133,3356,2.745,3357,2.025,3358,2.025,3359,1.133,3360,4.622,3361,2.025,3362,2.745,3363,3.338,3364,1.133,3365,1.133,3366,1.133,3367,2.025,3368,1.133,3369,2.745,3370,1.133,3371,2.025,3372,1.133,3373,1.133,3374,1.133,3375,1.133,3376,2.745,3377,1.133,3378,2.745,3379,2.025,3380,1.133,3381,2.025,3382,1.133,3383,1.133,3384,2.025,3385,2.025,3386,1.133,3387,1.133,3388,2.025,3389,1.133,3390,1.133,3391,1.133,3392,1.133,3393,1.133,3394,2.745,3395,1.133,3396,1.133,3397,1.133,3398,1.133,3399,1.133,3400,3.338,3401,2.025,3402,2.745,3403,1.133,3404,1.133,3405,1.133,3406,1.133,3407,1.133,3408,2.025,3409,1.133,3410,1.133,3411,1.133,3412,1.133,3413,1.133,3414,1.133,3415,1.133,3416,1.133,3417,1.133,3418,1.133,3419,1.133,3420,1.133,3421,1.133,3422,1.133,3423,3.338,3424,1.133,3425,2.025,3426,1.133,3427,1.133,3428,1.133,3429,1.133,3430,1.133,3431,1.133,3432,1.133,3433,1.133,3434,1.133,3435,2.745,3436,1.133,3437,1.133,3438,1.133,3439,2.025,3440,1.133,3441,1.133,3442,1.133,3443,1.133,3444,1.133,3445,1.133,3446,2.025,3447,2.025,3448,3.835,3449,2.745,3450,1.133,3451,2.025,3452,1.133,3453,1.133,3454,1.133,3455,1.133,3456,2.745,3457,2.025,3458,1.133,3459,2.025,3460,2.025,3461,2.025,3462,1.133,3463,1.133,3464,1.133,3465,1.133,3466,1.133,3467,1.133,3468,2.025,3469,1.133,3470,1.133,3471,1.133,3472,1.133,3473,2.745,3474,1.133,3475,1.133,3476,1.133,3477,1.133,3478,1.133,3479,1.133,3480,1.133,3481,1.133,3482,1.133,3483,1.133,3484,1.133,3485,2.025,3486,1.133,3487,1.133,3488,1.133,3489,1.133,3490,1.133,3491,1.133,3492,1.133,3493,1.133,3494,1.133,3495,1.133,3496,1.133,3497,1.133,3498,1.133,3499,1.133,3500,1.133,3501,1.133,3502,1.133,3503,1.133,3504,2.745,3505,2.025,3506,1.133,3507,1.133,3508,1.133,3509,1.133,3510,1.133,3511,2.025,3512,1.133,3513,1.133,3514,1.133,3515,1.133,3516,1.133,3517,1.133,3518,1.133,3519,1.133,3520,2.025,3521,1.133,3522,1.133,3523,1.133,3524,1.133,3525,1.133,3526,1.133,3527,1.133,3528,1.133,3529,1.133,3530,1.133,3531,1.133,3532,1.133,3533,1.133,3534,1.133,3535,1.133,3536,1.133,3537,1.133,3538,1.133,3539,1.133]],["title/modules.html",[3540,5.273]],["body/modules.html",[30,0.008,146,0.008,147,0.008,3540,6.354]],["title/overview.html",[3541,5.273]],["body/overview.html",[2,1.317,30,0.008,146,0.008,147,0.008,224,1.809,478,2.654,3541,6.286,3542,7.131,3543,7.131,3544,7.131]],["title/properties.html",[233,0.636,2593,2.923]],["body/properties.html",[30,0.009,146,0.008,147,0.008,233,0.866,1936,5.009,3545,7.169]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":940,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["0.0.0",{"_index":3545,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":1833,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.4",{"_index":2626,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":748,"title":{"components/ProjectsComponent-1.html":{}},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"license.html":{}}}],["1.0.9",{"_index":2613,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":2610,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3052,"title":{},"body":{"license.html":{}}}],["11",{"_index":3065,"title":{},"body":{"license.html":{}}}],["12",{"_index":770,"title":{},"body":{"components/ConfigComponent.html":{}}}],["13",{"_index":771,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["14",{"_index":293,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["15",{"_index":772,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":773,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["17",{"_index":2705,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":2603,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":2702,"title":{},"body":{"index.html":{}}}],["17.2.0",{"_index":2602,"title":{},"body":{"dependencies.html":{}}}],["17.2.1",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":2621,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":3071,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":2850,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":2624,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3069,"title":{},"body":{"license.html":{}}}],["2007",{"_index":2785,"title":{},"body":{"license.html":{}}}],["2021",{"_index":840,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":839,"title":{},"body":{"components/ConfigComponent.html":{}}}],["21",{"_index":3543,"title":{},"body":{"overview.html":{}}}],["28",{"_index":3419,"title":{},"body":{"license.html":{}}}],["29",{"_index":2783,"title":{},"body":{"license.html":{}}}],["3",{"_index":2782,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":2617,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3316,"title":{},"body":{"license.html":{}}}],["35",{"_index":3544,"title":{},"body":{"overview.html":{}}}],["4",{"_index":3102,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":2615,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":942,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["404",{"_index":941,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundComponent.html":{}}}],["409",{"_index":1262,"title":{},"body":{"components/InvitationComponent.html":{}}}],["47",{"_index":3542,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3134,"title":{},"body":{"license.html":{}}}],["6.0.1",{"_index":2619,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3309,"title":{},"body":{"license.html":{}}}],["6b",{"_index":3161,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3184,"title":{},"body":{"license.html":{}}}],["7",{"_index":3098,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":2622,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":2608,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":2743,"title":{},"body":{"index.html":{}}}],["991",{"_index":410,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["_val",{"_index":782,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":3234,"title":{},"body":{"license.html":{}}}],["above",{"_index":227,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":3099,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3494,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":3519,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":2878,"title":{},"body":{"license.html":{}}}],["accept",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["acceptance",{"_index":3320,"title":{},"body":{"license.html":{}}}],["acceptbuttonstyleclass",{"_index":1648,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["accepticon",{"_index":1651,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["acceptinvitation",{"_index":480,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["acceptinvitation(invitationhash",{"_index":1297,"title":{},"body":{"injectables/InvitationService.html":{}}}],["acceptinvitationerror",{"_index":615,"title":{},"body":{"interfaces/AuthState.html":{}}}],["acceptinvitationfailure",{"_index":560,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["acceptinvitationsuccess",{"_index":481,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["access",{"_index":15,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["accessdeniedcomponent",{"_index":1,"title":{"components/AccessDeniedComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["accessible",{"_index":3387,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":694,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":2543,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["accompanied",{"_index":3141,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3498,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3097,"title":{},"body":{"license.html":{}}}],["according",{"_index":3489,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":382,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["achieve",{"_index":3503,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3032,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3367,"title":{},"body":{"license.html":{}}}],["action",{"_index":639,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/MembersEffects.html":{}}}],["actions",{"_index":494,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{},"license.html":{}}}],["activated",{"_index":1111,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["active",{"_index":327,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":1747,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activemembers",{"_index":1433,"title":{},"body":{"components/MembersComponent.html":{}}}],["activeroute",{"_index":1849,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":2948,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3415,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3392,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":145,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["actually",{"_index":3207,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":2927,"title":{},"body":{"license.html":{}}}],["add",{"_index":2753,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":3096,"title":{},"body":{"license.html":{}}}],["adding",{"_index":711,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":763,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["address",{"_index":3443,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":2924,"title":{},"body":{"license.html":{}}}],["adds",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["adjust",{"_index":289,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":3068,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3240,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3486,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3241,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3435,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3347,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3027,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["against",{"_index":3086,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":3125,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3431,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3472,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3378,"title":{},"body":{"license.html":{}}}],["aim",{"_index":2874,"title":{},"body":{"license.html":{}}}],["alerts",{"_index":149,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts'},{'name",{"_index":52,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alerts.component.html",{"_index":150,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts.component.scss",{"_index":151,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertscomponent",{"_index":51,"title":{"components/AlertsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alleging",{"_index":3355,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2901,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":2799,"title":{},"body":{"license.html":{}}}],["allows",{"_index":379,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["allprojects",{"_index":2017,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectserror",{"_index":2018,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectsstatus",{"_index":2019,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["along",{"_index":3101,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1689,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":3366,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3157,"title":{},"body":{"license.html":{}}}],["although",{"_index":2870,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":3321,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":2854,"title":{},"body":{"license.html":{}}}],["android",{"_index":2639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular",{"_index":1112,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["angular's",{"_index":1757,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":1822,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":31,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["angular/compiler",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":803,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2601,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1820,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":1830,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":1826,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":3055,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":3108,"title":{},"body":{"license.html":{}}}],["anything",{"_index":2936,"title":{},"body":{"license.html":{}}}],["api",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["api.authoptions",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["api.authurl",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.invitationurl",{"_index":1305,"title":{},"body":{"injectables/InvitationService.html":{}}}],["api.noauthoptions",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["api.organizationurl",{"_index":1922,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.projecturl",{"_index":2014,"title":{},"body":{"injectables/ProjectService.html":{}}}],["api.teamurl",{"_index":2435,"title":{},"body":{"injectables/TeamService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["app.component.html",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["appconfig",{"_index":223,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["appefects",{"_index":472,"title":{},"body":{"interfaces/AppState.html":{}}}],["applicable",{"_index":2941,"title":{},"body":{"license.html":{}}}],["application",{"_index":363,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":676,"title":{},"body":{"components/ConfigComponent.html":{}}}],["applications",{"_index":2694,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":287,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":745,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyfilterglobal",{"_index":1565,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["applyfilterglobal($event",{"_index":1586,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["applyscale",{"_index":687,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appropriate",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":3091,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3493,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":435,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["appstore",{"_index":473,"title":{},"body":{"interfaces/AppState.html":{}}}],["apptopbar",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["area",{"_index":2880,"title":{},"body":{"license.html":{}}}],["arise",{"_index":2888,"title":{},"body":{"license.html":{}}}],["arising",{"_index":3476,"title":{},"body":{"license.html":{}}}],["around",{"_index":2272,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":3388,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3402,"title":{},"body":{"license.html":{}}}],["array",{"_index":774,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["article",{"_index":3064,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":2727,"title":{},"body":{"index.html":{}}}],["asking",{"_index":2832,"title":{},"body":{"license.html":{}}}],["assert",{"_index":2849,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1050,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["assets",{"_index":3337,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":353,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":1796,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":3467,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":3497,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3282,"title":{},"body":{"license.html":{}}}],["assures",{"_index":2908,"title":{},"body":{"license.html":{}}}],["async",{"_index":1478,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["attach",{"_index":3505,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":3294,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":755,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":2865,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":3266,"title":{},"body":{"license.html":{}}}],["auth",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{}}}],["auth'},{'name",{"_index":56,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["auth.actions",{"_index":567,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":1037,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.invitation.back_to_login",{"_index":1286,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_is_required",{"_index":1281,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_label",{"_index":1280,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_is_required",{"_index":1283,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_label",{"_index":1282,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_is_required",{"_index":1285,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_label",{"_index":1284,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_label",{"_index":1277,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_length",{"_index":1278,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_not_strong",{"_index":1279,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error",{"_index":1263,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_username_exists",{"_index":1264,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_wrong_hash",{"_index":1265,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_is_required",{"_index":1275,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_label",{"_index":1274,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_length",{"_index":1276,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_description",{"_index":1273,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_message",{"_index":1272,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.login.authorization_error",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":1058,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":2159,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":2154,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":2153,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":2156,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":2155,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":2158,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":2157,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":2150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":2151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":2152,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":2142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":2143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":2148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":2147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":2149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":2146,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":2145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":2181,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":445,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":447,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":55,"title":{"components/AuthComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["autheffects",{"_index":444,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{}}}],["authenticate",{"_index":482,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{}}}],["authenticate(request",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticaterequestdto",{"_index":578,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{}}}],["authentication",{"_index":641,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{}}}],["authenticationfailure",{"_index":561,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess",{"_index":483,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess(token",{"_index":522,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["author",{"_index":3265,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3218,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":3258,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":3361,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3406,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2818,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":446,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authservice",{"_index":491,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authstate",{"_index":437,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["automatic",{"_index":3329,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":2720,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":776,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["avatarmodule",{"_index":1553,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["avoid",{"_index":1858,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":2806,"title":{},"body":{"license.html":{}}}],["b",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["bar",{"_index":2326,"title":{},"body":{"components/SidebarComponent.html":{}}}],["based",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":3021,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":3043,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":1113,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":3398,"title":{},"body":{"license.html":{}}}],["bell",{"_index":2353,"title":{},"body":{"components/SidebarComponent.html":{}}}],["below",{"_index":3049,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3391,"title":{},"body":{"license.html":{}}}],["best",{"_index":3502,"title":{},"body":{"license.html":{}}}],["better",{"_index":1687,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":3019,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":3127,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":1832,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":1784,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":1128,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["book",{"_index":2357,"title":{},"body":{"components/SidebarComponent.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"components/TeamsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":832,"title":{},"body":{"components/ConfigComponent.html":{}}}],["both",{"_index":2859,"title":{},"body":{"license.html":{}}}],["box",{"_index":2323,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["breadcrumb",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":2599,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":2726,"title":{},"body":{"index.html":{}}}],["building",{"_index":2343,"title":{},"body":{"components/SidebarComponent.html":{}}}],["business",{"_index":3412,"title":{},"body":{"license.html":{}}}],["button",{"_index":751,"title":{},"body":{"components/ConfigComponent.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["buttonmodule",{"_index":21,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":2647,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["calendarmodule",{"_index":2051,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["call",{"_index":1797,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":766,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":1719,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":2709,"title":{},"body":{"index.html":{}}}],["can't",{"_index":2775,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":2699,"title":{},"body":{"index.html":{}}}],["carry",{"_index":3104,"title":{},"body":{"license.html":{}}}],["case",{"_index":2979,"title":{},"body":{"license.html":{}}}],["cases",{"_index":3201,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":557,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["catcherror((error",{"_index":507,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["cause",{"_index":3131,"title":{},"body":{"license.html":{}}}],["cd",{"_index":1748,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":3298,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":2688,"title":{},"body":{"index.html":{}}}],["certain",{"_index":730,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":3311,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1051,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["change",{"_index":1699,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":764,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1749,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":2554,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":2559,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":380,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changeslugandcheckvalidity",{"_index":861,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changeslugandcheckvalidity(organizationname",{"_index":872,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changetheme",{"_index":688,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":735,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":2798,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":3231,"title":{},"body":{"license.html":{}}}],["charge",{"_index":2823,"title":{},"body":{"license.html":{}}}],["chart",{"_index":2306,"title":{},"body":{"components/SidebarComponent.html":{}}}],["checkname",{"_index":2056,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checkname(name",{"_index":2065,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checks",{"_index":400,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkslug",{"_index":862,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["checkslug(slug",{"_index":875,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["checkusername",{"_index":1004,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":1007,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":2751,"title":{},"body":{"index.html":{}}}],["choose",{"_index":3451,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":3455,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1647,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["circumstances",{"_index":3047,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3056,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3496,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3352,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3363,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["class.active",{"_index":1745,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":1785,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["clear",{"_index":1314,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":2856,"title":{},"body":{"license.html":{}}}],["cli",{"_index":2701,"title":{},"body":{"index.html":{}}}],["click",{"_index":1122,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":1735,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":2708,"title":{},"body":{"index.html":{}}}],["clock",{"_index":2303,"title":{},"body":{"components/SidebarComponent.html":{}}}],["clone",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":821,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["close",{"_index":330,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CloseComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["close'},{'name",{"_index":58,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["close.component.html",{"_index":671,"title":{},"body":{"components/CloseComponent.html":{}}}],["close.component.scss",{"_index":672,"title":{},"body":{"components/CloseComponent.html":{}}}],["closecomponent",{"_index":57,"title":{"components/CloseComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["closed",{"_index":372,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":3492,"title":{},"body":{"license.html":{}}}],["cms",{"_index":2691,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":2742,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":2763,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":2762,"title":{},"body":{"index.html":{}}}],["code",{"_index":228,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":1828,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":2692,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":258,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":236,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["combination",{"_index":3438,"title":{},"body":{"license.html":{}}}],["combine",{"_index":3436,"title":{},"body":{"license.html":{}}}],["combined",{"_index":3122,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3109,"title":{},"body":{"license.html":{}}}],["command",{"_index":1772,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":2969,"title":{},"body":{"license.html":{}}}],["comment",{"_index":2658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":3212,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3379,"title":{},"body":{"license.html":{}}}],["common",{"_index":3206,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":20,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":3017,"title":{},"body":{"license.html":{}}}],["compact",{"_index":835,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":3117,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3126,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3417,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":2999,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":3334,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3041,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":727,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/topbar/topbar.component",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":2768,"title":{},"body":{"index.html":{}}}],["computer",{"_index":2944,"title":{},"body":{"license.html":{}}}],["computers",{"_index":2904,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":3437,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":3444,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":728,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":3411,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2910,"title":{},"body":{"license.html":{}}}],["config",{"_index":294,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["config'},{'name",{"_index":60,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["config.component.html",{"_index":682,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":683,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":830,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":828,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":825,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":829,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":827,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":831,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":824,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":826,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":59,"title":{"components/ConfigComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["configsidebarvisible",{"_index":311,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":355,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":242,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["confirmationservice",{"_index":1550,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["confirmdialogmodule",{"_index":1556,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["conjunction",{"_index":740,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":3400,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":3323,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3475,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3533,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3284,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3371,"title":{},"body":{"license.html":{}}}],["console.log('organization",{"_index":932,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["console.log(error",{"_index":943,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["conspicuously",{"_index":3090,"title":{},"body":{"license.html":{}}}],["const",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["constantly",{"_index":2899,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3031,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1767,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":1114,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":490,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":1005,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["constructor(http",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["constructor(layoutservice",{"_index":695,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(localstorage",{"_index":1336,"title":{},"body":{"injectables/LayoutService.html":{}}}],["constructor(membersservice",{"_index":1488,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["constructor(organizationservice",{"_index":866,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{}}}],["constructor(platformservice",{"_index":1944,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["constructor(private",{"_index":346,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["constructor(projectservice",{"_index":1981,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["constructor(roleservice",{"_index":2206,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["constructor(storage",{"_index":1319,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamservice",{"_index":2385,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["constructor(translate",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":3421,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3189,"title":{},"body":{"license.html":{}}}],["contact",{"_index":3512,"title":{},"body":{"license.html":{}}}],["contain",{"_index":710,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":2759,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":3267,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1712,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":3030,"title":{},"body":{"license.html":{}}}],["contents",{"_index":3375,"title":{},"body":{"license.html":{}}}],["context",{"_index":2993,"title":{},"body":{"license.html":{}}}],["continue",{"_index":3237,"title":{},"body":{"license.html":{}}}],["continued",{"_index":3221,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":3281,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3427,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":2809,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3360,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3362,"title":{},"body":{"license.html":{}}}],["control",{"_index":702,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":3365,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":2962,"title":{},"body":{"license.html":{}}}],["convention",{"_index":385,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["converttodate",{"_index":2668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttodate(body",{"_index":2676,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":2949,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3404,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3232,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":2957,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3280,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2797,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2794,"title":{},"body":{"license.html":{}}}],["copying",{"_index":2911,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":2801,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2786,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":2920,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3045,"title":{},"body":{"license.html":{}}}],["core/domain/dto/invitation.dto",{"_index":1613,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/domain/dto/requests/create",{"_index":908,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["core/domain/dto/requests/register",{"_index":1253,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["core/domain/models/enums/permission.enum",{"_index":1461,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/resource",{"_index":1463,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/state",{"_index":1614,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["core/domain/models/platform.entity",{"_index":2083,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/project.entity",{"_index":2084,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/team.entity",{"_index":2516,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["core/domain/models/user.entity",{"_index":1615,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":1029,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/api/invitation.api.service",{"_index":1257,"title":{},"body":{"components/InvitationComponent.html":{}}}],["core/services/api/organization.api.service",{"_index":909,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["core/services/api/project.api.service",{"_index":2085,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/services/api/team.api.service",{"_index":2519,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["core/services/layout.service",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":802,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":910,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":1028,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":1027,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/members/members.actions",{"_index":1467,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/members/members.selectors",{"_index":1471,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/organization/organization.actions",{"_index":912,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["core/state/organization/organization.selectors",{"_index":916,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/platform/platform.actions",{"_index":2086,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/platform/platform.selectors",{"_index":2088,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.actions",{"_index":2044,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.selectors",{"_index":2046,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/role/role.actions",{"_index":1619,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/role/role.selectors",{"_index":1621,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/team/team.actions",{"_index":2488,"title":{},"body":{"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["core/state/team/team.selectors",{"_index":2487,"title":{},"body":{"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["core/utils/regex.constants",{"_index":1256,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":3471,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2767,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":3002,"title":{},"body":{"license.html":{}}}],["cost",{"_index":3155,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":3353,"title":{},"body":{"license.html":{}}}],["countries",{"_index":2947,"title":{},"body":{"license.html":{}}}],["country",{"_index":3394,"title":{},"body":{"license.html":{}}}],["course",{"_index":3524,"title":{},"body":{"license.html":{}}}],["court",{"_index":3426,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3491,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3382,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":3204,"title":{},"body":{"license.html":{}}}],["covered",{"_index":2933,"title":{},"body":{"license.html":{}}}],["cpp",{"_index":2648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create",{"_index":62,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createbreadcrumbs",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":367,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":1887,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createeffect",{"_index":496,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["createneworganization",{"_index":1896,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createnewproject",{"_index":2057,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewprojectform",{"_index":2052,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewteam",{"_index":2422,"title":{},"body":{"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["createnewteam(dto",{"_index":2426,"title":{},"body":{"injectables/TeamService.html":{}}}],["createnewteamform",{"_index":2492,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["createorganization",{"_index":863,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["createorganization(dto",{"_index":1916,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationcomponent",{"_index":61,"title":{"components/CreateOrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["createorganizationfailure",{"_index":1926,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["createorganizationform",{"_index":853,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["createorganizationrequestdto",{"_index":907,"title":{"interfaces/CreateOrganizationRequestDto.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"injectables/OrganizationService.html":{}}}],["createorganizationsuccess",{"_index":1909,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["createorganizationsuccess(organization",{"_index":1901,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createorganizationteamerror",{"_index":2439,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createorganizationteamstatus",{"_index":2440,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createproject",{"_index":1979,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{}}}],["createproject(dto",{"_index":2006,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createprojecterror",{"_index":2020,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectfailure",{"_index":1997,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectrequestdto",{"_index":973,"title":{"interfaces/CreateProjectRequestDto.html":{}},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/ProjectService.html":{}}}],["createprojectstatus",{"_index":2021,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectsuccess",{"_index":1998,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectsuccess(project",{"_index":1987,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["createreducer",{"_index":625,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["creates",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["createteam",{"_index":2381,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["createteamfailure",{"_index":2412,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamrequestdto",{"_index":975,"title":{"interfaces/CreateTeamRequestDto.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"injectables/TeamService.html":{}}}],["createteamsuccess",{"_index":2413,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamsuccess(team",{"_index":2391,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["creating",{"_index":357,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":616,"title":{},"body":{"interfaces/AuthState.html":{}}}],["criterion",{"_index":2972,"title":{},"body":{"license.html":{}}}],["cross",{"_index":3351,"title":{},"body":{"license.html":{}}}],["cs",{"_index":2656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["css",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":1831,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":3315,"title":{},"body":{"license.html":{}}}],["current",{"_index":248,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["currently",{"_index":320,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentuser",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1705,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":3144,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3151,"title":{},"body":{"license.html":{}}}],["d",{"_index":3116,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3473,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1649,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["dark",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["data",{"_index":1570,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["database",{"_index":2309,"title":{},"body":{"components/SidebarComponent.html":{}}}],["date",{"_index":1891,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"components/TeamsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":3310,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":904,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["debouncetime(500",{"_index":922,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["debug_file",{"_index":2659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":3070,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3453,"title":{},"body":{"license.html":{}}}],["declares",{"_index":307,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":3273,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":721,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":893,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":744,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":689,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":3058,"title":{},"body":{"license.html":{}}}],["default",{"_index":291,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["defective",{"_index":3466,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3424,"title":{},"body":{"license.html":{}}}],["defined",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":339,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":229,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":3009,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2915,"title":{},"body":{"license.html":{}}}],["delete",{"_index":2637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteteam",{"_index":2382,"title":{},"body":{"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["deleteteam(teamid",{"_index":2428,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteteamerror",{"_index":2441,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamfailure",{"_index":2414,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamstatus",{"_index":2442,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamsuccess",{"_index":2415,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamsuccess({teamid",{"_index":2396,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["denied",{"_index":16,"title":{},"body":{"components/AccessDeniedComponent.html":{},"license.html":{}}}],["denied'},{'name",{"_index":50,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["denied.access_denied",{"_index":40,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component",{"_index":1473,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["denied.component.html",{"_index":26,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.scss",{"_index":28,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.ts",{"_index":11,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.insufficient_permission",{"_index":42,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied/access",{"_index":10,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["denominated",{"_index":3380,"title":{},"body":{"license.html":{}}}],["deny",{"_index":2868,"title":{},"body":{"license.html":{}}}],["denying",{"_index":2831,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":2594,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":718,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":2733,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2755,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":3389,"title":{},"body":{"license.html":{}}}],["description",{"_index":226,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":834,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":3163,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2805,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":322,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":949,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["details",{"_index":978,"title":{},"body":{"components/DetailsComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/ProjectDetailsComponent.html":{},"license.html":{}}}],["details'},{'name",{"_index":65,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["details.component.html",{"_index":979,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.scss",{"_index":980,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.ts",{"_index":1974,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["details.the",{"_index":3522,"title":{},"body":{"license.html":{}}}],["details/project",{"_index":1973,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["detailscomponent",{"_index":64,"title":{"components/DetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["detected",{"_index":1756,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":1754,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":247,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":3199,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2717,"title":{},"body":{"index.html":{}}}],["develop",{"_index":3499,"title":{},"body":{"license.html":{}}}],["developers",{"_index":2846,"title":{},"body":{"license.html":{}}}],["development",{"_index":2713,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":323,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device_state",{"_index":2660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":982,"title":{},"body":{"components/DevicesComponent.html":{},"license.html":{}}}],["devices'},{'name",{"_index":67,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devices.component.html",{"_index":983,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.scss",{"_index":984,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devicescomponent",{"_index":66,"title":{"components/DevicesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devtools",{"_index":2604,"title":{},"body":{"dependencies.html":{}}}],["dialogmodule",{"_index":1554,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["differ",{"_index":3442,"title":{},"body":{"license.html":{}}}],["different",{"_index":731,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":3263,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3044,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3169,"title":{},"body":{"license.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directives",{"_index":144,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2725,"title":{},"body":{"index.html":{}}}],["directly",{"_index":2937,"title":{},"body":{"license.html":{}}}],["directory",{"_index":2730,"title":{},"body":{"index.html":{}}}],["disable",{"_index":374,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["disabled",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":3081,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3456,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3260,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":3408,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":553,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["display",{"_index":1110,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["displayed",{"_index":2280,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":2959,"title":{},"body":{"license.html":{}}}],["dist",{"_index":2729,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":905,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["distinguishing",{"_index":3445,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":2795,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2693,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":3413,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2912,"title":{},"body":{"license.html":{}}}],["docker",{"_index":2731,"title":{},"body":{"index.html":{}}}],["document",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":986,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation'},{'name",{"_index":69,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documentation.component.html",{"_index":987,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":988,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentationcomponent",{"_index":68,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documented",{"_index":3247,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["domain/dto/invitation.dto",{"_index":1303,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/members.dto",{"_index":1526,"title":{},"body":{"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["domain/dto/organization.dto",{"_index":1921,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/platform.dto",{"_index":1961,"title":{},"body":{"injectables/PlatformService.html":{}}}],["domain/dto/project.dto",{"_index":2011,"title":{},"body":{"injectables/ProjectService.html":{}}}],["domain/dto/requests/authenticate",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/create",{"_index":1920,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["domain/dto/requests/invitation",{"_index":1304,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/requests/register",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["domain/dto/requests/reset",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/team.dto",{"_index":2433,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/token.dto",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":627,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/invitation.entity",{"_index":1535,"title":{},"body":{"interfaces/MembersState.html":{}}}],["domain/models/menu",{"_index":1729,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/organization.entity",{"_index":1925,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["domain/models/platform.entity",{"_index":1964,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["domain/models/project.entity",{"_index":2022,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["domain/models/team.entity",{"_index":2449,"title":{},"body":{"interfaces/TeamState.html":{}}}],["domain/models/token.entity",{"_index":629,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":630,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{}}}],["domain/your",{"_index":2737,"title":{},"body":{"index.html":{}}}],["domains",{"_index":2890,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":3200,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3331,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":993,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":2741,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1555,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["dt",{"_index":1559,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["dto",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["due",{"_index":2771,"title":{},"body":{"index.html":{}}}],["durable",{"_index":3143,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":3198,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2600,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3011,"title":{},"body":{"license.html":{}}}],["e",{"_index":3178,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":1793,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":2750,"title":{},"body":{"index.html":{}}}],["each",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":2932,"title":{},"body":{"license.html":{}}}],["effect",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":3079,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3059,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":2906,"title":{},"body":{"license.html":{}}}],["effects",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":3345,"title":{},"body":{"license.html":{}}}],["el",{"_index":2254,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":3513,"title":{},"body":{"license.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["elementref",{"_index":892,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":1065,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":3138,"title":{},"body":{"license.html":{}}}],["emit",{"_index":360,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":341,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1629,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["emitting",{"_index":1703,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":3526,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1810,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":2568,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enable",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableaddaction",{"_index":2060,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enabledeleteaction",{"_index":2498,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["enablefiltering",{"_index":1571,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enableglobalsearch",{"_index":1572,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enableinviteaction",{"_index":1573,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enablepagination",{"_index":1574,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["enableremoveaction",{"_index":1575,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enables",{"_index":2951,"title":{},"body":{"license.html":{}}}],["enablesorting",{"_index":1576,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["end",{"_index":383,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enforce",{"_index":3381,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3085,"title":{},"body":{"license.html":{}}}],["english",{"_index":2567,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":2696,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":3175,"title":{},"body":{"license.html":{}}}],["entered",{"_index":3418,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3107,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3434,"title":{},"body":{"license.html":{}}}],["entity",{"_index":3335,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":2628,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":2200,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["enums/platform",{"_index":1938,"title":{},"body":{"interfaces/Platform.html":{}}}],["enums/resource",{"_index":2201,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["env",{"_index":2777,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":2298,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["environment.appname",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environments/environment",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["equal",{"_index":404,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":3034,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":2866,"title":{},"body":{"license.html":{}}}],["error",{"_index":509,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error.status",{"_index":939,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{}}}],["errorsubscription",{"_index":854,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":373,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["eslint/ban",{"_index":819,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":1825,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":377,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["essential",{"_index":2994,"title":{},"body":{"license.html":{}}}],["even",{"_index":3485,"title":{},"body":{"license.html":{}}}],["event",{"_index":919,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["event.model",{"_index":1730,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":1700,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["event.preventdefault",{"_index":1861,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.target",{"_index":920,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["events",{"_index":342,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["eventtarget",{"_index":1642,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["everyone",{"_index":2792,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1852,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":2735,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":2943,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":3251,"title":{},"body":{"license.html":{}}}],["exclamation",{"_index":2341,"title":{},"body":{"components/SidebarComponent.html":{}}}],["excluded",{"_index":3188,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3422,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":3508,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3372,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3039,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3428,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2985,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1795,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":767,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":1791,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":3346,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3080,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1804,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":1809,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["expected",{"_index":3210,"title":{},"body":{"license.html":{}}}],["expects",{"_index":3209,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":2544,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":2857,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":378,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["explicitly",{"_index":1798,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["express",{"_index":2614,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expressed",{"_index":3458,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3293,"title":{},"body":{"license.html":{}}}],["extend",{"_index":2893,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3407,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":3121,"title":{},"body":{"license.html":{}}}],["extent",{"_index":2961,"title":{},"body":{"license.html":{}}}],["f",{"_index":3278,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3040,"title":{},"body":{"license.html":{}}}],["fails",{"_index":3306,"title":{},"body":{"license.html":{}}}],["failure",{"_index":645,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["fair",{"_index":3033,"title":{},"body":{"license.html":{}}}],["false",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["family",{"_index":3193,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":2929,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3203,"title":{},"body":{"license.html":{}}}],["feature",{"_index":2964,"title":{},"body":{"license.html":{}}}],["features",{"_index":2704,"title":{},"body":{"index.html":{}}}],["fee",{"_index":2839,"title":{},"body":{"license.html":{}}}],["feel",{"_index":705,"title":{},"body":{"components/ConfigComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["files",{"_index":2722,"title":{},"body":{"index.html":{},"license.html":{}}}],["filled",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["finally",{"_index":2897,"title":{},"body":{"license.html":{}}}],["find",{"_index":3171,"title":{},"body":{"license.html":{}}}],["first",{"_index":2734,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":1245,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":3461,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3142,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2565,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":3018,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":837,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":2914,"title":{},"body":{"license.html":{}}}],["following",{"_index":3376,"title":{},"body":{"license.html":{}}}],["font",{"_index":733,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":990,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":71,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["footer.component.html",{"_index":991,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":992,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":70,"title":{"components/FooterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forbid",{"_index":3078,"title":{},"body":{"license.html":{}}}],["force",{"_index":3036,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":73,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassword",{"_index":484,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{}}}],["forgotpassword(username",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":72,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassworderror",{"_index":617,"title":{},"body":{"interfaces/AuthState.html":{}}}],["forgotpasswordfailure",{"_index":562,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["forgotpasswordform",{"_index":999,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":1063,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["forgotpasswordsuccess",{"_index":533,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["form",{"_index":2974,"title":{},"body":{"license.html":{}}}],["format",{"_index":3245,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":869,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["forms",{"_index":3132,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":681,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":1878,"title":{},"body":{"components/NotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":97,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["found.component.html",{"_index":1879,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1880,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1877,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_available",{"_index":1882,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_found",{"_index":1881,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1876,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["foundation",{"_index":2789,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":1856,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":2787,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":2807,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":2842,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":906,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["fromevent(this.nameinput.nativeelement",{"_index":925,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["fromevent(this.sluginput.nativeelement",{"_index":917,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":1030,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":3062,"title":{},"body":{"license.html":{}}}],["full",{"_index":2740,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":325,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["functionality",{"_index":674,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":3222,"title":{},"body":{"license.html":{}}}],["functions",{"_index":246,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":2872,"title":{},"body":{"license.html":{}}}],["further",{"_index":1800,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":2895,"title":{},"body":{"license.html":{}}}],["fw",{"_index":2288,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":2566,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":2772,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":3007,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2724,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":2700,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":1819,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getallprojects",{"_index":2003,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getapplicationname",{"_index":1390,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":2555,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["getcontainerclass",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":791,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getinvitationdetails",{"_index":1294,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getinvitationdetails(invitationhash",{"_index":1299,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getitem",{"_index":1355,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1361,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1368,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmembers",{"_index":1520,"title":{},"body":{"injectables/MembersService.html":{}}}],["getmenumode",{"_index":787,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getmyteams",{"_index":2423,"title":{},"body":{"injectables/TeamService.html":{}}}],["getorganization",{"_index":1914,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizationteams",{"_index":2424,"title":{},"body":{"injectables/TeamService.html":{}}}],["getplatforms",{"_index":1958,"title":{},"body":{"injectables/PlatformService.html":{}}}],["getrefreshtoken",{"_index":1315,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":795,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getroles",{"_index":2218,"title":{},"body":{"injectables/RoleService.html":{}}}],["getscale",{"_index":783,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":1817,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getting",{"_index":2684,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1316,"title":{},"body":{"injectables/JwtService.html":{}}}],["getvisible",{"_index":778,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":2761,"title":{},"body":{"index.html":{}}}],["gi",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":2758,"title":{},"body":{"index.html":{}}}],["give",{"_index":3100,"title":{},"body":{"license.html":{}}}],["given",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":3113,"title":{},"body":{"license.html":{}}}],["giving",{"_index":2852,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":2781,"title":{},"body":{"license.html":{}}}],["go",{"_index":2645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gotoprofilepage",{"_index":2556,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":3254,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2847,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3274,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3022,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3326,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":2838,"title":{},"body":{"license.html":{}}}],["greater",{"_index":409,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":3500,"title":{},"body":{"license.html":{}}}],["green",{"_index":297,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":2811,"title":{},"body":{"license.html":{}}}],["gui",{"_index":3525,"title":{},"body":{"license.html":{}}}],["guides",{"_index":1067,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides'},{'name",{"_index":76,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["guides.component.html",{"_index":1068,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides.component.scss",{"_index":1069,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guidescomponent",{"_index":75,"title":{"components/GuidesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["handle",{"_index":635,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["handles",{"_index":1790,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handling",{"_index":716,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hascreatepermission",{"_index":1434,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["hasdeletepermission",{"_index":1435,"title":{},"body":{"components/MembersComponent.html":{},"components/TeamsComponent.html":{}}}],["hash",{"_index":2187,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["haspermission",{"_index":2670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["haspermission(user",{"_index":2679,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasreadpermission",{"_index":1436,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["having",{"_index":3038,"title":{},"body":{"license.html":{}}}],["header",{"_index":1645,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["heart",{"_index":2312,"title":{},"body":{"components/SidebarComponent.html":{}}}],["height",{"_index":1829,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":2739,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":3368,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":326,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":1117,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":3300,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3259,"title":{},"body":{"license.html":{}}}],["home",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":78,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["home.component.html",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/devices",{"_index":2301,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/documentation",{"_index":2358,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/guides",{"_index":2364,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/sdks",{"_index":2361,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/support",{"_index":2367,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/issues",{"_index":2296,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/logs",{"_index":2293,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/messages",{"_index":2299,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/performance",{"_index":2307,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/projects",{"_index":2290,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/queries",{"_index":2310,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/releases",{"_index":2324,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/replays",{"_index":2321,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/resources",{"_index":2318,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/screen",{"_index":2316,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/sessions",{"_index":2304,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings",{"_index":2329,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account",{"_index":2331,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/close",{"_index":2340,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/details",{"_index":2333,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/notifications",{"_index":2338,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/security",{"_index":2335,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/alerts",{"_index":2354,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/members",{"_index":2351,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/organization",{"_index":2344,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/projects",{"_index":2346,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/teams",{"_index":2349,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/stats",{"_index":2327,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/vitals",{"_index":2313,"title":{},"body":{"components/SidebarComponent.html":{}}}],["homecomponent",{"_index":77,"title":{"components/HomeComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["hope",{"_index":3510,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":271,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":1786,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding",{"_index":1823,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":1867,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":1783,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":1744,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":3172,"title":{},"body":{"license.html":{}}}],["household",{"_index":3194,"title":{},"body":{"license.html":{}}}],["hover",{"_index":1794,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":337,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["htmlinputelement).value",{"_index":921,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["http",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":2719,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory",{"_index":2672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":2683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://fsf.org",{"_index":2791,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":3530,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":3538,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":1778,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":3523,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":1808,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["iconurl",{"_index":1935,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{}}}],["id",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["identifiable",{"_index":3396,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1769,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identifiers",{"_index":1781,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":1780,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["if(isusernametaken",{"_index":1059,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":1854,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":2732,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1686,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":2992,"title":{},"body":{"license.html":{}}}],["implements",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"index.html":{}}}],["implied",{"_index":3423,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["important",{"_index":2770,"title":{},"body":{"index.html":{}}}],["importing",{"_index":3359,"title":{},"body":{"license.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["impose",{"_index":3283,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3425,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3478,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3481,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":321,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inbox",{"_index":2295,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inc",{"_index":2790,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3474,"title":{},"body":{"license.html":{}}}],["include",{"_index":351,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":2987,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1776,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":3003,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":3130,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":2873,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":3531,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3197,"title":{},"body":{"license.html":{}}}],["increments",{"_index":747,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":690,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":3279,"title":{},"body":{"license.html":{}}}],["independent",{"_index":3119,"title":{},"body":{"license.html":{}}}],["index",{"_index":161,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indicate",{"_index":386,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":369,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":412,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":3128,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":2882,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3213,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["inform",{"_index":3181,"title":{},"body":{"license.html":{}}}],["information",{"_index":1713,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":3327,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3356,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2940,"title":{},"body":{"license.html":{}}}],["initial",{"_index":354,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":726,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":350,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":633,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["initiate",{"_index":3349,"title":{},"body":{"license.html":{}}}],["inject",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(document",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(platform_id",{"_index":1374,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["injectable",{"_index":298,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["injectables",{"_index":478,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"overview.html":{}}}],["injected",{"_index":1761,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":719,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["input",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["inputmaskmodule",{"_index":1227,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputs",{"_index":692,"title":{},"body":{"components/ConfigComponent.html":{},"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["inputstyle",{"_index":235,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":812,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":680,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":849,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["inside",{"_index":2261,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":2612,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":2869,"title":{},"body":{"license.html":{}}}],["installation",{"_index":3216,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3235,"title":{},"body":{"license.html":{}}}],["instance",{"_index":358,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["instead",{"_index":3536,"title":{},"body":{"license.html":{}}}],["intact",{"_index":3093,"title":{},"body":{"license.html":{}}}],["intended",{"_index":2810,"title":{},"body":{"license.html":{}}}],["intention",{"_index":3082,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":2954,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":717,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":2958,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":3145,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3343,"title":{},"body":{"license.html":{}}}],["interface",{"_index":222,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["interfaces",{"_index":224,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":3224,"title":{},"body":{"license.html":{}}}],["internal",{"_index":2198,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":2263,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":3488,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3001,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3016,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3114,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":664,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/MembersState.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":80,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitation.component.html",{"_index":1229,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":1230,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.dto",{"_index":1483,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["invitationcomponent",{"_index":79,"title":{"components/InvitationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitationdto",{"_index":1287,"title":{"interfaces/InvitationDto.html":{}},"body":{"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"interfaces/MembersDto.html":{},"components/MembersTableComponent.html":{}}}],["invitationhash",{"_index":1232,"title":{},"body":{"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["invitationid",{"_index":1223,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{}}}],["invitationrequestdto",{"_index":1290,"title":{"interfaces/InvitationRequestDto.html":{}},"body":{"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{}}}],["invitations",{"_index":1481,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["invitationservice",{"_index":493,"title":{"injectables/InvitationService.html":{}},"body":{"injectables/AuthEffects.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{}}}],["invitationstatus",{"_index":1530,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmember",{"_index":1531,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmembers",{"_index":1437,"title":{},"body":{"components/MembersComponent.html":{}}}],["invitemember",{"_index":1295,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["invitemember(dto",{"_index":1301,"title":{},"body":{"injectables/InvitationService.html":{}}}],["invitemembererror",{"_index":1532,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitememberfailure",{"_index":1512,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess",{"_index":1513,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess(invitation",{"_index":1494,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["invitenewuserform",{"_index":1560,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ios",{"_index":2640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["irrevocable",{"_index":3024,"title":{},"body":{"license.html":{}}}],["isaddnewprojectdialogvisible",{"_index":2053,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isaddnewteamdialogvisible",{"_index":2493,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["isdesktop",{"_index":413,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isinvitedialogvisible",{"_index":1561,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isiso8601",{"_index":2674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isiso8601(value",{"_index":2677,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":855,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["isloadingallprojects",{"_index":2034,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["isloadingauthstate",{"_index":1023,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingcreatenewproject",{"_index":2054,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingcreatenewteam",{"_index":2494,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["isloadingcreateproject",{"_index":2089,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingdeleteteam",{"_index":2495,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["isloadingmembers",{"_index":1438,"title":{},"body":{"components/MembersComponent.html":{}}}],["isloadingmyteams",{"_index":2467,"title":{},"body":{"components/TeamsComponent.html":{}}}],["isloadingorganization",{"_index":913,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["isloadingorganizationteams",{"_index":2468,"title":{},"body":{"components/TeamsComponent.html":{}}}],["isloadingremovemembers",{"_index":1562,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingsendinvitation",{"_index":1563,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ismobile",{"_index":419,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isnametaken",{"_index":2004,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["isnametaken(name",{"_index":2009,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["isoutsideclicked",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":401,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isplatformbrowser",{"_index":1373,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1375,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1391,"title":{},"body":{"components/LoginComponent.html":{}}}],["isslugtaken",{"_index":856,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["isslugtaken(slug",{"_index":964,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["issuccess",{"_index":1024,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["issue",{"_index":2661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["issues",{"_index":1309,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues'},{'name",{"_index":82,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["issues.component.html",{"_index":1310,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues.component.scss",{"_index":1311,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issuescomponent",{"_index":81,"title":{"components/IssuesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["isusernameavialable",{"_index":618,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isusernametaken",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1734,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":1870,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":1741,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":1788,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":714,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":3238,"title":{},"body":{"license.html":{}}}],["java",{"_index":2646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":2649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json.parse(localstorageconfig",{"_index":430,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["json.stringify(organization",{"_index":933,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["json.stringify(this.config",{"_index":434,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["june",{"_index":2784,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":492,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{}}}],["karma",{"_index":2749,"title":{},"body":{"index.html":{}}}],["keep",{"_index":318,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":2995,"title":{},"body":{"license.html":{}}}],["key",{"_index":1356,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1362,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":1694,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":1696,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":2950,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":2802,"title":{},"body":{"license.html":{}}}],["know",{"_index":2826,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":3384,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3393,"title":{},"body":{"license.html":{}}}],["label",{"_index":1108,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["landscape",{"_index":415,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":701,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":2586,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":2267,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":296,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["laravel",{"_index":2653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["larger",{"_index":3123,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":2203,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1246,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":3448,"title":{},"body":{"license.html":{}}}],["latest",{"_index":2757,"title":{},"body":{"index.html":{}}}],["law",{"_index":2942,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2917,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3354,"title":{},"body":{"license.html":{}}}],["layout",{"_index":244,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":172,"title":{"injectables/LayoutService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["layoutstate",{"_index":304,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["leaks",{"_index":1814,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":2853,"title":{},"body":{"license.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["length",{"_index":1359,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":3535,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":3539,"title":{},"body":{"license.html":{}}}],["liability",{"_index":3262,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2939,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2984,"title":{},"body":{"license.html":{}}}],["library",{"_index":359,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":2780,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":2921,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":2923,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2925,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":2803,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3330,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3272,"title":{},"body":{"license.html":{}}}],["light",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":3324,"title":{},"body":{"license.html":{}}}],["limit",{"_index":3083,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":2773,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":3459,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3261,"title":{},"body":{"license.html":{}}}],["line",{"_index":376,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["link",{"_index":739,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":3012,"title":{},"body":{"license.html":{}}}],["linking",{"_index":3534,"title":{},"body":{"license.html":{}}}],["links",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":2292,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["listener",{"_index":1123,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1683,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/Role.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":3350,"title":{},"body":{"license.html":{}}}],["load",{"_index":648,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["loadallprojects",{"_index":1980,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{}}}],["loadallprojectsfailure",{"_index":1999,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess",{"_index":2000,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess({projects",{"_index":1993,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadcurrentorganization",{"_index":911,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationfailure",{"_index":1910,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess",{"_index":1911,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess(organization",{"_index":1906,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["loadcurrentuser",{"_index":485,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loadcurrentuserfailure",{"_index":563,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess",{"_index":564,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess(user",{"_index":529,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":760,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":2607,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":636,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["loadmyteams",{"_index":2383,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadmyteamsfailure",{"_index":2416,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadmyteamssuccess",{"_index":2417,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadmyteamssuccess({teams",{"_index":2403,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadorganizationmembers",{"_index":1466,"title":{},"body":{"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmembersfailure",{"_index":1514,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess",{"_index":1515,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess(members",{"_index":1500,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadorganizationteams",{"_index":2384,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadorganizationteamsfailure",{"_index":2418,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess",{"_index":2419,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess({teams",{"_index":2408,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadplatforms",{"_index":1943,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["loadplatformsfailure",{"_index":1955,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadplatformssuccess",{"_index":1950,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadroles",{"_index":1618,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolesfailure",{"_index":2215,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolessuccess",{"_index":2211,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loads",{"_index":2230,"title":{},"body":{"components/ScreenLoadsComponent.html":{},"components/SidebarComponent.html":{}}}],["loads'},{'name",{"_index":122,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loads.component.html",{"_index":2231,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.scss",{"_index":2232,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.ts",{"_index":2229,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads/screen",{"_index":2228,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["local",{"_index":302,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":2264,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":301,"title":{"injectables/LocalStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{}}}],["localstorageconfig",{"_index":426,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["location",{"_index":2695,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":2662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":2663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":2664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":2689,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":2686,"title":{},"body":{"index.html":{}}}],["login",{"_index":1386,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["login.component.html",{"_index":1387,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1388,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loginform",{"_index":1389,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":2557,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1426,"title":{},"body":{"components/LogsComponent.html":{},"index.html":{}}}],["logs'},{'name",{"_index":86,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["logs.component.html",{"_index":1427,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1428,"title":{},"body":{"components/LogsComponent.html":{}}}],["logscomponent",{"_index":85,"title":{"components/LogsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["long",{"_index":3035,"title":{},"body":{"license.html":{}}}],["look",{"_index":704,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":3479,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3482,"title":{},"body":{"license.html":{}}}],["machine",{"_index":3135,"title":{},"body":{"license.html":{}}}],["made",{"_index":3225,"title":{},"body":{"license.html":{}}}],["mail",{"_index":3515,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":3168,"title":{},"body":{"license.html":{}}}],["major",{"_index":2990,"title":{},"body":{"license.html":{}}}],["make",{"_index":2764,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":3053,"title":{},"body":{"license.html":{}}}],["making",{"_index":1755,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":706,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":2711,"title":{},"body":{"index.html":{}}}],["managing",{"_index":700,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":707,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":3369,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1752,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":2871,"title":{},"body":{"license.html":{}}}],["map",{"_index":502,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["map((event",{"_index":918,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["map((invitation",{"_index":1493,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((members",{"_index":1499,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((organization",{"_index":1900,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["map((project",{"_index":1986,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["map((projects",{"_index":1992,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["map((result",{"_index":1949,"title":{},"body":{"injectables/PlatformEffects.html":{},"injectables/RoleEffects.html":{}}}],["map((segment",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((team",{"_index":2390,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["map((teams",{"_index":2402,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["map((token",{"_index":519,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":528,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":3420,"title":{},"body":{"license.html":{}}}],["marked",{"_index":2863,"title":{},"body":{"license.html":{}}}],["marks",{"_index":722,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":2919,"title":{},"body":{"license.html":{}}}],["matching",{"_index":147,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":833,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":3239,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":1855,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["meaning",{"_index":3286,"title":{},"body":{"license.html":{}}}],["means",{"_index":723,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":3061,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3075,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1758,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":3089,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3103,"title":{},"body":{"license.html":{}}}],["meets",{"_index":2971,"title":{},"body":{"license.html":{}}}],["member",{"_index":1591,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.email",{"_index":1670,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.invitationid",{"_index":1660,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.role.name",{"_index":1671,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.userid",{"_index":1659,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.firstname",{"_index":1668,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.lastname",{"_index":1669,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["memberid",{"_index":1525,"title":{},"body":{"injectables/MembersService.html":{},"components/MembersTableComponent.html":{}}}],["members",{"_index":90,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/PlatformState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members'},{'name",{"_index":88,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members.actions",{"_index":1517,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["members.component.html",{"_index":1431,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.component.scss",{"_index":1432,"title":{},"body":{"components/MembersComponent.html":{}}}],["members/members.effects",{"_index":449,"title":{},"body":{"interfaces/AppState.html":{}}}],["members/members.reducer",{"_index":451,"title":{},"body":{"interfaces/AppState.html":{}}}],["memberscomponent",{"_index":87,"title":{"components/MembersComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["membersdto",{"_index":1479,"title":{"interfaces/MembersDto.html":{}},"body":{"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["memberseffects",{"_index":448,"title":{"injectables/MembersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MembersEffects.html":{}}}],["membersreducer",{"_index":450,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersservice",{"_index":1489,"title":{"injectables/MembersService.html":{}},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{}}}],["membersstate",{"_index":438,"title":{"interfaces/MembersState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["memberstablecomponent",{"_index":89,"title":{"components/MembersTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["memory",{"_index":1372,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1371,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["menu",{"_index":268,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":2551,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":1697,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{}}}],["menuhoveractive",{"_index":313,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":1738,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":1737,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":2281,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":93,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menuitemcomponent",{"_index":92,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menumode",{"_index":238,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":810,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":1739,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":316,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":685,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusource",{"_index":1706,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":1740,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":3460,"title":{},"body":{"license.html":{}}}],["mere",{"_index":2953,"title":{},"body":{"license.html":{}}}],["merging",{"_index":3339,"title":{},"body":{"license.html":{}}}],["message",{"_index":1643,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["messages",{"_index":1872,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages'},{'name",{"_index":95,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messages.component.html",{"_index":1873,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":1874,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagescomponent",{"_index":94,"title":{"components/MessagesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messageservice",{"_index":846,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["met",{"_index":3026,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["method",{"_index":1765,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":693,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":2627,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["misrepresentation",{"_index":3268,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":335,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["model",{"_index":2255,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/permission.enum",{"_index":2588,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/platform",{"_index":1941,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["models/enums/resource",{"_index":2589,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/user.entity",{"_index":1289,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["modification",{"_index":2913,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2975,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2862,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3106,"title":{},"body":{"license.html":{}}}],["modify",{"_index":2836,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2945,"title":{},"body":{"license.html":{}}}],["modules",{"_index":3540,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":2698,"title":{},"body":{"index.html":{}}}],["more",{"_index":3153,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":3312,"title":{},"body":{"license.html":{}}}],["move",{"_index":348,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["myteams",{"_index":2443,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["myteamserror",{"_index":2444,"title":{},"body":{"interfaces/TeamState.html":{}}}],["myteamsstatus",{"_index":2445,"title":{},"body":{"interfaces/TeamState.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name/taken?name",{"_index":2015,"title":{},"body":{"injectables/ProjectService.html":{}}}],["name:your",{"_index":2738,"title":{},"body":{"index.html":{}}}],["namechecksubscription",{"_index":2055,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["named",{"_index":230,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["nameinput",{"_index":857,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["names",{"_index":3271,"title":{},"body":{"license.html":{}}}],["native",{"_index":2260,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":3120,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":2718,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":708,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":3468,"title":{},"body":{"license.html":{}}}],["need",{"_index":2752,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":2896,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":2955,"title":{},"body":{"license.html":{}}}],["new",{"_index":356,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/ProjectState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["newhref",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["newpassword",{"_index":2185,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":375,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":2715,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["ngondestroy",{"_index":864,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["ngoninit",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{}}}],["ngrx",{"_index":2710,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":556,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":626,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":34,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["node",{"_index":2641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["non",{"_index":1049,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":3159,"title":{},"body":{"license.html":{}}}],["none",{"_index":1652,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["normal",{"_index":2988,"title":{},"body":{"license.html":{}}}],["normally",{"_index":3192,"title":{},"body":{"license.html":{}}}],["notfoundcomponent",{"_index":96,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["nothing",{"_index":3325,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2965,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2960,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1723,"title":{},"body":{"injectables/MenuService.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":99,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifications.component.html",{"_index":1884,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":1885,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscomponent",{"_index":98,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifies",{"_index":3313,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3307,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3257,"title":{},"body":{"license.html":{}}}],["null",{"_index":428,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["number",{"_index":288,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["numbered",{"_index":3447,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":775,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":295,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["object's",{"_index":403,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":1695,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":1691,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":1115,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":3432,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3174,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3063,"title":{},"body":{"license.html":{}}}],["observable",{"_index":366,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["observables",{"_index":344,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":3158,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":3322,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2879,"title":{},"body":{"license.html":{}}}],["of(acceptinvitationfailure",{"_index":508,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticate(request",{"_index":512,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":523,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(createprojectfailure",{"_index":1988,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(createteamfailure",{"_index":2392,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(deleteteamfailure",{"_index":2398,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":534,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(invitememberfailure",{"_index":1495,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadallprojectsfailure",{"_index":1994,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadcurrentorganizationfailure",{"_index":1902,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":537,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadmyteamsfailure",{"_index":2404,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadorganizationmembers",{"_index":1508,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationmembersfailure",{"_index":1501,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationteamsfailure",{"_index":2409,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadplatformsfailure",{"_index":1952,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["of(loadrolesfailure",{"_index":2212,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["of(registernewuserfailure",{"_index":541,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(removememberfailure",{"_index":1505,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(resetpasswordfailure",{"_index":548,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":2851,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3183,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3162,"title":{},"body":{"license.html":{}}}],["official",{"_index":2976,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":555,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["oftype(acceptinvitation",{"_index":498,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(acceptinvitationsuccess",{"_index":511,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticate",{"_index":514,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":525,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(createorganization",{"_index":1898,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(createproject",{"_index":1984,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(createteam",{"_index":2388,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(deleteteam",{"_index":2394,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(forgotpassword",{"_index":531,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(invitemember",{"_index":1491,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadallprojects",{"_index":1990,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadcurrentorganization",{"_index":1904,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":536,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadmyteams",{"_index":2400,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadorganizationmembers",{"_index":1497,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadorganizationteams",{"_index":2406,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadplatforms",{"_index":1947,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["oftype(loadroles",{"_index":2209,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["oftype(registernewuser",{"_index":539,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":543,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(removemember",{"_index":1503,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removemembersuccess",{"_index":1507,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(resetpassword",{"_index":545,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":550,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["on(acceptinvitation",{"_index":665,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationfailure",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationsuccess",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticate",{"_index":640,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationfailure",{"_index":646,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationsuccess",{"_index":643,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(createorganization",{"_index":1930,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationfailure",{"_index":1932,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationsuccess",{"_index":1931,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createproject",{"_index":2026,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectfailure",{"_index":2029,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectsuccess",{"_index":2027,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createteam",{"_index":2455,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamfailure",{"_index":2458,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamsuccess",{"_index":2456,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteam",{"_index":2459,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamfailure",{"_index":2463,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamsuccess",{"_index":2460,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(forgotpassword",{"_index":654,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordfailure",{"_index":656,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordsuccess",{"_index":655,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(invitemember",{"_index":1539,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitememberfailure",{"_index":1544,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitemembersuccess",{"_index":1540,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadallprojects",{"_index":2023,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectsfailure",{"_index":2025,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectssuccess",{"_index":2024,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadcurrentorganization",{"_index":1927,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationfailure",{"_index":1929,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationsuccess",{"_index":1928,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentuser",{"_index":637,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentuserfailure",{"_index":650,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentusersuccess",{"_index":649,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadmyteams",{"_index":2453,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadmyteamssuccess",{"_index":2454,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationmembers",{"_index":1536,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmembersfailure",{"_index":1538,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmemberssuccess",{"_index":1537,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationteams",{"_index":2450,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamsfailure",{"_index":2452,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamssuccess",{"_index":2451,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadplatforms",{"_index":1965,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformsfailure",{"_index":1968,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformssuccess",{"_index":1966,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadroles",{"_index":2223,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolesfailure",{"_index":2226,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolessuccess",{"_index":2224,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(registernewuser",{"_index":660,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewuserfailure",{"_index":662,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewusersuccess",{"_index":661,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(removemember",{"_index":1545,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removememberfailure",{"_index":1547,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removemembersuccess",{"_index":1546,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(resetpassword",{"_index":657,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordfailure",{"_index":659,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordsuccess",{"_index":658,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(setcurrentuser",{"_index":651,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(settoken",{"_index":652,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(signout",{"_index":653,"title":{},"body":{"interfaces/AuthState.html":{}}}],["once",{"_index":758,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":752,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":691,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":422,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":844,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["one",{"_index":759,"title":{},"body":{"components/ConfigComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["oninit",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{}}}],["onmenustatechange",{"_index":1708,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":1709,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":324,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["open",{"_index":1715,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":371,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":396,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["operate",{"_index":3484,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3165,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2997,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3084,"title":{},"body":{"license.html":{}}}],["operator",{"_index":352,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":420,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":243,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":1770,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":847,"title":{"interfaces/Organization.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["organization'},{'name",{"_index":63,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organization.actions",{"_index":1912,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["organization.component.html",{"_index":851,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":852,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.ts",{"_index":843,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:108",{"_index":881,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:142",{"_index":880,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:148",{"_index":878,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:156",{"_index":883,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:161",{"_index":873,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:167",{"_index":876,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:64",{"_index":898,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:65",{"_index":871,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:76",{"_index":886,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:81",{"_index":891,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:82",{"_index":890,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:84",{"_index":896,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:85",{"_index":895,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:86",{"_index":888,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:88",{"_index":879,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.error",{"_index":948,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.error_description",{"_index":951,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_is_required",{"_index":969,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_label",{"_index":968,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_is_required",{"_index":971,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_label",{"_index":970,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_description",{"_index":967,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_message",{"_index":966,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/create",{"_index":842,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/organization.effects",{"_index":453,"title":{},"body":{"interfaces/AppState.html":{}}}],["organization/organization.reducer",{"_index":455,"title":{},"body":{"interfaces/AppState.html":{}}}],["organizationcomponent",{"_index":100,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organizationdto",{"_index":1893,"title":{"interfaces/OrganizationDto.html":{}},"body":{"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{}}}],["organizationeffects",{"_index":452,"title":{"injectables/OrganizationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/OrganizationEffects.html":{}}}],["organizationerrorsubscription",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizationid",{"_index":1888,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["organizationname",{"_index":874,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationreducer",{"_index":454,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizations",{"_index":2926,"title":{},"body":{"license.html":{}}}],["organizationservice",{"_index":867,"title":{"injectables/OrganizationService.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{}}}],["organizationstate",{"_index":439,"title":{"interfaces/OrganizationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizationsubscription",{"_index":858,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationteams",{"_index":2446,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["organizationteamserror",{"_index":2447,"title":{},"body":{"interfaces/TeamState.html":{}}}],["organizationteamsstatus",{"_index":2448,"title":{},"body":{"interfaces/TeamState.html":{}}}],["origin",{"_index":3269,"title":{},"body":{"license.html":{}}}],["original",{"_index":757,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":1863,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["others",{"_index":2830,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":416,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":3477,"title":{},"body":{"license.html":{}}}],["outlined",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":3029,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1121,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":338,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":703,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":309,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":370,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":3541,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3364,"title":{},"body":{"license.html":{}}}],["owner",{"_index":1439,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["p",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{},"index.html":{}}}],["package",{"_index":2593,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":3112,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2989,"title":{},"body":{"license.html":{}}}],["page",{"_index":2259,"title":{},"body":{"components/SidebarComponent.html":{}}}],["panelmodule",{"_index":1430,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["paper",{"_index":3514,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3297,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3377,"title":{},"body":{"license.html":{}}}],["param",{"_index":804,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":368,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{}}}],["params.platforms",{"_index":1967,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["params.roles",{"_index":2225,"title":{},"body":{"interfaces/RoleState.html":{}}}],["parent",{"_index":725,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":1743,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":2928,"title":{},"body":{"license.html":{}}}],["particular",{"_index":2980,"title":{},"body":{"license.html":{}}}],["parties",{"_index":2952,"title":{},"body":{"license.html":{}}}],["parts",{"_index":362,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":3166,"title":{},"body":{"license.html":{}}}],["party's",{"_index":3341,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1766,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":724,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":505,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"license.html":{}}}],["password'},{'name",{"_index":74,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["password.back_to_login",{"_index":1062,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":1045,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":997,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":998,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":996,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:125",{"_index":2176,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":1011,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":1009,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":1008,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":2173,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1006,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":2177,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1015,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":1017,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1018,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1013,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1022,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":1019,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1020,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":2174,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":1010,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":2175,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":1012,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":1038,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":1040,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":2188,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":2189,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":2190,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":2191,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":1044,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":2183,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":1039,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":1060,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":1061,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":1057,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":1056,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":2182,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":995,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/reset",{"_index":2170,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordmodule",{"_index":1228,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patent",{"_index":3296,"title":{},"body":{"license.html":{}}}],["patents",{"_index":2900,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1851,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":2877,"title":{},"body":{"license.html":{}}}],["payment",{"_index":3414,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3179,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3182,"title":{},"body":{"license.html":{}}}],["pending",{"_index":2667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":762,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":3464,"title":{},"body":{"license.html":{}}}],["performing",{"_index":3008,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3305,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1460,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["permission.create",{"_index":1447,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permission.delete",{"_index":1449,"title":{},"body":{"components/MembersComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.read",{"_index":1451,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permissions",{"_index":2199,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissiontype",{"_index":2680,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissionvalue",{"_index":2681,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissive",{"_index":3095,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3129,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3288,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2793,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3230,"title":{},"body":{"license.html":{}}}],["personal",{"_index":3191,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":3430,"title":{},"body":{"license.html":{}}}],["php",{"_index":2654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physical",{"_index":3139,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3156,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["pictureurl",{"_index":1889,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["pieces",{"_index":2825,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":518,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["pipe(filter((event",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pipe(map((value",{"_index":1443,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["pixels",{"_index":411,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":3164,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1933,"title":{"interfaces/Platform.html":{}},"body":{"interfaces/Platform.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"components/ProjectsTableComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform.actions",{"_index":1956,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["platform.dto",{"_index":1977,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["platform.entity",{"_index":1971,"title":{},"body":{"interfaces/Project.html":{}}}],["platform.type",{"_index":2117,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform.version",{"_index":2118,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform/platform.effects",{"_index":471,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform/platform.reducer",{"_index":469,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1370,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformdto",{"_index":1939,"title":{"interfaces/PlatformDto.html":{}},"body":{"interfaces/PlatformDto.html":{},"injectables/PlatformService.html":{},"interfaces/ProjectDto.html":{}}}],["platformeffects",{"_index":470,"title":{"injectables/PlatformEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/PlatformEffects.html":{}}}],["platformid",{"_index":974,"title":{},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/LocalStorage.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsTableComponent.html":{},"injectables/SessionStorage.html":{}}}],["platformreducer",{"_index":468,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platforms",{"_index":1951,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["platformservice",{"_index":1945,"title":{"injectables/PlatformService.html":{}},"body":{"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{}}}],["platformstate",{"_index":440,"title":{"interfaces/PlatformState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platformtype",{"_index":1937,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"miscellaneous/enumerations.html":{}}}],["play",{"_index":2320,"title":{},"body":{"components/SidebarComponent.html":{}}}],["please",{"_index":3537,"title":{},"body":{"license.html":{}}}],["plus",{"_index":3344,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":3509,"title":{},"body":{"license.html":{}}}],["portion",{"_index":3186,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":417,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":3152,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3110,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3487,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3501,"title":{},"body":{"license.html":{}}}],["power",{"_index":3077,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2804,"title":{},"body":{"license.html":{}}}],["practice",{"_index":2886,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":2800,"title":{},"body":{"license.html":{}}}],["precise",{"_index":2909,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":2883,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":3342,"title":{},"body":{"license.html":{}}}],["preference",{"_index":2269,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":2973,"title":{},"body":{"license.html":{}}}],["present",{"_index":3441,"title":{},"body":{"license.html":{}}}],["presents",{"_index":2968,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3264,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1813,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":3223,"title":{},"body":{"license.html":{}}}],["previous",{"_index":2867,"title":{},"body":{"license.html":{}}}],["price",{"_index":2822,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3416,"title":{},"body":{"license.html":{}}}],["primeflex",{"_index":2616,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2618,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":2620,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":901,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1607,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/breadcrumb",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":36,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/calendar",{"_index":2082,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/confirmdialog",{"_index":1608,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/dialog",{"_index":1609,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/dropdown",{"_index":1610,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/inputmask",{"_index":1251,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputswitch",{"_index":801,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":902,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/panel",{"_index":1459,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["primeng/password",{"_index":1252,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/radiobutton",{"_index":799,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":37,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":800,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/table",{"_index":1611,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeng/toast",{"_index":903,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["primeone",{"_index":838,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":3308,"title":{},"body":{"license.html":{}}}],["private",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":2864,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":3217,"title":{},"body":{"license.html":{}}}],["processing",{"_index":1859,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":3403,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3000,"title":{},"body":{"license.html":{}}}],["product",{"_index":3140,"title":{},"body":{"license.html":{}}}],["products",{"_index":2881,"title":{},"body":{"license.html":{}}}],["profile",{"_index":331,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/TopbarComponent.html":{}}}],["profileiconurl",{"_index":2204,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":310,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["program",{"_index":2813,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3088,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3527,"title":{},"body":{"license.html":{}}}],["programming",{"_index":2981,"title":{},"body":{"license.html":{}}}],["programs",{"_index":2819,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":2885,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3073,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3410,"title":{},"body":{"license.html":{}}}],["project",{"_index":102,"title":{"interfaces/Project.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["project.actions",{"_index":2001,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["project/project.effects",{"_index":457,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/project.reducer",{"_index":459,"title":{},"body":{"interfaces/AppState.html":{}}}],["project?.name",{"_index":2109,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.type",{"_index":2110,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.version",{"_index":2112,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project_release",{"_index":2665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projectdetailscomponent",{"_index":101,"title":{"components/ProjectDetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectdto",{"_index":1975,"title":{"interfaces/ProjectDto.html":{}},"body":{"interfaces/ProjectDto.html":{},"injectables/ProjectService.html":{}}}],["projecteffects",{"_index":456,"title":{"injectables/ProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ProjectEffects.html":{}}}],["projectid",{"_index":1970,"title":{},"body":{"interfaces/Project.html":{},"interfaces/ProjectDto.html":{}}}],["projectreducer",{"_index":458,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["projects",{"_index":105,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects'},{'name",{"_index":104,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects.component.html",{"_index":2031,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.component.scss",{"_index":2032,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projectscomponent",{"_index":103,"title":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectservice",{"_index":1982,"title":{"injectables/ProjectService.html":{}},"body":{"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["projectstablecomponent",{"_index":107,"title":{"components/ProjectsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectstate",{"_index":441,"title":{"interfaces/ProjectState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["prominent",{"_index":2970,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":2963,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":1836,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":2935,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3328,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2946,"title":{},"body":{"license.html":{}}}],["properties",{"_index":233,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":2907,"title":{},"body":{"license.html":{}}}],["protect",{"_index":2828,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":2875,"title":{},"body":{"license.html":{}}}],["protection",{"_index":2855,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":3244,"title":{},"body":{"license.html":{}}}],["prove",{"_index":3465,"title":{},"body":{"license.html":{}}}],["provide",{"_index":255,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["provided",{"_index":1762,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":345,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["providers",{"_index":845,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["provides",{"_index":340,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provision",{"_index":2894,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3302,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3452,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3454,"title":{},"body":{"license.html":{}}}],["public",{"_index":684,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":3270,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3246,"title":{},"body":{"license.html":{}}}],["publish",{"_index":3092,"title":{},"body":{"license.html":{}}}],["published",{"_index":3449,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2756,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2903,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3195,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3399,"title":{},"body":{"license.html":{}}}],["px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["python",{"_index":2650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qualify",{"_index":3319,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3463,"title":{},"body":{"license.html":{}}}],["queries",{"_index":2121,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries'},{'name",{"_index":109,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queries.component.html",{"_index":2122,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries.component.scss",{"_index":2123,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queriescomponent",{"_index":108,"title":{"components/QueriesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queryparams",{"_index":1853,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["question",{"_index":2363,"title":{},"body":{"components/SidebarComponent.html":{}}}],["radiobuttonmodule",{"_index":679,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":381,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/enumerations.html":{}}}],["reactiveformsmodule",{"_index":850,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["read",{"_index":2636,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":3136,"title":{},"body":{"license.html":{}}}],["readily",{"_index":3386,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3249,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1354,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":2892,"title":{},"body":{"license.html":{}}}],["reason",{"_index":3397,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3154,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":3317,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1722,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":2843,"title":{},"body":{"license.html":{}}}],["receives",{"_index":3332,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3405,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":3229,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3395,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2840,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":2977,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":3504,"title":{},"body":{"license.html":{}}}],["referring",{"_index":2821,"title":{},"body":{"license.html":{}}}],["refers",{"_index":2916,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":3433,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":1329,"title":{},"body":{"injectables/JwtService.html":{}}}],["refreshexpiresin",{"_index":2545,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken(refreshtoken",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":3255,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3111,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3020,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":111,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["register(dto",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":2125,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2126,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":110,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["registerform",{"_index":1231,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":486,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["registernewuserfailure",{"_index":565,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registernewusersuccess",{"_index":487,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registerrequestdto",{"_index":589,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{}}}],["registrationerror",{"_index":619,"title":{},"body":{"interfaces/AuthState.html":{}}}],["registry",{"_index":2760,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":3301,"title":{},"body":{"license.html":{}}}],["reject",{"_index":1655,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["rejectbuttonstyleclass",{"_index":1650,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["rejecticon",{"_index":1653,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["related",{"_index":675,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":3046,"title":{},"body":{"license.html":{}}}],["released",{"_index":2816,"title":{},"body":{"license.html":{}}}],["releases",{"_index":2162,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases'},{'name",{"_index":113,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases.component.html",{"_index":2163,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases.component.scss",{"_index":2164,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releasescomponent",{"_index":112,"title":{"components/ReleasesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["relevant",{"_index":1716,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":3289,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2721,"title":{},"body":{"index.html":{}}}],["relying",{"_index":3385,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3173,"title":{},"body":{"license.html":{}}}],["remains",{"_index":2814,"title":{},"body":{"license.html":{}}}],["remote",{"_index":2687,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1510,"title":{},"body":{"injectables/MembersEffects.html":{},"license.html":{}}}],["remove",{"_index":3256,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":1357,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1364,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removemember",{"_index":1486,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["removemember(member",{"_index":1589,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["removemember(memberid",{"_index":1523,"title":{},"body":{"injectables/MembersService.html":{}}}],["removemember(team",{"_index":2506,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["removemembererror",{"_index":1533,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removememberfailure",{"_index":1516,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removememberstatus",{"_index":1534,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removemembersuccess",{"_index":1487,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removes",{"_index":756,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removing",{"_index":712,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":729,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":3480,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":2707,"title":{},"body":{"index.html":{}}}],["repair",{"_index":3470,"title":{},"body":{"license.html":{}}}],["replace('lara",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":816,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":754,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacing",{"_index":738,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replays",{"_index":2166,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays'},{'name",{"_index":115,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["replays.component.html",{"_index":2167,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays.component.scss",{"_index":2168,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replayscomponent",{"_index":114,"title":{"components/ReplaysComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["represent",{"_index":240,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":742,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["request",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.dto",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{}}}],["request.dto).pipe",{"_index":501,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.password",{"_index":506,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.ts",{"_index":669,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["request.dto.username",{"_index":504,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.password",{"_index":517,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.teamid",{"_index":2397,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["request.username",{"_index":516,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":3015,"title":{},"body":{"license.html":{}}}],["required",{"_index":3219,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":3105,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3177,"title":{},"body":{"license.html":{}}}],["requires",{"_index":2861,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":2930,"title":{},"body":{"license.html":{}}}],["reset",{"_index":117,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetinviteform",{"_index":1566,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["resetpassword",{"_index":488,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(dto",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":116,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetpassworderror",{"_index":620,"title":{},"body":{"interfaces/AuthState.html":{}}}],["resetpasswordfailure",{"_index":566,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetpasswordform",{"_index":2171,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":593,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["resetpasswordsuccess",{"_index":547,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetprojectsform",{"_index":2058,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["resets",{"_index":1118,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsource",{"_index":1707,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resetteamsform",{"_index":2496,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["resolved",{"_index":3202,"title":{},"body":{"license.html":{}}}],["resources",{"_index":2194,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":119,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resources.component.html",{"_index":2195,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":2196,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resourcescomponent",{"_index":118,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resourcetype",{"_index":1462,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["respect",{"_index":2837,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":2835,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":3333,"title":{},"body":{"license.html":{}}}],["restoreconfig",{"_index":425,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["restorescale",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["restoretheme",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["restrict",{"_index":2902,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3074,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3287,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3285,"title":{},"body":{"license.html":{}}}],["result",{"_index":957,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["resulting",{"_index":2931,"title":{},"body":{"license.html":{}}}],["results",{"_index":146,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retains",{"_index":3233,"title":{},"body":{"license.html":{}}}],["return",{"_index":405,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["returning",{"_index":402,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":3490,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3439,"title":{},"body":{"license.html":{}}}],["right",{"_index":3227,"title":{},"body":{"license.html":{}}}],["rights",{"_index":2829,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":237,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":814,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":23,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":3462,"title":{},"body":{"license.html":{}}}],["role",{"_index":1224,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["role.actions",{"_index":2216,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["role/role.effects",{"_index":461,"title":{},"body":{"interfaces/AppState.html":{}}}],["role/role.reducer",{"_index":463,"title":{},"body":{"interfaces/AppState.html":{}}}],["roleeffects",{"_index":460,"title":{"injectables/RoleEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/RoleEffects.html":{}}}],["roleid",{"_index":1292,"title":{},"body":{"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rolereducer",{"_index":462,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["roles",{"_index":1564,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["roleservice",{"_index":2207,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleEffects.html":{},"injectables/RoleService.html":{}}}],["rolestate",{"_index":442,"title":{"interfaces/RoleState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["rom",{"_index":3236,"title":{},"body":{"license.html":{}}}],["root",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["route",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":1701,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":870,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["routerlink",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routeurl",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":1759,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":3348,"title":{},"body":{"license.html":{}}}],["ruby",{"_index":2652,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rules",{"_index":3243,"title":{},"body":{"license.html":{}}}],["run",{"_index":2714,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":2744,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":2998,"title":{},"body":{"license.html":{}}}],["rust",{"_index":2651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":300,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1824,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":3506,"title":{},"body":{"license.html":{}}}],["sake",{"_index":2860,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3358,"title":{},"body":{"license.html":{}}}],["same",{"_index":2841,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":3176,"title":{},"body":{"license.html":{}}}],["saveconfig",{"_index":432,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["saverefreshtoken",{"_index":1317,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":1324,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":1318,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1326,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":3170,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":2723,"title":{},"body":{"index.html":{}}}],["scale",{"_index":239,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":807,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":686,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scheme",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":3528,"title":{},"body":{"license.html":{}}}],["scope",{"_index":3409,"title":{},"body":{"license.html":{}}}],["screen",{"_index":121,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["screenloadscomponent",{"_index":120,"title":{"components/ScreenLoadsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["scripts",{"_index":3004,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":1129,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{}}}],["sdks",{"_index":2234,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks'},{'name",{"_index":124,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sdks.component.html",{"_index":2235,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks.component.scss",{"_index":2236,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdkscomponent",{"_index":123,"title":{"components/SdksComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["secondarily",{"_index":2938,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2172,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":3051,"title":{},"body":{"license.html":{}}}],["sections",{"_index":3133,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1255,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":2238,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security'},{'name",{"_index":126,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["security.component.html",{"_index":2239,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security.component.scss",{"_index":2240,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securitycomponent",{"_index":125,"title":{"components/SecurityComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["see",{"_index":2769,"title":{},"body":{"index.html":{},"license.html":{}}}],["segment.path",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":1042,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectacceptinvitationerror",{"_index":1261,"title":{},"body":{"components/InvitationComponent.html":{}}}],["select(selectactivemembers",{"_index":1442,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectallprojects",{"_index":2042,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["select(selectauthorizationerror",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcreatenewteamstatus",{"_index":2524,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["select(selectcreateprojectstatus",{"_index":2096,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["select(selectcurrentorganization",{"_index":930,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectcurrentuser",{"_index":1034,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectdeleteteamstatus",{"_index":2529,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":1036,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectinvitationsendstatus",{"_index":1626,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectinvitedmembers",{"_index":1453,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectmyteams",{"_index":2479,"title":{},"body":{"components/TeamsComponent.html":{}}}],["select(selectorganizationerror",{"_index":937,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["select(selectorganizationteams",{"_index":2481,"title":{},"body":{"components/TeamsComponent.html":{}}}],["select(selectownerasarray",{"_index":1457,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectregistrationerror",{"_index":2141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectremovememberstatus",{"_index":1656,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectresetpassworderror",{"_index":2179,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectacceptinvitationerror",{"_index":1254,"title":{},"body":{"components/InvitationComponent.html":{}}}],["selectactivemembers",{"_index":1468,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectallprojects",{"_index":2045,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["selectauthorizationerror",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["selectcreatenewteamstatus",{"_index":2517,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["selectcreateprojectstatus",{"_index":2090,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectcurrentorganization",{"_index":914,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["selectcurrentuser",{"_index":1025,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["selectdeleteteamstatus",{"_index":2518,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["selected",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["selectedlanguage",{"_index":2552,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":2585,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectforgotpassworderror",{"_index":1026,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["selecthaspermission",{"_index":1465,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.project",{"_index":2037,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["selecthaspermission(resourcetype.team",{"_index":2471,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.user",{"_index":1446,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectinvitationsendstatus",{"_index":1616,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectinvitedmembers",{"_index":1469,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectmyteams",{"_index":2485,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["selectorganizationerror",{"_index":915,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["selectorganizationteams",{"_index":2486,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selectownerasarray",{"_index":1470,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectplatforms",{"_index":2087,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectregistrationerror",{"_index":2139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selectremovememberstatus",{"_index":1617,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectresetpassworderror",{"_index":2178,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectroles",{"_index":1620,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["sell",{"_index":3374,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3357,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":2918,"title":{},"body":{"license.html":{}}}],["send",{"_index":1306,"title":{},"body":{"injectables/InvitationService.html":{}}}],["sendinvite",{"_index":1567,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["sends",{"_index":1711,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":3185,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3118,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1777,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":3115,"title":{},"body":{"license.html":{}}}],["serve",{"_index":2716,"title":{},"body":{"index.html":{}}}],["served",{"_index":2774,"title":{},"body":{"index.html":{}}}],["server",{"_index":1688,"title":{},"body":{"injectables/MemoryStorage.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["serves",{"_index":2991,"title":{},"body":{"license.html":{}}}],["service",{"_index":699,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":1721,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":558,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/api/invitation.api.service",{"_index":568,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["services/api/members.api.service",{"_index":1518,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["services/api/organization.api.service",{"_index":1908,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["services/api/platform.api.service",{"_index":1954,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["services/api/project.api.service",{"_index":1996,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["services/api/role.api.service",{"_index":2214,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["services/api/team.api.service",{"_index":2411,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["services/token",{"_index":559,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":3469,"title":{},"body":{"license.html":{}}}],["sessions",{"_index":2245,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions'},{'name",{"_index":128,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessions.component.html",{"_index":2246,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.component.scss",{"_index":2247,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessionscomponent",{"_index":127,"title":{"components/SessionsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessionstorage",{"_index":2241,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{}}}],["set",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["setcurrentuser",{"_index":631,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setinputstyle(_val",{"_index":793,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1358,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1366,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":789,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":797,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":398,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":785,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":677,"title":{},"body":{"components/ConfigComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":106,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settings.component.html",{"_index":2249,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":2250,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":129,"title":{"components/SettingsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settoken",{"_index":632,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setupsidenavitems",{"_index":2256,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":2276,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":780,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":232,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":945,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["shall",{"_index":3057,"title":{},"body":{"license.html":{}}}],["shape",{"_index":305,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":2808,"title":{},"body":{"license.html":{}}}],["shared",{"_index":3010,"title":{},"body":{"license.html":{}}}],["shared/components/access",{"_index":1472,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["shared/components/members",{"_index":1474,"title":{},"body":{"components/MembersComponent.html":{}}}],["shared/components/projects",{"_index":2047,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["shared/components/teams",{"_index":2483,"title":{},"body":{"components/TeamsComponent.html":{}}}],["shield",{"_index":2336,"title":{},"body":{"components/SidebarComponent.html":{}}}],["short",{"_index":3517,"title":{},"body":{"license.html":{}}}],["show",{"_index":2844,"title":{},"body":{"license.html":{}}}],["showadddialog",{"_index":2059,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["showconfigsidebar",{"_index":334,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showdeleteconfirmation",{"_index":2497,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["showdeleteconfirmation(team",{"_index":2510,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["showinvitedialog",{"_index":1568,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shown",{"_index":328,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showprofilesidebar",{"_index":329,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showremovememberconfirmation",{"_index":1569,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["showremovememberconfirmation(member",{"_index":1595,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shows",{"_index":750,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":2275,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":332,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":131,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebar.component.html",{"_index":2253,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2252,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":130,"title":{"components/SidebarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebarmodule",{"_index":678,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":317,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.devices",{"_index":2300,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":2286,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help",{"_index":2355,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_documentation",{"_index":2356,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_guides",{"_index":2362,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_sdks",{"_index":2359,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_support",{"_index":2365,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":2287,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.issues",{"_index":2294,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.logs",{"_index":2291,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.messages",{"_index":2297,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.performance",{"_index":2305,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.projects",{"_index":2289,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.queries",{"_index":2308,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.releases",{"_index":2322,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.replays",{"_index":2319,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.resources",{"_index":2317,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.screen_loads",{"_index":2314,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sessions",{"_index":2302,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings",{"_index":2328,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account",{"_index":2330,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_close",{"_index":2339,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_details",{"_index":2332,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_notifications",{"_index":2337,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_security",{"_index":2334,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_alerts",{"_index":2352,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_members",{"_index":2350,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_organization",{"_index":2342,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_projects",{"_index":2345,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_teams",{"_index":2347,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.stats",{"_index":2325,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.vitals",{"_index":2311,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":3529,"title":{},"body":{"license.html":{}}}],["significant",{"_index":3215,"title":{},"body":{"license.html":{}}}],["signout",{"_index":489,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{}}}],["similar",{"_index":3072,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":3429,"title":{},"body":{"license.html":{}}}],["single",{"_index":3401,"title":{},"body":{"license.html":{}}}],["sitemap",{"_index":2348,"title":{},"body":{"components/SidebarComponent.html":{}}}],["size",{"_index":290,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sizes",{"_index":777,"title":{},"body":{"components/ConfigComponent.html":{}}}],["slug",{"_index":877,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["slug.tolowercase().replaceall",{"_index":958,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["slug/taken?slug",{"_index":1923,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["slugchecksubscription",{"_index":859,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["sluginput",{"_index":860,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["snippet",{"_index":1717,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":2788,"title":{},"body":{"license.html":{}}}],["sold",{"_index":3196,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3037,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3048,"title":{},"body":{"license.html":{}}}],["solution",{"_index":2690,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":3150,"title":{},"body":{"license.html":{}}}],["speak",{"_index":2820,"title":{},"body":{"license.html":{}}}],["special",{"_index":2905,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2996,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":3014,"title":{},"body":{"license.html":{}}}],["specified",{"_index":734,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":3446,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3450,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":3440,"title":{},"body":{"license.html":{}}}],["spring",{"_index":2644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.selectors.ts",{"_index":2671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date.interceptor.ts",{"_index":2669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.enum.ts",{"_index":2629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../platform",{"_index":2630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resource",{"_index":2632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":2633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/domain/dto/invitation.dto.ts",{"_index":1288,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["src/app/core/domain/dto/members.dto.ts",{"_index":1480,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["src/app/core/domain/dto/organization.dto.ts",{"_index":1894,"title":{},"body":{"interfaces/OrganizationDto.html":{}}}],["src/app/core/domain/dto/platform.dto.ts",{"_index":1940,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["src/app/core/domain/dto/project.dto.ts",{"_index":1976,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":668,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{}}}],["src/app/core/domain/dto/requests/create",{"_index":972,"title":{},"body":{"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":1064,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/requests/invitation",{"_index":1291,"title":{},"body":{"interfaces/InvitationRequestDto.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":2160,"title":{},"body":{"interfaces/RegisterRequestDto.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":2192,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/team.dto.ts",{"_index":2379,"title":{},"body":{"interfaces/TeamDto.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":2546,"title":{},"body":{"interfaces/TokenDto.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":2587,"title":{},"body":{"interfaces/UserDto.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":2635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/platform",{"_index":2638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":2657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":2666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/invitation.entity.ts",{"_index":1222,"title":{},"body":{"interfaces/Invitation.html":{}}}],["src/app/core/domain/models/menu",{"_index":1698,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["src/app/core/domain/models/organization.entity.ts",{"_index":1886,"title":{},"body":{"interfaces/Organization.html":{}}}],["src/app/core/domain/models/platform.entity.ts",{"_index":1934,"title":{},"body":{"interfaces/Platform.html":{}}}],["src/app/core/domain/models/project.entity.ts",{"_index":1969,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/core/domain/models/team.entity.ts",{"_index":2376,"title":{},"body":{"interfaces/Team.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":2542,"title":{},"body":{"interfaces/Token.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":2197,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["src/app/core/interceptors/date.interceptor.ts",{"_index":2675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts",{"_index":1293,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:12",{"_index":1296,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:15",{"_index":1302,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:23",{"_index":1300,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:30",{"_index":1298,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/members.api.service.ts",{"_index":1519,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:10",{"_index":1521,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:13",{"_index":1522,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:17",{"_index":1524,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/organization.api.service.ts",{"_index":1913,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:11",{"_index":1915,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:14",{"_index":1917,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:22",{"_index":1918,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:29",{"_index":1919,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/platform.api.service.ts",{"_index":1957,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:10",{"_index":1959,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:13",{"_index":1960,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/project.api.service.ts",{"_index":2002,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:11",{"_index":2005,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:14",{"_index":2008,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:18",{"_index":2007,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:22",{"_index":2010,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/role.api.service.ts",{"_index":2217,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:10",{"_index":2219,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:13",{"_index":2220,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/team.api.service.ts",{"_index":2421,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:11",{"_index":2425,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:14",{"_index":2431,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:18",{"_index":2430,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:22",{"_index":2432,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:29",{"_index":2427,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:33",{"_index":2429,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":225,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["src/app/core/services/layout.service.ts:100",{"_index":1347,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:115",{"_index":1352,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:130",{"_index":1348,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:139",{"_index":1350,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:145",{"_index":1349,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:151",{"_index":1351,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:156",{"_index":1342,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:180",{"_index":1346,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:190",{"_index":1345,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:199",{"_index":1340,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:211",{"_index":1338,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:220",{"_index":1339,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:227",{"_index":1341,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:232",{"_index":1343,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:240",{"_index":1344,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:92",{"_index":1337,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1353,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["src/app/core/services/memory",{"_index":1678,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":1702,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":1720,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":1726,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":1725,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":1728,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":1710,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":1718,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":2242,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["src/app/core/services/token",{"_index":1312,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/state/app.state.ts",{"_index":436,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":479,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:111",{"_index":554,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:122",{"_index":542,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:139",{"_index":544,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:146",{"_index":510,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:163",{"_index":513,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":495,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:38",{"_index":538,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:50",{"_index":524,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:71",{"_index":535,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:85",{"_index":549,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:99",{"_index":530,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":614,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":2678,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/state/members/members.effects.ts",{"_index":1485,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:19",{"_index":1490,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:26",{"_index":1502,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:38",{"_index":1496,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:50",{"_index":1506,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:62",{"_index":1511,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.reducer.ts",{"_index":1529,"title":{},"body":{"interfaces/MembersState.html":{}}}],["src/app/core/state/organization/organization.effects.ts",{"_index":1895,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:14",{"_index":1907,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:26",{"_index":1903,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:8",{"_index":1897,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.reducer.ts",{"_index":1924,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["src/app/core/state/platform/platform.effects.ts",{"_index":1942,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:12",{"_index":1946,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:18",{"_index":1953,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.reducer.ts",{"_index":1963,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["src/app/core/state/project/project.effects.ts",{"_index":1978,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:14",{"_index":1995,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:26",{"_index":1989,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:8",{"_index":1983,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.reducer.ts",{"_index":2016,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["src/app/core/state/role/role.effects.ts",{"_index":2205,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:14",{"_index":2213,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:8",{"_index":2208,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.reducer.ts",{"_index":2222,"title":{},"body":{"interfaces/RoleState.html":{}}}],["src/app/core/state/team/team.effects.ts",{"_index":2380,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:14",{"_index":2410,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:26",{"_index":2405,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:38",{"_index":2393,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:50",{"_index":2399,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:8",{"_index":2387,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.reducer.ts",{"_index":2438,"title":{},"body":{"interfaces/TeamState.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":994,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":1226,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:147",{"_index":1235,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:158",{"_index":1236,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:164",{"_index":1238,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:177",{"_index":1234,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:60",{"_index":1249,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:62",{"_index":1233,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:74",{"_index":1240,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:75",{"_index":1241,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:77",{"_index":1247,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:95",{"_index":1250,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:96",{"_index":1239,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:97",{"_index":1248,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:99",{"_index":1237,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1385,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1392,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":2124,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":2131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":2129,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":2130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":2132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":2128,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":2127,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":2134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":2135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":2136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":2138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":2133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":2137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":2169,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/features/create",{"_index":841,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["src/app/features/devices/devices.component.ts",{"_index":981,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/help/documentation/documentation.component.ts",{"_index":985,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/features/help/guides/guides.component.ts",{"_index":1066,"title":{},"body":{"components/GuidesComponent.html":{}}}],["src/app/features/help/sdks/sdks.component.ts",{"_index":2233,"title":{},"body":{"components/SdksComponent.html":{}}}],["src/app/features/help/support/support.component.ts",{"_index":2372,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":673,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:101",{"_index":798,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:109",{"_index":749,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:121",{"_index":736,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:143",{"_index":753,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:163",{"_index":743,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:171",{"_index":746,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:179",{"_index":732,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":720,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":696,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":768,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":769,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":779,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":781,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":784,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":786,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:79",{"_index":788,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:83",{"_index":790,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:88",{"_index":792,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:92",{"_index":794,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:97",{"_index":796,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":989,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":1733,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":1812,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":1750,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":1811,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":1816,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":1805,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":1806,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":1789,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":1818,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":1787,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":1801,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":1771,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":1763,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":1782,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":1775,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":1807,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":1815,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":2251,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":2257,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":2279,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":2278,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":2273,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":2277,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":2547,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:28",{"_index":2573,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:29",{"_index":2578,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:30",{"_index":2558,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:33",{"_index":2570,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:41",{"_index":2564,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:43",{"_index":2569,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:45",{"_index":2576,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:47",{"_index":2575,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":2579,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:50",{"_index":2563,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:55",{"_index":2562,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:60",{"_index":2560,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:64",{"_index":2561,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:120",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:123",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:130",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:131",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:133",{"_index":1126,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:140",{"_index":1124,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:156",{"_index":1125,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:219",{"_index":1116,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:233",{"_index":1120,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:244",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:255",{"_index":1127,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:269",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1132,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:49",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:50",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/issues/issues.component.ts",{"_index":1308,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/features/logs/logs.component.ts",{"_index":1425,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/features/messages/messages.component.ts",{"_index":1871,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/features/peformance/queries/queries.component.ts",{"_index":2120,"title":{},"body":{"components/QueriesComponent.html":{}}}],["src/app/features/peformance/resources/resources.component.ts",{"_index":2193,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/features/peformance/screen",{"_index":2227,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["src/app/features/peformance/vitals/vitals.component.ts",{"_index":2590,"title":{},"body":{"components/VitalsComponent.html":{}}}],["src/app/features/project",{"_index":1972,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["src/app/features/projects/projects.component.ts",{"_index":2030,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/releases/releases.component.ts",{"_index":2161,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["src/app/features/replays/replays.component.ts",{"_index":2165,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts",{"_index":2244,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/settings/account/close/close.component.ts",{"_index":670,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/features/settings/account/details/details.component.ts",{"_index":977,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/settings/account/notifications/notifications.component.ts",{"_index":1883,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/features/settings/account/security/security.component.ts",{"_index":2237,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/features/settings/alerts/alerts.component.ts",{"_index":148,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/features/settings/members/members.component.ts",{"_index":1429,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:38",{"_index":1440,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:41",{"_index":1452,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:44",{"_index":1450,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:47",{"_index":1448,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:50",{"_index":1456,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:51",{"_index":1444,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:54",{"_index":1454,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:57",{"_index":1458,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:61",{"_index":1441,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts",{"_index":1892,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/projects/projects.component.ts",{"_index":2033,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:32",{"_index":2035,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:35",{"_index":2039,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:38",{"_index":2038,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:42",{"_index":2041,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:43",{"_index":2043,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:47",{"_index":2036,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2248,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts",{"_index":2464,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:37",{"_index":2469,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:40",{"_index":2474,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:43",{"_index":2473,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:46",{"_index":2472,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:50",{"_index":2478,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:51",{"_index":2476,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:52",{"_index":2482,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:55",{"_index":2480,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:59",{"_index":2470,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/stats/stats.component.ts",{"_index":2368,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/shared/components/access",{"_index":9,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["src/app/shared/components/members",{"_index":1548,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["src/app/shared/components/not",{"_index":1875,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/shared/components/projects",{"_index":2050,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["src/app/shared/components/teams",{"_index":2491,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["ssr",{"_index":2706,"title":{},"body":{"index.html":{}}}],["stand",{"_index":2891,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{}}}],["standard",{"_index":2776,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":2978,"title":{},"body":{"license.html":{}}}],["start",{"_index":3507,"title":{},"body":{"license.html":{}}}],["started",{"_index":2685,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":3518,"title":{},"body":{"license.html":{}}}],["state",{"_index":306,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["state.allprojects",{"_index":2028,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["state.members?.invitations",{"_index":1542,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.owner",{"_index":1541,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.users",{"_index":1543,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.organizationteams",{"_index":2457,"title":{},"body":{"interfaces/TeamState.html":{}}}],["state.organizationteams?.filter((team",{"_index":2461,"title":{},"body":{"interfaces/TeamState.html":{}}}],["stated",{"_index":3025,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3291,"title":{},"body":{"license.html":{}}}],["states",{"_index":1119,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":624,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":647,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["statestatus.loading",{"_index":638,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.pending",{"_index":634,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.success",{"_index":644,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["static",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":308,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":312,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":3094,"title":{},"body":{"license.html":{}}}],["stats",{"_index":2369,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":133,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["stats.component.html",{"_index":2370,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":2371,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":132,"title":{"components/StatsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["status",{"_index":621,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["status.enum",{"_index":628,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["status.enum.ts",{"_index":2634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":2848,"title":{},"body":{"license.html":{}}}],["stopwatch",{"_index":2315,"title":{},"body":{"components/SidebarComponent.html":{}}}],["storage",{"_index":349,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":303,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":1313,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:10",{"_index":1320,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":1679,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":1321,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":1680,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":1327,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1369,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":1323,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":1681,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":1325,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":1682,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1363,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":1322,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1365,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1367,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":1684,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":1685,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1360,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":868,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["stored",{"_index":2728,"title":{},"body":{"index.html":{}}}],["string",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/SessionStorage.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["string(this.index",{"_index":1848,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":2266,"title":{},"body":{"components/SidebarComponent.html":{}}}],["stringval",{"_index":1587,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["style",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["styleurls",{"_index":1736,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":1773,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":3338,"title":{},"body":{"license.html":{}}}],["subject",{"_index":299,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":3370,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3050,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":1746,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":3013,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":3532,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":364,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((data",{"_index":923,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{}}}],["subscribe((error",{"_index":938,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":1043,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((organization",{"_index":931,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["subscribe((status",{"_index":1630,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["subscribe((user",{"_index":1035,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":1751,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":1704,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":887,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["subscriptions",{"_index":1803,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":3160,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3211,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":2889,"title":{},"body":{"license.html":{}}}],["success",{"_index":642,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":1509,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["successsubscription",{"_index":1000,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":234,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":3383,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3220,"title":{},"body":{"license.html":{}}}],["summary",{"_index":946,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["supplement",{"_index":3250,"title":{},"body":{"license.html":{}}}],["support",{"_index":2373,"title":{},"body":{"components/SupportComponent.html":{},"license.html":{}}}],["support'},{'name",{"_index":135,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["support.component.html",{"_index":2374,"title":{},"body":{"components/SupportComponent.html":{}}}],["support.component.scss",{"_index":2375,"title":{},"body":{"components/SupportComponent.html":{}}}],["supportcomponent",{"_index":134,"title":{"components/SupportComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["supports",{"_index":3167,"title":{},"body":{"license.html":{}}}],["sure",{"_index":2765,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":2833,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3290,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3483,"title":{},"body":{"license.html":{}}}],["svelte",{"_index":2643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":526,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["switchmap((request",{"_index":499,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["symbol",{"_index":1764,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":709,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":2876,"title":{},"body":{"license.html":{}}}],["t",{"_index":2736,"title":{},"body":{"index.html":{}}}],["table",{"_index":1551,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table'},{'name",{"_index":91,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["table.actions",{"_index":1667,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.added_on",{"_index":2536,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.avatar",{"_index":1666,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component",{"_index":1476,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["table.component.html",{"_index":1557,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.scss",{"_index":1558,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts",{"_index":1549,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:100",{"_index":1600,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:102",{"_index":1604,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:103",{"_index":1602,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:105",{"_index":1588,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:107",{"_index":2073,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:108",{"_index":2500,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:109",{"_index":1594,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:110",{"_index":2513,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:111",{"_index":2075,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:112",{"_index":2078,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:113",{"_index":2077,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:114",{"_index":2081,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:115",{"_index":1593,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:116",{"_index":2079,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:118",{"_index":2068,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:120",{"_index":2504,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:129",{"_index":2069,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:131",{"_index":2505,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:133",{"_index":2064,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:135",{"_index":2501,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:137",{"_index":2071,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:139",{"_index":2509,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:143",{"_index":2067,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:145",{"_index":2511,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:151",{"_index":1592,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:159",{"_index":1596,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:165",{"_index":2503,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:178",{"_index":1590,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:183",{"_index":2072,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:188",{"_index":2070,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:195",{"_index":2066,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:200",{"_index":2512,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:206",{"_index":2507,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:237",{"_index":2508,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:243",{"_index":2502,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:61",{"_index":1577,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:70",{"_index":1598,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:72",{"_index":1578,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:73",{"_index":2499,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.component.ts:74",{"_index":2061,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:75",{"_index":1585,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:78",{"_index":1579,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:81",{"_index":1584,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:83",{"_index":2074,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:84",{"_index":1580,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:85",{"_index":2062,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:87",{"_index":1582,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:90",{"_index":1581,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:93",{"_index":1583,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:95",{"_index":1606,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:96",{"_index":1599,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.component.ts:99",{"_index":2063,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.delete_confirmation",{"_index":1646,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.delete_confirmation_message",{"_index":1644,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.email",{"_index":1664,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_is_required",{"_index":1674,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_label",{"_index":1673,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.error",{"_index":1632,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.failed_to_create_project",{"_index":2098,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.failed_to_create_team",{"_index":2525,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.failed_to_delete_team",{"_index":2530,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.failed_to_remove_member",{"_index":1657,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.failed_to_send_invite",{"_index":1633,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.first_name",{"_index":1662,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invalid_email",{"_index":1675,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invite_sent",{"_index":1635,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.last_name",{"_index":1663,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.name",{"_index":2107,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_is_required",{"_index":2115,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_label",{"_index":2114,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_members_found",{"_index":1672,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.no_projects_found",{"_index":2113,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_teams_found",{"_index":2539,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.platform",{"_index":2108,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_is_required",{"_index":2119,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_label",{"_index":2116,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.project_created",{"_index":2099,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.removed_memeber",{"_index":1658,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.removed_team",{"_index":2531,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.role",{"_index":1665,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_is_required",{"_index":1677,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_label",{"_index":1676,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.slug",{"_index":2535,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.slug_is_required",{"_index":2541,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.slug_label",{"_index":2540,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table.success",{"_index":1634,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["table.team_created",{"_index":2526,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["table/members",{"_index":1475,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["table/projects",{"_index":2048,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["table/teams",{"_index":2484,"title":{},"body":{"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["tablemodule",{"_index":1552,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["tablet",{"_index":414,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tailwind",{"_index":836,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1612,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{},"license.html":{}}}],["take(1",{"_index":1627,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["takes",{"_index":697,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":3190,"title":{},"body":{"license.html":{}}}],["tap",{"_index":551,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1641,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/TeamsTableComponent.html":{}}}],["team",{"_index":976,"title":{"interfaces/Team.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"interfaces/ProjectState.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["team.actions",{"_index":2420,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["team.teamid",{"_index":2462,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["team/team.effects",{"_index":465,"title":{},"body":{"interfaces/AppState.html":{}}}],["team/team.reducer",{"_index":467,"title":{},"body":{"interfaces/AppState.html":{}}}],["team?.createdat",{"_index":2538,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["team?.slug",{"_index":2537,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["teamdto",{"_index":2378,"title":{"interfaces/TeamDto.html":{}},"body":{"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["teameffects",{"_index":464,"title":{"injectables/TeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TeamEffects.html":{}}}],["teamid",{"_index":2377,"title":{},"body":{"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["teamreducer",{"_index":466,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["teams",{"_index":139,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams'},{'name",{"_index":137,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams.component.html",{"_index":2465,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.scss",{"_index":2466,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teamscomponent",{"_index":136,"title":{"components/TeamsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamservice",{"_index":2386,"title":{"injectables/TeamService.html":{}},"body":{"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsTableComponent.html":{}}}],["teamstablecomponent",{"_index":138,"title":{"components/TeamsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamstate",{"_index":443,"title":{"interfaces/TeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["technological",{"_index":3060,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":2712,"title":{},"body":{"index.html":{}}}],["tells",{"_index":2966,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1690,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["term",{"_index":3023,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":3516,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":3295,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3318,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3304,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3292,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2845,"title":{},"body":{"license.html":{}}}],["test",{"_index":2747,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2754,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2746,"title":{},"body":{"index.html":{}}}],["text",{"_index":1109,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{}}}],["theme",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["therefore",{"_index":2834,"title":{},"body":{"license.html":{}}}],["things",{"_index":2827,"title":{},"body":{"license.html":{}}}],["third",{"_index":3087,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":497,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/TeamEffects.html":{}}}],["this.active",{"_index":1838,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":823,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":515,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":532,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":527,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":540,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":546,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.blockbodyscroll",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.changeslugandcheckvalidity(data",{"_index":926,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkname(data",{"_index":2091,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.checkslug(data",{"_index":924,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.checkslug(slug",{"_index":961,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkusername(data",{"_index":1031,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config",{"_index":429,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.config.menumode",{"_index":406,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":387,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":424,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.confirmationservice.confirm",{"_index":1640,"title":{},"body":{"components/MembersTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.createbreadcrumbs(child",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createnewprojectform",{"_index":2103,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('name')?.value",{"_index":2100,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('platform')?.value?.platformid",{"_index":2101,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewteamform",{"_index":2533,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.createnewteamform.get('slug')?.value",{"_index":2527,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.createorganizationform.get('name')?.value",{"_index":954,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.setvalue(slug",{"_index":960,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.value",{"_index":955,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1692,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":1693,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.document",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.dt?.filterglobal(($event.target",{"_index":1622,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.errorsubscription",{"_index":936,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":935,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":1053,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":884,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.hidemenu",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.delete(api.membersurl",{"_index":1528,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.delete(api.teamurl",{"_index":2437,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.get",{"_index":1307,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["this.http.get(api.authurl",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(api.membersurl",{"_index":1527,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.get(api.platformurl",{"_index":1962,"title":{},"body":{"injectables/PlatformService.html":{}}}],["this.http.get(api.projecturl",{"_index":2012,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.get(api.roleurl",{"_index":2221,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.get(api.teamurl",{"_index":2434,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.post",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{}}}],["this.http.post(api.projecturl",{"_index":2013,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.post(api.teamurl",{"_index":2436,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.index",{"_index":1847,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.invitationhash",{"_index":1271,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.acceptinvitation(request.invitationhash",{"_index":500,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.invitationservice.getinvitationdetails(this.invitationhash",{"_index":1258,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.invitemember(request).pipe",{"_index":1492,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.invitenewuserform",{"_index":1639,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('email')?.value",{"_index":1636,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('role')?.value?.roleid",{"_index":1637,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isaddnewprojectdialogvisible",{"_index":2095,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isaddnewteamdialogvisible",{"_index":2521,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.isdesktop",{"_index":393,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isinvitedialogvisible",{"_index":1625,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isnametaken",{"_index":2106,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isoverlay",{"_index":390,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isslugtaken",{"_index":965,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.isusernametaken",{"_index":1055,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":1864,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":1862,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":1860,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":1865,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":1844,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":552,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":521,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":520,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":1840,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":2581,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":817,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":811,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":809,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":813,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":818,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.restoreconfig",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.layoutservice.saveconfig",{"_index":808,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":815,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":805,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.localstorage.getitem(\"ui_config",{"_index":427,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.localstorage.setitem(\"ui_config",{"_index":433,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.loginform.get('password')?.value",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.membersservice.getmembers().pipe",{"_index":1498,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.removemember(request.memberid).pipe",{"_index":1504,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.menuoutsideclicklistener",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":1842,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":1869,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":1835,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":1857,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":1843,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":1724,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":1731,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":1834,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":1868,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":944,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.model",{"_index":2283,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":2285,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.namechecksubscription",{"_index":2104,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.namechecksubscription?.unsubscribe",{"_index":2092,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.onconfigupdate",{"_index":431,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.organizationerrorsubscription",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationerrorsubscription?.unsubscribe",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationservice",{"_index":963,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationservice.createorganization(request).pipe",{"_index":1899,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.getorganization().pipe",{"_index":1905,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationsubscription",{"_index":928,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationsubscription?.unsubscribe",{"_index":953,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":388,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":392,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":1846,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.platformservice.getplatforms().pipe",{"_index":1948,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.projectservice",{"_index":2105,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.projectservice.createproject(request).pipe",{"_index":1985,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getallprojects().pipe",{"_index":1991,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.registerform.get('email')?.setvalue(details.email",{"_index":1259,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1268,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1269,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1270,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1267,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1266,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.removemember(member",{"_index":1654,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.removemember(team",{"_index":2523,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.renderer.listen",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.resetinviteform",{"_index":1623,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":2186,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetprojectsform",{"_index":2093,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.resetsource.asobservable",{"_index":1727,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":1732,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetteamsform",{"_index":2520,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.restorescale",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["this.restoretheme",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["this.roleservice.getroles().pipe",{"_index":2210,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["this.root",{"_index":1866,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":1850,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1260,"title":{},"body":{"components/InvitationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":2140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":934,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/settings/account",{"_index":2583,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.saveconfig",{"_index":423,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.scale",{"_index":822,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.secret",{"_index":2184,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedlanguage",{"_index":2580,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":2284,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.slugchecksubscription",{"_index":962,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.slugchecksubscription?.unsubscribe",{"_index":952,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":399,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":391,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":397,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":394,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":395,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1377,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1380,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1381,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":1335,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":1333,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1382,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1379,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1383,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":1331,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":1330,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1384,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":1334,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":1332,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":929,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.store.dispatch",{"_index":1052,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(createorganization(dto",{"_index":956,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.dispatch(createproject(dto",{"_index":2102,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(createteam(dto",{"_index":2528,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.dispatch(deleteteam",{"_index":2532,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.dispatch(invitemember(dto",{"_index":1638,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadallprojects",{"_index":2049,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["this.store.dispatch(loadcurrentorganization",{"_index":927,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":1032,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadmyteams",{"_index":2490,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadorganizationmembers",{"_index":1477,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.dispatch(loadorganizationteams",{"_index":2489,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadplatforms",{"_index":2094,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(loadroles",{"_index":1624,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":2144,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(removemember",{"_index":1661,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(signout",{"_index":2582,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.select",{"_index":1445,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingallprojects",{"_index":2040,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["this.store.select(isloadingauthstate",{"_index":1016,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingcreatenewteam",{"_index":2514,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.select(isloadingcreateproject",{"_index":2076,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(isloadingdeleteteam",{"_index":2515,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.store.select(isloadingmembers",{"_index":1455,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.select(isloadingmyteams",{"_index":2475,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.select(isloadingorganization",{"_index":889,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.select(isloadingorganizationteams",{"_index":2477,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.select(isloadingremovemembers",{"_index":1601,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsendinvitation",{"_index":1603,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(selectcurrentorganization",{"_index":2574,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":1134,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectplatforms",{"_index":2080,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(selectroles",{"_index":1605,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.successsubscription",{"_index":1041,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":1047,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.teamservice.createnewteam(request).pipe",{"_index":2389,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(request.teamid).pipe",{"_index":2395,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getmyteams().pipe",{"_index":2401,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getorganizationteams().pipe",{"_index":2407,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.isslugtaken(slug).subscribe",{"_index":2534,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.toslugvalue(organizationname",{"_index":959,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant",{"_index":950,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":2180,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('create",{"_index":947,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant('members",{"_index":1631,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.translateservice.instant('projects",{"_index":2097,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.translateservice.instant('teams",{"_index":2522,"title":{},"body":{"components/TeamsTableComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":2584,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":1845,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":1054,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":1048,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":1033,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":1046,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":2887,"title":{},"body":{"license.html":{}}}],["though",{"_index":3253,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":2898,"title":{},"body":{"license.html":{}}}],["three",{"_index":3148,"title":{},"body":{"license.html":{}}}],["through",{"_index":343,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["thus",{"_index":3042,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":2366,"title":{},"body":{"components/SidebarComponent.html":{}}}],["time",{"_index":3314,"title":{},"body":{"license.html":{}}}],["titlecase",{"_index":2111,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["toastmodule",{"_index":848,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["todo",{"_index":347,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{}}}],["toggle",{"_index":314,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":389,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":1792,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":622,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{}}}],["token_key",{"_index":1328,"title":{},"body":{"injectables/JwtService.html":{}}}],["tokendto",{"_index":598,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{}}}],["tools",{"_index":3006,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":2548,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":141,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbar.component.html",{"_index":2549,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":2550,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":140,"title":{"components/TopbarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbarmenubutton",{"_index":2553,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toslugvalue",{"_index":865,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["toslugvalue(slug",{"_index":882,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["track",{"_index":319,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["trade",{"_index":3276,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3275,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3277,"title":{},"body":{"license.html":{}}}],["trail",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":3226,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2956,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3228,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3336,"title":{},"body":{"license.html":{}}}],["transition",{"_index":1821,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":41,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translate.addlangs(['en",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":35,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2606,"title":{},"body":{"dependencies.html":{}}}],["translatemodule",{"_index":24,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translateservice",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":2265,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":3180,"title":{},"body":{"license.html":{}}}],["treated",{"_index":3252,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3067,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["trigger",{"_index":1753,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":1827,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":1714,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":2697,"title":{},"body":{"index.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tslib",{"_index":2623,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":698,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type.enum",{"_index":1464,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":2631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":820,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":231,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["typical",{"_index":3205,"title":{},"body":{"license.html":{}}}],["typically",{"_index":761,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":2884,"title":{},"body":{"license.html":{}}}],["unblock",{"_index":1130,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TeamsTableComponent.html":{}}}],["under",{"_index":2922,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1768,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniquely",{"_index":1779,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":2745,"title":{},"body":{"index.html":{}}}],["unless",{"_index":3214,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3028,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2934,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3054,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":3248,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":1628,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["unsubscribes",{"_index":1802,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":3303,"title":{},"body":{"license.html":{}}}],["up",{"_index":2274,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":741,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":1742,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":361,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":1890,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updates",{"_index":421,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updating",{"_index":713,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["url",{"_index":765,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["use",{"_index":1774,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":245,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":3511,"title":{},"body":{"license.html":{}}}],["user",{"_index":336,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"components/SidebarComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":2268,"title":{},"body":{"components/SidebarComponent.html":{}}}],["user.dto",{"_index":1484,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["user.entity",{"_index":1225,"title":{},"body":{"interfaces/Invitation.html":{}}}],["userdto",{"_index":602,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/MembersDto.html":{},"interfaces/UserDto.html":{}}}],["userid",{"_index":2202,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":503,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":623,"title":{},"body":{"interfaces/AuthState.html":{}}}],["usernamechecksubscription",{"_index":1001,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":1002,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1482,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["userservice",{"_index":2282,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":2270,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":1003,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":3208,"title":{},"body":{"license.html":{}}}],["using",{"_index":365,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utilizes",{"_index":2703,"title":{},"body":{"index.html":{}}}],["valid",{"_index":3147,"title":{},"body":{"license.html":{}}}],["validators",{"_index":900,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["validators.email",{"_index":1244,"title":{},"body":{"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1014,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1242,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1243,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":885,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TeamsTableComponent.html":{}}}],["value",{"_index":292,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.key",{"_index":1839,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":1841,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.routeevent",{"_index":1837,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["values",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["varaibles",{"_index":2778,"title":{},"body":{"index.html":{}}}],["variable",{"_index":384,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["variables",{"_index":2766,"title":{},"body":{"index.html":{}}}],["various",{"_index":241,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["verbatim",{"_index":2796,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":2609,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":2611,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":1936,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":2812,"title":{},"body":{"license.html":{}}}],["via",{"_index":2748,"title":{},"body":{"index.html":{}}}],["view",{"_index":2262,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":899,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('dt",{"_index":1597,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TeamsTableComponent.html":{}}}],["viewchild('menubutton",{"_index":2572,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('name",{"_index":894,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["viewchild('slug",{"_index":897,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TeamsTableComponent.html":{}}}],["viewchild('topbarmenu",{"_index":2571,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":2577,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":1021,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":1131,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":1133,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":3242,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3299,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":315,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":333,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":806,"title":{},"body":{"components/ConfigComponent.html":{}}}],["vitals",{"_index":143,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["vitals.component.html",{"_index":2591,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitals.component.scss",{"_index":2592,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitalscomponent",{"_index":142,"title":{"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["void",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TeamsComponent.html":{},"components/TeamsTableComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":3124,"title":{},"body":{"license.html":{}}}],["vue",{"_index":2642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["w",{"_index":3520,"title":{},"body":{"license.html":{}}}],["waive",{"_index":3076,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3495,"title":{},"body":{"license.html":{}}}],["want",{"_index":2824,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":2967,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2858,"title":{},"body":{"license.html":{}}}],["way",{"_index":2817,"title":{},"body":{"license.html":{}}}],["ways",{"_index":3137,"title":{},"body":{"license.html":{}}}],["web",{"_index":2258,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["webpage",{"_index":737,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":3521,"title":{},"body":{"license.html":{}}}],["well",{"_index":715,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":3340,"title":{},"body":{"license.html":{}}}],["whether",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":2986,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3187,"title":{},"body":{"license.html":{}}}],["widely",{"_index":2982,"title":{},"body":{"license.html":{}}}],["width",{"_index":408,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":407,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":418,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1378,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":2243,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1376,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":3066,"title":{},"body":{"license.html":{}}}],["wish",{"_index":2779,"title":{},"body":{"index.html":{},"license.html":{}}}],["within",{"_index":1760,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["without",{"_index":1799,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["work",{"_index":2815,"title":{},"body":{"license.html":{}}}],["work's",{"_index":3005,"title":{},"body":{"license.html":{}}}],["working",{"_index":2983,"title":{},"body":{"license.html":{}}}],["works",{"_index":152,"title":{},"body":{"components/AlertsComponent.html":{},"components/CloseComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/GuidesComponent.html":{},"components/IssuesComponent.html":{},"components/LogsComponent.html":{},"components/MessagesComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectsComponent.html":{},"components/QueriesComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["worldwide",{"_index":3373,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":2271,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrench",{"_index":2360,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":3457,"title":{},"body":{"license.html":{}}}],["written",{"_index":3146,"title":{},"body":{"license.html":{}}}],["years",{"_index":3149,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":3390,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":2625,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessDeniedComponent.html":{"url":"components/AccessDeniedComponent.html","title":"component - AccessDeniedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessDeniedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/access-denied/access-denied.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-denied\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RouterModule\n                            RippleModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./access-denied.component.html\n            \n\n\n\n            \n                styleUrl\n                ./access-denied.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-access-denied',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RouterModule,\n    RippleModule,\n    TranslateModule\n  ],\n  templateUrl: './access-denied.component.html',\n  styleUrl: './access-denied.component.scss'\n})\nexport class AccessDeniedComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n          \n          \n            {{'access-denied.access_denied' | translate}}\n          \n          {{'access-denied.insufficient_permission' | translate}}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{\\'access-denied.access_denied\\' | translate}}                    {{\\'access-denied.insufficient_permission\\' | translate}}                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessDeniedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsComponent.html":{"url":"components/AlertsComponent.html","title":"component - AlertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/alerts/alerts.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alerts\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./alerts.component.html\n            \n\n\n\n            \n                styleUrl\n                ./alerts.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  standalone: true,\n  imports: [],\n  templateUrl: './alerts.component.html',\n  styleUrl: './alerts.component.scss'\n})\nexport class AlertsComponent {\n\n}\n\n    \n\n    \n        alerts works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'alerts works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                replaceThemeLink\n                            \n                            \n                                    Private\n                                restoreScale\n                            \n                            \n                                    Private\n                                restoreTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, layoutService: LayoutService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceThemeLink(href: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LayoutService } from './core/services/layout.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  constructor(\n    translate: TranslateService,\n    private layoutService: LayoutService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n  ngOnInit(): void {\n    this.layoutService.restoreConfig();\n    this.restoreScale();\n  }\n\n  ngAfterViewInit() {\n    this.restoreTheme();\n  }\n\n  private restoreScale() {\n    this.document.documentElement.style.fontSize =\n      this.layoutService.config.scale + 'px';\n  }\n\n  private restoreTheme() {\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace('lara-light-blue', this.layoutService.config.theme);\n    this.replaceThemeLink(newHref);\n  }\n\n  private replaceThemeLink(href: string) {\n    const id = 'theme-css';\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            membersState\n                                        \n                                \n                                \n                                        \n                                            organizationState\n                                        \n                                \n                                \n                                        \n                                            platformState\n                                        \n                                \n                                \n                                        \n                                            projectState\n                                        \n                                \n                                \n                                        \n                                            roleState\n                                        \n                                \n                                \n                                        \n                                            teamState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersState:         MembersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationState:         OrganizationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformState:         PlatformState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectState:         ProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleState:         RoleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamState:         TeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\nimport { MembersEffects } from './members/members.effects';\nimport { MembersState, membersReducer } from './members/members.reducer';\nimport { OrganizationEffects } from './organization/organization.effects';\nimport {\n  OrganizationState,\n  organizationReducer,\n} from './organization/organization.reducer';\nimport { ProjectEffects } from './project/project.effects';\nimport { ProjectState, projectReducer } from './project/project.reducer';\nimport { RoleEffects } from './role/role.effects';\nimport { RoleState, roleReducer } from './role/role.reducer';\nimport { TeamEffects } from './team/team.effects';\nimport { TeamState, teamReducer } from './team/team.reducer';\nimport { PlatformState, platformReducer } from './platform/platform.reducer';\nimport { PlatformEffects } from './platform/platform.effects';\n\nexport interface AppState {\n  authState: AuthState;\n  organizationState: OrganizationState;\n  membersState: MembersState;\n  roleState: RoleState;\n  teamState: TeamState;\n  projectState: ProjectState;\n  platformState: PlatformState;\n}\n\nexport const appEfects = [\n  AuthEffects,\n  OrganizationEffects,\n  MembersEffects,\n  RoleEffects,\n  TeamEffects,\n  ProjectEffects,\n  PlatformEffects\n];\n\nexport const appStore = {\n  authState: authReducer,\n  organizationState: organizationReducer,\n  membersState: membersReducer,\n  roleState: roleReducer,\n  teamState: teamReducer,\n  projectState: projectReducer,\n  platformState: platformReducer\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation$\n                            \n                            \n                                acceptInvitationSuccess$\n                            \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:111\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n\n  acceptInvitation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  acceptInvitationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acceptInvitationError\n                                        \n                                \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acceptInvitationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acceptInvitationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  acceptInvitationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  acceptInvitationError: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Accept Invitation\n  on(acceptInvitation, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Accept invitation success\n  on(acceptInvitationSuccess, (state) => ({\n    ...state,\n    acceptInvitationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Accept invitation failure\n  on(acceptInvitationFailure, (state, { error }) => ({\n    ...state,\n    acceptInvitationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseComponent.html":{"url":"components/CloseComponent.html","title":"component - CloseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/close/close.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./close.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  standalone: true,\n  imports: [],\n  templateUrl: './close.component.html',\n  styleUrl: './close.component.scss'\n})\nexport class CloseComponent {\n\n}\n\n    \n\n    \n        close works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'close works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:179\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:121\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:163\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:109\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:143\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:79\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:88\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:92\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:97\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n    this.layoutService.saveConfig();\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOrganizationComponent.html":{"url":"components/CreateOrganizationComponent.html","title":"component - CreateOrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/create-organization/create-organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-create-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganizationForm\n                            \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSlugAndCheckValidity\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createOrganization\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, store: Store, formBuilder: FormBuilder, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSlugAndCheckValidity\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSlugAndCheckValidity(organizationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../core/domain/dto/requests/create-organization-request.dto';\nimport { OrganizationService } from '../../core/services/api/organization.api.service';\nimport { AppState } from '../../core/state/app.state';\nimport {\n  createOrganization,\n  loadCurrentOrganization,\n} from '../../core/state/organization/organization.actions';\nimport {\n  isLoadingOrganization,\n  selectCurrentOrganization,\n  selectOrganizationError,\n} from '../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-create-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './create-organization.component.html',\n  styleUrl: './create-organization.component.scss',\n})\nexport class CreateOrganizationComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('name') nameInput!: ElementRef;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  createOrganizationForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  });\n\n  isSlugTaken: boolean | null = null;\n  isLoading = this.store.select(isLoadingOrganization);\n\n  private slugCheckSubscription?: Subscription;\n  private organizationSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.changeSlugAndCheckValidity(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.organizationSubscription = this.store\n      .select(selectCurrentOrganization)\n      .subscribe((organization) => {\n        if (organization != null) {\n          console.log('Organization: ' + JSON.stringify(organization));\n          this.router.navigate(['/home']);\n          this.errorSubscription?.unsubscribe();\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 404 &&\n          error.status !== 401\n        ) {\n          console.log(error);\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('create-organization.error'),\n            detail: this.translateService.instant(\n              'create-organization.error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n    this.organizationSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n  }\n\n  createOrganization() {\n    const dto: CreateOrganizationRequestDto = {\n      name: this.createOrganizationForm.get('name')?.value ?? '',\n      slug: this.createOrganizationForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createOrganization(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private changeSlugAndCheckValidity(organizationName: string) {\n    const slug = this.toSlugValue(organizationName);\n    this.createOrganizationForm.get('slug')?.setValue(slug);\n    this.checkSlug(slug);\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n            {{ \"create-organization.welcome_message\" | translate }}\n          \n          {{\n            \"create-organization.welcome_description\" | translate\n          }}\n        \n        \n          \n            {{ \"create-organization.name_label\" | translate }}\n            \n              \n              \n            \n            {{ \"create-organization.name_is_required\" | translate }}\n\n            {{ \"create-organization.slug_label\" | translate }}\n            \n              @if (isSlugTaken !== null && !isSlugTaken) {\n                \n              } @else {\n                \n              }\n              \n            \n            {{ \"create-organization.slug_is_required\" | translate }}\n\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ \"create-organization.welcome_message\" | translate }}                    {{            \"create-organization.welcome_description\" | translate          }}                                      {{ \"create-organization.name_label\" | translate }}                                                                {{ \"create-organization.name_is_required\" | translate }}            {{ \"create-organization.slug_label\" | translate }}                          @if (isSlugTaken !== null && !isSlugTaken) {                              } @else {                              }                                      {{ \"create-organization.slug_is_required\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrganizationRequestDto.html":{"url":"interfaces/CreateOrganizationRequestDto.html","title":"interface - CreateOrganizationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrganizationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-organization-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateOrganizationRequestDto {\n  slug: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectRequestDto.html":{"url":"interfaces/CreateProjectRequestDto.html","title":"interface - CreateProjectRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectRequestDto {\n    name: string;\n    platformId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTeamRequestDto.html":{"url":"interfaces/CreateTeamRequestDto.html","title":"interface - CreateTeamRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTeamRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-team-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateTeamRequestDto {\n    slug: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/details/details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent {\n\n}\n\n    \n\n    \n        details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/devices/devices.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n            \n                styleUrl\n                ./devices.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-devices',\n  standalone: true,\n  imports: [],\n  templateUrl: './devices.component.html',\n  styleUrl: './devices.component.scss'\n})\nexport class DevicesComponent {\n\n}\n\n    \n\n    \n        devices works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'devices works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  standalone: true,\n  imports: [],\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.scss'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        documentation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'documentation works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GuidesComponent.html":{"url":"components/GuidesComponent.html","title":"component - GuidesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GuidesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/guides/guides.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-guides\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./guides.component.html\n            \n\n\n\n            \n                styleUrl\n                ./guides.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  standalone: true,\n  imports: [],\n  templateUrl: './guides.component.html',\n  styleUrl: './guides.component.scss'\n})\nexport class GuidesComponent {\n\n}\n\n    \n\n    \n        guides works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'guides works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GuidesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationErrorSubscription\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:244\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:219\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:233\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:255\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:269\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\nimport { loadCurrentOrganization } from '../../core/state/organization/organization.actions';\nimport { selectOrganizationError } from '../../core/state/organization/organization.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n  private organizationErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.home = { icon: 'pi pi-home', routerLink: '/home' };\n  }\n\n  ngAfterViewInit() {\n    this.organizationErrorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error &&\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 401\n        ) {\n          console.log(error);\n          this.router.navigate(['/create-organization']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n    this.organizationErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, routerLink: [url] });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/invitation.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./user.entity\";\n\nexport interface Invitation {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                invitationHash\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService, invitationService: InvitationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        invitationHash\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  isLoadingAuthState,\n  selectAcceptInvitationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport {\n  acceptInvitation,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { InvitationService } from '../../../../core/services/api/invitation.api.service';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss',\n})\nexport class InvitationComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n  @Input()\n  private invitationHash?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private invitationService: InvitationService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    this.invitationService.getInvitationDetails(this.invitationHash ?? '').subscribe({\n      next: (details) => {\n        this.registerForm.get('email')?.setValue(details.email);\n      },\n      error: () => {\n        this.router.navigate(['/auth'])\n      }\n    })\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAcceptInvitationError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 409) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_username_exists',\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_wrong_hash',\n              ),\n            });\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(\n      acceptInvitation({ dto: dto, invitationHash: this.invitationHash ?? '' }),\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.invitation.welcome_message\" | translate }}\n  \n  {{\n    \"auth.invitation.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.invitation.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.invitation.username_is_required\" | translate }}\n    {{ \"auth.invitation.username_length\" | translate }}\n\n    {{ \"auth.invitation.password_label\" | translate }}\n    \n    {{ \"auth.invitation.password_length\" | translate }}\n    {{ \"auth.invitation.password_not_strong\" | translate }}\n\n    {{\n      \"auth.invitation.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.invitation.email_is_required\" | translate }}\n\n    {{ \"auth.invitation.first_name_label\" | translate }}\n    \n    {{ \"auth.invitation.first_name_is_required\" | translate }}\n\n    {{ \"auth.invitation.last_name_label\" | translate }}\n    \n    {{ \"auth.invitation.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.invitation.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.invitation.welcome_message\" | translate }}    {{    \"auth.invitation.welcome_description\" | translate  }}      {{ \"auth.invitation.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.invitation.username_is_required\" | translate }}    {{ \"auth.invitation.username_length\" | translate }}    {{ \"auth.invitation.password_label\" | translate }}        {{ \"auth.invitation.password_length\" | translate }}    {{ \"auth.invitation.password_not_strong\" | translate }}    {{      \"auth.invitation.email_label\" | translate    }}                        {{ \"auth.invitation.email_is_required\" | translate }}    {{ \"auth.invitation.first_name_label\" | translate }}        {{ \"auth.invitation.first_name_is_required\" | translate }}    {{ \"auth.invitation.last_name_label\" | translate }}        {{ \"auth.invitation.last_name_is_required\" | translate }}          {{ \"auth.invitation.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationDto.html":{"url":"interfaces/InvitationDto.html","title":"interface - InvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/invitation.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"../models/user.entity\";\n\nexport interface InvitationDto {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationRequestDto.html":{"url":"interfaces/InvitationRequestDto.html","title":"interface - InvitationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/invitation-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InvitationRequestDto {\n    email: string,\n    roleId: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitationService.html":{"url":"injectables/InvitationService.html","title":"injectable - InvitationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/invitation.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation\n                            \n                            \n                                getInvitationDetails\n                            \n                            \n                                inviteMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/invitation.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation\n                        \n                    \n                \n            \n            \n                \nacceptInvitation(invitationHash: string, dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInvitationDetails\n                        \n                    \n                \n            \n            \n                \ngetInvitationDetails(invitationHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember\n                        \n                    \n                \n            \n            \n                \ninviteMember(dto: InvitationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            InvitationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InvitationDto } from '../../domain/dto/invitation.dto';\nimport { InvitationRequestDto } from '../../domain/dto/requests/invitation-request.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvitationService {\n  constructor(private http: HttpClient) {}\n\n  inviteMember(dto: InvitationRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/send',\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getInvitationDetails(invitationHash: string): Observable {\n    return this.http.get(\n      api.invitationUrl + '/details/' + invitationHash,\n      api.noAuthOptions,\n    );\n  }\n\n  acceptInvitation(invitationHash: string, dto: RegisterRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/accept/' + invitationHash,\n      dto,\n      api.noAuthOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssuesComponent.html":{"url":"components/IssuesComponent.html","title":"component - IssuesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssuesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/issues/issues.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issues\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./issues.component.html\n            \n\n\n\n            \n                styleUrl\n                ./issues.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-issues',\n  standalone: true,\n  imports: [],\n  templateUrl: './issues.component.html',\n  styleUrl: './issues.component.scss'\n})\nexport class IssuesComponent {\n\n}\n\n    \n\n    \n        issues works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'issues works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssuesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                restoreConfig\n                            \n                            \n                                saveConfig\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:211\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:220\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:199\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:227\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:156\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreConfig\n                        \n                    \n                \n            \n            \n                \nrestoreConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:190\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:180\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:100\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:130\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:145\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:139\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:151\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:115\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/logs/logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logs\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logs.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-logs',\n  standalone: true,\n  imports: [],\n  templateUrl: './logs.component.html',\n  styleUrl: './logs.component.scss'\n})\nexport class LogsComponent {\n\n}\n\n    \n\n    \n        logs works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logs works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersComponent.html":{"url":"components/MembersComponent.html","title":"component - MembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/members/members.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-members\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                                MembersTableComponent\n                                AccessDeniedComponent\n                            TranslateModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMembers\n                            \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                invitedMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/members/members.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/members/members.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectActiveMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invitedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { PanelModule } from 'primeng/panel';\nimport { ToastModule } from 'primeng/toast';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadOrganizationMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingMembers,\n  selectActiveMembers,\n  selectInvitedMembers,\n  selectOwnerAsArray,\n} from '../../../core/state/members/members.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { MembersTableComponent } from '../../../shared/components/members-table/members-table.component';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-members',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    MembersTableComponent,\n    AccessDeniedComponent,\n    TranslateModule,\n    PanelModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './members.component.html',\n  styleUrl: './members.component.scss',\n})\nexport class MembersComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  );\n  isLoadingMembers = this.store.select(isLoadingMembers);\n  activeMembers = this.store\n    .select(selectActiveMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  invitedMembers = this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  owner = this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit() {\n    this.store.dispatch(loadOrganizationMembers());\n  }\n}\n\n    \n\n    \n        \n@if (hasReadPermission | async) {\n   -->\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n   -->\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {   -->                                             -->} @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersDto.html":{"url":"interfaces/MembersDto.html","title":"interface - MembersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/members.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invitations\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invitations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitations:     InvitationDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InvitationDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         UserDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     UserDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InvitationDto } from \"./invitation.dto\";\nimport { UserDto } from \"./user.dto\";\n\nexport interface MembersDto {\n    users: UserDto[];\n    invitations: InvitationDto[];\n    owner: UserDto;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersEffects.html":{"url":"injectables/MembersEffects.html","title":"injectable - MembersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inviteMember$\n                            \n                            \n                                loadOrganizationMembers$\n                            \n                            \n                                removeMember$\n                            \n                            \n                                removeMemberSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(membersService: MembersService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/members/members.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        membersService\n                                                  \n                                                        \n                                                                        MembersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMemberSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:62\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { MembersService } from '../../services/api/members.api.service';\nimport { Injectable } from '@angular/core';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class MembersEffects {\n  constructor(\n    private membersService: MembersService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  inviteMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMemberSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersService.html":{"url":"injectables/MembersService.html","title":"injectable - MembersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/members.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMembers\n                            \n                            \n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/members.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMembers\n                        \n                    \n                \n            \n            \n                \ngetMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  constructor(private http: HttpClient) {}\n\n  getMembers(): Observable {\n    return this.http.get(api.membersUrl, api.authOptions);\n  }\n\n  removeMember(memberId: string) {\n    return this.http.delete(api.membersUrl + '/' + memberId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersState.html":{"url":"interfaces/MembersState.html","title":"interface - MembersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            invitationStatus\n                                        \n                                \n                                \n                                        \n                                            invitedMember\n                                        \n                                \n                                \n                                        \n                                            inviteMemberError\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            removeMemberError\n                                        \n                                \n                                \n                                        \n                                            removeMemberStatus\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitedMember\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitedMember:         Invitation | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invitation | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         MembersDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Invitation } from '../../domain/models/invitation.entity';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface MembersState {\n  members: MembersDto | null;\n  error: any | null;\n  inviteMemberError: any | null;\n  removeMemberError: any | null;\n  invitedMember: Invitation | null;\n  status: StateStatus;\n  invitationStatus: StateStatus;\n  removeMemberStatus: StateStatus;\n}\n\nexport const initialState: MembersState = {\n  members: null,\n  error: undefined,\n  inviteMemberError: null,\n  invitedMember: null,\n  removeMemberError: null,\n  status: StateStatus.PENDING,\n  invitationStatus: StateStatus.PENDING,\n  removeMemberStatus: StateStatus.PENDING\n};\n\nexport const membersReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadOrganizationMembers, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationMembersSuccess, (state, members) => ({\n    ...state,\n    members: members,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationMembersFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  on(inviteMember, (state) => ({\n    ...state,\n    inviteMemberError: null,\n    invitedMember: null,\n    invitationStatus: StateStatus.LOADING,\n  })),\n\n  on(inviteMemberSuccess, (state, invitedMember) => ({\n    ...state,\n    invitedMember: invitedMember,\n    members: {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      owner: state.members?.owner!,\n      invitations: [...state.members?.invitations || [], invitedMember],\n      users: state.members?.users || []\n    },\n    inviteMemberError: null,\n    invitationStatus: StateStatus.SUCCESS,\n  })),\n\n  on(inviteMemberFailure, (state, { error }) => ({\n    ...state,\n    inviteMemberError: error,\n    invitationStatus: StateStatus.ERROR,\n  })),\n\n  on(removeMember, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.LOADING,\n  })),\n\n  on(removeMemberSuccess, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeMemberFailure, (state, { error }) => ({\n    ...state,\n    removeMemberError: error,\n    removeMemberStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersTableComponent.html":{"url":"components/MembersTableComponent.html","title":"component - MembersTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/members-table/members-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-members-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ToastModule\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                inviteNewUserForm\n                            \n                            \n                                isInviteDialogVisible\n                            \n                            \n                                isLoadingRemoveMembers\n                            \n                            \n                                isLoadingSendInvitation\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetInviteForm\n                            \n                            \n                                sendInvite\n                            \n                            \n                                showInviteDialog\n                            \n                            \n                                showRemoveMemberConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enableInviteAction\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     User[] | InvitationDto[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:84\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableInviteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:75\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetInviteForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetInviteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendInvite\n                        \n                    \n                \n            \n            \n                \nsendInvite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInviteDialog\n                        \n                    \n                \n            \n            \n                \nshowInviteDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRemoveMemberConfirmation\n                        \n                    \n                \n            \n            \n                \nshowRemoveMemberConfirmation(member: any, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteNewUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInviteDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingRemoveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingSendInvitation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSendInvitation)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectRoles)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { filter, take } from 'rxjs';\nimport { InvitationDto } from '../../../core/domain/dto/invitation.dto';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Role, User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport {\n  inviteMember,\n  removeMember,\n} from '../../../core/state/members/members.actions';\nimport {\n  isLoadingRemoveMembers,\n  isLoadingSendInvitation,\n  selectInvitationSendStatus,\n  selectRemoveMemberStatus,\n} from '../../../core/state/members/members.selectors';\nimport { loadRoles } from '../../../core/state/role/role.actions';\nimport { selectRoles } from '../../../core/state/role/role.selectors';\n\n@Component({\n  selector: 'app-members-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastModule,\n    ConfirmDialogModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './members-table.component.html',\n  styleUrl: './members-table.component.scss',\n})\nexport class MembersTableComponent {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: User[] | InvitationDto[] = undefined;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableInviteAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  roles = this.store.select(selectRoles);\n  inviteNewUserForm = this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  });\n  isInviteDialogVisible: boolean = false;\n\n  isLoadingSendInvitation = this.store.select(isLoadingSendInvitation);\n  isLoadingRemoveMembers = this.store.select(isLoadingRemoveMembers);\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showInviteDialog() {\n    this.resetInviteForm();\n    this.store.dispatch(loadRoles());\n    this.isInviteDialogVisible = true;\n  }\n\n  sendInvite() {\n    this.store\n      .select(selectInvitationSendStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_send_invite',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant('members-table.invite_sent'),\n          });\n          this.isInviteDialogVisible = !this.isInviteDialogVisible;\n        }\n      });\n\n    const dto = {\n      email: this.inviteNewUserForm.get('email')?.value ?? '',\n      roleId: this.inviteNewUserForm.get('role')?.value?.roleId ?? '',\n    };\n    this.store.dispatch(inviteMember(dto));\n  }\n\n  private resetInviteForm() {\n    this.inviteNewUserForm = this.formBuilder.group({\n      role: [undefined as Role | undefined, [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showRemoveMemberConfirmation(member: any, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant('members-table.delete_confirmation_message'),\n      header: this.translateService.instant('members-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(member);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(member: any) {\n    this.store\n      .select(selectRemoveMemberStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_remove_member',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant(\n              'members-table.removed_memeber',\n            ),\n          });\n        }\n      });\n\n    let memberId = '';\n    if (member.userId) {\n      memberId = member.userId;\n    } else if (member.invitationId) {\n      memberId = member.invitationId;\n    }\n    this.store.dispatch(removeMember({ memberId: memberId }));\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"members-table.first_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.last_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.email\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.role\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.avatar\" | translate }}\n        \n      \n      \n        \n          {{ \"members-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ member?.firstName }}\n      \n      \n        {{ member?.lastName }}\n      \n      \n        {{ member.email }}\n      \n      \n        {{ member.role.name }}\n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"members-table.no_members_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"members-table.email_label\" | translate }}\n        \n          \n          \n        \n        {{ \"members-table.email_is_required\" | translate }}\n        {{ \"members-table.invalid_email\" | translate }}\n\n        {{ \"members-table.role_label\" | translate }}\n        \n        {{ \"members-table.role_is_required\" | translate }}\n\n        \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"members-table.first_name\" | translate }}                                                          {{ \"members-table.last_name\" | translate }}                                                          {{ \"members-table.email\" | translate }}                                                          {{ \"members-table.role\" | translate }}                                                          {{ \"members-table.avatar\" | translate }}                                      {{ \"members-table.actions\" | translate }}                                        {{ member?.firstName }}                    {{ member?.lastName }}                    {{ member.email }}                    {{ member.role.name }}                                                                {{ \"members-table.no_members_found\" | translate }}                          {{ \"members-table.email_label\" | translate }}                                            {{ \"members-table.email_is_required\" | translate }}        {{ \"members-table.invalid_email\" | translate }}        {{ \"members-table.role_label\" | translate }}                {{ \"members-table.role_is_required\" | translate }}                                                  '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/messages/messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  standalone: true,\n  imports: [],\n  templateUrl: './messages.component.html',\n  styleUrl: './messages.component.scss'\n})\nexport class MessagesComponent {\n\n}\n\n    \n\n    \n        messages works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'messages works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            RouterModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [CommonModule, ButtonModule, RippleModule, RouterModule, TranslateModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        404\n        \n          {{ \"not-found.not_found\" | translate }}\n        \n        \n          {{ \"not-found.not_available\" | translate }}\n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        404                  {{ \"not-found.not_found\" | translate }}                          {{ \"not-found.not_available\" | translate }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/notifications/notifications.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notifications.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})\nexport class NotificationsComponent {\n\n}\n\n    \n\n    \n        notifications works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notifications works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/organization.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Organization {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/organization/organization.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-organization\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-organization',\n  standalone: true,\n  imports: [],\n  templateUrl: './organization.component.html',\n  styleUrl: './organization.component.scss'\n})\nexport class OrganizationComponent {\n\n}\n\n    \n\n    \n        organization works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'organization works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDto.html":{"url":"interfaces/OrganizationDto.html","title":"interface - OrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/organization.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDto {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationEffects.html":{"url":"injectables/OrganizationEffects.html","title":"injectable - OrganizationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrganization$\n                            \n                            \n                                loadCurrentOrganization$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/organization/organization.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { OrganizationService } from \"../../services/api/organization.api.service\";\nimport { createOrganization, createOrganizationSuccess, loadCurrentOrganization, loadCurrentOrganizationFailure, loadCurrentOrganizationSuccess } from \"./organization.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class OrganizationEffects {\n  constructor(\n    private organizationService: OrganizationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createNewOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/organization.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getOrganization\n                            \n                            \n                                isSlugTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/organization.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(dto: CreateOrganizationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrganizationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganization\n                        \n                    \n                \n            \n            \n                \ngetOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { CreateOrganizationRequestDto } from \"../../domain/dto/requests/create-organization-request.dto\";\nimport { OrganizationDto } from \"../../domain/dto/organization.dto\";\nimport { api } from \"./api\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationService {\n  constructor(private http: HttpClient) {}\n\n  createOrganization(dto: CreateOrganizationRequestDto): Observable {\n    return this.http.post(\n      api.organizationUrl,\n      dto,\n      api.authOptions\n    );\n  }\n\n  getOrganization(): Observable {\n    return this.http.get(\n      api.organizationUrl,\n      api.authOptions\n    );\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.organizationUrl + '/slug/taken?slug=' + slug,\n      api.authOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationState.html":{"url":"interfaces/OrganizationState.html","title":"interface - OrganizationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            organization\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organization:         Organization | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organization | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Organization } from '../../domain/models/organization.entity';\nimport {\n  createOrganization,\n  createOrganizationFailure,\n  createOrganizationSuccess,\n  loadCurrentOrganization,\n  loadCurrentOrganizationFailure,\n  loadCurrentOrganizationSuccess,\n} from './organization.actions';\n\nexport interface OrganizationState {\n  organization: Organization | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: OrganizationState = {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const organizationReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/platform.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"./enums/platform-type.enum\";\n\nexport interface Platform {\n    platformId: string;\n    type: PlatformType;\n    version: string;\n    iconUrl: string | null;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformDto.html":{"url":"interfaces/PlatformDto.html","title":"interface - PlatformDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/platform.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"../models/enums/platform-type.enum\";\n\nexport interface PlatformDto {\n  platformId: string;\n  type: PlatformType;\n  version: string;\n  iconUrl: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformEffects.html":{"url":"injectables/PlatformEffects.html","title":"injectable - PlatformEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformService: PlatformService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/platform/platform.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformService\n                                                  \n                                                        \n                                                                        PlatformService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/platform/platform.effects.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { PlatformService } from '../../services/api/platform.api.service';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\n@Injectable()\nexport class PlatformEffects {\n  constructor(\n    private platformService: PlatformService,\n    private actions$: Actions,\n  ) {}\n\n  loadPlatforms$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformService.html":{"url":"injectables/PlatformService.html","title":"injectable - PlatformService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/platform.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatforms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/platform.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/platform.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PlatformDto } from '../../domain/dto/platform.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlatformService {\n  constructor(private http: HttpClient) {}\n\n  getPlatforms(): Observable {\n    return this.http.get(api.platformUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformState.html":{"url":"interfaces/PlatformState.html","title":"interface - PlatformState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:         Platform[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Platform } from '../../domain/models/platform.entity';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\nexport interface PlatformState {\n  platforms: Platform[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: PlatformState = {\n  platforms: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const platformReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadPlatforms, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadPlatformsSuccess, (state, params) => ({\n    ...state,\n    platforms: params.platforms,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadPlatformsFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         Platform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Platform } from \"./platform.entity\"\n\nexport interface Project {\n    projectId: string,\n    name: string,\n    platform: Platform\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectDetailsComponent.html":{"url":"components/ProjectDetailsComponent.html","title":"component - ProjectDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/project-details/project-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./project-details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-project-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './project-details.component.html',\n  styleUrl: './project-details.component.scss'\n})\nexport class ProjectDetailsComponent {\n\n}\n\n    \n\n    \n        project-details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'project-details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDto.html":{"url":"interfaces/ProjectDto.html","title":"interface - ProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from \"./platform.dto\";\n\nexport interface ProjectDto {\n    projectId: string,\n    name: string,\n    platform: PlatformDto\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectEffects.html":{"url":"injectables/ProjectEffects.html","title":"injectable - ProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createProject$\n                            \n                            \n                                loadAllProjects$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/project/project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAllProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess } from \"./project.actions\";\nimport { Injectable } from \"@angular/core\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\n\n@Injectable()\nexport class ProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadAllProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/project.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProject\n                            \n                            \n                                getAllProjects\n                            \n                            \n                                isNameTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/project.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject(dto: CreateProjectRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateProjectRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProjects\n                        \n                    \n                \n            \n            \n                \ngetAllProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n            \n                \nisNameTaken(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProjectDto } from '../../domain/dto/project.dto';\nimport { CreateProjectRequestDto } from '../../domain/dto/requests/create-project-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private http: HttpClient) {}\n\n  getAllProjects(): Observable {\n    return this.http.get(api.projectUrl, api.authOptions);\n  }\n\n  createProject(dto: CreateProjectRequestDto): Observable {\n    return this.http.post(api.projectUrl, dto, api.authOptions);\n  }\n\n  isNameTaken(name: string): Observable {\n    return this.http.get(\n      api.projectUrl + '/name/taken?name=' + name,\n      api.authOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectState.html":{"url":"interfaces/ProjectState.html","title":"interface - ProjectState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allProjects\n                                        \n                                \n                                \n                                        \n                                            allProjectsError\n                                        \n                                \n                                \n                                        \n                                            allProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            createProjectError\n                                        \n                                \n                                \n                                        \n                                            createProjectStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Project } from '../../domain/models/project.entity';\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess } from './project.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface ProjectState {\n  allProjects: Project[] | null;\n  allProjectsError: any | null;\n  createProjectError: any | null;\n  allProjectsStatus: StateStatus;\n  createProjectStatus: StateStatus;\n}\n\nexport const initialState: ProjectState = {\n  allProjects: null,\n  allProjectsError: undefined,\n  allProjectsStatus: StateStatus.PENDING,\n  createProjectError: undefined,\n  createProjectStatus: StateStatus.PENDING\n};\n\nexport const projectReducer = createReducer(\n  initialState,\n\n  //Handle loading all projects\n  on(loadAllProjects, (state) => ({\n    ...state,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadAllProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    allProjects: projects,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadAllProjectsFailure, (state, { error }) => ({\n    ...state,\n    allProjectsError: error,\n    allProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createProject, (state) => ({\n    ...state,\n    createProjectError: null,\n    createProjectStatus: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createProjectSuccess, (state, project) => ({\n    ...state,\n    allProjects: [...(state.allProjects || []), project],\n    createProjectError: null,\n    createProjectStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createProjectFailure, (state, { error }) => ({\n    ...state,\n    createProjectError: error,\n    createProjectStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/projects.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  standalone: true,\n  imports: [],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss'\n})\nexport class ProjectsComponent {\n\n}\n\n    \n\n    \n        projects works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'projects works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent-1.html":{"url":"components/ProjectsComponent-1.html","title":"component - ProjectsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-settings\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                            TranslateModule\n                                ProjectsTableComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingAllProjects\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/projects/projects.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/projects/projects.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingAllProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PanelModule } from 'primeng/panel';\nimport { map } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { ProjectsTableComponent } from '../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-projects-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TranslateModule,\n    ProjectsTableComponent,\n  ],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  );\n\n  isLoadingAllProjects = this.store.select(isLoadingAllProjects);\n  projects = this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAllProjects());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n    \n      \n    \n  } @else {\n    \n  }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {      }  '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsTableComponent.html":{"url":"components/ProjectsTableComponent.html","title":"component - ProjectsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/projects-table/projects-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-projects-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewProjectForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewProjectDialogVisible\n                            \n                            \n                                isLoadingCreateNewProject\n                            \n                            \n                                isNameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                nameCheckSubscription\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkName\n                            \n                            \n                                createNewProject\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                resetProjectsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:102\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:96\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:90\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkName\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProject\n                        \n                    \n                \n            \n            \n                \ncreateNewProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetProjectsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetProjectsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewProjectDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateProject)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        nameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platforms\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectPlatforms)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Platform } from '../../../core/domain/models/platform.entity';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../core/services/api/project.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadPlatforms } from '../../../core/state/platform/platform.actions';\nimport { selectPlatforms } from '../../../core/state/platform/platform.selectors';\nimport { createProject } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingCreateProject,\n  selectCreateProjectStatus,\n} from '../../../core/state/project/project.selectors';\n\n@Component({\n  selector: 'app-projects-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './projects-table.component.html',\n  styleUrl: './projects-table.component.scss',\n})\nexport class ProjectsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private projectService: ProjectService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Project[] = undefined;\n\n  @ViewChild('name') nameInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  createNewProjectForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  });\n  isAddNewProjectDialogVisible: boolean = false;\n  isNameTaken: boolean | null = null;\n  isLoadingCreateNewProject = this.store.select(isLoadingCreateProject);\n  platforms = this.store.select(selectPlatforms);\n\n  private nameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkName(data));\n  }\n\n  ngOnDestroy() {\n    this.nameCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetProjectsForm();\n    this.store.dispatch(loadPlatforms());\n    this.isAddNewProjectDialogVisible = true;\n  }\n\n  createNewProject() {\n    this.store\n      .select(selectCreateProjectStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('projects-table.error'),\n            detail: this.translateService.instant(\n              'projects-table.failed_to_create_project',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('projects-table.success'),\n            detail: this.translateService.instant(\n              'projects-table.project_created',\n            ),\n          });\n          this.isAddNewProjectDialogVisible =\n            !this.isAddNewProjectDialogVisible;\n        }\n      });\n\n    const dto = {\n      name: this.createNewProjectForm.get('name')?.value ?? '',\n      platformId:\n        this.createNewProjectForm.get('platform')?.value?.platformId ?? '',\n    };\n    this.store.dispatch(createProject(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private resetProjectsForm() {\n    this.createNewProjectForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      platform: [undefined as Platform | undefined, [Validators.required]],\n    });\n  }\n\n  private checkName(name: string) {\n    this.nameCheckSubscription?.unsubscribe();\n    this.nameCheckSubscription = this.projectService\n      .isNameTaken(name)\n      .subscribe({\n        next: (result) => {\n          this.isNameTaken = result;\n        },\n        error: () => {\n          this.isNameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"projects-table.name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"projects-table.platform\" | translate }}\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        {{ project?.name }}\n      \n      \n        \n          \n          {{ project?.platform?.type | titlecase }}\n          {{ project?.platform?.version }}\n        \n      \n    \n  \n  \n    \n      {{ \"projects-table.no_projects_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"projects-table.name_label\" | translate }}\n        \n          @if (isNameTaken !== null && !isNameTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"projects-table.name_is_required\" | translate }}\n\n        {{ \"projects-table.platform_label\" | translate }}\n        \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n        \n        {{ \"projects-table.platform_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"projects-table.name\" | translate }}                                                          {{ \"projects-table.platform\" | translate }}                                                            {{ project?.name }}                                        {{ project?.platform?.type | titlecase }}          {{ project?.platform?.version }}                                {{ \"projects-table.no_projects_found\" | translate }}                          {{ \"projects-table.name_label\" | translate }}                  @if (isNameTaken !== null && !isNameTaken) {                      } @else {                      }                          {{ \"projects-table.name_is_required\" | translate }}        {{ \"projects-table.platform_label\" | translate }}                                                          {{ platform.type | titlecase }} {{ platform.version }}                                                                        {{ platform.type | titlecase }} {{ platform.version }}                                      {{ \"projects-table.platform_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueriesComponent.html":{"url":"components/QueriesComponent.html","title":"component - QueriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/queries/queries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queries\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./queries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./queries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-queries',\n  standalone: true,\n  imports: [],\n  templateUrl: './queries.component.html',\n  styleUrl: './queries.component.scss'\n})\nexport class QueriesComponent {\n\n}\n\n    \n\n    \n        queries works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'queries works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesComponent.html":{"url":"components/ReleasesComponent.html","title":"component - ReleasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/releases/releases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-releases\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./releases.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-releases',\n  standalone: true,\n  imports: [],\n  templateUrl: './releases.component.html',\n  styleUrl: './releases.component.scss'\n})\nexport class ReleasesComponent {\n\n}\n\n    \n\n    \n        releases works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'releases works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReplaysComponent.html":{"url":"components/ReplaysComponent.html","title":"component - ReplaysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReplaysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/replays/replays.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-replays\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./replays.component.html\n            \n\n\n\n            \n                styleUrl\n                ./replays.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-replays',\n  standalone: true,\n  imports: [],\n  templateUrl: './replays.component.html',\n  styleUrl: './replays.component.scss'\n})\nexport class ReplaysComponent {\n\n}\n\n    \n\n    \n        replays works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'replays works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReplaysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/resources/resources.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n            \n                styleUrl\n                ./resources.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  standalone: true,\n  imports: [],\n  templateUrl: './resources.component.html',\n  styleUrl: './resources.component.scss'\n})\nexport class ResourcesComponent {\n\n}\n\n    \n\n    \n        resources works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'resources works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            internal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        internal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        internal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleEffects.html":{"url":"injectables/RoleEffects.html","title":"injectable - RoleEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRoles$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/role/role.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/role/role.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { RoleService } from '../../services/api/role.api.service';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\n@Injectable()\nexport class RoleEffects {\n  constructor(\n    private roleService: RoleService,\n    private actions$: Actions,\n  ) {}\n\n  loadRoles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/role.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/role.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/role.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Role } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleService {\n  constructor(private http: HttpClient) {}\n\n  getRoles(): Observable {\n    return this.http.get(api.roleUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleState.html":{"url":"interfaces/RoleState.html","title":"interface - RoleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Role } from '../../domain/models/user.entity';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\nexport interface RoleState {\n  roles: Role[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: RoleState = {\n    roles: null,\n    error: undefined,\n    status: StateStatus.PENDING\n}\n\nexport const roleReducer = createReducer(\n    initialState,\n\n    //Handle loading current organization members\n  on(loadRoles, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadRolesSuccess, (state, params) => ({\n    ...state,\n    roles: params.roles,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadRolesFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n)\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenLoadsComponent.html":{"url":"components/ScreenLoadsComponent.html","title":"component - ScreenLoadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScreenLoadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/screen-loads/screen-loads.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen-loads\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./screen-loads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./screen-loads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-loads',\n  standalone: true,\n  imports: [],\n  templateUrl: './screen-loads.component.html',\n  styleUrl: './screen-loads.component.scss'\n})\nexport class ScreenLoadsComponent {\n\n}\n\n    \n\n    \n        screen-loads works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'screen-loads works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreenLoadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SdksComponent.html":{"url":"components/SdksComponent.html","title":"component - SdksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SdksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/sdks/sdks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sdks\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sdks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sdks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sdks',\n  standalone: true,\n  imports: [],\n  templateUrl: './sdks.component.html',\n  styleUrl: './sdks.component.scss'\n})\nexport class SdksComponent {\n\n}\n\n    \n\n    \n        sdks works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sdks works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SdksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecurityComponent.html":{"url":"components/SecurityComponent.html","title":"component - SecurityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecurityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/security/security.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-security\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./security.component.html\n            \n\n\n\n            \n                styleUrl\n                ./security.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-security',\n  standalone: true,\n  imports: [],\n  templateUrl: './security.component.html',\n  styleUrl: './security.component.scss'\n})\nexport class SecurityComponent {\n\n}\n\n    \n\n    \n        security works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'security works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecurityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionsComponent.html":{"url":"components/SessionsComponent.html","title":"component - SessionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/sessions/sessions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sessions\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sessions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sessions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sessions',\n  standalone: true,\n  imports: [],\n  templateUrl: './sessions.component.html',\n  styleUrl: './sessions.component.scss'\n})\nexport class SessionsComponent {\n\n}\n\n    \n\n    \n        sessions works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sessions works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  standalone: true,\n  imports: [],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport class SettingsComponent {\n\n}\n\n    \n\n    \n        settings works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        // {\n        //   label: sidenav.Home,\n        //   icon: 'pi pi-fw pi-home',\n        //   routerLink: ['/home'],\n        // },\n        {\n          label: sidenav.Projects,\n          icon: 'pi pi-fw pi-code',\n          routerLink: ['/home/projects'],\n        },\n        {\n          label: sidenav.Logs,\n          icon: 'pi pi-fw pi-list',\n          routerLink: ['/home/logs'],\n        },\n        {\n          label: sidenav.Issues,\n          icon: 'pi pi-fw pi-inbox',\n          routerLink: ['/home/issues'],\n        },\n        {\n          label: sidenav.Messages,\n          icon: 'pi pi-fw pi-envelope',\n          routerLink: ['/home/messages'],\n        },\n        {\n          label: sidenav.Devices,\n          icon: 'pi pi-fw pi-mobile',\n          routerLink: ['/home/devices'],\n        },\n        {\n          label: sidenav.Sessions,\n          icon: 'pi pi-fw pi-clock',\n          routerLink: ['/home/sessions'],\n        },\n        {\n          label: sidenav.Performance,\n          icon: 'pi pi-fw pi-chart-line',\n          routerLink: ['/home/performance'],\n          expanded: true,\n          items: [\n            {\n              label: sidenav.Queries,\n              icon: 'pi pi-fw pi-database',\n              routerLink: ['/home/queries'],\n            },\n            {\n              label: sidenav.Vitals,\n              icon: 'pi pi-fw pi-heart',\n              routerLink: ['/home/vitals'],\n            },\n            {\n              label: sidenav.Screen_Loads,\n              icon: 'pi pi-fw pi-stopwatch',\n              routerLink: ['/home/screen-loads'],\n            },\n            {\n              label: sidenav.Resources,\n              icon: 'pi pi-fw pi-server',\n              routerLink: ['/home/resources'],\n            },\n          ],\n        },\n        {\n          label: sidenav.Replays,\n          icon: 'pi pi-fw pi-play',\n          routerLink: ['/home/replays'],\n        },\n        {\n          label: sidenav.Releases,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/releases'],\n        },\n        {\n          label: sidenav.Stats,\n          icon: 'pi pi-fw pi-chart-bar',\n          routerLink: ['/home/stats'],\n        },\n      ],\n    });\n    this.model.push({\n      label: sidenav.Settings,\n      routerLink: ['/home/settings'],\n      items: [\n        {\n          label: sidenav.Settings_Account,\n          icon: 'pi pi-fw pi-user',\n          expanded: false,\n          routerLink: ['/home/settings/account'],\n          items: [\n            {\n              label: sidenav.Settings_Account_Details,\n              routerLink: ['/home/settings/account/details'],\n              icon: 'pi pi-fw pi-list'\n            },\n            {\n              label: sidenav.Settings_Account_Security,\n              routerLink: ['/home/settings/account/security'],\n              icon: 'pi pi-fw pi-shield'\n            },\n            {\n              label: sidenav.Settings_Account_Notifications,\n              routerLink: ['/home/settings/account/notifications'],\n              icon: 'pi pi-fw pi-envelope'\n            },\n            {\n              label: sidenav.Settings_Account_Close,\n              routerLink: ['/home/settings/account/close'],\n              icon: 'pi pi-fw pi-exclamation-circle'\n            }\n          ]\n        },\n        {\n          label: sidenav.Settings_Organization,\n          icon: 'pi pi-fw pi-building',\n          routerLink: ['/home/settings/organization']\n        },\n        {\n          label: sidenav.Settings_Projects,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/settings/projects']\n        },\n        {\n          label: sidenav.Settings_Teams,\n          icon: 'pi pi-fw pi-sitemap',\n          routerLink: ['/home/settings/teams']\n        },\n        {\n          label: sidenav.Settings_Members,\n          icon: 'pi pi-fw pi-users',\n          routerLink: ['/home/settings/members']\n        },\n        {\n          label: sidenav.Settings_Alerts,\n          icon: 'pi pi-fw pi-bell',\n          routerLink: ['/home/settings/alerts']\n        }\n      ]\n    })\n    this.model.push({\n      label: sidenav.Help,\n      items: [\n        {\n          label: sidenav.Help_Documentation,\n          icon: 'pi pi-fw pi-book',\n          routerLink: ['/home/help/documentation']\n        },\n        {\n          label: sidenav.Help_SDKS,\n          icon: 'pi pi-fw pi-wrench',\n          routerLink: ['/home/help/sdks']\n        },\n        {\n          label: sidenav.Help_Guides,\n          icon: 'pi pi-fw pi-question-circle',\n          routerLink: ['/home/help/guides']\n        },\n        {\n          label: sidenav.Help_Support,\n          icon: 'pi pi-fw pi-ticket',\n          routerLink: ['/home/help/support']\n        },\n      ]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/stats/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  standalone: true,\n  imports: [],\n  templateUrl: './stats.component.html',\n  styleUrl: './stats.component.scss'\n})\nexport class StatsComponent {\n\n}\n\n    \n\n    \n        stats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'stats works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportComponent.html":{"url":"components/SupportComponent.html","title":"component - SupportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/support/support.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./support.component.html\n            \n\n\n\n            \n                styleUrl\n                ./support.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  standalone: true,\n  imports: [],\n  templateUrl: './support.component.html',\n  styleUrl: './support.component.scss'\n})\nexport class SupportComponent {\n\n}\n\n    \n\n    \n        support works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'support works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Team {\n    teamId: string;\n    slug: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamDto.html":{"url":"interfaces/TeamDto.html","title":"interface - TeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/team.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TeamDto {\n  teamId: string;\n  slug: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamEffects.html":{"url":"injectables/TeamEffects.html","title":"injectable - TeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTeam$\n                            \n                            \n                                deleteTeam$\n                            \n                            \n                                loadMyTeams$\n                            \n                            \n                                loadOrganizationTeams$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/team/team.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\nimport { TeamService } from \"../../services/api/team.api.service\";\nimport { createTeam, createTeamFailure, createTeamSuccess, deleteTeam, deleteTeamFailure, deleteTeamSuccess, loadMyTeams, loadMyTeamsFailure, loadMyTeamsSuccess, loadOrganizationTeams, loadOrganizationTeamsFailure, loadOrganizationTeamsSuccess } from \"./team.actions\";\n\n@Injectable()\nexport class TeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  deleteTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/team.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                getMyTeams\n                            \n                            \n                                getOrganizationTeams\n                            \n                            \n                                isSlugTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/team.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam(dto: CreateTeamRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTeamRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \ndeleteTeam(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyTeams\n                        \n                    \n                \n            \n            \n                \ngetMyTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationTeams\n                        \n                    \n                \n            \n            \n                \ngetOrganizationTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TeamDto } from '../../domain/dto/team.dto';\nimport { api } from './api';\nimport { CreateTeamRequestDto } from '../../domain/dto/requests/create-team-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeamService {\n  constructor(private http: HttpClient) {}\n\n  getOrganizationTeams(): Observable {\n    return this.http.get(api.teamUrl, api.authOptions);\n  }\n\n  getMyTeams(): Observable {\n    return this.http.get(api.teamUrl + '/my', api.authOptions);\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.teamUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  createNewTeam(dto: CreateTeamRequestDto): Observable {\n    return this.http.post(api.teamUrl, dto, api.authOptions);\n  }\n\n  deleteTeam(teamId: string) {\n    return this.http.delete(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamState.html":{"url":"interfaces/TeamState.html","title":"interface - TeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createOrganizationTeamError\n                                        \n                                \n                                \n                                        \n                                            createOrganizationTeamStatus\n                                        \n                                \n                                \n                                        \n                                            deleteTeamError\n                                        \n                                \n                                \n                                        \n                                            deleteTeamStatus\n                                        \n                                \n                                \n                                        \n                                            myTeams\n                                        \n                                \n                                \n                                        \n                                            myTeamsError\n                                        \n                                \n                                \n                                        \n                                            myTeamsStatus\n                                        \n                                \n                                \n                                        \n                                            organizationTeams\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsError\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n  createTeam,\n  createTeamFailure,\n  createTeamSuccess,\n  deleteTeam,\n  deleteTeamFailure,\n  deleteTeamSuccess,\n  loadMyTeams,\n  loadMyTeamsSuccess,\n  loadOrganizationTeams,\n  loadOrganizationTeamsFailure,\n  loadOrganizationTeamsSuccess,\n} from './team.actions';\n\nexport interface TeamState {\n  organizationTeams: Team[] | null;\n  myTeams: Team[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  organizationTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  myTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createOrganizationTeamError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  deleteTeamError: any | null;\n  organizationTeamsStatus: StateStatus;\n  myTeamsStatus: StateStatus;\n  createOrganizationTeamStatus: StateStatus;\n  deleteTeamStatus: StateStatus;\n}\n\nexport const initialState: TeamState = {\n  organizationTeams: null,\n  organizationTeamsError: undefined,\n  organizationTeamsStatus: StateStatus.PENDING,\n  myTeams: null,\n  myTeamsError: undefined,\n  myTeamsStatus: StateStatus.PENDING,\n  createOrganizationTeamError: undefined,\n  createOrganizationTeamStatus: StateStatus.PENDING,\n  deleteTeamError: undefined,\n  deleteTeamStatus: StateStatus.PENDING,\n};\n\nexport const teamReducer = createReducer(\n  initialState,\n\n  //Handle loading organization teams\n  on(loadOrganizationTeams, (state) => ({\n    ...state,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    organizationTeams: teams,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    organizationTeamsError: error,\n    organizationTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading current user teams\n  on(loadMyTeams, (state) => ({\n    ...state,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    myTeams: teams,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    myTeamsError: error,\n    myTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createTeam, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createTeamSuccess, (state, team) => ({\n    ...state,\n    organizationTeams: [...(state.organizationTeams || []), team],\n    createOrganizationTeamError: null,\n    createOrganizationTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createTeamFailure, (state, { error }) => ({\n    ...state,\n    createOrganizationTeamError: error,\n    createOrganizationTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(deleteTeam, (state) => ({\n    ...state,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(deleteTeamSuccess, (state, { teamId }) => ({\n    ...state,\n    organizationTeams:\n      state.organizationTeams?.filter((team) => team.teamId !== teamId) ?? null,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(deleteTeamFailure, (state, { error }) => ({\n    ...state,\n    deleteTeamError: error,\n    deleteTeamStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/teams.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                                TeamsTableComponent\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                isLoadingOrganizationTeams\n                            \n                            \n                                myTeams\n                            \n                            \n                                organizationTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/teams.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/teams.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingOrganizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { PanelModule } from 'primeng/panel';\nimport { TeamsTableComponent } from '../../../shared/components/teams-table/teams-table.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  isLoadingMyTeams,\n  isLoadingOrganizationTeams,\n  selectMyTeams,\n  selectOrganizationTeams,\n} from '../../../core/state/team/team.selectors';\nimport {\n  loadMyTeams,\n  loadOrganizationTeams,\n} from '../../../core/state/team/team.actions';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-teams',\n  standalone: true,\n  templateUrl: './teams.component.html',\n  styleUrl: './teams.component.scss',\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TeamsTableComponent,\n    TranslateModule,\n  ],\n})\nexport class TeamsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  );\n\n  isLoadingOrganizationTeams = this.store.select(isLoadingOrganizationTeams);\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n  organizationTeams = this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store.dispatch(loadMyTeams());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n  \n    \n  \n\n  \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsTableComponent.html":{"url":"components/TeamsTableComponent.html","title":"component - TeamsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/teams-table/teams-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-teams-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTeamForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewTeamDialogVisible\n                            \n                            \n                                isLoadingCreateNewTeam\n                            \n                            \n                                isLoadingDeleteTeam\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createNewTeam\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetTeamsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableDeleteAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, teamService: TeamService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDeleteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:108\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:102\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:96\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/teams-table/teams-table.component.ts:90\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(team: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetTeamsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetTeamsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(team: Team, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                team\n                                            \n                                                            Team\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/teams-table/teams-table.component.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeamForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewTeamDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateNewTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingDeleteTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingDeleteTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/teams-table/teams-table.component.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { Team } from '../../../core/domain/models/team.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport {\n  isLoadingCreateNewTeam,\n  isLoadingDeleteTeam,\n  selectCreateNewTeamStatus,\n  selectDeleteTeamStatus,\n} from '../../../core/state/team/team.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { createTeam, deleteTeam } from '../../../core/state/team/team.actions';\nimport { TeamService } from '../../../core/services/api/team.api.service';\nimport { CalendarModule } from 'primeng/calendar';\n\n@Component({\n  selector: 'app-teams-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './teams-table.component.html',\n  styleUrl: './teams-table.component.scss',\n})\nexport class TeamsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private teamService: TeamService,\n    private confirmationService: ConfirmationService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Team[] = undefined;\n\n  @ViewChild('slug') slugInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableDeleteAction: boolean = false;\n\n  createNewTeamForm = this.formBuilder.group({\n    slug: ['', [Validators.required]],\n  });\n  isAddNewTeamDialogVisible: boolean = false;\n  isSlugTaken: boolean | null = null;\n  isLoadingCreateNewTeam = this.store.select(isLoadingCreateNewTeam);\n  isLoadingDeleteTeam = this.store.select(isLoadingDeleteTeam);\n\n  private slugCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetTeamsForm();\n    this.isAddNewTeamDialogVisible = true;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showDeleteConfirmation(team: Team, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'teams-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('teams-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(team);\n      },\n      reject: () => {},\n    });\n  }\n\n  createNewTeam() {\n    this.store\n      .select(selectCreateNewTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('teams-table.error'),\n            detail: this.translateService.instant(\n              'teams-table.failed_to_create_team',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('teams-table.success'),\n            detail: this.translateService.instant('teams-table.team_created'),\n          });\n          this.isAddNewTeamDialogVisible = !this.isAddNewTeamDialogVisible;\n        }\n      });\n\n    const dto = {\n      slug: this.createNewTeamForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createTeam(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(team: any) {\n    this.store\n      .select(selectDeleteTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('teams-table.error'),\n            detail: this.translateService.instant(\n              'teams-table.failed_to_delete_team',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('teams-table.success'),\n            detail: this.translateService.instant('teams-table.removed_team'),\n          });\n        }\n      });\n\n    this.store.dispatch(deleteTeam({ teamId: team.teamId }));\n  }\n\n  private resetTeamsForm() {\n    this.createNewTeamForm = this.formBuilder.group({\n      slug: ['', [Validators.required]],\n    });\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.teamService.isSlugTaken(slug).subscribe({\n      next: (result) => {\n        this.isSlugTaken = result;\n      },\n      error: () => {\n        this.isSlugTaken = null;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"teams-table.slug\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"teams-table.added_on\" | translate }}\n          \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          {{ \"teams-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ team?.slug }}\n      \n      \n        {{ team?.createdAt | date }}\n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"teams-table.no_teams_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"teams-table.slug_label\" | translate }}\n        \n          @if (isSlugTaken !== null && !isSlugTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"teams-table.slug_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"teams-table.slug\" | translate }}                                                          {{ \"teams-table.added_on\" | translate }}                                                                                                          {{ \"teams-table.actions\" | translate }}                                        {{ team?.slug }}                    {{ team?.createdAt | date }}                                            {{ \"teams-table.no_teams_found\" | translate }}                          {{ \"teams-table.slug_label\" | translate }}                  @if (isSlugTaken !== null && !isSlugTaken) {                      } @else {                      }                          {{ \"teams-table.slug_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                organization\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{flag: 'gb', label: \"English\", value: 'en'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/api';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { environment } from '../../../../../environments/environment';\nimport { selectCurrentOrganization } from '../../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [CommonModule, DropdownModule, AvatarModule, TranslateModule, ButtonModule, RippleModule, FormsModule],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  \n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{flag: 'gb', label: \"English\", value: 'en'}];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  organization = this.store.select(selectCurrentOrganization);\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut())\n    this.router.navigate(['/auth'])\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/settings/account'])\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName\n  }\n}\n\n    \n\n    \n        \n    \n      \n      {{getAppName()}}\n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n          \n          {{ \"Profile\" | translate }}\n        \n      \n      \n        \n        Logout\n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{getAppName()}}                                                                                                {{ selectedLanguage.label }}                                                            {{ language.label }}                                                          {{ \"Profile\" | translate }}                                    Logout              '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VitalsComponent.html":{"url":"components/VitalsComponent.html","title":"component - VitalsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VitalsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/vitals/vitals.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vitals\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./vitals.component.html\n            \n\n\n\n            \n                styleUrl\n                ./vitals.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vitals',\n  standalone: true,\n  imports: [],\n  templateUrl: './vitals.component.html',\n  styleUrl: './vitals.component.scss'\n})\nexport class VitalsComponent {\n\n}\n\n    \n\n    \n        vitals works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'vitals works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VitalsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.2.1\n        \n            @angular/common : ^17.2.1\n        \n            @angular/compiler : ^17.2.1\n        \n            @angular/core : ^17.2.1\n        \n            @angular/forms : ^17.2.1\n        \n            @angular/platform-browser : ^17.2.1\n        \n            @angular/platform-browser-dynamic : ^17.2.1\n        \n            @angular/platform-server : ^17.2.1\n        \n            @angular/router : ^17.2.1\n        \n            @angular/ssr : ^17.2.0\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            PlatformType   (src/.../platform-type.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/platform-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlatformType\n                    \n                \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : ANDROID\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : WEB\n                            \n                        \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : IOS\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : SERVER\n                            \n                        \n                        \n                            \n                                 NODE\n                            \n                        \n                        \n                            \n                                Value : NODE\n                            \n                        \n                        \n                            \n                                 REACT\n                            \n                        \n                        \n                            \n                                Value : REACT\n                            \n                        \n                        \n                            \n                                 ANGULAR\n                            \n                        \n                        \n                            \n                                Value : ANGULAR\n                            \n                        \n                        \n                            \n                                 VUE\n                            \n                        \n                        \n                            \n                                Value : VUE\n                            \n                        \n                        \n                            \n                                 SVELTE\n                            \n                        \n                        \n                            \n                                Value : SVELTE\n                            \n                        \n                        \n                            \n                                 SPRING\n                            \n                        \n                        \n                            \n                                Value : SPRING\n                            \n                        \n                        \n                            \n                                 GO\n                            \n                        \n                        \n                            \n                                Value : GO\n                            \n                        \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CPP\n                            \n                        \n                        \n                            \n                                Value : CPP\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : JS\n                            \n                        \n                        \n                            \n                                 PYTHON\n                            \n                        \n                        \n                            \n                                Value : PYTHON\n                            \n                        \n                        \n                            \n                                 RUST\n                            \n                        \n                        \n                            \n                                Value : RUST\n                            \n                        \n                        \n                            \n                                 RUBY\n                            \n                        \n                        \n                            \n                                Value : RUBY\n                            \n                        \n                        \n                            \n                                 LARAVEL\n                            \n                        \n                        \n                            \n                                Value : LARAVEL\n                            \n                        \n                        \n                            \n                                 PHP\n                            \n                        \n                        \n                            \n                                Value : PHP\n                            \n                        \n                        \n                            \n                                 EXPRESS\n                            \n                        \n                        \n                            \n                                Value : EXPRESS\n                            \n                        \n                        \n                            \n                                 NEST\n                            \n                        \n                        \n                            \n                                Value : NEST\n                            \n                        \n                        \n                            \n                                 CS\n                            \n                        \n                        \n                            \n                                Value : CS\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                Value : COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                Value : DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                Value : DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                Value : LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                Value : LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                Value : LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                Value : PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                Value : PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                Value : PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                Value : TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n                        \n                            \n                                Value : INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToDate   (src/.../date.interceptor.ts)\n                        \n                        \n                            hasPermission   (src/.../auth.selectors.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            isIso8601   (src/.../date.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/date.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(body: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isIso8601\n                        \n                    \n                \n            \n            \n                \nisIso8601(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(user: User, permissionType: ResourceType, permissionValue: Permission)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionType\n                                            \n                                                            ResourceType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionValue\n                                            \n                                                            Permission\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    47 Components\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
