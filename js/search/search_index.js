var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessDeniedComponent.html",[0,0.225,1,0.92]],["body/components/AccessDeniedComponent.html",[0,0.358,1,1.574,2,1.246,3,0.067,4,0.051,5,0.977,6,0.977,7,0.977,8,0.043,9,4.756,10,2.932,11,4.756,12,0.977,13,2.007,14,2.007,15,1.823,16,5.708,17,1.296,18,1.221,19,1.322,20,2.435,21,2.856,22,4.316,23,3.156,24,2.544,25,1.322,26,6.435,27,1.375,28,6.435,29,0.5,30,0.008,31,1.458,32,0.554,33,2.172,34,1.521,35,1.521,36,1.862,37,2.058,38,0.067,39,0.504,40,6.435,41,3.135,42,6.435,43,0.977,44,1.322,45,1.322,46,0.977,47,1.606,48,0.977,49,0.554,50,0.977,51,0.958,52,0.977,53,0.958,54,0.977,55,0.958,56,0.977,57,0.958,58,0.977,59,0.958,60,0.977,61,0.958,62,0.903,63,1.322,64,0.977,65,0.921,66,0.921,67,1.768,68,0.958,69,1.322,70,0.958,71,0.977,72,0.958,73,0.977,74,0.958,75,0.903,76,0.958,77,0.977,78,0.958,79,0.939,80,1.322,81,0.958,82,0.977,83,0.958,84,0.977,85,0.958,86,0.977,87,0.958,88,0.977,89,0.958,90,0.977,91,0.958,92,0.977,93,0.958,94,0.977,95,1.499,96,0.958,97,0.977,98,0.958,99,0.867,100,0.958,101,0.977,102,0.958,103,0.977,104,0.958,105,0.977,106,0.958,107,0.977,108,0.958,109,0.958,110,1.13,111,0.958,112,1.271,113,0.977,114,1.221,115,1.322,116,0.958,117,0.958,118,0.977,119,0.977,120,0.977,121,0.977,122,0.958,123,0.977,124,0.958,125,0.977,126,0.958,127,0.903,128,0.958,129,0.977,130,0.958,131,0.921,132,0.958,133,0.977,134,0.958,135,0.977,136,0.977,137,0.958,138,0.977,139,0.958,140,0.977,141,0.958,142,0.977,143,0.958,144,0.958,145,0.977,146,0.958,147,1.357,148,0.977,149,0.977,150,0.977,151,0.958,152,0.977,153,0.958,154,0.977,155,0.958,156,0.977,157,0.958,158,0.958,159,0.958,160,0.816,161,0.958,162,0.977,163,0.977,164,0.921,165,0.958,166,0.977,167,0.958,168,0.977,169,0.977,170,0.977,171,0.005,172,0.005]],["title/components/AlertsComponent.html",[0,0.225,51,0.92]],["body/components/AlertsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.613,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,173,5.05,174,8.007,175,6.699,176,6.699,177,2.687]],["title/components/AppComponent.html",[0,0.225,53,0.92]],["body/components/AppComponent.html",[0,0.336,1,0.846,2,1.144,3,0.059,4,0.045,5,0.863,6,0.863,7,0.863,8,0.038,12,0.863,13,1.998,14,1.998,15,0.846,17,1.19,18,1.121,19,1.214,25,1.214,27,1.263,29,0.464,30,0.008,31,1.288,32,0.489,33,1.919,34,1.344,35,1.344,38,0.059,39,0.445,41,2.37,43,0.863,44,1.214,45,1.214,46,0.863,47,1.523,48,0.863,49,0.638,50,0.863,51,0.846,52,0.863,53,1.493,54,0.863,55,0.846,56,0.863,57,0.846,58,0.863,59,0.846,60,0.863,61,0.846,62,0.797,63,1.214,64,0.863,65,0.813,66,0.813,67,1.71,68,0.846,69,1.214,70,0.846,71,0.863,72,0.846,73,0.863,74,0.846,75,0.797,76,0.846,77,0.863,78,0.846,79,0.83,80,1.214,81,0.846,82,0.863,83,0.846,84,0.863,85,0.846,86,0.863,87,0.846,88,0.863,89,0.846,90,0.863,91,0.846,92,0.863,93,0.846,94,0.863,95,1.404,96,0.846,97,0.863,98,0.846,99,0.766,100,0.846,101,0.863,102,0.846,103,0.863,104,0.846,105,0.863,106,0.846,107,0.863,108,0.846,109,0.846,110,1.058,111,0.846,112,1.167,113,0.863,114,1.121,115,1.214,116,0.846,117,0.846,118,0.863,119,0.863,120,0.863,121,0.863,122,0.846,123,0.863,124,0.846,125,0.863,126,0.846,127,0.797,128,0.846,129,0.863,130,0.846,131,0.813,132,0.846,133,0.863,134,0.846,135,0.863,136,0.863,137,0.846,138,0.863,139,0.846,140,0.863,141,0.846,142,0.863,143,0.846,144,0.846,145,0.863,146,0.846,147,1.271,148,0.863,149,0.863,150,0.863,151,0.846,152,0.863,153,0.846,154,0.863,155,0.846,156,0.863,157,0.846,158,0.846,159,0.846,160,0.721,161,0.846,162,0.863,163,0.863,164,0.813,165,0.846,166,0.863,167,0.846,168,0.863,169,0.863,170,0.863,171,0.005,172,0.005,178,4.202,179,2.016,180,2.881,181,3.892,182,2.625,183,6.061,184,5.908,185,5.908,186,0.232,187,1.45,188,4.223,189,3.126,190,2.399,191,5.24,192,7.413,193,7.413,194,1.288,195,4.202,196,3.386,197,4.741,198,6.3,199,1.632,200,4.202,201,1.214,202,0.339,203,1.167,204,4.202,205,1.842,206,2.383,207,4.202,208,5.24,209,0.932,210,4.202,211,5.24,212,4.202,213,4.202,214,2.994,215,2.839,216,3.414,217,4.202,218,4.202,219,4.202,220,4.202,221,4.202,222,4.202,223,3.727,224,3.727,225,3.727,226,2.297,227,6.061,228,5.24,229,5.553,230,3.727,231,3.727,232,4.202,233,2.994,234,3.181,235,3.727,236,3.727,237,5.173,238,2.839,239,3.727,240,3.727,241,3.727,242,5.24,243,3.727,244,3.727,245,3.727,246,3.727]],["title/interfaces/AppConfig.html",[247,0.291,248,3.458]],["body/interfaces/AppConfig.html",[3,0.034,4,0.026,8,0.022,18,1.445,29,0.292,30,0.008,32,0.285,38,0.055,39,0.913,49,0.338,171,0.003,172,0.003,182,1.087,186,0.135,190,1.526,197,4.842,202,0.503,205,1.552,209,1.226,226,0.719,233,4.691,234,4.667,238,5.64,247,0.566,248,6.529,249,0.523,250,1.987,251,3.47,252,4.667,253,3.031,254,3.723,255,6.96,256,1.964,257,3.723,258,0.62,259,4.961,260,5.997,261,5.997,262,6.146,263,6.093,264,6.319,265,2.797,266,6.783,267,6.177,268,4.262,269,5.707,270,5.194,271,5.646,272,5.763,273,4.043,274,5.124,275,5.443,276,4.858,277,3.996,278,3.323,279,5.796,280,3.723,281,5.96,282,6.005,283,4.262,284,4.262,285,5.01,286,4.262,287,4.262,288,2.204,289,5.443,290,3.996,291,2.972,292,5.236,293,4.8,294,5.236,295,5.888,296,3.19,297,3.19,298,3.167,299,2.652,300,2.939,301,2.972,302,5.287,303,2.972,304,3.19,305,4.012,306,4.883,307,3.19,308,3.19,309,4.262,310,2.972,311,3.257,312,2.797,313,2.844,314,2.972,315,2.528,316,1.574,317,1.454,318,3.723,319,5.236,320,4.778,321,5.62,322,3.19,323,0.873,324,6.146,325,1.454,326,3.323,327,2.652,328,1.575,329,5.997,330,3.19,331,4.141,332,1.987,333,5.62,334,5.62,335,5.62,336,5.843,337,5.348,338,5.348,339,4.667,340,5.62,341,1.987,342,1.987,343,1.851,344,1.652,345,4.983,346,1.851,347,5.348,348,5.843,349,3.996,350,4.587,351,1.987,352,2.652,353,4.575,354,3.996,355,1.851,356,4.667,357,5.013,358,3.505,359,3.19,360,2.797,361,1.466,362,1.987,363,1.987,364,3.19,365,1.575,366,3.19,367,4.393,368,2.797,369,1.987,370,1.148,371,1.058,372,1.851,373,1.987,374,1.507,375,2.797,376,1.851,377,3.19,378,3.723,379,1.851,380,5.843,381,2.776,382,4.262,383,3.626,384,2.972,385,4.262,386,3.19,387,4.262,388,3.47,389,2.722,390,2.528,391,3.091,392,2.972,393,2.652,394,3.723,395,5.843,396,1.987,397,1.742,398,0.853,399,0.853,400,0.853,401,0.892,402,0.872,403,0.935,404,2.652,405,2.652,406,2.972,407,3.19,408,2.797,409,4.012,410,3.19,411,2.972,412,1.987,413,1.987,414,3.19,415,1.987,416,3.996,417,3.996,418,3.19,419,3.19,420,3.996,421,1.987,422,3.996,423,1.652,424,1.987,425,3.996,426,3.19,427,3.19,428,1.987,429,1.987,430,1.762,431,1.987,432,2.972,433,3.19,434,3.19,435,3.996,436,3.19,437,3.723,438,3.996,439,3.19,440,1.987,441,1.742,442,1.987,443,1.987,444,3.19,445,1.987,446,1.742,447,1.987,448,1.987,449,1.987,450,1.987,451,3.996,452,1.987,453,0.705,454,1.987,455,1.987,456,1.987,457,1.987,458,1.987,459,1.987]],["title/interfaces/AppState.html",[247,0.291,460,1.667]],["body/interfaces/AppState.html",[3,0.078,4,0.059,8,0.05,29,0.566,30,0.008,38,0.11,147,1.542,171,0.006,172,0.006,186,0.305,202,0.523,226,2.089,247,0.351,249,1.18,258,0.578,460,2.592,461,5.522,462,7.423,463,7.423,464,7.423,465,7.423,466,7.423,467,7.423,468,9.135,469,7.423,470,7.423,471,5.771,472,5.522,473,6.3,474,5.522,475,5.771,476,5.522,477,6.3,478,5.522,479,5.771,480,5.522,481,6.3,482,5.522,483,5.771,484,5.522,485,6.3,486,5.522,487,5.771,488,5.522,489,6.3,490,5.522,491,5.771,492,5.522,493,6.3,494,5.522,495,6.3,496,5.522,497,5.771,498,5.522,499,5.771,500,5.377,501,5.522,502,6.3,503,5.522,504,7.102,505,5.061,506,5.522,507,5.771,508,5.522,509,5.522,510,5.522]],["title/components/AuthComponent.html",[0,0.225,55,0.92]],["body/components/AuthComponent.html",[0,0.369,1,1.013,2,1.294,3,0.071,4,0.054,5,1.033,6,1.033,7,1.033,8,0.045,12,1.033,13,2.011,14,2.011,15,1.013,17,1.346,18,1.268,19,1.373,25,1.373,27,1.428,29,0.397,30,0.007,32,0.586,33,2.297,38,0.071,39,0.532,43,1.033,44,1.373,45,1.373,46,1.033,47,1.642,48,1.033,49,0.575,50,1.033,51,1.013,52,1.033,53,1.013,54,1.033,55,1.61,56,1.033,57,1.013,58,1.033,59,1.013,60,1.033,61,1.013,62,0.955,63,1.373,64,1.033,65,0.974,66,0.974,67,1.793,68,1.013,69,1.373,70,1.013,71,1.033,72,1.013,73,1.033,74,1.013,75,0.955,76,1.013,77,1.033,78,1.013,79,0.993,80,1.373,81,1.013,82,1.033,83,1.013,84,1.033,85,1.013,86,1.033,87,1.013,88,1.033,89,1.013,90,1.033,91,1.013,92,1.033,93,1.013,94,1.033,95,1.541,96,1.013,97,1.033,98,1.013,99,0.917,100,1.013,101,1.033,102,1.013,103,1.033,104,1.013,105,1.033,106,1.013,107,1.033,108,1.013,109,1.013,110,1.162,111,1.013,112,1.319,113,1.033,114,1.268,115,1.373,116,1.013,117,1.013,118,1.033,119,1.033,120,1.033,121,1.033,122,1.013,123,1.033,124,1.013,125,1.033,126,1.013,127,0.955,128,1.013,129,1.033,130,1.013,131,0.974,132,1.013,133,1.033,134,1.013,135,1.033,136,1.033,137,1.013,138,1.033,139,1.013,140,1.033,141,1.013,142,1.033,143,1.013,144,1.013,145,1.033,146,1.013,147,1.396,148,1.033,149,1.033,150,1.033,151,1.013,152,1.033,153,1.013,154,1.033,155,1.013,156,1.033,157,1.013,158,1.013,159,1.013,160,0.863,161,1.013,162,1.033,163,1.033,164,0.974,165,1.013,166,1.033,167,1.013,168,1.033,169,1.033,170,1.033,171,0.005,172,0.005,183,6.655,511,5.029,512,5.926,513,6.681,514,6.681]],["title/injectables/AuthEffects.html",[323,1.016,471,3.712]],["body/injectables/AuthEffects.html",[3,0.055,4,0.042,8,0.035,29,0.484,30,0.008,32,0.455,38,0.055,39,0.414,49,0.337,171,0.005,172,0.005,186,0.216,190,1.946,194,1.224,199,1.757,201,0.803,202,0.224,203,0.772,258,0.457,311,2.308,316,2.2,317,2.032,323,1.248,325,0.922,328,2.518,430,2.698,471,4.562,515,1.46,516,3.91,517,5.433,518,7.018,519,5.989,520,6.366,521,5.433,522,4.424,523,5.832,524,7.018,525,5.433,526,5.832,527,3.91,528,5.096,529,6.623,530,5.808,531,4.479,532,3.91,533,5.484,534,5.465,535,5.614,536,6.385,537,5.614,538,5.614,539,3.099,540,4.348,541,5.614,542,4.067,543,5.614,544,5.302,545,5.614,546,2.805,547,3.91,548,5.614,549,7.177,550,3.91,551,5.614,552,4.001,553,7.177,554,7.177,555,2.637,556,5.614,557,5.614,558,5.614,559,5.614,560,7.177,561,3.91,562,5.614,563,4.498,564,7.177,565,7.177,566,7.177,567,3.91,568,5.614,569,5.614,570,5.825,571,5.614,572,3.91,573,5.614,574,5.614,575,3.91,576,5.614,577,5.614,578,5.614,579,3.91,580,5.614,581,3.91,582,5.614,583,5.614,584,5.825,585,5.614,586,3.91,587,5.614,588,6.567,589,5.614,590,4.979,591,3.91,592,2.314,593,2.227,594,2.314,595,3.91,596,3.91,597,3.468,598,3.468,599,3.468,600,3.468,601,3.468,602,3.468,603,3.468,604,3.468,605,3.468]],["title/injectables/AuthService.html",[323,1.016,528,2.942]],["body/injectables/AuthService.html",[3,0.074,4,0.056,8,0.047,29,0.538,30,0.008,32,0.613,38,0.074,39,0.558,49,0.76,79,1.04,131,1.02,171,0.006,172,0.006,182,2.341,186,0.291,187,1.69,194,1.148,199,1.804,201,1.814,202,0.506,203,1.743,205,2.082,209,1.234,226,1.549,323,1.531,325,1.242,370,2.474,371,2.279,381,2.221,391,4.411,430,2.764,515,1.967,519,5.81,521,5.214,525,5.214,528,4.436,540,4.642,542,3.945,606,5.267,607,4.909,608,6.559,609,5.81,610,3.117,611,4.637,612,5.267,613,3.785,614,6.888,615,6.162,616,5.267,617,6.888,618,6.888,619,5.267,620,4.909,621,5.267,622,5.267,623,6.888,624,5.267,625,6.888,626,5.5,627,5.267,628,4.473,629,6.888,630,6.614,631,5.267,632,5.267,633,3.117,634,3.924,635,4.28,636,5.267,637,4.672,638,4.731,639,3.559,640,4.28,641,4.672,642,5.267,643,6.864,644,8.447,645,7.686,646,6.888,647,3.117,648,4.654,649,5.267,650,5.267]],["title/interfaces/AuthState.html",[247,0.291,462,3.712]],["body/interfaces/AuthState.html",[3,0.056,4,0.043,8,0.036,29,0.474,30,0.008,38,0.094,79,1.316,131,1.291,171,0.005,172,0.005,186,0.222,202,0.503,226,1.683,247,0.255,249,0.858,256,1.401,258,0.466,273,3.858,300,2.178,306,3.527,331,4.639,361,3.491,381,2.811,398,1.401,399,1.401,402,1.433,403,1.535,453,2.786,462,5.417,473,3.562,517,3.04,518,3.562,519,4.332,520,3.562,521,3.04,522,2.475,523,3.263,524,3.562,525,3.04,526,4.65,542,4.104,546,2.927,570,3.562,584,3.562,597,3.562,598,3.562,599,3.562,600,3.562,601,3.562,602,3.562,603,3.562,604,3.562,609,5.046,615,5.5,637,3.562,638,2.475,651,4.016,652,8.214,653,8.545,654,8.214,655,7.679,656,8.214,657,8.214,658,4.68,659,6.929,660,7.679,661,3.412,662,3.527,663,1.257,664,2.475,665,1.942,666,4.016,667,2.713,668,4.016,669,4.016,670,4.109,671,2.475,672,5.729,673,2.475,674,4.016,675,4.92,676,3.562,677,4.016,678,5.075,679,3.86,680,4.016,681,3.86,682,4.92,683,4.016,684,4.06,685,3.685,686,4.016,687,4.016,688,4.016,689,4.016,690,4.016,691,4.016,692,4.016,693,4.016,694,4.016,695,4.016,696,4.016,697,4.016,698,4.016,699,4.016,700,4.109,701,4.504,702,4.016,703,4.016,704,4.016]],["title/interfaces/AuthenticateRequestDto.html",[247,0.291,615,3.458]],["body/interfaces/AuthenticateRequestDto.html",[3,0.101,4,0.077,8,0.065,30,0.008,38,0.101,171,0.007,172,0.007,186,0.398,202,0.479,209,1.276,247,0.459,249,1.542,258,0.681,540,4.993,542,4.671,615,6.331,705,7.213,706,4.446]],["title/components/CloseComponent.html",[0,0.225,57,0.92]],["body/components/CloseComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.613,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,355,6.061,707,5.05,708,6.699,709,6.699]],["title/components/ConfigComponent.html",[0,0.225,59,0.92]],["body/components/ConfigComponent.html",[0,0.324,1,0.44,2,0.693,3,0.031,4,0.023,5,0.935,6,0.449,7,0.449,8,0.041,12,0.449,13,1.93,14,1.93,15,0.44,17,0.721,18,0.68,19,0.736,20,1.52,21,1.782,23,1.97,24,1.588,25,0.736,27,0.765,29,0.446,30,0.008,31,0.669,32,0.254,34,0.698,35,0.698,36,0.855,37,0.945,38,0.031,39,0.755,41,3.265,43,0.449,44,1.283,45,1.283,46,0.449,47,1.082,48,0.449,49,0.632,50,0.449,51,0.44,52,0.449,53,0.44,54,0.449,55,0.44,56,0.449,57,0.44,58,0.449,59,1.258,60,0.449,61,0.44,62,0.414,63,0.736,64,0.449,65,0.423,66,0.423,67,1.355,68,0.44,69,0.736,70,0.44,71,0.449,72,0.44,73,0.449,74,0.44,75,0.414,76,0.44,77,0.449,78,0.44,79,0.431,80,0.736,81,0.44,82,0.449,83,0.44,84,0.449,85,0.44,86,0.449,87,0.44,88,0.449,89,0.44,90,0.449,91,0.44,92,0.449,93,0.44,94,0.449,95,0.935,96,0.44,97,0.449,98,0.44,99,0.398,100,0.44,101,0.449,102,0.44,103,0.449,104,0.44,105,0.449,106,0.44,107,0.449,108,0.44,109,0.44,110,0.705,111,0.44,112,0.707,113,0.449,114,0.68,115,0.736,116,0.44,117,0.44,118,0.449,119,0.449,120,0.449,121,0.449,122,0.44,123,0.449,124,0.44,125,0.449,126,0.44,127,0.414,128,0.44,129,0.449,130,0.44,131,0.423,132,0.44,133,0.449,134,0.44,135,0.449,136,0.449,137,0.44,138,0.449,139,0.44,140,0.449,141,0.44,142,0.449,143,0.44,144,0.44,145,0.449,146,0.44,147,0.847,148,0.449,149,0.449,150,0.449,151,0.44,152,0.449,153,0.44,154,0.449,155,0.44,156,0.449,157,0.44,158,0.44,159,0.44,160,0.375,161,0.44,162,0.449,163,0.449,164,0.423,165,0.44,166,0.449,167,0.44,168,0.449,169,0.449,170,0.449,171,0.003,172,0.003,186,0.121,187,1.69,190,0.592,191,3.177,194,1.148,197,4.637,198,5.914,199,1.714,201,1.508,202,0.455,203,1.36,205,1.773,206,2.211,208,3.177,209,1.193,211,5.157,214,1.556,215,1.475,216,1.774,223,1.937,224,3.177,225,1.937,226,1.71,227,4.038,228,3.177,229,4.724,230,1.937,231,1.937,235,1.937,236,1.937,237,3.446,238,6.05,239,1.937,240,1.937,241,1.937,242,3.177,243,1.937,244,1.937,245,1.937,246,1.937,251,3.246,256,1.588,258,0.292,259,3.246,260,3.446,261,4.994,262,3.244,263,3.446,264,5.914,267,4.729,269,4.436,270,4.916,274,2.552,276,2.42,279,4.73,281,3.559,283,3.987,284,4.401,285,3.392,288,2.445,289,2.711,293,4.519,298,2.306,300,2.592,305,5.082,306,3.583,310,2.711,311,2.568,312,5.23,313,2.568,314,2.711,315,3.392,316,1.595,317,1.81,318,3.987,319,3.987,350,4.642,357,2.42,358,3.244,361,1.967,365,4.023,381,3.391,383,2.932,388,4.634,393,5.08,398,0.762,399,0.762,400,0.762,401,0.797,405,2.42,423,2.42,430,1.82,531,2.502,710,2.184,711,5.076,712,5.23,713,6.246,714,5.076,715,4.552,716,4.552,717,4.552,718,2.079,719,3.581,720,3.581,721,4.023,722,6.44,723,5.157,724,5.266,725,3.581,726,6.246,727,6.246,728,5.266,729,1.784,730,7.131,731,2.42,732,1.653,733,3.581,734,3.177,735,2.91,736,4.451,737,4.671,738,3.987,739,4.671,740,5.266,741,5.266,742,5.266,743,3.987,744,5.266,745,4.28,746,4.28,747,4.671,748,5.266,749,5.266,750,5.541,751,3.753,752,4.671,753,5.266,754,5.266,755,3.699,756,3.699,757,2.184,758,3.177,759,3.177,760,3.177,761,3.581,762,3.177,763,3.177,764,3.177,765,3.581,766,2.91,767,3.177,768,2.91,769,2.184,770,6.246,771,3.177,772,3.581,773,2.184,774,3.177,775,3.581,776,6.325,777,5.814,778,4.221,779,5.266,780,2.184,781,3.581,782,4.671,783,2.184,784,3.581,785,2.119,786,2.184,787,3.581,788,2.306,789,6.597,790,2.184,791,3.581,792,3.581,793,3.177,794,3.177,795,5.266,796,1.841,797,6.597,798,4.038,799,4.552,800,3.446,801,4.038,802,2.711,803,3.581,804,3.581,805,2.184,806,2.184,807,5.266,808,4.671,809,4.671,810,4.671,811,2.91,812,3.581,813,3.177,814,3.581,815,2.184,816,2.184,817,2.184,818,2.184,819,7.339,820,2.184,821,2.184,822,2.184,823,2.184,824,2.184,825,2.184,826,2.184,827,2.184,828,2.184,829,2.184,830,2.184,831,2.184,832,2.184,833,2.184,834,2.184,835,2.184,836,2.184,837,2.184,838,2.184,839,1.937,840,0.97,841,4.023,842,3.581,843,2.184,844,2.184,845,5.266,846,3.177,847,2.184,848,3.177,849,2.184,850,3.177,851,2.184,852,2.184,853,2.184,854,3.177,855,2.184,856,2.184,857,2.184,858,2.184,859,4.552,860,3.581,861,3.581,862,3.581,863,3.581,864,3.581,865,3.581,866,3.581,867,3.581,868,3.581,869,3.581,870,4.671,871,6.887,872,3.581,873,3.581,874,3.581,875,5.266,876,3.581,877,3.581]],["title/components/CreateOrganizationComponent.html",[0,0.225,61,0.92]],["body/components/CreateOrganizationComponent.html",[0,0.272,1,0.589,2,0.875,3,0.041,4,0.031,5,0.601,6,0.601,7,0.601,8,0.026,12,0.601,13,1.965,14,1.965,15,0.589,17,0.911,18,0.858,19,0.929,20,1.845,21,2.163,23,2.391,24,1.928,25,0.929,27,0.966,29,0.518,30,0.008,31,0.897,32,0.341,33,1.336,34,0.935,35,0.935,36,1.145,37,1.266,38,0.041,39,0.31,41,3.325,43,0.601,44,0.929,45,0.929,46,0.601,47,1.277,48,0.601,49,0.676,50,0.601,51,0.589,52,0.601,53,0.589,54,0.601,55,0.589,56,0.601,57,0.589,58,0.601,59,0.589,60,0.601,61,1.252,62,1.686,63,0.929,64,0.601,65,0.566,66,0.566,67,1.522,68,0.589,69,0.929,70,0.589,71,0.601,72,0.589,73,0.601,74,0.589,75,0.555,76,0.589,77,0.601,78,0.589,79,0.578,80,0.929,81,0.589,82,0.601,83,0.589,84,0.601,85,0.589,86,0.601,87,0.589,88,0.601,89,0.589,90,0.601,91,0.589,92,0.601,93,0.589,94,0.601,95,1.135,96,0.589,97,0.601,98,0.589,99,0.533,100,0.589,101,0.601,102,0.589,103,0.601,104,0.589,105,0.601,106,0.589,107,0.601,108,0.589,109,0.589,110,0.856,111,0.589,112,0.893,113,0.601,114,0.858,115,0.929,116,0.589,117,0.589,118,0.601,119,0.601,120,0.601,121,0.601,122,0.589,123,0.601,124,0.589,125,0.601,126,0.589,127,0.555,128,0.589,129,0.601,130,0.589,131,0.566,132,0.589,133,0.601,134,0.589,135,0.601,136,0.601,137,0.589,138,0.601,139,0.589,140,0.601,141,0.589,142,0.601,143,0.589,144,0.589,145,0.601,146,0.589,147,1.028,148,0.601,149,0.601,150,0.601,151,0.589,152,0.601,153,0.589,154,0.601,155,0.589,156,0.601,157,0.589,158,0.589,159,0.589,160,0.502,161,0.589,162,0.601,163,0.601,164,0.566,165,0.589,166,0.601,167,0.589,168,0.601,169,0.601,170,0.601,171,0.004,172,0.004,179,1.543,180,2.33,181,3.148,186,0.162,187,1.109,188,3.541,189,2.622,190,2.42,194,0.985,196,3.383,199,1.742,201,1.277,202,0.46,203,1.584,205,1.747,206,2.179,209,1.113,226,1.625,256,1.577,258,0.368,288,1.77,300,1.477,316,1.411,317,1.303,325,0.69,389,1.414,398,1.577,399,1.577,400,1.928,401,1.65,402,1.613,403,1.728,430,0.916,453,2.263,460,1.067,539,1.067,546,1.73,555,2.123,628,1.607,638,1.803,663,0.916,718,2.524,840,1.3,878,8.717,879,8.717,880,2.925,881,2.841,882,2.123,883,3.913,884,3.006,885,2.753,886,2.753,887,2.753,888,4.01,889,4.01,890,5.526,891,3.734,892,3.27,893,5.279,894,4.902,895,5.526,896,4.49,897,4.49,898,4.521,899,3.674,900,5.088,901,3.196,902,3.423,903,2.595,904,5.063,905,2.703,906,4.071,907,3.808,908,4.521,909,4.521,910,2.925,911,2.925,912,3.674,913,2.925,914,3.773,915,2.925,916,2.925,917,2.925,918,2.925,919,3.423,920,2.925,921,2.484,922,3.416,923,2.925,924,3.808,925,2.925,926,4.521,927,2.925,928,2.925,929,3.829,930,2.253,931,4.01,932,2.925,933,2.925,934,3.674,935,2.925,936,1.458,937,1.607,938,1.3,939,1.458,940,1.458,941,1.803,942,3.406,943,1.803,944,3.423,945,2.595,946,2.595,947,1.118,948,2.214,949,2.377,950,2.925,951,2.377,952,2.595,953,2.214,954,2.377,955,2.787,956,1.813,957,2.324,958,2.401,959,2.787,960,2.787,961,2.377,962,2.595,963,2.925,964,2.595,965,2.925,966,1.77,967,2.925,968,2.925,969,1.977,970,3.055,971,1.977,972,2.595,973,1.884,974,4.183,975,1.374,976,2.377,977,2.595,978,1.504,979,1.504,980,1.504,981,2.925,982,2.925,983,1.458,984,1.458,985,2.925,986,3.674,987,2.925,988,2.925,989,2.925,990,2.925,991,3.302,992,2.214,993,2.925,994,2.925,995,2.925,996,2.377,997,2.595,998,2.214,999,3.674,1000,4.521,1001,4.521,1002,4.521,1003,4.521,1004,4.521,1005,4.521]],["title/interfaces/CreateOrganizationRequestDto.html",[247,0.291,944,3.458]],["body/interfaces/CreateOrganizationRequestDto.html",[3,0.101,4,0.077,8,0.065,30,0.008,38,0.101,49,0.782,171,0.007,172,0.007,186,0.398,202,0.479,209,1.275,247,0.458,249,1.539,258,0.68,706,4.44,884,3.483,914,4.824,944,6.325,1006,5.133]],["title/interfaces/CreateProjectDebugFileDto.html",[247,0.291,1007,4.052]],["body/interfaces/CreateProjectDebugFileDto.html",[3,0.1,4,0.076,8,0.086,29,0.423,30,0.008,38,0.1,65,1.378,110,1.103,171,0.007,172,0.007,186,0.393,202,0.535,247,0.453,249,1.521,258,0.676,1006,5.073,1007,7.361,1008,6.315,1009,6.85,1010,6.315,1011,3.344]],["title/interfaces/CreateProjectReleaseDto.html",[247,0.291,1012,3.712]],["body/interfaces/CreateProjectReleaseDto.html",[3,0.103,4,0.078,8,0.066,30,0.007,38,0.103,110,1.131,171,0.007,172,0.007,186,0.403,202,0.418,209,1.21,247,0.464,249,1.56,258,0.685,1006,5.202,1012,6.842,1013,6.474,1014,5.397]],["title/interfaces/CreateProjectRequestDto.html",[247,0.291,1015,4.052]],["body/interfaces/CreateProjectRequestDto.html",[3,0.101,4,0.077,8,0.065,30,0.008,38,0.101,49,0.782,110,1.116,171,0.007,172,0.007,186,0.398,202,0.479,209,1.275,247,0.458,249,1.539,258,0.68,706,4.44,1006,5.133,1015,7.412,1016,6.137]],["title/interfaces/CreateTeamRequestDto.html",[247,0.291,1017,3.712]],["body/interfaces/CreateTeamRequestDto.html",[3,0.103,4,0.078,8,0.066,30,0.007,38,0.103,160,1.253,171,0.007,172,0.007,186,0.403,202,0.418,209,1.21,247,0.464,249,1.56,258,0.685,706,4.499,914,4.844,1006,5.202,1017,6.842]],["title/components/DetailsComponent.html",[0,0.225,68,0.92]],["body/components/DetailsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.613,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,1018,5.05,1019,5.706,1020,5.943,1021,5.943]],["title/components/DevicesComponent.html",[0,0.225,70,0.92]],["body/components/DevicesComponent.html",[0,0.24,1,0.488,2,0.755,3,0.034,4,0.026,5,0.498,6,0.498,7,0.498,8,0.022,12,0.498,13,1.943,14,1.943,15,0.488,17,0.785,18,1.165,19,0.801,20,1.632,21,1.914,23,2.116,24,1.706,25,0.801,27,0.833,29,0.518,30,0.008,31,0.743,32,0.282,34,0.775,35,0.775,36,0.949,37,1.049,38,0.034,39,0.257,41,3.454,43,0.498,44,0.801,45,0.801,46,0.498,47,1.151,48,0.498,49,0.528,50,0.498,51,0.488,52,0.498,53,0.488,54,0.498,55,0.488,56,0.498,57,0.488,58,0.498,59,0.488,60,0.498,61,0.488,62,0.46,63,0.801,64,0.498,65,0.469,66,0.469,67,1.416,68,0.488,69,0.801,70,1.128,71,0.498,72,0.488,73,0.498,74,0.488,75,1.404,76,0.488,77,0.498,78,0.488,79,0.479,80,0.801,81,0.488,82,0.498,83,0.488,84,0.498,85,0.488,86,0.498,87,0.488,88,0.498,89,0.488,90,0.498,91,0.488,92,0.498,93,0.488,94,0.498,95,1.005,96,0.488,97,0.498,98,0.488,99,0.442,100,0.488,101,0.498,102,0.488,103,0.498,104,0.488,105,0.498,106,0.488,107,0.498,108,0.488,109,0.488,110,1.11,111,0.488,112,0.77,113,0.498,114,1.404,115,0.801,116,0.488,117,0.488,118,0.498,119,1.151,120,0.498,121,0.498,122,0.488,123,0.498,124,0.488,125,0.498,126,0.488,127,1.36,128,0.488,129,0.498,130,0.488,131,0.469,132,0.488,133,0.498,134,0.488,135,0.498,136,0.498,137,0.488,138,0.498,139,0.488,140,0.498,141,0.488,142,0.498,143,0.488,144,0.488,145,0.498,146,0.488,147,0.91,148,0.498,149,0.498,150,0.498,151,0.488,152,0.498,153,0.488,154,0.498,155,0.488,156,0.498,157,0.488,158,0.488,159,0.488,160,0.416,161,0.488,162,0.498,163,0.498,164,0.469,165,0.488,166,0.498,167,0.488,168,0.498,169,0.498,170,0.498,171,0.003,172,0.003,179,1.33,180,2.062,186,0.134,187,0.957,189,2.362,190,2.104,194,0.85,199,1.774,201,1.005,202,0.472,203,1.628,205,1.691,206,2.233,209,1.24,226,1.805,237,4.241,258,0.317,306,4.418,311,1.603,313,2.947,316,1.889,317,1.83,325,0.572,381,2.765,391,2.883,430,1.221,453,0.699,460,0.885,539,0.885,663,0.759,718,2.233,785,1.435,840,1.077,881,2.514,886,2.437,887,2.437,901,2.88,905,2.393,924,2.514,939,1.208,947,0.927,956,1.961,966,1.526,975,2.631,1022,2.424,1023,3.458,1024,3.149,1025,3.702,1026,3.974,1027,3.899,1028,3.899,1029,4.337,1030,4.337,1031,2.687,1032,4.337,1033,3.702,1034,4.337,1035,4.337,1036,4.337,1037,5.218,1038,4.337,1039,3.702,1040,4.337,1041,4.969,1042,3.458,1043,3.458,1044,5.602,1045,4.969,1046,5.602,1047,1.139,1048,5.601,1049,2.424,1050,2.424,1051,3.458,1052,4.969,1053,2.424,1054,2.424,1055,2.424,1056,3.458,1057,2.424,1058,2.424,1059,2.424,1060,2.424,1061,2.424,1062,3.014,1063,3.485,1064,2.424,1065,2.424,1066,2.424,1067,2.424,1068,3.168,1069,2.424,1070,3.168,1071,2.511,1072,2.424,1073,2.424,1074,4.969,1075,4.969,1076,4.969,1077,4.969,1078,3.608,1079,4.969,1080,4.969,1081,5.602,1082,5.602,1083,5.602,1084,5.602,1085,5.445,1086,4.552,1087,4.552,1088,2.875,1089,4.969,1090,4.969,1091,2.88,1092,3.079,1093,2.424,1094,3.899,1095,3.899,1096,3.899,1097,3.899,1098,3.899,1099,3.899,1100,3.899,1101,3.899,1102,3.899,1103,3.899,1104,3.899,1105,3.899,1106,3.899,1107,3.899,1108,3.899,1109,3.899,1110,3.899,1111,3.899,1112,2.424,1113,4.375,1114,2.424,1115,2.424,1116,2.424,1117,2.424,1118,2.424,1119,2.151,1120,1.97,1121,1.435,1122,1.728,1123,1.638,1124,1.97,1125,1.97,1126,1.638,1127,1.835,1128,2.151,1129,2.151,1130,1.435,1131,2.151,1132,2.151,1133,2.424,1134,2.151,1135,1.562,1136,1.835,1137,1.97,1138,2.151,1139,2.151,1140,2.151,1141,1.97,1142,2.151,1143,2.151,1144,3.899,1145,3.899,1146,3.899,1147,3.899,1148,3.899,1149,3.899,1150,2.151,1151,4.337,1152,2.696,1153,3.458,1154,3.458,1155,3.899,1156,2.952,1157,1.97,1158,2.952,1159,3.168,1160,3.458,1161,3.458,1162,4.337,1163,3.458,1164,4.337,1165,5.445,1166,2.151,1167,2.151,1168,2.424,1169,4.337,1170,2.151,1171,4.969,1172,2.151,1173,3.458,1174,4.969,1175,2.151,1176,2.151,1177,4.969,1178,4.337,1179,3.458,1180,3.458,1181,2.151,1182,2.151,1183,2.424,1184,3.899,1185,3.899,1186,3.899,1187,3.899,1188,3.899,1189,3.899,1190,3.899,1191,3.899,1192,3.899,1193,3.899,1194,3.899,1195,3.899,1196,3.899,1197,3.899,1198,3.899,1199,3.899,1200,3.899,1201,3.899,1202,2.952,1203,2.778,1204,3.168,1205,3.168,1206,2.952,1207,3.899]],["title/components/DocumentationComponent.html",[0,0.225,72,0.92]],["body/components/DocumentationComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.613,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,1208,5.05,1209,8.007,1210,6.699,1211,6.699]],["title/components/EnvironmentsTableComponent.html",[0,0.225,74,0.92]],["body/components/EnvironmentsTableComponent.html",[0,0.236,1,1.113,2,0.74,3,0.068,4,0.025,5,0.486,6,0.486,7,0.486,8,0.021,10,1.459,12,0.486,13,1.94,14,1.94,15,0.77,17,0.77,18,1.462,19,0.786,20,1.606,21,1.884,23,2.082,24,1.678,25,0.786,27,0.817,29,0.519,30,0.008,31,0.726,32,0.276,34,0.757,35,0.757,36,0.927,37,1.024,38,0.033,39,0.251,41,3.022,43,0.486,44,0.786,45,0.786,46,0.486,47,1.135,48,0.486,49,0.588,50,0.486,51,0.477,52,0.486,53,0.477,54,0.486,55,0.477,56,0.486,57,0.477,58,0.486,59,0.477,60,0.486,61,0.477,62,0.449,63,0.786,64,0.486,65,0.458,66,0.458,67,1.402,68,0.477,69,0.786,70,0.477,71,0.486,72,0.477,73,0.486,74,1.113,75,1.741,76,0.477,77,0.486,78,0.477,79,0.467,80,0.786,81,0.477,82,0.486,83,0.477,84,0.486,85,0.477,86,0.486,87,0.477,88,0.486,89,0.477,90,0.486,91,0.477,92,0.486,93,0.477,94,0.486,95,0.989,96,0.477,97,0.486,98,0.477,99,0.432,100,0.477,101,0.486,102,0.477,103,0.486,104,0.477,105,0.486,106,0.477,107,0.486,108,0.477,109,0.477,110,1.137,111,0.477,112,0.755,113,0.486,114,0.726,115,0.786,116,0.477,117,0.477,118,0.486,119,0.486,120,0.486,121,0.486,122,0.477,123,0.486,124,0.477,125,0.486,126,0.477,127,0.449,128,0.477,129,0.486,130,0.477,131,0.458,132,0.477,133,0.486,134,0.477,135,0.486,136,0.486,137,0.477,138,0.486,139,0.477,140,0.486,141,0.477,142,0.486,143,0.477,144,0.477,145,0.486,146,0.477,147,0.895,148,0.486,149,0.486,150,0.486,151,0.477,152,0.486,153,0.477,154,0.486,155,0.477,156,0.486,157,0.477,158,0.477,159,0.477,160,0.406,161,0.477,162,0.486,163,0.486,164,0.458,165,0.477,166,0.486,167,0.477,168,0.486,169,0.486,170,0.486,171,0.003,172,0.003,179,1.305,180,2.029,186,0.131,187,0.938,189,2.33,190,2.089,194,0.834,196,3.117,199,1.784,201,1.246,202,0.48,203,1.198,205,1.676,206,2.158,209,1.05,226,0.696,256,1.334,258,0.311,288,2.872,300,2.708,311,3.098,316,2.093,317,1.974,325,0.558,398,1.334,399,1.334,400,1.334,401,1.396,402,1.364,460,0.864,505,2.725,539,1.756,546,1.197,555,2.595,658,4.034,661,1.112,663,0.741,665,1.145,679,1.849,681,2.671,684,2.671,700,2.357,718,2.197,729,1.906,788,4.575,796,1.966,840,1.052,882,1.796,883,3.656,885,2.397,886,2.397,887,2.397,905,2.367,906,3.751,921,2.644,922,2.644,930,1.179,936,1.179,937,1.301,938,1.052,939,1.179,940,1.179,947,0.905,956,3.247,957,1.966,958,1.257,966,2.163,978,2.84,979,2.84,980,2.84,983,2.753,984,3.754,1011,1.112,1024,3.099,1038,4.268,1047,1.112,1078,4.396,1121,1.401,1135,1.525,1151,2.1,1152,1.572,1212,8.893,1213,8.893,1214,1.687,1215,4.958,1216,4.321,1217,3.251,1218,2.966,1219,2.725,1220,2.725,1221,3.429,1222,4.811,1223,3.906,1224,3.91,1225,3.91,1226,4.811,1227,4.811,1228,2.725,1229,5.525,1230,3.824,1231,5.525,1232,4.182,1233,3.108,1234,3.108,1235,3.642,1236,3.91,1237,3.429,1238,3.429,1239,3.429,1240,3.642,1241,3.429,1242,2.1,1243,1.792,1244,1.792,1245,1.924,1246,2.1,1247,2.1,1248,1.687,1249,1.924,1250,2.1,1251,2.725,1252,3.937,1253,2.367,1254,2.367,1255,2.1,1256,3.824,1257,2.367,1258,2.367,1259,2.367,1260,3.824,1261,1.924,1262,3.108,1263,2.367,1264,2.725,1265,2.1,1266,3.824,1267,3.824,1268,1.924,1269,2.1,1270,3.405,1271,2.895,1272,2.463,1273,2.1,1274,1.924,1275,3.824,1276,2.367,1277,3.824,1278,2.367,1279,4.811,1280,1.924,1281,1.348,1282,1.924,1283,1.599,1284,1.459,1285,1.525,1286,2.367,1287,2.367,1288,2.367,1289,2.367,1290,2.367,1291,2.895,1292,1.924,1293,2.555,1294,1.301,1295,1.179,1296,1.459,1297,1.459,1298,1.145,1299,1.217,1300,1.459,1301,3.392,1302,3.392,1303,3.392,1304,1.599,1305,1.525,1306,2.847,1307,2.966,1308,3.642,1309,1.687,1310,2.895,1311,2.895,1312,2.725,1313,2.584,1314,2.725,1315,2.725,1316,2.895,1317,2.725,1318,2.895,1319,2.357,1320,3.558,1321,2.584,1322,2.725,1323,4.379,1324,2.584,1325,4.177,1326,2.725,1327,2.725,1328,3.937,1329,2.725,1330,2.367,1331,2.725,1332,2.367,1333,2.367,1334,2.367,1335,2.367,1336,3.91,1337,2.367,1338,2.367,1339,2.178,1340,2.102,1341,2.102,1342,2.463,1343,3.824,1344,2.725,1345,2.367,1346,2.725,1347,2.367,1348,2.367,1349,2.367,1350,2.367,1351,2.367,1352,2.357,1353,3.824,1354,2.895,1355,3.824,1356,3.824,1357,3.824,1358,3.824]],["title/interfaces/FileDto.html",[247,0.291,1359,3.458]],["body/interfaces/FileDto.html",[3,0.096,4,0.073,8,0.062,30,0.008,38,0.096,171,0.007,172,0.007,186,0.379,202,0.53,209,1.307,247,0.436,249,1.466,258,0.661,313,3.557,802,6.769,1088,3.47,1359,6.147,1360,6.86,1361,8.942,1362,8.942,1363,8.942,1364,8.942,1365,8.942]],["title/components/FooterComponent.html",[0,0.225,76,0.92]],["body/components/FooterComponent.html",[0,0.37,1,1.018,2,1.298,3,0.071,4,0.054,5,1.039,6,1.039,7,1.039,8,0.045,12,1.039,13,2.011,14,2.011,15,1.018,17,1.35,18,1.272,19,1.039,25,1.377,27,1.433,29,0.3,30,0.007,32,0.589,38,0.071,39,0.535,43,1.039,44,1.377,45,1.377,46,1.039,47,1.646,48,1.039,49,0.577,50,1.039,51,1.018,52,1.039,53,1.018,54,1.039,55,1.018,56,1.039,57,1.018,58,1.039,59,1.018,60,1.039,61,1.018,62,0.959,63,1.377,64,1.039,65,0.979,66,0.979,67,1.796,68,1.018,69,1.377,70,1.018,71,1.039,72,1.018,73,1.039,74,1.018,75,0.959,76,1.614,77,1.039,78,1.018,79,0.998,80,1.377,81,1.018,82,1.039,83,1.018,84,1.039,85,1.018,86,1.039,87,1.018,88,1.039,89,1.018,90,1.039,91,1.018,92,1.039,93,1.018,94,1.039,95,1.545,96,1.018,97,1.039,98,1.018,99,0.922,100,1.018,101,1.039,102,1.018,103,1.039,104,1.018,105,1.039,106,1.018,107,1.039,108,1.018,109,1.018,110,1.165,111,1.018,112,1.324,113,1.039,114,1.272,115,1.377,116,1.018,117,1.018,118,1.039,119,1.039,120,1.039,121,1.039,122,1.018,123,1.039,124,1.018,125,1.039,126,1.018,127,0.959,128,1.018,129,1.039,130,1.018,131,0.979,132,1.018,133,1.039,134,1.018,135,1.039,136,1.039,137,1.018,138,1.039,139,1.018,140,1.039,141,1.018,142,1.039,143,1.018,144,1.018,145,1.039,146,1.018,147,1.399,148,1.039,149,1.039,150,1.039,151,1.018,152,1.039,153,1.018,154,1.039,155,1.018,156,1.039,157,1.018,158,1.018,159,1.018,160,0.868,161,1.018,162,1.039,163,1.039,164,0.979,165,1.018,166,1.039,167,1.018,168,1.039,169,1.039,170,1.039,171,0.005,172,0.005,1366,5.055,1367,6.704,1368,6.704,1369,6.704,1370,6.704]],["title/components/ForgotPasswordComponent.html",[0,0.225,78,0.92]],["body/components/ForgotPasswordComponent.html",[0,0.278,1,0.611,2,0.9,3,0.043,4,0.032,5,0.623,6,0.623,7,0.623,8,0.027,12,0.623,13,1.969,14,1.969,15,0.611,17,0.936,18,0.882,19,0.955,20,1.887,21,2.212,22,3.344,24,1.971,25,0.955,27,0.993,29,0.513,30,0.008,31,0.93,32,0.353,33,1.385,34,0.97,35,0.97,36,1.187,38,0.043,39,0.321,41,3.353,43,0.623,44,0.955,45,0.955,46,0.623,47,1.302,48,0.623,49,0.545,50,0.623,51,0.611,52,0.623,53,0.611,54,0.623,55,0.611,56,0.623,57,0.611,58,0.623,59,0.611,60,0.623,61,0.611,62,0.575,63,0.955,64,0.623,65,0.587,66,0.587,67,1.542,68,0.611,69,0.955,70,0.611,71,0.623,72,0.611,73,0.623,74,0.611,75,0.575,76,0.611,77,0.623,78,1.276,79,1.482,80,0.955,81,0.611,82,0.623,83,0.611,84,0.623,85,0.611,86,0.623,87,0.611,88,0.623,89,0.611,90,0.623,91,0.611,92,0.623,93,0.611,94,0.623,95,1.161,96,0.611,97,0.623,98,0.611,99,0.553,100,0.611,101,0.623,102,0.611,103,0.623,104,0.611,105,0.623,106,0.611,107,0.623,108,0.611,109,0.611,110,0.875,111,0.611,112,0.918,113,0.623,114,0.882,115,0.955,116,0.611,117,0.611,118,0.623,119,0.623,120,0.623,121,0.623,122,0.611,123,0.623,124,0.611,125,0.623,126,0.611,127,0.575,128,0.611,129,0.623,130,0.611,131,0.587,132,0.611,133,0.623,134,0.611,135,0.623,136,0.623,137,0.611,138,0.623,139,0.611,140,0.623,141,0.611,142,0.623,143,0.611,144,0.611,145,0.623,146,0.611,147,1.051,148,0.623,149,0.623,150,0.623,151,0.611,152,0.623,153,0.611,154,0.623,155,0.611,156,0.623,157,0.611,158,0.611,159,0.611,160,0.52,161,0.611,162,0.623,163,0.623,164,0.587,165,0.611,166,0.623,167,0.611,168,0.623,169,0.623,170,0.623,171,0.004,172,0.004,179,1.586,180,2.383,181,3.219,186,0.167,187,1.14,188,3.609,189,2.672,190,2.433,194,1.013,196,3.427,199,1.723,201,0.955,202,0.444,203,1.627,205,1.611,206,2.12,209,0.77,256,1.058,258,0.378,288,1.187,300,1.518,316,1.443,317,1.333,325,0.715,361,1.132,389,1.466,398,1.621,399,1.621,400,1.621,401,1.106,402,1.082,403,1.159,453,2.374,460,1.106,521,5.457,522,1.869,528,4.832,539,1.106,540,3.481,542,2.389,546,1.983,552,2.161,555,1.424,607,4.868,620,2.161,663,0.949,679,1.466,718,2.581,840,1.347,881,2.905,882,2.183,883,3.955,885,2.816,886,2.816,887,2.816,891,3.819,892,3.344,901,3.257,905,2.738,906,3.961,907,3.857,921,2.554,922,2.554,924,4.08,929,3.219,930,1.511,936,1.511,937,1.666,938,1.347,939,1.511,940,1.511,941,1.869,942,2.865,943,1.869,947,1.159,955,1.869,956,1.216,957,1.559,958,1.61,959,1.869,960,1.869,966,2.212,969,2.049,970,2.049,971,2.049,973,1.953,974,2.295,976,2.464,978,2.905,979,2.905,980,2.905,983,2.816,984,3.591,991,2.468,1298,1.466,1306,1.794,1371,8.635,1372,8.635,1373,2.689,1374,4.122,1375,4.122,1376,5.651,1377,5.013,1378,4.278,1379,4.278,1380,4.027,1381,3.518,1382,2.049,1383,4.647,1384,3.518,1385,3.032,1386,3.032,1387,3.032,1388,3.032,1389,3.032,1390,2.689,1391,3.518,1392,3.032,1393,3.312,1394,3.032,1395,2.689,1396,2.689,1397,3.032,1398,3.518,1399,2.689,1400,2.161,1401,5.013,1402,1.953,1403,3.032,1404,1.953,1405,2.295,1406,2.295,1407,2.295,1408,2.049,1409,2.161,1410,2.161,1411,2.161,1412,3.032,1413,8.707,1414,4.122,1415,3.032,1416,3.032,1417,2.689,1418,2.689,1419,2.689,1420,2.689,1421,3.032,1422,2.161,1423,2.689,1424,3.518,1425,2.295,1426,2.689,1427,2.689,1428,3.032,1429,2.295,1430,3.518,1431,4.122,1432,4.647,1433,4.122,1434,4.122,1435,4.647,1436,4.647,1437,4.122]],["title/interfaces/ForgotPasswordRequestDto.html",[247,0.291,1438,4.052]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.103,4,0.078,8,0.066,30,0.007,38,0.103,171,0.007,172,0.007,186,0.403,202,0.418,209,1.21,247,0.464,249,1.56,258,0.685,542,3.752,706,4.499,1438,7.469,1439,7.299,1440,5.012]],["title/components/GuidesComponent.html",[0,0.225,81,0.92]],["body/components/GuidesComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.613,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,1441,5.05,1442,8.007,1443,6.699,1444,6.699]],["title/components/HomeComponent.html",[0,0.225,83,0.92]],["body/components/HomeComponent.html",[0,0.242,1,0.495,2,0.763,3,0.035,4,0.026,5,0.505,6,0.505,7,0.505,8,0.022,12,0.505,13,1.945,14,1.945,15,0.495,17,0.794,18,0.748,19,0.809,20,1.647,25,0.809,27,0.842,29,0.505,30,0.008,31,0.753,32,0.286,33,1.122,34,0.785,35,0.785,38,0.035,39,0.654,43,0.505,44,0.809,45,1.355,46,0.505,47,1.16,48,0.505,49,0.486,50,0.505,51,0.495,52,0.505,53,0.495,54,0.505,55,0.495,56,0.505,57,0.495,58,0.505,59,1.137,60,0.505,61,0.495,62,0.466,63,0.809,64,0.505,65,0.476,66,0.476,67,1.424,68,0.495,69,0.809,70,0.495,71,0.505,72,0.495,73,0.505,74,0.495,75,0.466,76,1.137,77,0.505,78,0.495,79,0.485,80,0.809,81,0.495,82,0.505,83,1.137,84,0.505,85,0.495,86,0.505,87,0.495,88,0.505,89,0.495,90,0.505,91,0.495,92,0.505,93,0.495,94,0.505,95,1.013,96,0.495,97,0.505,98,0.495,99,0.448,100,0.495,101,0.505,102,0.495,103,0.505,104,0.495,105,0.505,106,0.495,107,0.505,108,0.495,109,0.495,110,0.764,111,0.495,112,0.778,113,0.505,114,0.748,115,0.809,116,0.495,117,0.495,118,0.505,119,0.505,120,0.505,121,0.505,122,0.495,123,0.505,124,0.495,125,0.505,126,0.495,127,0.466,128,0.495,129,0.505,130,0.495,131,0.476,132,0.495,133,0.505,134,0.495,135,0.505,136,0.505,137,0.495,138,0.505,139,0.495,140,0.505,141,0.495,142,0.505,143,0.495,144,1.329,145,0.505,146,0.495,147,0.918,148,0.505,149,0.505,150,0.505,151,0.495,152,0.505,153,0.495,154,0.505,155,0.495,156,0.505,157,0.495,158,0.495,159,0.495,160,0.422,161,0.495,162,0.505,163,0.505,164,0.476,165,1.329,166,0.505,167,0.495,168,0.505,169,0.505,170,0.505,171,0.003,172,0.003,179,1.344,180,2.08,181,2.81,186,0.136,187,0.967,188,3.215,189,2.38,190,2.287,194,0.859,196,3.164,197,4.342,198,5.245,199,1.76,201,0.809,202,0.462,203,1.302,205,1.752,206,2.185,209,0.899,214,1.75,215,1.66,216,1.996,226,2.038,233,2.808,238,2.662,251,1.514,256,1.969,258,0.321,262,1.75,265,4.022,269,4.785,273,2.997,278,3.333,279,4.065,281,4.456,286,2.982,288,0.962,291,2.982,293,3.215,294,4.273,295,3.734,311,2.321,316,1.006,317,0.929,320,3.177,325,0.579,346,1.859,350,4.189,352,2.662,356,2.982,357,2.662,360,1.75,381,1.036,388,3.479,389,1.188,398,1.374,399,1.374,400,1.721,401,1.438,402,1.405,403,1.506,430,1.767,453,1.626,460,0.896,522,1.514,546,1.233,663,0.769,712,2.808,721,4.248,731,2.662,736,2.808,751,3.515,774,3.494,793,5.006,802,6.325,811,4.586,841,3.177,846,4.375,848,2.179,850,2.179,854,3.494,881,2.536,884,1.188,901,2.901,905,2.407,907,3.562,924,3.562,930,1.963,936,1.224,938,1.091,947,0.939,948,1.859,949,1.996,952,2.179,953,1.859,956,1.979,957,2.536,964,2.179,966,0.962,972,2.179,973,1.582,974,2.982,975,2.317,977,2.179,984,1.224,1047,1.154,1152,1.01,1293,1.304,1298,1.188,1319,1.514,1320,2.537,1323,2.428,1325,3.177,1402,1.582,1404,1.582,1408,1.66,1445,2.456,1446,6.146,1447,4.933,1448,3.939,1449,3.939,1450,4.933,1451,4.933,1452,4.933,1453,4.933,1454,4.933,1455,4.933,1456,4.933,1457,4.933,1458,6.179,1459,5.644,1460,4.933,1461,5.644,1462,5.644,1463,5.644,1464,4.933,1465,6.179,1466,7.333,1467,7.43,1468,3.939,1469,2.456,1470,3.939,1471,5.359,1472,3.939,1473,5.644,1474,2.456,1475,8.057,1476,6.44,1477,2.456,1478,3.939,1479,6.146,1480,7.788,1481,6.179,1482,5.295,1483,4.008,1484,2.982,1485,2.982,1486,3.201,1487,3.939,1488,4.586,1489,2.456,1490,5.644,1491,3.939,1492,3.494,1493,2.456,1494,3.494,1495,5.006,1496,3.939,1497,2.456,1498,2.456,1499,2.456,1500,2.456,1501,5.644,1502,6.179,1503,3.939,1504,3.939,1505,2.456,1506,3.939,1507,3.494,1508,2.456,1509,2.456,1510,2.456,1511,2.456,1512,2.456,1513,2.456,1514,2.456,1515,2.456,1516,2.456,1517,2.456,1518,2.456,1519,2.456,1520,3.494,1521,2.456,1522,2.456,1523,2.456,1524,2.456,1525,2.456,1526,3.939,1527,2.456,1528,6.929,1529,3.939,1530,3.939,1531,5.644,1532,2.456,1533,2.456,1534,2.456,1535,2.456,1536,3.939,1537,6.179,1538,2.456,1539,2.456,1540,2.456,1541,2.456,1542,3.939,1543,4.933,1544,2.456,1545,2.179,1546,2.179,1547,2.179,1548,2.179,1549,2.456,1550,2.456,1551,2.456,1552,3.201,1553,2.456,1554,2.456,1555,2.456,1556,2.456,1557,2.456,1558,3.939,1559,2.456,1560,2.456,1561,2.179,1562,4.933,1563,2.456,1564,2.456,1565,2.456,1566,3.939,1567,2.456,1568,5.644,1569,2.179,1570,2.456,1571,3.939,1572,2.456,1573,2.456,1574,2.456,1575,3.939,1576,2.456,1577,2.456,1578,2.456,1579,3.939,1580,2.456,1581,3.939,1582,2.456,1583,2.456,1584,2.456,1585,3.494,1586,2.456,1587,2.456,1588,2.456,1589,1.996]],["title/interfaces/Invitation.html",[247,0.291,701,3.087]],["body/interfaces/Invitation.html",[3,0.1,4,0.076,8,0.064,29,0.42,30,0.008,38,0.1,171,0.007,172,0.007,186,0.391,202,0.502,209,1.27,247,0.45,249,1.513,258,0.673,701,5.589,1440,4.964,1590,7.078,1591,8.012,1592,5.203,1593,7.078]],["title/components/InvitationComponent.html",[0,0.225,85,0.92]],["body/components/InvitationComponent.html",[0,0.264,1,0.564,2,0.846,3,0.039,4,0.03,5,0.575,6,0.575,7,0.575,8,0.025,12,0.575,13,1.96,14,1.96,15,0.564,17,0.88,18,1.152,19,0.898,20,1.794,21,2.104,22,3.18,24,1.875,25,0.898,27,0.934,29,0.524,30,0.008,31,0.858,32,0.326,33,1.279,34,0.895,35,0.895,36,1.096,38,0.039,39,0.296,41,3.677,43,0.575,44,0.898,45,0.898,46,0.575,47,1.248,48,0.575,49,0.523,50,0.575,51,0.564,52,0.575,53,0.564,54,0.575,55,0.564,56,0.575,57,0.564,58,0.575,59,0.564,60,0.575,61,0.564,62,0.531,63,0.898,64,0.575,65,0.542,66,0.542,67,1.498,68,0.564,69,0.898,70,0.564,71,0.575,72,0.564,73,0.575,74,0.564,75,0.531,76,0.564,77,0.575,78,0.564,79,0.553,80,0.898,81,0.564,82,0.575,83,0.564,84,0.575,85,1.223,86,0.575,87,0.564,88,0.575,89,0.564,90,0.575,91,0.564,92,0.575,93,0.564,94,0.575,95,1.104,96,0.564,97,0.575,98,0.564,99,0.511,100,0.564,101,0.575,102,0.564,103,0.575,104,0.564,105,0.575,106,0.564,107,0.575,108,0.564,109,0.564,110,0.832,111,0.564,112,0.863,113,0.575,114,0.829,115,0.898,116,0.564,117,0.564,118,0.575,119,0.575,120,0.575,121,0.575,122,0.564,123,0.575,124,0.564,125,0.575,126,0.564,127,0.531,128,0.564,129,0.575,130,0.564,131,0.542,132,0.564,133,0.575,134,0.564,135,0.575,136,0.575,137,0.564,138,0.575,139,0.564,140,0.575,141,0.564,142,0.575,143,0.564,144,0.564,145,0.575,146,0.564,147,1,148,0.575,149,0.575,150,0.575,151,0.564,152,0.575,153,0.564,154,0.575,155,0.564,156,0.575,157,0.564,158,0.564,159,0.564,160,0.481,161,0.564,162,0.575,163,0.575,164,0.542,165,0.564,166,0.575,167,0.564,168,0.575,169,0.575,170,0.575,171,0.004,172,0.004,179,1.491,180,2.266,181,3.062,186,0.155,187,1.072,188,3.459,189,2.561,190,2.392,194,0.953,196,3.329,199,1.695,201,0.898,202,0.432,203,1.489,205,1.553,206,2.053,209,0.898,226,0.823,256,0.977,258,0.356,288,2.104,300,1.428,316,1.372,317,1.553,325,0.66,361,1.046,389,2.113,398,0.977,399,0.977,400,1.875,401,1.022,402,0.999,403,1.07,453,2.233,460,1.022,517,3.308,522,1.726,528,4.695,530,5.195,539,1.022,540,3.337,542,2.763,546,2.062,552,1.995,555,1.315,607,5.195,609,4.597,620,1.995,626,2.953,628,2.953,638,1.726,663,0.877,701,2.953,718,2.454,729,2.177,840,1.244,881,2.763,882,2.052,883,3.861,885,2.678,886,2.678,887,2.678,891,3.631,892,3.18,901,3.122,905,2.66,906,3.835,907,3.747,921,2.401,922,4.355,924,3.747,929,3.062,930,1.395,936,1.395,937,1.539,938,1.244,939,1.395,940,1.395,941,1.726,942,2.693,943,1.726,947,1.07,955,1.726,956,1.123,957,1.439,958,1.487,959,1.726,960,1.726,966,1.711,969,1.892,970,1.892,971,1.892,973,1.803,974,2.12,978,2.246,979,2.246,980,2.246,983,2.177,984,3.026,991,2.321,1019,1.995,1298,1.354,1306,1.657,1378,4.069,1379,4.069,1380,3.83,1381,3.308,1382,1.892,1384,3.308,1391,3.308,1393,3.114,1398,3.308,1400,1.995,1402,1.803,1404,1.803,1405,2.12,1406,2.12,1407,2.12,1408,1.892,1409,1.995,1410,1.995,1411,1.995,1422,1.995,1424,3.308,1429,2.12,1430,3.308,1440,2.953,1589,3.551,1594,2.8,1595,4.367,1596,4.069,1597,4.37,1598,4.37,1599,4.767,1600,5.386,1601,4.37,1602,2.8,1603,2.8,1604,2.8,1605,2.8,1606,2.8,1607,2.8,1608,2.8,1609,2.8,1610,3.308,1611,3.551,1612,3.551,1613,3.631,1614,3.631,1615,2.8,1616,2.8,1617,2.8,1618,2.8,1619,2.275,1620,2.12,1621,2.484,1622,2.8,1623,2.275,1624,2.275,1625,2.8,1626,2.8,1627,2.8,1628,2.275,1629,2.8,1630,2.8,1631,4.37,1632,2.8,1633,2.8,1634,2.484,1635,2.484,1636,2.484,1637,2.484,1638,2.484,1639,2.8,1640,4.37,1641,4.37,1642,4.37,1643,4.37,1644,4.37,1645,4.37,1646,4.37,1647,4.37,1648,4.37,1649,4.37,1650,4.37,1651,4.37,1652,4.37,1653,4.37,1654,4.37]],["title/interfaces/InvitationDto.html",[247,0.291,1655,3.256]],["body/interfaces/InvitationDto.html",[3,0.1,4,0.076,8,0.064,29,0.42,30,0.008,38,0.1,171,0.007,172,0.007,186,0.391,202,0.502,209,1.27,247,0.45,249,1.513,258,0.673,1440,4.964,1591,8.012,1592,5.203,1655,5.894,1656,7.078,1657,7.078]],["title/interfaces/InvitationRequestDto.html",[247,0.291,1658,3.712]],["body/interfaces/InvitationRequestDto.html",[3,0.101,4,0.077,8,0.065,30,0.008,38,0.101,171,0.007,172,0.007,186,0.398,202,0.479,209,1.276,247,0.459,249,1.542,258,0.681,706,4.446,1440,4.993,1658,6.796,1659,7.213,1660,6.476]],["title/injectables/InvitationService.html",[323,1.016,530,3.256]],["body/injectables/InvitationService.html",[3,0.085,4,0.065,8,0.054,29,0.541,30,0.008,32,0.705,38,0.085,39,0.641,49,0.738,171,0.006,172,0.006,182,2.691,186,0.334,187,1.847,194,1.32,199,1.726,201,1.761,202,0.491,203,1.693,205,1.932,209,1.225,323,1.674,325,1.428,370,2.844,371,2.62,391,3.848,430,2.565,515,2.261,517,5.699,530,5.365,610,3.583,611,4.882,613,4.137,626,5.791,628,4.938,633,3.583,634,4.288,638,4.64,641,5.371,643,6.117,645,6.677,647,3.583,700,3.732,1019,4.315,1600,7.602,1655,4.315,1658,6.964,1661,6.055,1662,7.528,1663,5.699,1664,6.055,1665,7.528,1666,6.055,1667,7.528,1668,6.055,1669,7.528,1670,6.055,1671,6.055,1672,6.055,1673,8.192,1674,6.055,1675,4.92]],["title/components/IssuesComponent.html",[0,0.225,87,0.92]],["body/components/IssuesComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.613,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,1676,5.05,1677,8.007,1678,6.699,1679,6.699]],["title/injectables/JwtService.html",[323,1.016,529,3.712]],["body/injectables/JwtService.html",[3,0.084,4,0.064,8,0.054,29,0.443,30,0.008,32,0.695,38,0.084,39,0.632,49,0.701,171,0.006,172,0.006,182,2.651,186,0.33,187,1.83,194,1.301,199,1.803,201,1.672,202,0.466,203,1.607,205,2.07,206,2.633,209,1.271,226,2.194,323,1.658,326,5.761,327,4.031,328,3.843,370,2.802,371,2.582,374,4.598,430,2.335,453,2.457,512,6.616,515,2.228,529,6.061,608,4.517,659,6.644,721,6.134,1680,9.082,1681,4.517,1682,6.076,1683,8.525,1684,8.525,1685,7.459,1686,7.459,1687,5.966,1688,5.966,1689,5.966,1690,5.966,1691,4.848,1692,7.459,1693,4.848,1694,7.459,1695,5.966,1696,5.966,1697,5.966,1698,7.459,1699,7.459,1700,5.966,1701,5.966,1702,5.966,1703,5.966]],["title/injectables/LayoutService.html",[197,2.602,323,1.016]],["body/injectables/LayoutService.html",[3,0.03,4,0.023,8,0.02,18,1.48,29,0.269,30,0.008,32,0.253,38,0.05,39,0.893,49,0.499,171,0.003,172,0.003,182,0.964,186,0.12,187,0.874,190,1.985,194,0.473,197,4.68,199,1.637,201,0.446,202,0.49,203,0.428,205,1.974,206,1.831,209,1.095,226,0.638,233,4.437,234,3.971,238,4.948,247,0.532,248,6.152,250,1.763,251,2.793,252,3.43,253,2.195,254,2.696,255,6.435,256,1.83,257,2.696,258,0.596,259,4.055,260,5.2,261,5.2,262,5.458,263,5.679,264,5.543,265,1.546,266,5.95,267,6.219,268,4.385,269,5.343,270,4.909,271,4.895,272,4.385,273,3.494,274,3.738,275,3.971,276,3.544,277,2.894,278,2.407,279,5.729,280,2.696,281,5.655,282,5.557,283,2.696,284,2.696,285,4.716,286,2.696,287,2.696,288,1.394,289,3.971,290,3.682,291,1.642,292,5.543,293,4.767,294,4.98,295,6.078,296,1.763,297,1.763,298,2.918,299,1.466,300,2.94,301,1.642,302,5.069,303,1.642,304,1.763,305,2.538,306,4.624,307,1.763,308,1.763,309,2.696,310,1.642,311,3.539,312,1.546,313,1.863,314,1.642,315,1.397,316,1.991,317,1.839,318,3.43,319,5.798,320,5.101,321,4.707,322,1.763,323,0.792,324,6.492,325,1.678,326,4.207,327,2.407,328,1.397,329,6.152,330,3.682,331,4.246,332,1.763,333,5.781,334,5.781,335,5.781,336,6.096,337,5.582,338,5.582,339,4.714,340,5.95,341,1.763,342,1.763,343,1.642,344,1.466,345,4.714,346,1.642,347,6.435,348,6.676,349,5.06,350,4.826,351,1.763,352,2.407,353,4.262,354,5.06,355,1.642,356,4.714,357,5.175,358,3.738,359,4.707,360,3.738,361,1.692,362,1.763,363,1.763,364,4.262,365,2.294,366,4.262,367,5.218,368,3.738,369,2.894,370,1.019,371,0.939,372,1.642,373,1.763,374,1.337,375,3.738,376,2.696,377,4.262,378,4.714,379,2.696,380,6.741,381,3.23,382,5.2,383,4.424,384,3.971,385,5.2,386,4.262,387,5.2,388,4.234,389,3.321,390,3.378,391,3.597,392,3.971,393,3.544,394,4.714,395,6.741,396,2.894,397,2.538,398,0.757,399,0.757,400,0.757,401,0.792,402,0.774,403,0.829,404,3.544,405,3.544,406,3.971,407,4.262,408,3.738,409,4.895,410,4.262,411,3.971,412,2.894,413,2.894,414,4.262,415,1.763,416,3.682,417,3.682,418,2.894,419,2.894,420,3.682,421,2.894,422,3.682,423,2.407,424,1.763,425,5.06,426,5.06,427,4.262,428,3.682,429,3.682,430,1.949,431,1.763,432,3.971,433,4.262,434,4.707,435,5.06,436,4.707,437,5.2,438,5.582,439,5.06,440,3.682,441,3.229,442,3.682,443,1.763,444,5.06,445,2.894,446,2.538,447,4.262,448,1.763,449,1.763,450,4.262,451,3.682,452,1.763,453,0.625,454,1.763,455,1.763,456,1.763,457,4.262,458,1.763,459,1.763,515,0.81,1704,2.169,1705,2.169,1706,2.169,1707,2.169,1708,2.169,1709,2.169,1710,2.169,1711,2.169,1712,2.169,1713,2.169,1714,2.169,1715,2.169,1716,2.169,1717,2.169,1718,2.169,1719,2.169,1720,2.169]],["title/interfaces/LayoutState.html",[247,0.291,329,3.458]],["body/interfaces/LayoutState.html",[3,0.035,4,0.026,8,0.022,18,1.531,29,0.294,30,0.008,32,0.287,38,0.056,39,0.876,49,0.341,171,0.003,172,0.003,182,1.097,186,0.136,190,1.535,197,4.596,202,0.488,205,1.559,209,1.1,226,0.726,233,4.034,234,3.747,238,4.875,247,0.564,248,6.013,249,0.528,250,2.006,251,3.489,252,4.285,253,3.051,254,3.747,255,6.972,256,1.726,257,3.747,258,0.622,259,4.447,260,5.004,261,5.004,262,5.441,263,5.256,264,5.462,265,1.759,266,6.204,267,6.107,268,3.747,269,5.438,270,5.202,271,5.142,272,4.689,273,3.687,274,4.034,275,4.285,276,3.825,277,4.022,278,3.344,279,5.827,280,3.747,281,5.995,282,6.068,283,2.994,284,2.994,285,4.472,286,2.994,287,2.994,288,1.549,289,4.285,290,3.214,291,1.869,292,4.689,293,5.032,294,5.78,295,6.191,296,2.006,297,2.006,298,2.548,299,1.668,300,3.068,301,1.869,302,5.828,303,1.869,304,2.006,305,2.819,306,4.973,307,2.006,308,2.006,309,2.994,310,1.869,311,3.207,312,1.759,313,2.035,314,1.869,315,1.59,316,1.445,317,1.335,318,2.994,319,5.004,320,4.793,321,4.6,322,2.006,323,0.879,324,6.157,325,1.461,326,3.344,327,2.673,328,1.59,329,6.54,330,4.022,331,4.382,332,3.214,333,6.646,334,6.646,335,6.646,336,6.725,337,6.454,338,6.454,339,5.634,340,6.338,341,3.214,342,3.214,343,2.994,344,2.673,345,6.013,346,2.994,347,5.642,348,6.204,349,5.034,350,4.777,351,3.214,352,3.825,353,5.863,354,5.034,355,2.994,356,5.634,357,5.592,358,4.414,359,4.022,360,3.527,361,1.848,362,3.214,363,3.214,364,3.214,365,1.59,366,3.214,367,4.414,368,2.819,369,2.006,370,1.159,371,1.068,372,1.869,373,2.006,374,1.522,375,2.819,376,1.869,377,3.214,378,3.747,379,1.869,380,5.863,381,2.787,382,4.285,383,3.646,384,2.994,385,4.285,386,3.214,387,4.285,388,3.489,389,2.737,390,2.548,391,3.105,392,2.994,393,2.673,394,3.747,395,5.863,396,2.006,397,1.759,398,0.861,399,0.861,400,0.861,401,0.901,402,0.881,403,0.944,404,2.673,405,2.673,406,2.994,407,3.214,408,2.819,409,4.034,410,3.214,411,2.994,412,2.006,413,2.006,414,3.214,415,2.006,416,4.022,417,4.022,418,3.214,419,3.214,420,4.022,421,2.006,422,4.022,423,1.668,424,2.006,425,4.022,426,3.214,427,3.214,428,2.006,429,2.006,430,1.772,431,2.006,432,2.994,433,3.214,434,3.214,435,4.022,436,3.214,437,3.747,438,4.022,439,3.214,440,2.006,441,1.759,442,2.006,443,2.006,444,3.214,445,2.006,446,1.759,447,2.006,448,2.006,449,2.006,450,2.006,451,4.022,452,2.006,453,0.711,454,2.006,455,2.006,456,2.006,457,2.006,458,2.006,459,2.006]],["title/injectables/LocalStorage.html",[323,1.016,326,3.087]],["body/injectables/LocalStorage.html",[3,0.08,4,0.06,8,0.051,29,0.472,30,0.008,31,1.734,32,0.659,38,0.08,39,0.599,49,0.72,171,0.006,172,0.006,179,1.93,182,2.514,186,0.398,187,1.77,190,2.153,194,1.731,199,1.83,201,1.718,202,0.495,203,1.651,205,2.037,206,2.597,209,1.295,214,4.031,226,1.664,258,0.587,313,3.438,317,1.972,323,1.603,326,4.873,328,3.643,370,2.657,374,5.443,381,2.385,430,2.486,453,2.409,515,2.112,731,4.873,1016,3.822,1681,4.282,1682,5.959,1691,4.596,1693,4.596,1721,9.174,1722,6.011,1723,5.861,1724,5.836,1725,5.861,1726,5.861,1727,6.452,1728,6.397,1729,5.861,1730,5.861,1731,5.017,1732,5.861,1733,5.017,1734,5.861,1735,5.017,1736,4.596,1737,4.596,1738,5.017,1739,5.46,1740,4.282,1741,5.017,1742,5.017,1743,5.017,1744,5.017,1745,6.397,1746,5.656,1747,5.017,1748,5.017,1749,5.017,1750,5.017,1751,5.017,1752,5.017]],["title/interfaces/LogSessionDto.html",[247,0.291,1753,3.458]],["body/interfaces/LogSessionDto.html",[3,0.094,4,0.071,8,0.06,30,0.008,38,0.094,171,0.006,172,0.006,186,0.369,202,0.537,209,1.313,247,0.425,249,1.428,258,0.651,300,2.795,1088,3.69,1307,5.464,1753,6.052,1754,5.927,1755,6.682,1756,7.863,1757,7.863,1758,7.863,1759,7.863,1760,7.863,1761,7.863,1762,7.863]],["title/injectables/LogSessionService.html",[323,1.016,1763,3.712]],["body/injectables/LogSessionService.html",[3,0.085,4,0.064,8,0.054,29,0.541,30,0.008,32,0.703,38,0.085,39,0.639,49,0.647,171,0.006,172,0.006,182,2.681,186,0.333,187,1.843,194,1.315,199,1.513,201,1.543,202,0.49,203,1.483,205,1.423,209,1.224,226,1.774,300,2.454,313,3.088,323,1.67,325,1.423,370,2.833,371,2.611,391,3.841,430,1.889,515,2.253,610,3.57,611,4.876,613,4.127,633,3.57,634,4.278,647,3.57,648,5.526,841,3.885,1037,4.567,1062,5.533,1130,3.57,1156,4.567,1281,4.278,1722,4.567,1753,4.567,1763,6.103,1764,7.254,1765,6.032,1766,7.254,1767,6.032,1768,5.351,1769,7.254,1770,6.032,1771,5.351,1772,5.351,1773,5.351,1774,5.351,1775,6.032,1776,5.351,1777,5.351,1778,5.351,1779,5.351,1780,5.351,1781,5.351,1782,7.51,1783,6.032,1784,6.662,1785,5.351,1786,6.662,1787,5.351,1788,6.032]],["title/interfaces/LogSourceDto.html",[247,0.291,1127,3.458]],["body/interfaces/LogSourceDto.html",[3,0.086,4,0.065,8,0.055,29,0.362,30,0.008,38,0.086,110,0.944,171,0.006,172,0.006,186,0.337,202,0.548,209,1.323,247,0.388,249,1.302,258,0.615,300,2.684,313,3.7,1075,7.619,1076,7.619,1077,7.619,1078,5.532,1079,7.619,1080,7.619,1088,3.609,1089,7.619,1090,7.619,1091,4.415,1092,4.72,1127,5.721,1281,4.305,1754,5.404,1758,7.619,1789,6.092,1790,8.589,1791,8.589,1792,7.619,1793,6.121,1794,4.612,1795,4.951,1796,6.092,1797,6.092,1798,6.092]],["title/injectables/LogSourceService.html",[323,1.016,1048,3.712]],["body/injectables/LogSourceService.html",[3,0.084,4,0.064,8,0.054,29,0.54,30,0.008,32,0.698,38,0.084,39,0.635,49,0.644,75,1.138,171,0.006,172,0.006,182,2.664,186,0.331,187,1.836,194,1.307,199,1.507,201,1.537,202,0.489,203,1.478,205,1.414,209,1.239,226,1.763,300,2.444,313,3.076,323,1.663,325,1.414,370,2.816,371,2.595,391,3.831,430,1.877,515,2.239,610,3.548,611,4.865,613,4.111,633,3.548,634,4.262,647,3.548,648,5.511,841,3.861,1037,4.539,1048,6.08,1062,5.525,1127,4.539,1129,5.318,1130,3.548,1156,4.539,1167,5.318,1281,4.262,1722,4.539,1764,7.234,1766,7.234,1768,5.318,1769,7.234,1771,5.318,1772,5.318,1774,5.318,1776,5.318,1777,5.318,1778,5.318,1779,5.318,1780,5.318,1781,5.318,1784,5.318,1785,5.318,1786,6.636,1787,5.318,1799,5.995,1800,5.995,1801,5.995,1802,7.482,1803,5.995,1804,7.482,1805,5.995,1806,5.995]],["title/components/LoginComponent.html",[0,0.225,89,0.92]],["body/components/LoginComponent.html",[0,0.28,1,0.62,2,0.91,3,0.043,4,0.033,5,0.632,6,0.632,7,0.632,8,0.028,12,0.632,13,1.971,14,1.971,15,0.62,17,0.946,18,0.892,19,0.965,20,1.903,21,2.232,22,3.374,24,1.989,25,0.965,27,1.004,29,0.526,30,0.008,31,0.943,32,0.358,33,1.405,34,0.984,35,0.984,36,1.204,38,0.043,39,0.326,41,3.589,43,0.632,44,0.965,45,0.965,46,0.632,47,1.311,48,0.632,49,0.549,50,0.632,51,0.62,52,0.632,53,0.62,54,0.632,55,0.62,56,0.632,57,0.62,58,0.632,59,0.62,60,0.632,61,0.62,62,0.584,63,0.965,64,0.632,65,0.595,66,0.595,67,1.549,68,0.62,69,0.965,70,0.62,71,0.632,72,0.62,73,0.632,74,0.62,75,0.584,76,0.62,77,0.632,78,0.62,79,0.607,80,0.965,81,0.62,82,0.632,83,0.62,84,0.632,85,0.62,86,0.632,87,0.62,88,0.632,89,1.286,90,0.632,91,0.62,92,0.632,93,0.62,94,0.632,95,1.171,96,0.62,97,0.632,98,0.62,99,0.561,100,0.62,101,0.632,102,0.62,103,0.632,104,0.62,105,0.632,106,0.62,107,0.632,108,0.62,109,0.62,110,0.883,111,0.62,112,0.928,113,0.632,114,0.892,115,0.965,116,0.62,117,0.62,118,0.632,119,0.632,120,0.632,121,0.632,122,0.62,123,0.632,124,0.62,125,0.632,126,0.62,127,0.584,128,0.62,129,0.632,130,0.62,131,0.595,132,0.62,133,0.632,134,0.62,135,0.632,136,0.632,137,0.62,138,0.632,139,0.62,140,0.632,141,0.62,142,0.632,143,0.62,144,0.62,145,0.632,146,0.62,147,1.061,148,0.632,149,0.632,150,0.632,151,0.62,152,0.632,153,0.62,154,0.632,155,0.62,156,0.632,157,0.62,158,0.62,159,0.62,160,0.528,161,0.62,162,0.632,163,0.632,164,0.595,165,0.62,166,0.632,167,0.62,168,0.632,169,0.632,170,0.632,171,0.004,172,0.004,179,1.603,180,2.404,181,3.248,186,0.17,187,1.153,188,3.636,189,2.692,190,2.399,194,1.024,196,3.444,199,1.744,201,0.965,202,0.432,203,1.536,205,1.779,206,2.132,209,0.777,256,1.073,258,0.383,288,1.204,300,1.535,316,1.456,317,1.345,325,0.725,361,1.149,389,1.487,398,1.073,399,1.073,400,1.639,401,1.122,402,1.097,403,1.176,430,1.471,453,2.296,460,1.122,519,3.557,522,1.896,528,4.857,539,1.122,540,3.508,542,2.931,546,1.785,552,2.192,555,1.445,607,4.9,620,2.192,663,0.963,718,2.604,840,1.367,881,2.931,882,2.207,883,3.971,885,2.841,886,2.841,887,2.841,891,3.853,892,3.374,901,3.281,905,2.752,906,3.983,907,3.877,921,2.582,922,3.508,924,3.877,929,3.248,930,1.533,936,1.533,937,1.69,938,1.367,939,1.533,940,1.533,941,1.896,942,2.896,943,1.896,947,1.176,955,1.896,956,1.234,957,1.581,958,1.633,959,1.896,960,1.896,966,1.839,969,2.078,970,2.078,971,2.078,973,1.981,978,1.581,979,1.581,980,1.581,983,1.533,984,2.341,991,2.495,1078,1.981,1298,1.487,1306,1.82,1378,4.316,1379,4.316,1380,4.063,1381,3.557,1382,2.078,1384,3.557,1391,3.557,1393,3.349,1398,3.557,1400,2.192,1402,1.981,1404,1.981,1405,2.328,1406,2.328,1407,2.328,1408,2.078,1409,2.192,1410,2.192,1411,2.192,1422,2.192,1424,3.557,1429,2.328,1430,3.557,1433,4.168,1434,4.168,1595,4.633,1596,4.316,1610,3.557,1619,2.499,1620,2.328,1807,3.076,1808,7.249,1809,4.699,1810,4.699,1811,5.701,1812,7.249,1813,6.383,1814,4.699,1815,3.076,1816,3.076,1817,3.076,1818,3.076,1819,3.076,1820,3.076,1821,3.076,1822,3.076,1823,3.076,1824,3.076,1825,3.076,1826,3.076,1827,3.076,1828,2.499,1829,3.076,1830,3.076,1831,3.076,1832,3.076,1833,3.076,1834,3.076,1835,2.728,1836,2.728,1837,4.699,1838,4.699,1839,4.699,1840,4.699,1841,4.699,1842,4.699,1843,4.699,1844,4.699,1845,4.699]],["title/components/LogsComponent.html",[0,0.225,91,0.92]],["body/components/LogsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.613,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,1846,5.05,1847,7.102,1848,6.699,1849,6.699]],["title/components/MemberPickerComponent.html",[0,0.225,93,0.92]],["body/components/MemberPickerComponent.html",[0,0.295,1,0.673,2,0.969,3,0.047,4,0.036,5,0.687,6,0.687,7,0.687,8,0.03,12,0.687,13,1.979,14,1.979,15,0.673,17,1.008,18,1.138,19,1.028,20,2.002,21,2.348,23,2.595,24,2.092,25,1.028,27,1.069,29,0.518,30,0.008,31,1.025,32,0.389,34,1.069,35,1.069,36,1.308,37,1.446,38,0.047,39,0.354,43,0.687,44,1.028,45,1.028,46,0.687,47,1.368,48,0.687,49,0.702,50,0.687,51,0.673,52,0.687,53,0.673,54,0.687,55,0.673,56,0.687,57,0.673,58,0.687,59,0.673,60,0.687,61,0.673,62,0.634,63,1.028,64,0.687,65,0.647,66,0.647,67,1.594,68,0.673,69,1.028,70,0.673,71,0.687,72,0.673,73,0.687,74,0.673,75,0.634,76,0.673,77,0.687,78,0.673,79,0.66,80,1.028,81,0.673,82,0.687,83,0.673,84,0.687,85,0.673,86,0.687,87,0.673,88,0.687,89,0.673,90,0.687,91,0.673,92,0.687,93,1.341,94,1.733,95,1.232,96,0.673,97,0.687,98,0.673,99,1.214,100,0.673,101,0.687,102,0.673,103,0.687,104,0.673,105,0.687,106,0.673,107,0.687,108,0.673,109,0.673,110,0.929,111,0.673,112,0.988,113,0.687,114,0.95,115,1.028,116,0.673,117,0.673,118,0.687,119,0.687,120,0.687,121,0.687,122,0.673,123,0.687,124,0.673,125,0.687,126,0.673,127,0.634,128,0.673,129,0.687,130,0.673,131,0.647,132,0.673,133,0.687,134,0.673,135,0.687,136,0.687,137,0.673,138,0.687,139,0.673,140,0.687,141,0.673,142,0.687,143,0.673,144,0.673,145,0.687,146,0.673,147,1.116,148,0.687,149,0.687,150,0.687,151,0.673,152,0.687,153,0.673,154,0.687,155,0.673,156,0.687,157,0.673,158,0.673,159,0.673,160,0.574,161,0.673,162,0.687,163,0.687,164,0.647,165,0.673,166,0.687,167,0.673,168,0.687,169,0.687,170,0.687,171,0.004,172,0.004,186,0.185,187,1.228,194,0.729,199,1.756,201,1.594,202,0.483,203,1.532,205,1.83,206,2.282,209,1.058,258,0.407,288,2.607,311,2.057,316,1.7,317,1.682,325,0.788,350,2.749,361,3.102,371,1.446,430,1.878,453,1.728,460,1.22,555,1.57,663,1.046,729,2.493,796,1.718,905,2.731,947,1.278,956,2.671,966,1.308,975,2.35,1047,1.57,1152,2.466,1218,3.696,1284,2.06,1293,2.657,1294,1.837,1339,1.904,1340,1.837,1341,1.837,1850,8.79,1851,7.797,1852,2.716,1853,4.066,1854,4.873,1855,3.696,1856,4.066,1857,4.066,1858,5.997,1859,4.873,1860,4.873,1861,4.438,1862,4.066,1863,4.066,1864,4.066,1865,4.066,1866,5.41,1867,3.788,1868,5.997,1869,5.997,1870,6.658,1871,2.964,1872,2.964,1873,2.964,1874,2.716,1875,4.438,1876,2.964,1877,4.066,1878,5.41,1879,3.342,1880,4.066,1881,5.41,1882,3.342,1883,4.066,1884,5.41,1885,3.342,1886,4.066,1887,5.41,1888,3.342,1889,3.342,1890,3.788,1891,3.342,1892,2.53,1893,2.964,1894,5.003,1895,2.716,1896,2.964,1897,2.06,1898,2.716,1899,2.716,1900,2.716,1901,2.716,1902,3.342,1903,3.342,1904,2.716,1905,2.964,1906,2.964,1907,2.964,1908,2.964,1909,2.964,1910,4.052,1911,2.53,1912,2.53,1913,2.53,1914,2.53,1915,3.788,1916,2.53,1917,3.342,1918,3.342,1919,3.342,1920,3.342,1921,2.53,1922,2.53,1923,3.342,1924,3.342,1925,3.342,1926,3.342,1927,2.716,1928,2.716,1929,5.003,1930,5.003,1931,5.003,1932,5.003,1933,6.658,1934,5.003,1935,5.003,1936,5.003]],["title/components/MembersComponent.html",[0,0.225,96,0.92]],["body/components/MembersComponent.html",[0,0.323,1,1.445,2,1.086,3,0.055,4,0.042,5,0.803,6,0.803,7,0.803,8,0.035,10,2.408,12,0.803,13,1.993,14,1.993,15,0.787,17,1.13,18,1.065,19,1.153,20,2.191,24,2.29,25,1.153,27,1.199,29,0.539,30,0.008,31,1.198,32,0.455,34,1.249,35,1.249,38,0.055,39,0.414,43,0.803,44,1.153,45,1.153,46,0.803,47,1.474,48,0.803,49,0.565,50,0.803,51,0.787,52,0.803,53,0.787,54,0.803,55,0.787,56,0.803,57,0.787,58,0.803,59,0.787,60,0.803,61,0.787,62,0.742,63,1.153,64,0.803,65,0.756,66,0.756,67,1.674,68,0.787,69,1.153,70,0.787,71,0.803,72,0.787,73,0.803,74,0.787,75,0.742,76,0.787,77,0.803,78,0.787,79,0.772,80,1.153,81,0.787,82,0.803,83,0.787,84,0.803,85,0.787,86,0.803,87,0.787,88,0.803,89,0.787,90,0.803,91,0.787,92,0.803,93,0.787,94,0.803,95,1.349,96,1.445,97,0.803,98,1.445,99,1.197,100,0.787,101,0.803,102,0.787,103,0.803,104,0.787,105,0.803,106,0.787,107,0.803,108,0.787,109,0.787,110,1.017,111,0.787,112,1.108,113,0.803,114,1.065,115,1.153,116,0.787,117,0.787,118,0.803,119,0.803,120,0.803,121,0.803,122,0.787,123,0.803,124,0.787,125,0.803,126,0.787,127,0.742,128,0.787,129,0.803,130,0.787,131,0.756,132,0.787,133,0.803,134,0.787,135,0.803,136,0.803,137,0.787,138,0.803,139,0.787,140,0.803,141,0.787,142,0.803,143,0.787,144,0.787,145,0.803,146,0.787,147,1.221,148,0.803,149,0.803,150,0.803,151,0.787,152,0.803,153,0.787,154,0.803,155,0.787,156,0.803,157,0.787,158,0.787,159,0.787,160,0.671,161,0.787,162,0.803,163,0.803,164,0.756,165,0.787,166,0.803,167,0.787,168,0.803,169,0.803,170,0.803,171,0.005,172,0.005,179,1.914,180,2.768,186,0.216,187,1.377,189,3.025,194,0.852,199,1.71,201,0.803,202,0.224,203,0.772,205,0.921,206,1.149,258,0.457,316,2.08,317,2.097,325,0.921,371,1.691,460,1.426,539,1.426,663,1.223,882,2.635,883,3.271,885,3.271,905,2.886,938,1.736,940,1.947,947,1.493,966,3.097,1011,1.835,1047,1.835,1071,5.094,1223,4.894,1270,4.875,1272,3.613,1285,2.516,1295,1.947,1296,2.408,1297,2.408,1298,1.889,1299,2.008,1300,2.408,1352,3.458,1859,5.83,1901,3.175,1904,3.175,1937,3.907,1938,4.678,1939,5.61,1940,5.61,1941,5.823,1942,5.334,1943,4.97,1944,6.564,1945,5.334,1946,3.907,1947,3.907,1948,5.61,1949,3.907,1950,7.91,1951,4.559,1952,3.907,1953,4.247,1954,3.907,1955,3.907,1956,5.61,1957,3.907,1958,5.61,1959,3.907,1960,5.61,1961,3.907,1962,2.784,1963,3.175,1964,3.907,1965,3.907,1966,3.907,1967,2.958,1968,3.465,1969,3.175,1970,2.958,1971,3.907]],["title/interfaces/MembersDto.html",[247,0.291,1972,3.458]],["body/interfaces/MembersDto.html",[3,0.099,4,0.075,8,0.063,29,0.489,30,0.008,38,0.099,171,0.007,172,0.007,186,0.388,202,0.501,247,0.447,249,1.502,258,0.671,639,6.345,1655,6.422,1945,7.323,1972,6.235,1973,7.027,1974,7.993,1975,6.822,1976,7.027,1977,7.027]],["title/injectables/MembersEffects.html",[323,1.016,475,3.712]],["body/injectables/MembersEffects.html",[3,0.071,4,0.054,8,0.045,29,0.508,30,0.008,32,0.588,38,0.071,39,0.534,49,0.434,99,1.221,171,0.005,172,0.005,186,0.279,190,2.037,194,1.459,199,1.725,201,1.037,202,0.289,203,0.996,258,0.545,316,2.127,317,1.965,323,1.488,325,1.19,475,5.44,515,1.884,530,6.225,531,4.8,533,5.409,534,5.366,536,5.704,539,2.742,544,5.249,546,2.777,563,5.169,590,5.938,592,2.986,593,2.874,594,2.986,605,4.475,676,5.938,1663,6.059,1900,6.504,1963,6.957,1978,5.045,1979,6.059,1980,7.594,1981,5.045,1982,6.957,1983,5.045,1984,6.695,1985,6.695,1986,6.695,1987,6.695,1988,6.695,1989,5.045,1990,6.695,1991,6.695,1992,7.099,1993,6.695,1994,6.695,1995,5.045,1996,6.695,1997,6.695,1998,6.695,1999,6.695,2000,5.045,2001,6.695,2002,6.695,2003,6.695,2004,5.045,2005,6.695,2006,6.695,2007,6.695,2008,5.938,2009,5.045,2010,4.475,2011,4.475,2012,4.475,2013,4.475,2014,4.475,2015,4.475,2016,4.475,2017,4.475,2018,5.045]],["title/injectables/MembersService.html",[323,1.016,1982,3.712]],["body/injectables/MembersService.html",[3,0.09,4,0.068,8,0.057,29,0.54,30,0.008,32,0.743,38,0.09,39,0.675,49,0.669,171,0.006,172,0.006,182,2.834,186,0.352,187,1.907,194,1.39,199,1.758,201,1.597,202,0.445,203,1.535,205,1.977,209,1.143,323,1.728,325,1.504,352,4.309,370,2.996,371,2.76,391,4.202,430,2.625,515,2.382,610,3.774,611,4.971,613,4.271,633,3.774,634,4.428,639,4.309,640,5.183,647,4.961,1972,4.828,1979,5.884,1982,6.316,2019,6.378,2020,8.727,2021,8.727,2022,6.378,2023,6.378,2024,6.378,2025,7.772,2026,6.378,2027,6.894,2028,5.657,2029,7.772,2030,6.378]],["title/interfaces/MembersState.html",[247,0.291,463,3.712]],["body/interfaces/MembersState.html",[3,0.065,4,0.049,8,0.041,29,0.495,30,0.008,38,0.101,99,1.655,171,0.005,172,0.005,186,0.255,202,0.516,203,0.911,226,1.854,247,0.293,249,0.986,256,2.199,258,0.513,273,2.45,331,4.589,361,2.882,398,2.199,399,2.199,400,1.609,401,1.683,402,2.248,403,1.763,453,2.78,463,5.835,477,4.092,546,2.905,658,4.331,661,4.291,662,3.885,663,1.444,664,2.843,665,2.23,667,3.117,670,3.885,671,4.757,672,4.98,673,2.843,675,4.757,679,3.048,681,3.731,682,3.885,684,3.731,685,4.97,701,5.214,884,2.23,1152,1.897,1425,3.492,1426,4.092,1427,4.092,1663,3.492,1900,3.748,1941,7.398,1945,3.748,1963,3.748,1972,5.842,1974,4.092,1975,3.492,1979,3.492,1980,4.092,2010,4.092,2011,4.092,2012,4.092,2013,4.092,2014,4.092,2015,4.092,2016,4.092,2017,4.092,2028,4.092,2031,4.613,2032,8.691,2033,8.691,2034,8.691,2035,8.917,2036,8.691,2037,8.691,2038,8.691,2039,4.613,2040,4.613,2041,4.613,2042,4.613,2043,4.613,2044,4.613,2045,4.613,2046,4.613,2047,4.613,2048,4.613,2049,4.613,2050,4.613,2051,4.613,2052,4.613,2053,4.613,2054,4.613]],["title/components/MembersTableComponent.html",[0,0.225,98,0.92]],["body/components/MembersTableComponent.html",[0,0.235,1,0.472,2,0.734,3,0.053,4,0.025,5,0.481,6,0.481,7,0.481,8,0.021,12,0.481,13,1.939,14,1.939,15,0.472,17,0.764,18,1.511,19,0.779,20,1.595,21,1.871,23,2.068,24,1.667,25,0.779,27,0.811,29,0.52,30,0.008,31,0.718,32,0.273,34,0.749,35,0.749,36,0.917,37,1.014,38,0.033,39,0.248,41,3.515,43,0.481,44,0.779,45,0.779,46,0.481,47,1.128,48,0.481,49,0.609,50,0.481,51,0.472,52,0.481,53,0.472,54,0.481,55,0.472,56,0.481,57,0.472,58,0.481,59,0.472,60,0.481,61,0.472,62,0.445,63,0.779,64,0.481,65,0.454,66,0.454,67,1.396,68,0.472,69,0.779,70,0.472,71,0.481,72,0.472,73,0.481,74,0.472,75,0.445,76,0.472,77,0.481,78,0.472,79,0.463,80,0.779,81,0.472,82,0.481,83,0.472,84,0.481,85,0.472,86,0.481,87,0.472,88,0.481,89,0.472,90,0.481,91,0.472,92,0.481,93,0.472,94,1.128,95,0.982,96,0.472,97,0.481,98,1.106,99,1.664,100,0.472,101,0.481,102,0.472,103,0.481,104,0.472,105,0.481,106,0.472,107,0.481,108,0.472,109,0.472,110,0.74,111,0.472,112,0.749,113,0.481,114,0.72,115,0.779,116,0.472,117,0.472,118,0.481,119,0.481,120,0.481,121,0.481,122,0.472,123,0.481,124,0.472,125,0.481,126,0.472,127,0.445,128,0.472,129,0.481,130,0.472,131,0.454,132,0.472,133,0.481,134,0.472,135,0.481,136,0.481,137,0.472,138,0.481,139,0.472,140,0.481,141,0.472,142,0.481,143,0.472,144,0.472,145,0.481,146,0.472,147,0.889,148,0.481,149,0.481,150,0.481,151,0.472,152,0.481,153,0.472,154,0.481,155,0.472,156,0.481,157,0.472,158,0.472,159,0.472,160,0.402,161,0.472,162,0.481,163,0.481,164,0.454,165,0.472,166,0.481,167,0.472,168,0.481,169,0.481,170,0.481,171,0.003,172,0.003,186,0.129,187,0.931,190,1.919,194,0.827,196,3.104,199,1.756,201,1.326,202,0.474,203,1.275,205,1.669,206,1.899,209,1.024,226,0.689,256,1.667,258,0.309,288,2.862,300,2.702,311,2.654,316,2.033,317,1.929,325,0.553,361,1.784,398,1.667,399,1.667,400,1.667,401,1.744,402,1.705,403,1.827,430,1.496,453,1.093,460,0.855,546,1.188,555,1.782,628,1.288,658,4.024,661,1.101,663,0.734,665,1.133,679,1.834,681,2.656,684,2.656,700,1.444,718,2.182,729,1.89,788,3.537,796,1.95,840,1.041,882,1.782,883,3.643,885,2.381,886,2.381,887,2.381,892,2.828,905,2.356,906,3.735,921,2.626,922,3.548,930,1.168,936,1.168,937,1.288,938,1.041,939,1.168,940,1.168,947,0.896,956,3.013,957,1.205,958,1.245,966,1.485,975,1.782,978,2.823,979,2.823,980,2.823,983,2.737,984,3.006,1024,3.078,1025,3.618,1031,2.626,1047,1.101,1135,1.509,1136,1.774,1152,3.22,1214,1.67,1215,4.941,1216,4.299,1217,3.229,1218,2.946,1219,2.703,1220,2.703,1221,3.406,1228,2.703,1237,3.406,1238,3.406,1239,3.406,1240,3.618,1241,3.406,1248,1.67,1251,2.703,1252,3.914,1264,2.703,1268,1.904,1274,1.904,1282,1.904,1283,1.583,1284,1.444,1293,2.538,1294,1.288,1305,1.509,1309,1.67,1312,1.67,1313,1.583,1314,1.67,1315,1.67,1316,1.774,1317,1.67,1318,1.774,1319,1.444,1320,2.443,1321,1.583,1322,1.67,1323,3.385,1324,1.583,1325,3.078,1326,1.67,1327,1.67,1328,2.703,1329,1.67,1331,1.67,1339,2.161,1340,2.084,1341,2.084,1342,2.443,1344,2.703,1346,2.703,1354,2.872,1440,3.018,1592,3.735,1612,3.883,1655,3.406,1660,1.67,1663,1.774,1855,2.946,1861,3.365,1867,2.872,1875,3.365,1890,2.872,1892,1.774,1897,1.444,1899,1.904,1901,1.904,1904,1.904,1905,2.079,1906,2.079,1907,2.079,1908,2.079,1909,2.079,1910,3.229,1911,1.774,1912,1.774,1913,1.774,1914,1.774,1915,2.872,1916,1.774,1927,3.082,1969,7.121,1979,3.618,2027,5.351,2055,8.763,2056,4.779,2057,4.779,2058,5.492,2059,5.492,2060,3.883,2061,5.492,2062,5.492,2063,5.492,2064,3.793,2065,4.779,2066,2.343,2067,2.079,2068,2.079,2069,2.343,2070,2.343,2071,2.079,2072,2.079,2073,2.079,2074,1.904,2075,2.079,2076,2.343,2077,3.793,2078,2.343,2079,2.079,2080,2.079,2081,1.904,2082,3.793,2083,2.343,2084,2.343,2085,2.343,2086,2.343,2087,3.793,2088,3.793,2089,3.793,2090,2.343,2091,2.343,2092,2.343,2093,1.904,2094,2.343,2095,2.343,2096,2.343,2097,2.343,2098,2.343,2099,4.779,2100,2.343,2101,6.033,2102,2.343,2103,2.343,2104,2.343,2105,2.343,2106,2.343,2107,2.343,2108,2.343,2109,2.343,2110,2.343,2111,2.343,2112,3.793,2113,2.343,2114,3.793,2115,3.793,2116,3.793,2117,3.793,2118,3.793,2119,3.793,2120,3.793,2121,3.793,2122,3.793,2123,5.492,2124,3.793,2125,3.793,2126,3.793,2127,3.793,2128,3.793,2129,3.793]],["title/injectables/MemoryStorage.html",[323,1.016,1739,3.458]],["body/injectables/MemoryStorage.html",[3,0.082,4,0.062,8,0.052,29,0.346,30,0.008,32,0.679,38,0.082,39,0.617,49,0.728,171,0.006,172,0.006,179,1.99,186,0.445,187,1.804,190,2.183,199,1.82,201,1.737,202,0.51,203,1.67,205,2.056,206,2.487,209,1.295,226,1.715,258,0.599,313,3.477,316,1.489,317,1.899,323,1.635,372,4.415,374,4.964,430,2.521,453,2.512,515,2.178,731,4.968,975,2.739,1031,4.425,1159,5.975,1281,3.322,1681,4.415,1682,6.026,1723,5.975,1724,6.106,1725,5.975,1726,5.975,1727,6.544,1729,5.975,1730,5.975,1732,4.739,1734,4.739,1736,4.739,1737,4.739,1739,5.566,1740,4.415,2130,9.141,2131,5.831,2132,5.831,2133,5.831,2134,5.831,2135,5.831,2136,5.831,2137,5.173,2138,5.831,2139,4.968,2140,5.831,2141,5.831,2142,5.831,2143,5.831,2144,5.173,2145,5.831,2146,5.831]],["title/interfaces/MenuChangeEvent.html",[247,0.291,2147,3.712]],["body/interfaces/MenuChangeEvent.html",[3,0.101,4,0.077,8,0.065,30,0.008,38,0.101,171,0.007,172,0.007,186,0.397,202,0.478,203,1.647,209,1.202,247,0.457,249,1.535,258,0.679,300,2.88,1724,6.131,2147,6.778,2148,7.181,2149,5.118,2150,7.181,2151,8.049]],["title/injectables/MenuService.html",[323,1.016,722,3.458]],["body/injectables/MenuService.html",[2,1.661,3,0.061,4,0.047,8,0.039,18,1.432,29,0.415,30,0.008,32,0.509,38,0.061,39,0.891,49,0.377,131,1.741,171,0.005,172,0.005,182,1.944,186,0.242,187,1.491,190,2.392,199,1.653,201,0.899,202,0.4,203,0.864,205,1.433,206,1.787,251,3.745,253,4.304,258,0.495,259,4.304,270,4.465,273,3.708,293,4.888,300,2.465,316,1.926,317,2.024,323,1.351,324,6.717,325,1.032,331,4.149,350,5.064,365,3.914,367,4.33,368,4.33,370,2.055,378,5.711,381,3.792,382,6.496,383,4.859,385,5.711,389,4.149,391,4.224,397,4.976,404,5.098,405,5.357,409,5.377,515,1.633,711,4.938,712,4.33,722,6.808,800,5.286,841,2.817,956,3.634,1031,3.837,1486,5.674,1488,4.938,2147,7.245,2149,3.117,2152,4.374,2153,6.076,2154,6.076,2155,7.544,2156,8.296,2157,8.296,2158,7.827,2159,6.076,2160,4.374,2161,7.544,2162,5.674,2163,5.674,2164,7.032,2165,6.982,2166,6.193,2167,6.982,2168,4.374,2169,6.903,2170,4.374,2171,7.612,2172,6.973,2173,7.612,2174,6.076,2175,4.374,2176,4.374,2177,6.076,2178,4.374,2179,4.374,2180,4.374,2181,4.374,2182,4.374]],["title/components/MenuitemComponent.html",[0,0.225,100,0.92]],["body/components/MenuitemComponent.html",[0,0.297,1,0.362,2,0.589,3,0.025,4,0.019,5,0.369,6,0.369,7,0.369,8,0.016,12,0.369,13,1.902,14,1.9,15,0.362,17,0.613,18,0.885,19,0.625,20,1.322,22,2.343,23,1.713,24,1.381,25,0.625,29,0.406,30,0.008,31,0.551,32,0.209,33,0.82,34,0.574,35,0.574,37,0.777,38,0.025,39,0.911,41,2.272,43,0.369,44,0.625,45,1.24,46,0.369,47,0.958,48,0.369,49,0.401,50,0.369,51,0.362,52,0.369,53,0.362,54,0.369,55,0.362,56,0.369,57,0.362,58,0.369,59,0.362,60,0.369,61,0.362,62,0.341,63,0.625,64,0.369,65,0.348,66,0.348,67,1.24,68,0.362,69,0.625,70,0.362,71,0.369,72,0.362,73,0.369,74,0.362,75,0.341,76,0.362,77,0.369,78,0.362,79,0.355,80,0.625,81,0.362,82,0.369,83,0.362,84,0.369,85,0.362,86,0.369,87,0.362,88,0.369,89,0.362,90,0.369,91,0.362,92,0.369,93,0.362,94,0.369,95,0.813,96,0.362,97,0.369,98,0.362,99,0.328,100,1.6,101,0.369,102,0.362,103,0.369,104,0.362,105,0.369,106,0.362,107,0.369,108,0.362,109,0.362,110,0.613,111,0.362,112,0.601,113,0.369,114,0.578,115,0.625,116,0.362,117,0.362,118,0.369,119,0.369,120,0.369,121,0.369,122,0.362,123,0.369,124,0.362,125,0.369,126,0.362,127,0.341,128,0.362,129,0.369,130,0.362,131,1.01,132,0.362,133,0.369,134,0.362,135,0.369,136,0.369,137,0.362,138,0.369,139,0.362,140,0.369,141,0.362,142,0.369,143,0.362,144,0.362,145,0.369,146,0.362,147,0.737,148,0.369,149,0.369,150,0.369,151,0.362,152,0.369,153,0.362,154,0.369,155,0.362,156,0.369,157,0.362,158,0.362,159,0.362,160,0.308,161,0.362,162,0.369,163,0.369,164,0.348,165,0.362,166,0.369,167,0.362,168,0.369,169,0.369,170,0.369,171,0.002,172,0.002,179,1.038,180,1.67,182,3.208,186,0.456,187,0.747,189,2.677,190,0.825,194,1.442,197,4.28,199,1.6,201,0.625,202,0.488,203,0.601,205,1.23,206,1.371,209,1.024,215,1.214,226,0.528,229,2.473,251,2.44,253,1.876,254,4.805,256,1.381,258,0.248,259,3.72,269,3.002,270,5.325,272,2.304,273,3.634,276,1.214,278,3.149,279,5.507,281,2.056,282,4.523,287,2.997,288,3.397,293,5.262,298,4.649,299,2.056,300,1.972,302,2.169,306,3.912,311,2.896,313,2.329,316,1.541,317,1.702,320,4.088,325,0.424,331,4.139,339,4.288,344,2.056,345,2.304,350,4.495,352,5.95,367,4.036,375,2.169,379,2.304,381,1.283,383,4.649,388,5.042,389,0.869,390,2.55,391,2.66,392,2.304,393,4.469,394,2.304,397,2.169,398,1.062,399,1.062,400,1.062,401,1.11,402,0.641,403,0.687,404,2.056,405,2.675,409,2.169,423,2.056,430,1.987,441,2.169,446,3.321,453,0.877,672,3.491,712,2.821,721,3.648,722,6.138,729,1.516,731,2.056,732,1.36,735,2.473,736,2.821,743,4.569,745,3.787,750,2.699,751,5.523,755,3.217,756,3.217,758,2.699,762,6.874,763,2.699,764,3.512,766,3.787,778,3.827,785,1.063,796,2.035,798,3.512,800,2.997,839,1.593,841,3.359,881,2.035,901,3.518,905,1.701,907,4.168,924,4.328,956,3.333,975,1.429,1031,2.176,1293,0.954,1313,2.675,1319,1.876,1340,2.561,1341,1.672,1425,2.304,1466,6.07,1476,5.18,1482,2.169,1485,5.18,1495,4.626,1520,2.699,1545,1.593,1546,1.593,1547,1.593,1552,2.473,1561,4.134,1589,4.603,1724,5.527,1740,3.528,2149,4.036,2151,1.593,2156,4.134,2157,2.699,2158,3.512,2162,4.238,2163,4.238,2164,4.626,2169,6.015,2172,2.473,2183,1.796,2184,8.294,2185,3.043,2186,2.699,2187,3.959,2188,3.043,2189,6.035,2190,6.035,2191,5.215,2192,4.66,2193,6.613,2194,3.043,2195,3.043,2196,3.959,2197,3.959,2198,5.664,2199,6.035,2200,3.043,2201,3.043,2202,3.959,2203,4.66,2204,5.664,2205,3.512,2206,3.959,2207,5.024,2208,5.664,2209,4.134,2210,4.134,2211,3.512,2212,3.512,2213,1.796,2214,3.043,2215,7.374,2216,5.63,2217,4.66,2218,5.664,2219,4.66,2220,2.699,2221,1.796,2222,5.63,2223,6.613,2224,2.473,2225,1.796,2226,4.134,2227,4.66,2228,4.66,2229,4.66,2230,4.66,2231,3.043,2232,1.796,2233,3.959,2234,3.043,2235,3.043,2236,3.043,2237,3.043,2238,3.043,2239,1.796,2240,3.043,2241,4.134,2242,3.043,2243,3.959,2244,3.959,2245,3.787,2246,3.512,2247,3.959,2248,3.512,2249,2.699,2250,2.699,2251,1.796,2252,3.043,2253,3.043,2254,3.043,2255,1.796,2256,1.796,2257,1.796,2258,3.043,2259,5.024,2260,2.473,2261,1.796,2262,1.796,2263,4.134,2264,4.66,2265,1.796,2266,1.796,2267,1.796,2268,1.796,2269,1.796,2270,1.796,2271,3.043,2272,1.593,2273,1.796,2274,1.796,2275,1.796,2276,1.796,2277,1.796,2278,3.959,2279,3.043,2280,1.796,2281,1.796,2282,1.796,2283,1.796,2284,3.043,2285,1.796,2286,1.796,2287,1.796,2288,6.035,2289,3.043,2290,5.215,2291,3.043,2292,3.043,2293,1.796,2294,3.043,2295,3.043,2296,3.043,2297,1.796,2298,1.796,2299,3.043,2300,1.796,2301,1.796,2302,1.593,2303,1.796,2304,3.959,2305,1.796,2306,1.796,2307,3.043,2308,1.593,2309,1.796,2310,1.796,2311,1.796,2312,3.043,2313,1.796,2314,1.796,2315,1.796,2316,3.043,2317,1.796,2318,1.796,2319,1.796,2320,5.664]],["title/components/MessagesComponent.html",[0,0.225,102,0.92]],["body/components/MessagesComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.613,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2321,5.05,2322,8.007,2323,6.699,2324,6.699]],["title/components/NotFoundComponent.html",[0,0.225,104,0.92]],["body/components/NotFoundComponent.html",[0,0.359,1,0.96,2,1.248,3,0.067,4,0.051,5,0.979,6,0.979,7,0.979,8,0.043,12,0.979,13,2.008,14,2.008,15,0.96,17,1.298,18,1.223,19,1.324,20,2.437,21,2.858,22,4.321,23,3.16,24,2.547,25,1.324,27,1.377,29,0.5,30,0.008,31,1.461,32,0.555,33,2.176,34,1.524,35,1.524,36,1.866,37,2.062,38,0.067,39,0.505,41,3.137,43,0.979,44,1.324,45,1.324,46,0.979,47,1.607,48,0.979,49,0.555,50,0.979,51,0.96,52,0.979,53,0.96,54,0.979,55,0.96,56,0.979,57,0.96,58,0.979,59,0.96,60,0.979,61,0.96,62,0.904,63,1.324,64,0.979,65,0.923,66,0.923,67,1.769,68,0.96,69,1.324,70,0.96,71,0.979,72,0.96,73,0.979,74,0.96,75,0.904,76,0.96,77,0.979,78,0.96,79,0.941,80,1.324,81,0.96,82,0.979,83,0.96,84,0.979,85,0.96,86,0.979,87,0.96,88,0.979,89,0.96,90,0.979,91,0.96,92,0.979,93,0.96,94,0.979,95,1.5,96,0.96,97,0.979,98,0.96,99,0.869,100,0.96,101,0.979,102,0.96,103,0.979,104,1.576,105,0.979,106,0.96,107,0.979,108,0.96,109,0.96,110,1.131,111,0.96,112,1.273,113,0.979,114,1.223,115,1.324,116,0.96,117,0.96,118,0.979,119,0.979,120,0.979,121,0.979,122,0.96,123,0.979,124,0.96,125,0.979,126,0.96,127,0.904,128,0.96,129,0.979,130,0.96,131,0.923,132,0.96,133,0.979,134,0.96,135,0.979,136,0.979,137,0.96,138,0.979,139,0.96,140,0.979,141,0.96,142,0.979,143,0.96,144,0.96,145,0.979,146,0.96,147,1.358,148,0.979,149,0.979,150,0.979,151,0.96,152,0.979,153,0.96,154,0.979,155,0.96,156,0.979,157,0.96,158,0.96,159,0.96,160,0.818,161,0.96,162,0.979,163,0.979,164,0.923,165,0.96,166,0.979,167,0.96,168,0.979,169,0.979,170,0.979,171,0.005,172,0.005,976,5.236,2325,4.765,2326,4.227,2327,4.765,2328,5.716,2329,6.444,2330,6.444,2331,6.444,2332,6.444]],["title/components/NotificationsComponent.html",[0,0.225,106,0.92]],["body/components/NotificationsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.613,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2173,7.102,2333,5.05,2334,6.699,2335,6.699]],["title/interfaces/Organization.html",[247,0.291,884,2.209]],["body/interfaces/Organization.html",[3,0.096,4,0.073,8,0.062,30,0.008,38,0.096,49,0.77,171,0.007,172,0.007,186,0.379,202,0.53,209,1.307,247,0.436,249,1.466,258,0.661,884,3.926,914,4.749,1088,3.712,1091,4.597,1092,4.914,2336,6.86,2337,7.931,2338,7.266]],["title/components/OrganizationComponent.html",[0,0.225,108,0.92]],["body/components/OrganizationComponent.html",[0,0.253,1,0.527,2,0.802,3,0.037,4,0.028,5,0.537,6,0.537,7,0.537,8,0.053,12,0.537,13,1.953,14,1.953,15,0.527,17,0.834,18,0.976,19,0.851,20,1.716,21,2.013,23,2.225,24,1.793,25,0.851,27,0.885,29,0.535,30,0.008,31,0.802,32,0.305,34,0.836,35,0.836,36,1.024,37,1.131,38,0.037,39,0.277,41,3.602,43,0.537,44,0.851,45,0.851,46,0.537,47,1.201,48,0.537,49,0.669,50,0.537,51,0.527,52,0.537,53,0.527,54,0.537,55,0.527,56,0.537,57,0.527,58,0.537,59,0.527,60,0.537,61,0.527,62,0.496,63,0.851,64,0.537,65,0.506,66,0.506,67,1.459,68,0.527,69,0.851,70,0.527,71,0.537,72,0.527,73,0.537,74,0.527,75,0.496,76,0.527,77,0.537,78,0.527,79,0.516,80,0.851,81,0.527,82,0.537,83,0.527,84,0.537,85,0.527,86,0.537,87,0.527,88,0.537,89,0.527,90,0.537,91,0.527,92,0.537,93,0.527,94,0.537,95,1.056,96,0.527,97,0.537,98,0.527,99,0.477,100,0.527,101,0.537,102,0.527,103,0.537,104,0.527,105,0.537,106,0.527,107,0.537,108,1.178,109,0.527,110,0.796,111,0.527,112,0.818,113,0.537,114,0.786,115,0.851,116,0.527,117,0.527,118,0.537,119,0.537,120,0.537,121,0.537,122,0.527,123,0.537,124,0.527,125,0.537,126,0.527,127,0.496,128,0.527,129,0.537,130,0.527,131,0.506,132,0.527,133,0.537,134,0.527,135,0.537,136,0.537,137,0.527,138,0.537,139,0.527,140,0.537,141,0.527,142,0.537,143,0.527,144,0.527,145,0.537,146,0.527,147,0.957,148,0.537,149,0.537,150,0.537,151,0.527,152,0.537,153,0.527,154,0.537,155,0.527,156,0.537,157,0.527,158,0.527,159,0.527,160,0.449,161,0.527,162,0.537,163,0.537,164,0.506,165,0.527,166,0.537,167,0.527,168,0.537,169,0.537,170,0.537,171,0.003,172,0.003,179,1.413,181,2.929,186,0.144,187,1.016,188,3.331,190,2.106,194,0.903,196,3.244,199,1.757,201,1.459,202,0.469,203,1.498,205,1.789,206,2.089,209,1.196,226,1.218,256,1.444,258,0.337,288,1.024,300,1.353,311,1.075,313,2.404,316,1.813,317,1.737,325,0.617,381,1.746,389,1.264,398,1.444,399,1.444,400,1.793,401,1.511,402,1.477,403,1,430,1.831,453,2.284,460,0.954,539,0.954,546,1.296,555,1.945,658,3.176,661,1.228,663,0.819,665,1.264,681,1.264,684,2.002,718,2.348,796,1.344,840,1.162,881,2.643,882,1.945,883,3.779,884,4.052,885,2.562,886,2.562,888,3.673,889,3.673,893,4.542,896,4.178,897,4.178,899,3.365,901,3.006,902,3.135,904,5.061,905,2.474,912,3.365,914,3.385,919,3.135,924,2.643,929,2.929,930,2.063,934,3.365,936,1.303,938,1.162,939,1.303,940,1.303,941,1.612,942,2.552,943,1.612,946,2.319,947,1,949,2.125,951,2.125,953,1.979,954,2.125,955,1.612,956,1.661,957,1.344,958,1.389,959,1.612,960,1.612,961,2.125,966,1.024,975,2.747,978,1.344,979,1.344,980,1.344,983,1.303,984,1.303,986,3.365,991,3.772,992,1.979,996,2.125,997,2.319,998,1.979,999,3.365,1011,1.228,1047,1.228,1270,3.604,1293,2.199,1294,1.437,1295,1.303,1296,1.612,1297,1.612,1298,1.264,1299,1.344,1300,1.612,1305,1.684,1310,1.979,1311,1.979,1339,1.489,1340,1.437,1341,1.437,1342,1.684,1855,3.169,1867,3.135,1890,3.135,1892,1.979,1897,1.612,1910,3.474,1911,1.979,1912,1.979,1913,1.979,1914,1.979,1915,3.135,1916,1.979,1938,3.664,1943,3.892,1953,3.135,1962,1.863,2339,2.615,2340,4.56,2341,4.56,2342,5.141,2343,5.141,2344,4.56,2345,5.141,2346,5.141,2347,4.56,2348,5.141,2349,5.141,2350,5.848,2351,4.141,2352,4.141,2353,4.141,2354,4.141,2355,2.615,2356,2.615,2357,4.141,2358,2.615,2359,2.615,2360,2.615,2361,2.615,2362,2.615,2363,4.141,2364,2.615,2365,4.141,2366,5.848,2367,2.615,2368,3.673,2369,2.615,2370,4.141,2371,2.615,2372,5.848,2373,2.615,2374,4.141,2375,2.615,2376,2.615,2377,4.141,2378,2.615,2379,3.673,2380,2.615,2381,5.141,2382,4.141,2383,2.615,2384,2.615,2385,2.319,2386,2.319,2387,2.615,2388,2.615,2389,2.319,2390,2.615,2391,1.979,2392,2.615,2393,2.615,2394,4.141,2395,4.141,2396,4.141,2397,2.615,2398,2.615,2399,2.615,2400,2.615,2401,2.615,2402,2.615,2403,4.141,2404,4.141,2405,2.615,2406,2.615,2407,2.615,2408,2.615,2409,2.615,2410,2.615,2411,4.141,2412,4.141,2413,4.141,2414,4.141,2415,4.141,2416,4.141,2417,4.141,2418,5.848,2419,4.141,2420,4.141,2421,4.141,2422,4.141,2423,4.141,2424,4.141]],["title/interfaces/OrganizationDto.html",[247,0.291,2425,3.712]],["body/interfaces/OrganizationDto.html",[3,0.096,4,0.073,8,0.062,30,0.008,38,0.096,49,0.77,171,0.007,172,0.007,186,0.379,202,0.53,209,1.307,247,0.436,249,1.466,258,0.661,914,4.749,1088,3.712,1091,4.597,1092,4.914,2337,7.931,2338,7.266,2425,6.599,2426,6.86]],["title/injectables/OrganizationEffects.html",[323,1.016,479,3.712]],["body/injectables/OrganizationEffects.html",[3,0.08,4,0.061,8,0.051,29,0.513,30,0.008,32,0.661,38,0.08,39,0.601,49,0.489,171,0.006,172,0.006,186,0.314,190,1.96,194,1.576,199,1.687,201,1.166,202,0.325,203,1.121,258,0.588,316,2.03,317,1.876,323,1.607,325,1.339,479,5.874,515,2.12,531,4.936,533,5.316,534,5.231,536,5.967,539,2.071,544,5.231,546,2.767,563,4.706,592,3.359,593,3.233,594,3.359,900,4.297,903,5.035,904,6.299,948,6.338,2391,6.338,2427,5.676,2428,7.953,2429,5.676,2430,7.228,2431,7.228,2432,8.373,2433,7.228,2434,8.373,2435,5.676,2436,7.228,2437,7.228,2438,7.228,2439,5.676,2440,7.228,2441,7.228,2442,5.874,2443,7.228,2444,7.228,2445,5.676,2446,5.676,2447,5.035,2448,5.035,2449,5.035,2450,5.035,2451,5.035,2452,5.035]],["title/injectables/OrganizationService.html",[323,1.016,904,3.256]],["body/injectables/OrganizationService.html",[3,0.083,4,0.063,8,0.076,29,0.538,30,0.008,32,0.689,38,0.083,39,0.626,49,0.732,171,0.006,172,0.006,182,2.629,186,0.327,187,1.821,194,1.29,199,1.764,201,1.746,202,0.487,203,1.679,205,2.005,209,1.105,226,1.74,323,1.649,325,1.395,370,2.779,371,2.56,381,2.495,391,4.344,430,2.661,515,2.209,610,3.501,611,4.842,613,4.077,628,4.455,633,3.501,634,4.227,638,3.646,643,4.807,647,4.797,778,3.997,884,2.86,893,5.288,900,6.137,904,5.288,914,3.94,944,6.435,998,5.617,1031,4.077,1359,4.478,1675,4.807,2391,5.617,2425,4.807,2453,5.916,2454,8.5,2455,5.916,2456,5.916,2457,5.916,2458,5.916,2459,5.916,2460,7.419,2461,5.916,2462,7.19,2463,5.247,2464,5.916,2465,5.916,2466,8.106,2467,5.916,2468,5.247,2469,5.916,2470,5.916,2471,5.247,2472,5.916]],["title/interfaces/OrganizationState.html",[247,0.291,464,3.712]],["body/interfaces/OrganizationState.html",[3,0.074,4,0.056,8,0.047,29,0.483,30,0.008,38,0.108,62,1.454,171,0.006,172,0.006,186,0.29,202,0.484,226,2.022,247,0.334,249,1.122,256,2.398,258,0.56,273,2.788,331,4.582,381,3.231,398,2.398,399,2.398,400,2.398,401,2.508,402,2.452,403,2.627,453,2.715,464,6.227,481,4.657,546,2.959,658,4.584,661,4.143,662,4.237,663,1.644,664,3.236,665,2.539,670,4.237,671,4.237,672,5.515,673,3.236,675,4.723,679,3.705,681,3.705,682,4.723,684,3.705,685,4.427,778,4.644,884,4.63,900,3.975,948,3.975,1152,2.826,1359,3.975,2338,4.267,2391,3.975,2447,4.657,2448,4.657,2449,4.657,2450,4.657,2451,4.657,2452,4.657,2462,6.797,2473,5.25,2474,8.947,2475,8.947,2476,5.25,2477,5.25,2478,5.25,2479,5.25,2480,5.25,2481,5.25,2482,5.25,2483,5.25,2484,5.25,2485,5.25,2486,5.25,2487,5.25,2488,5.25,2489,5.25]],["title/interfaces/Page.html",[247,0.291,1130,2.704]],["body/interfaces/Page.html",[3,0.087,4,0.066,8,0.056,30,0.008,38,0.087,171,0.006,172,0.006,186,0.342,202,0.548,247,0.394,249,1.325,258,0.622,300,3.138,313,3.981,315,5.566,1062,5.327,1130,4.521,1281,4.923,2260,7.344,2490,6.2,2491,7.666,2492,7.023,2493,8.642,2494,8.642,2495,7.212,2496,8.642,2497,8.642,2498,7.344,2499,6.2,2500,6.2,2501,7.639,2502,7.639,2503,6.2,2504,6.2,2505,6.2]],["title/interfaces/Pageable.html",[247,0.291,1062,2.816]],["body/interfaces/Pageable.html",[3,0.098,4,0.074,8,0.062,30,0.008,38,0.115,39,0.736,171,0.007,172,0.007,179,2.37,186,0.384,202,0.498,209,1.224,247,0.442,249,1.485,258,0.666,313,3.881,315,5.898,975,3.263,1062,5.36,1063,4.951,1130,5.419,2495,7.441,2506,6.162,2507,5.645]],["title/classes/PageableDefault.html",[39,0.484,1063,3.256]],["body/classes/PageableDefault.html",[3,0.096,4,0.073,8,0.061,30,0.008,38,0.114,39,0.721,171,0.006,172,0.006,179,2.759,186,0.376,199,1.737,202,0.494,209,1.176,247,0.433,258,0.658,313,3.799,315,5.746,316,2.202,317,2.034,975,3.798,1062,5.316,1063,5.763,1130,5.28,2495,7.25,2506,6.042,2507,6.571,2508,6.812,2509,6.812,2510,6.812,2511,6.812]],["title/interfaces/Platform.html",[247,0.291,2512,2.704]],["body/interfaces/Platform.html",[3,0.095,4,0.072,8,0.061,29,0.401,30,0.008,38,0.095,171,0.006,172,0.006,186,0.373,202,0.544,209,1.288,247,0.429,249,1.442,258,0.655,453,2.475,1011,3.169,1014,5.263,1016,6.009,1088,3.698,1091,4.572,1092,4.887,2512,4.758,2513,6.746,2514,7.888,2515,7.227,2516,6.746]],["title/interfaces/PlatformDto.html",[247,0.291,2517,3.256]],["body/interfaces/PlatformDto.html",[3,0.095,4,0.072,8,0.061,29,0.401,30,0.008,38,0.095,171,0.006,172,0.006,186,0.373,202,0.544,209,1.288,247,0.429,249,1.442,258,0.655,453,2.475,1011,3.169,1014,5.263,1016,6.009,1088,3.698,1091,4.572,1092,4.887,2514,7.888,2515,7.227,2517,5.73,2518,6.746,2519,6.746]],["title/injectables/PlatformEffects.html",[323,1.016,497,3.712]],["body/injectables/PlatformEffects.html",[3,0.089,4,0.068,8,0.057,29,0.531,30,0.008,32,0.741,38,0.089,39,0.673,49,0.548,171,0.006,172,0.006,186,0.351,190,2.104,194,1.692,199,1.563,201,1.307,202,0.365,203,1.256,258,0.632,316,1.624,317,1.5,323,1.725,325,1.5,497,6.306,515,2.375,531,5.059,533,4.956,534,4.592,539,2.321,544,4.592,546,2.43,563,4.956,592,3.764,593,3.624,594,3.764,991,4.121,2442,6.306,2520,6.361,2521,7.085,2522,6.361,2523,7.389,2524,6.361,2525,7.76,2526,7.76,2527,7.428,2528,6.306,2529,7.76,2530,6.361,2531,6.361,2532,5.642,2533,5.642]],["title/injectables/PlatformService.html",[323,1.016,2523,3.712]],["body/injectables/PlatformService.html",[3,0.096,4,0.073,8,0.061,29,0.541,30,0.008,32,0.792,38,0.096,39,0.72,49,0.586,171,0.006,172,0.006,182,3.023,186,0.376,187,1.983,194,1.483,199,1.628,201,1.398,202,0.39,203,1.343,205,1.604,323,1.796,325,1.604,370,3.195,371,2.944,391,4.049,430,2.13,515,2.54,610,4.026,611,5.08,613,4.44,633,4.026,634,4.603,647,4.026,2517,4.848,2523,6.566,2534,6.803,2535,8.917,2536,6.803,2537,6.803,2538,6.803,2539,6.803]],["title/interfaces/PlatformState.html",[247,0.291,465,3.712]],["body/interfaces/PlatformState.html",[3,0.087,4,0.066,8,0.055,29,0.512,30,0.008,38,0.116,99,1.125,171,0.006,172,0.006,186,0.341,202,0.473,226,2.24,247,0.392,249,1.318,256,2.152,258,0.62,273,3.276,331,4.365,398,2.152,399,2.152,400,2.152,401,2.251,402,2.201,403,2.358,453,2.684,465,6.713,495,5.472,546,2.935,648,4.168,658,4.604,661,4.052,662,4.694,663,1.931,664,3.802,665,2.983,670,4.694,671,3.802,672,5.092,673,3.802,675,3.802,679,2.983,681,2.983,682,3.802,684,2.983,685,4.905,884,2.983,1152,2.536,2512,5.105,2521,5.013,2527,5.472,2528,7.335,2532,5.472,2533,5.472,2540,6.169,2541,6.169,2542,6.169,2543,6.169,2544,6.169,2545,6.169]],["title/interfaces/Project.html",[110,0.708,247,0.291]],["body/interfaces/Project.html",[3,0.096,4,0.073,8,0.062,29,0.481,30,0.008,38,0.096,49,0.769,75,1.696,110,1.338,127,1.696,171,0.007,172,0.007,186,0.378,202,0.523,209,1.291,247,0.435,249,1.462,258,0.66,1113,6.366,1120,5.559,1307,5.506,2512,5.571,2546,6.841,2547,6.841]],["title/interfaces/ProjectDebugFile.html",[247,0.291,2548,4.052]],["body/interfaces/ProjectDebugFile.html",[3,0.096,4,0.073,8,0.083,29,0.407,30,0.008,38,0.096,65,1.328,171,0.007,172,0.007,186,0.379,202,0.543,209,1.292,247,0.436,249,1.466,258,0.661,1009,6.769,1011,3.222,1088,3.47,1091,4.597,2548,7.203,2549,6.085,2550,6.86,2551,7.931,2552,7.931,2553,6.86]],["title/interfaces/ProjectDebugFileDto.html",[247,0.291,2554,4.052]],["body/interfaces/ProjectDebugFileDto.html",[3,0.096,4,0.073,8,0.083,29,0.407,30,0.008,38,0.096,65,1.328,171,0.007,172,0.007,186,0.379,202,0.543,209,1.292,247,0.436,249,1.466,258,0.661,1008,6.085,1009,6.769,1010,6.085,1011,3.222,1088,3.47,1091,4.597,2551,7.931,2552,7.931,2554,7.203,2555,4.889]],["title/components/ProjectDetailsComponent.html",[0,0.225,109,0.92]],["body/components/ProjectDetailsComponent.html",[0,0.368,1,1.007,2,1.288,3,0.07,4,0.053,5,1.027,6,1.027,7,1.027,8,0.045,12,1.027,13,2.011,14,2.011,15,1.007,17,1.34,18,1.263,19,1.027,25,1.367,27,1.422,29,0.297,30,0.007,32,0.582,38,0.07,39,0.529,43,1.027,44,1.367,45,1.367,46,1.027,47,1.638,48,1.027,49,0.573,50,1.027,51,1.007,52,1.027,53,1.007,54,1.027,55,1.007,56,1.027,57,1.007,58,1.027,59,1.007,60,1.027,61,1.007,62,0.949,63,1.367,64,1.027,65,0.968,66,0.968,67,1.791,68,1.007,69,1.367,70,1.007,71,1.027,72,1.007,73,1.027,74,1.007,75,0.949,76,1.007,77,1.027,78,1.007,79,0.987,80,1.367,81,1.007,82,1.027,83,1.007,84,1.027,85,1.007,86,1.027,87,1.007,88,1.027,89,1.007,90,1.027,91,1.007,92,1.027,93,1.007,94,1.027,95,1.537,96,1.007,97,1.027,98,1.007,99,0.912,100,1.007,101,1.027,102,1.007,103,1.027,104,1.007,105,1.027,106,1.007,107,1.027,108,1.007,109,1.606,110,1.414,111,1.007,112,1.314,113,1.027,114,1.263,115,1.367,116,1.007,117,1.007,118,1.027,119,1.027,120,1.027,121,1.027,122,1.007,123,1.027,124,1.007,125,1.027,126,1.007,127,0.949,128,1.007,129,1.027,130,1.007,131,0.968,132,1.007,133,1.027,134,1.007,135,1.027,136,1.027,137,1.007,138,1.027,139,1.007,140,1.027,141,1.007,142,1.027,143,1.007,144,1.007,145,1.027,146,1.007,147,1.392,148,1.027,149,1.027,150,1.027,151,1.007,152,1.027,153,1.007,154,1.027,155,1.007,156,1.027,157,1.007,158,1.007,159,1.007,160,0.858,161,1.007,162,1.027,163,1.027,164,0.968,165,1.007,166,1.027,167,1.007,168,1.027,169,1.027,170,1.027,171,0.005,172,0.005,177,2.669,1019,5.683,1020,5.902,1021,5.902,2556,4.999,2557,4.999,2558,4.999]],["title/interfaces/ProjectDto.html",[247,0.291,2559,3.712]],["body/interfaces/ProjectDto.html",[3,0.096,4,0.073,8,0.062,29,0.481,30,0.008,38,0.096,49,0.769,75,1.696,110,1.06,127,1.696,171,0.007,172,0.007,186,0.378,202,0.523,209,1.291,247,0.435,249,1.462,258,0.66,1307,5.506,1793,6.366,1794,5.179,2512,5.287,2517,6.366,2559,6.588,2560,6.841,2561,6.068]],["title/injectables/ProjectEffects.html",[323,1.016,483,3.712]],["body/injectables/ProjectEffects.html",[3,0.079,4,0.06,8,0.051,29,0.513,30,0.008,32,0.657,38,0.079,39,0.597,49,0.486,114,1.586,171,0.006,172,0.006,186,0.312,190,1.952,194,1.57,199,1.683,201,1.159,202,0.323,203,1.114,258,0.586,316,2.025,317,1.871,323,1.601,325,1.331,483,5.852,515,2.107,531,4.93,533,5.309,534,5.223,536,5.954,539,2.059,544,5.223,546,2.763,563,4.694,592,3.34,593,3.215,594,3.34,1122,5.954,1304,3.813,2562,5.643,2563,6.789,2564,6.325,2565,4.586,2566,6.682,2567,5.643,2568,7.201,2569,7.201,2570,6.388,2571,7.201,2572,7.201,2573,5.643,2574,7.201,2575,7.201,2576,7.411,2577,7.201,2578,7.201,2579,5.643,2580,7.201,2581,7.201,2582,7.201,2583,7.201,2584,5.643,2585,5.006,2586,5.006,2587,5.006,2588,5.006,2589,5.006,2590,5.006,2591,5.006]],["title/interfaces/ProjectHourByHourStatDto.html",[247,0.291,2592,3.712]],["body/interfaces/ProjectHourByHourStatDto.html",[3,0.09,4,0.069,8,0.058,30,0.008,38,0.09,49,0.753,171,0.006,172,0.006,186,0.355,202,0.543,209,1.278,237,6.624,247,0.409,249,1.374,258,0.636,313,3.969,1088,3.656,1307,5.393,2555,4.581,2592,6.346,2593,6.927,2594,5.702,2595,8.75,2596,7.762,2597,8.75,2598,7.762,2599,8.75,2600,8.75,2601,8.75,2602,7.762]],["title/components/ProjectPickerComponent.html",[0,0.225,111,0.92]],["body/components/ProjectPickerComponent.html",[0,0.302,1,0.7,2,0.997,3,0.049,4,0.037,5,0.714,6,0.714,7,0.714,8,0.031,12,0.714,13,1.982,14,1.982,15,0.7,17,1.038,18,1.165,19,1.058,20,2.049,21,2.403,23,2.656,24,2.141,25,1.058,27,1.101,29,0.521,30,0.008,31,1.065,32,0.405,34,1.111,35,1.111,36,1.36,37,1.504,38,0.049,39,0.368,43,0.714,44,1.058,45,1.058,46,0.714,47,1.394,48,0.714,49,0.695,50,0.714,51,0.7,52,0.714,53,0.7,54,0.714,55,0.7,56,0.714,57,0.7,58,0.714,59,0.7,60,0.714,61,0.7,62,0.659,63,1.058,64,0.714,65,0.673,66,0.673,67,1.614,68,0.7,69,1.058,70,0.7,71,0.714,72,0.7,73,0.714,74,0.7,75,0.659,76,0.7,77,0.714,78,0.7,79,0.686,80,1.058,81,0.7,82,0.714,83,0.7,84,0.714,85,0.7,86,0.714,87,0.7,88,0.714,89,0.7,90,0.714,91,0.7,92,0.714,93,0.7,94,0.714,95,1.261,96,0.7,97,0.714,98,0.7,99,0.939,100,0.7,101,0.714,102,0.7,103,0.714,104,0.7,105,0.714,106,0.7,107,0.714,108,0.7,109,0.7,110,1.389,111,1.367,112,1.017,113,0.714,114,1.441,115,1.058,116,0.7,117,0.7,118,0.714,119,0.714,120,0.714,121,0.714,122,0.7,123,0.714,124,0.7,125,0.714,126,0.7,127,0.659,128,0.7,129,0.714,130,0.7,131,0.673,132,0.7,133,0.714,134,0.7,135,0.714,136,0.714,137,0.7,138,0.714,139,0.7,140,0.714,141,0.7,142,0.714,143,0.7,144,0.7,145,0.714,146,0.7,147,1.142,148,0.714,149,0.714,150,0.714,151,0.7,152,0.714,153,0.7,154,0.714,155,0.7,156,0.714,157,0.7,158,0.7,159,0.7,160,0.596,161,0.7,162,0.714,163,0.714,164,0.673,165,0.7,166,0.714,167,0.7,168,0.714,169,0.714,170,0.714,171,0.004,172,0.004,186,0.192,187,1.264,194,0.757,199,1.753,201,1.56,202,0.481,203,1.499,205,1.79,206,2.311,209,0.988,258,0.419,288,2.657,299,2.348,311,2.118,316,1.733,317,1.709,325,0.82,350,2.83,371,1.504,430,1.088,453,1.001,460,1.268,555,1.632,663,1.088,729,2.566,796,1.786,905,2.77,947,1.328,956,2.722,966,1.36,975,2.419,1033,4.646,1039,5.138,1047,1.632,1121,2.056,1123,2.348,1126,2.348,1152,1.429,1158,2.631,1218,3.783,1284,2.142,1293,2.735,1294,1.91,1339,1.979,1340,1.91,1341,1.91,1852,2.824,1853,4.185,1854,4.987,1855,3.783,1856,4.185,1857,4.185,1860,4.987,1862,4.185,1863,4.185,1864,4.185,1865,4.185,1866,5.515,1867,3.899,1871,3.082,1872,3.082,1873,3.082,1874,2.824,1876,3.082,1877,4.185,1878,5.515,1880,4.185,1881,5.515,1883,4.185,1884,5.515,1886,4.185,1887,5.515,1890,3.899,1892,2.631,1893,3.082,1895,2.824,1896,3.082,1897,2.142,1898,2.824,1910,4.147,1911,2.631,1912,2.631,1913,2.631,1914,2.631,1915,3.899,1916,2.631,1921,2.631,1922,2.631,1928,2.824,2564,2.631,2603,8.78,2604,7.788,2605,6.137,2606,6.137,2607,6.137,2608,3.475,2609,3.475,2610,3.475,2611,3.475,2612,3.475,2613,4.569,2614,3.082,2615,3.082,2616,3.082,2617,3.082,2618,3.475,2619,3.475,2620,3.475,2621,3.475,2622,3.475,2623,3.475,2624,5.15,2625,5.15,2626,5.15,2627,5.15,2628,5.15,2629,5.15,2630,4.569,2631,5.15]],["title/interfaces/ProjectRelease.html",[247,0.291,1113,3.256]],["body/interfaces/ProjectRelease.html",[3,0.1,4,0.076,8,0.064,30,0.008,38,0.1,171,0.007,172,0.007,186,0.393,202,0.503,209,1.272,247,0.453,249,1.521,258,0.676,1014,5.355,1088,3.523,1113,5.914,2549,6.315,2632,7.119,2633,7.353,2634,8.027]],["title/interfaces/ProjectReleaseDto.html",[247,0.291,1793,3.256]],["body/interfaces/ProjectReleaseDto.html",[3,0.1,4,0.076,8,0.064,30,0.008,38,0.1,171,0.007,172,0.007,186,0.393,202,0.503,209,1.272,247,0.453,249,1.521,258,0.676,1013,6.315,1014,5.355,1088,3.523,1793,5.914,2555,5.073,2633,7.353,2634,8.027]],["title/interfaces/ProjectSecurityClientDto.html",[247,0.291,2635,4.052]],["body/interfaces/ProjectSecurityClientDto.html",[3,0.1,4,0.076,8,0.064,30,0.008,38,0.1,171,0.007,172,0.007,186,0.393,202,0.503,209,1.299,247,0.452,249,1.519,258,0.675,2555,5.066,2635,7.355,2636,6.305,2637,7.108,2638,9.045,2639,9.045,2640,9.045]],["title/interfaces/ProjectStatDto.html",[247,0.291,2641,3.712]],["body/interfaces/ProjectStatDto.html",[3,0.088,4,0.067,8,0.057,29,0.495,30,0.008,38,0.088,49,0.748,110,1.194,127,1.648,171,0.006,172,0.006,186,0.347,202,0.541,209,1.236,247,0.4,249,1.344,258,0.627,313,3.962,1307,5.353,1793,6.189,1794,4.76,2512,5.139,2517,6.189,2555,4.481,2561,5.577,2592,7.057,2593,6.835,2594,5.577,2596,7.703,2641,6.261,2642,8.684,2643,8.684,2644,8.684,2645,8.684,2646,8.684,2647,8.684,2648,5.577]],["title/interfaces/ProjectState.html",[247,0.291,466,3.712]],["body/interfaces/ProjectState.html",[3,0.072,4,0.054,8,0.046,29,0.477,30,0.008,38,0.106,62,1.433,110,1.393,114,1.629,160,1.296,171,0.005,172,0.005,186,0.281,202,0.509,226,1.981,247,0.324,249,1.088,256,1.776,258,0.548,331,4.568,381,3.183,398,1.776,399,1.776,402,1.817,403,1.947,453,2.752,466,6.134,485,4.517,546,2.687,661,4.266,662,4.152,663,1.594,664,3.139,665,2.462,670,4.152,671,4.653,672,5.544,673,4.152,675,4.653,679,3.65,681,3.65,682,4.653,684,3.65,685,5.174,1122,3.629,1152,3.104,1304,3.441,2563,4.138,2564,3.855,2586,4.517,2587,4.517,2588,4.517,2589,4.517,2590,4.517,2591,4.517,2649,5.092,2650,8.755,2651,8.888,2652,8.888,2653,8.888,2654,8.888,2655,7.614,2656,8.888,2657,8.888,2658,4.138,2659,5.092,2660,5.092,2661,5.092,2662,5.092,2663,5.092,2664,5.092,2665,5.092,2666,5.092,2667,5.092,2668,5.092]],["title/components/ProjectsComponent.html",[0,0.225,112,0.902]],["body/components/ProjectsComponent.html",[0,0.305,1,0.713,2,1.011,3,0.05,4,0.038,5,0.727,6,0.727,7,0.727,8,0.032,12,0.727,13,1.984,14,1.984,15,0.713,17,1.052,18,1.5,19,1.073,20,2.071,21,2.429,23,2.685,24,2.164,25,1.073,27,1.116,29,0.539,30,0.008,31,1.085,32,0.412,34,1.132,35,1.132,36,1.386,37,1.532,38,0.05,39,0.375,41,2.095,43,0.727,44,1.073,45,1.073,46,0.727,47,1.407,48,0.727,49,0.59,50,0.727,51,0.713,52,0.727,53,0.713,54,0.727,55,0.713,56,0.727,57,0.713,58,0.727,59,0.713,60,0.727,61,0.713,62,0.672,63,1.073,64,0.727,65,0.685,66,0.685,67,1.624,68,0.713,69,1.073,70,0.713,71,0.727,72,0.713,73,0.727,74,0.713,75,0.672,76,0.713,77,0.727,78,0.713,79,0.699,80,1.073,81,0.713,82,0.727,83,0.713,84,0.727,85,0.713,86,0.727,87,0.713,88,0.727,89,0.713,90,0.727,91,0.713,92,0.727,93,0.713,94,0.727,95,1.275,96,0.713,97,0.727,98,0.713,99,0.646,100,0.713,101,0.727,102,0.713,103,0.727,104,0.713,105,0.727,106,0.713,107,0.727,108,0.713,109,0.713,110,1.224,111,0.713,112,1.442,113,0.727,114,1.3,115,1.073,116,0.713,117,0.713,118,0.727,119,0.727,120,0.727,121,0.727,122,0.713,123,0.727,124,0.713,125,0.727,126,0.713,127,0.672,128,0.713,129,0.727,130,0.713,131,0.685,132,0.713,133,0.727,134,0.713,135,0.727,136,0.727,137,0.713,138,0.727,139,0.713,140,0.727,141,0.713,142,0.727,143,0.713,144,0.713,145,0.727,146,1.38,147,1.154,148,0.727,149,0.727,150,0.727,151,0.713,152,0.727,153,0.713,154,0.727,155,0.713,156,0.727,157,0.713,158,0.713,159,0.713,160,1.065,161,0.713,162,0.727,163,0.727,164,1.326,165,0.713,166,0.727,167,0.713,168,0.727,169,0.727,170,0.727,171,0.004,172,0.004,179,1.782,180,2.616,186,0.343,187,1.281,189,2.888,190,1.416,194,1.138,199,1.697,201,1.073,202,0.356,203,1.031,205,1.463,206,2.014,209,0.712,258,0.425,316,1.951,317,1.987,325,0.835,344,3.528,460,1.292,539,1.292,663,1.108,718,2.833,840,1.573,882,2.453,886,3.091,887,3.091,905,2.789,938,1.573,939,1.764,947,1.353,956,1.42,966,2.681,975,1.663,1026,5.042,1047,1.663,1068,4.243,1070,4.243,1071,4.411,1122,3.721,1123,2.392,1124,6.21,1125,2.877,1126,2.392,1137,2.877,1141,2.877,1152,2.551,1306,2.095,1352,4.221,2344,5.503,2389,3.14,2655,5.503,2669,3.54,2670,8.282,2671,4.632,2672,4.632,2673,7.304,2674,6.204,2675,6.075,2676,5.042,2677,5.222,2678,6.849,2679,3.54,2680,5.222,2681,6.849,2682,3.54,2683,3.54,2684,3.54,2685,6.204,2686,6.204,2687,6.204,2688,6.204,2689,6.204,2690,3.54,2691,3.54,2692,3.54,2693,4.632,2694,3.54,2695,3.54,2696,4.632,2697,3.54,2698,3.14,2699,2.68,2700,2.877,2701,3.14,2702,2.877,2703,3.54,2704,3.14,2705,3.54,2706,4.632,2707,3.54,2708,3.54,2709,3.54,2710,3.54,2711,2.877,2712,3.54,2713,5.222]],["title/components/ProjectsComponent-1.html",[0,0.187,112,0.751,785,2.25]],["body/components/ProjectsComponent-1.html",[0,0.334,1,1.488,2,1.138,3,0.059,4,0.044,5,0.857,6,0.857,7,0.857,8,0.038,10,2.57,12,0.857,13,1.998,14,1.998,15,0.84,17,1.184,18,1.115,19,1.207,20,2.272,24,2.374,25,1.207,27,1.256,29,0.538,30,0.008,31,1.278,32,0.486,34,1.333,35,1.333,38,0.059,39,0.441,43,0.857,44,1.207,45,1.207,46,0.857,47,1.518,48,0.857,49,0.586,50,0.857,51,0.84,52,0.857,53,0.84,54,0.857,55,0.84,56,0.857,57,0.84,58,0.857,59,0.84,60,0.857,61,0.84,62,0.791,63,1.207,64,0.857,65,0.807,66,0.807,67,1.706,68,0.84,69,1.207,70,0.84,71,0.857,72,0.84,73,0.857,74,0.84,75,0.791,76,0.84,77,0.857,78,0.84,79,0.823,80,1.207,81,0.84,82,0.857,83,0.84,84,0.857,85,0.84,86,0.857,87,0.84,88,0.857,89,0.84,90,0.857,91,0.84,92,0.857,93,0.84,94,0.857,95,1.398,96,0.84,97,0.857,98,0.84,99,0.76,100,0.84,101,0.857,102,0.84,103,0.857,104,0.84,105,0.857,106,0.84,107,0.857,108,0.84,109,0.84,110,1.054,111,0.84,112,1.538,113,0.857,114,1.576,115,1.207,116,1.488,117,0.84,118,0.857,119,0.857,120,0.857,121,0.857,122,0.84,123,0.857,124,0.84,125,0.857,126,0.84,127,0.791,128,0.84,129,0.857,130,0.84,131,0.807,132,0.84,133,0.857,134,0.84,135,0.857,136,0.857,137,0.84,138,0.857,139,0.84,140,0.857,141,0.84,142,0.857,143,0.84,144,0.84,145,0.857,146,0.84,147,1.266,148,0.857,149,0.857,150,0.857,151,0.84,152,0.857,153,0.84,154,0.857,155,0.84,156,0.857,157,0.84,158,0.84,159,0.84,160,0.716,161,0.84,162,0.857,163,0.857,164,0.807,165,0.84,166,0.857,167,0.84,168,0.857,169,0.857,170,0.857,171,0.005,172,0.005,179,2.005,180,2.869,186,0.23,187,1.442,189,3.116,194,0.909,199,1.628,201,0.857,202,0.239,203,0.823,205,0.983,206,1.728,258,0.478,316,1.886,317,1.906,325,0.983,371,1.804,460,1.522,539,1.522,663,1.305,714,4.775,785,2.467,905,2.949,947,1.594,966,2.3,1011,1.958,1047,1.958,1071,3.785,1123,2.817,1126,2.817,1223,5.017,1270,4.554,1271,5.593,1272,3.785,1285,2.685,1295,2.078,1296,2.57,1297,2.57,1298,2.016,1299,2.143,1300,2.57,1352,3.622,1938,4.849,1942,5.529,1951,4.775,1962,2.971,1967,3.156,1970,3.156,2564,3.156,2613,5.212,2614,6.553,2615,3.698,2616,3.698,2617,5.212,2671,5.212,2672,5.212,2714,4.169,2715,4.169,2716,4.169,2717,4.169,2718,4.169,2719,4.169,2720,4.169,2721,3.698,2722,3.388]],["title/components/ProjectsTableComponent.html",[0,0.225,116,0.92]],["body/components/ProjectsTableComponent.html",[0,0.242,1,0.494,2,0.761,3,0.034,4,0.026,5,0.503,6,0.503,7,0.503,8,0.022,12,0.503,13,1.945,14,1.945,15,0.494,17,0.792,18,1.528,19,0.808,20,1.644,21,1.928,23,2.131,24,1.718,25,0.808,27,0.84,29,0.531,30,0.008,31,0.751,32,0.285,33,1.119,34,0.783,35,0.783,36,0.959,37,1.06,38,0.034,39,0.259,41,3.274,43,0.503,44,0.808,45,0.808,46,0.503,47,1.158,48,0.503,49,0.682,50,0.503,51,0.494,52,0.503,53,0.494,54,0.503,55,0.494,56,0.503,57,0.494,58,0.503,59,0.494,60,0.503,61,0.494,62,0.465,63,0.808,64,0.503,65,0.474,66,0.474,67,1.422,68,0.494,69,0.808,70,0.494,71,0.503,72,0.494,73,0.503,74,0.494,75,0.465,76,0.494,77,0.503,78,0.494,79,0.484,80,0.808,81,0.494,82,0.503,83,0.494,84,0.503,85,0.494,86,0.503,87,0.494,88,0.503,89,0.494,90,0.503,91,0.494,92,0.503,93,0.494,94,0.503,95,1.012,96,0.494,97,0.503,98,0.494,99,0.447,100,0.494,101,0.503,102,0.494,103,0.503,104,0.494,105,0.503,106,0.494,107,0.503,108,0.494,109,0.494,110,1.228,111,0.494,112,0.776,113,0.503,114,1.675,115,0.808,116,1.135,117,0.494,118,0.503,119,0.503,120,0.503,121,0.503,122,0.494,123,0.503,124,0.494,125,0.503,126,0.494,127,0.465,128,0.494,129,0.503,130,0.494,131,0.474,132,0.494,133,0.503,134,0.494,135,0.503,136,0.503,137,0.494,138,0.503,139,0.494,140,0.503,141,0.494,142,0.503,143,0.494,144,0.494,145,0.503,146,0.494,147,0.916,148,0.503,149,0.503,150,0.503,151,0.494,152,0.503,153,0.494,154,0.503,155,0.494,156,0.503,157,0.494,158,0.494,159,0.494,160,0.421,161,0.494,162,0.503,163,0.503,164,0.474,165,0.494,166,0.503,167,0.494,168,0.503,169,0.503,170,0.503,171,0.003,172,0.003,179,1.341,181,2.805,186,0.135,187,0.965,188,3.21,190,2.24,194,0.857,196,3.161,199,1.785,201,1.268,202,0.483,203,1.367,205,1.751,206,2.183,209,1.061,226,1.448,256,0.855,258,0.32,288,2.906,300,2.728,311,2.317,316,2.024,317,1.899,325,0.578,389,1.185,398,0.855,399,0.855,400,1.371,401,0.894,402,0.874,403,0.937,430,0.767,453,1.994,460,0.894,539,0.894,546,1.231,555,1.847,628,1.346,658,3.449,661,1.151,663,0.767,665,1.185,679,1.185,681,1.901,684,1.901,718,2.249,729,1.959,788,1.578,796,1.259,840,1.089,881,2.531,882,1.847,883,3.699,885,2.454,886,2.454,887,2.454,892,2.914,894,4.368,901,2.897,902,2.976,905,2.526,906,3.62,907,3.558,914,1.301,919,2.976,921,2.706,922,3.62,924,2.531,929,2.805,930,1.959,931,3.487,936,1.221,937,1.346,938,1.089,939,1.221,940,1.221,941,1.51,942,2.423,943,1.51,947,0.937,955,1.51,956,2.642,957,2.021,958,2.088,959,1.51,960,1.51,962,2.173,966,0.959,978,2.021,979,2.021,980,2.021,983,1.959,984,1.959,991,2.993,992,1.855,1016,1.655,1024,3.172,1025,3.728,1031,2.706,1121,1.45,1123,1.655,1126,1.655,1135,1.578,1136,1.855,1152,3.132,1214,1.746,1215,3.327,1216,4.398,1217,3.327,1218,3.035,1219,2.802,1220,2.802,1221,3.509,1228,2.802,1232,4.267,1235,3.728,1237,3.509,1238,3.509,1239,3.509,1241,3.509,1243,1.855,1244,1.855,1248,1.746,1251,2.802,1252,4.016,1255,2.173,1261,1.991,1264,2.802,1273,2.173,1280,1.991,1283,1.655,1284,1.51,1293,2.088,1294,1.346,1305,1.578,1309,1.746,1323,1.51,1339,1.396,1340,1.346,1341,1.346,1342,1.578,1344,1.746,1346,1.746,1382,1.655,1855,3.035,1897,1.51,2071,2.173,2074,1.991,2080,2.173,2081,1.991,2512,4.096,2521,1.991,2528,4.002,2563,1.991,2566,5.24,2630,5.843,2722,7.233,2723,8.9,2724,4.924,2725,4.924,2726,4.924,2727,4.924,2728,6.922,2729,4.924,2730,3.932,2731,5.636,2732,3.932,2733,5.636,2734,2.173,2735,2.45,2736,2.45,2737,2.45,2738,2.45,2739,3.932,2740,2.173,2741,2.173,2742,3.932,2743,4.924,2744,2.45,2745,2.45,2746,2.45,2747,2.45,2748,2.45,2749,3.932,2750,2.45,2751,2.45,2752,3.932,2753,2.45,2754,2.45,2755,2.173,2756,2.45,2757,2.45,2758,2.45,2759,2.45,2760,2.45,2761,2.45,2762,3.932,2763,2.45,2764,2.45,2765,4.924,2766,2.45,2767,3.932,2768,2.45,2769,2.45,2770,2.45,2771,2.45,2772,2.45,2773,2.45,2774,3.932,2775,2.45,2776,2.45,2777,2.45,2778,2.173,2779,2.45,2780,3.932,2781,3.932,2782,3.932,2783,3.487,2784,3.932,2785,3.932,2786,3.932,2787,3.932,2788,3.932,2789,3.932,2790,5.636,2791,5.636,2792,3.932]],["title/components/QueriesComponent.html",[0,0.225,117,0.92]],["body/components/QueriesComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.613,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2793,5.05,2794,8.007,2795,6.699,2796,6.699]],["title/components/RegisterComponent.html",[0,0.225,122,0.92]],["body/components/RegisterComponent.html",[0,0.272,1,0.589,2,0.875,3,0.041,4,0.031,5,0.601,6,0.601,7,0.601,8,0.026,12,0.601,13,1.965,14,1.965,15,0.589,17,0.911,18,0.858,19,0.929,20,1.845,21,2.163,22,3.27,24,1.928,25,0.929,27,0.966,29,0.527,30,0.008,31,0.897,32,0.341,33,1.336,34,0.935,35,0.935,36,1.145,38,0.041,39,0.31,41,3.695,43,0.601,44,0.929,45,0.929,46,0.601,47,1.277,48,0.601,49,0.535,50,0.601,51,0.589,52,0.601,53,0.589,54,0.601,55,0.589,56,0.601,57,0.589,58,0.601,59,0.589,60,0.601,61,0.589,62,0.555,63,0.929,64,0.601,65,0.566,66,0.566,67,1.522,68,0.589,69,0.929,70,0.589,71,0.601,72,0.589,73,0.601,74,0.589,75,0.555,76,0.589,77,0.601,78,0.589,79,0.578,80,0.929,81,0.589,82,0.601,83,0.589,84,0.601,85,0.589,86,0.601,87,0.589,88,0.601,89,0.589,90,0.601,91,0.589,92,0.601,93,0.589,94,0.601,95,1.135,96,0.589,97,0.601,98,0.589,99,0.533,100,0.589,101,0.601,102,0.589,103,0.601,104,0.589,105,0.601,106,0.589,107,0.601,108,0.589,109,0.589,110,0.856,111,0.589,112,0.893,113,0.601,114,0.858,115,0.929,116,0.589,117,0.589,118,0.601,119,0.601,120,0.601,121,0.601,122,1.252,123,0.601,124,0.589,125,0.601,126,0.589,127,0.555,128,0.589,129,0.601,130,0.589,131,0.566,132,0.589,133,0.601,134,0.589,135,0.601,136,0.601,137,0.589,138,0.601,139,0.589,140,0.601,141,0.589,142,0.601,143,0.589,144,0.589,145,0.601,146,0.589,147,1.028,148,0.601,149,0.601,150,0.601,151,0.589,152,0.601,153,0.589,154,0.601,155,0.589,156,0.601,157,0.589,158,0.589,159,0.589,160,0.502,161,0.589,162,0.601,163,0.601,164,0.566,165,0.589,166,0.601,167,0.589,168,0.601,169,0.601,170,0.601,171,0.004,172,0.004,179,1.543,180,2.33,181,3.148,186,0.162,187,1.109,188,3.541,189,2.622,190,2.38,194,0.985,196,3.383,199,1.692,201,0.929,202,0.424,203,1.511,205,1.585,206,2.09,209,0.753,226,0.86,256,1.02,258,0.368,288,1.145,300,1.477,316,1.411,317,1.303,325,0.69,361,1.092,389,1.414,398,1.02,399,1.02,400,1.577,401,1.067,402,1.043,403,1.118,453,2.263,460,1.067,522,1.803,523,2.377,528,4.771,539,1.067,540,3.416,542,2.841,546,1.73,552,2.085,555,1.374,607,5.279,609,5.379,620,2.085,626,3.055,628,1.607,638,1.803,663,0.916,718,2.524,840,1.3,881,2.841,882,2.123,883,3.913,885,2.753,886,2.753,887,2.753,891,3.734,892,3.27,901,3.196,905,2.703,906,3.904,907,3.808,921,2.484,922,4.408,924,3.808,929,3.148,930,1.458,936,1.458,937,1.607,938,1.3,939,1.458,940,1.458,941,1.803,942,2.787,943,1.803,947,1.118,955,1.803,956,1.173,957,1.504,958,1.554,959,1.803,960,1.803,966,1.77,969,1.977,970,1.977,971,1.977,973,1.884,978,1.504,979,1.504,980,1.504,983,1.458,984,2.253,991,2.401,1078,1.884,1298,1.414,1378,4.183,1379,4.183,1380,3.938,1381,3.423,1382,1.977,1384,3.423,1391,3.423,1393,3.222,1398,3.423,1400,2.085,1402,1.884,1404,1.884,1405,2.214,1406,2.214,1407,2.214,1408,1.977,1409,2.085,1410,2.085,1411,2.085,1422,2.085,1424,3.423,1429,2.214,1430,3.423,1440,3.037,1595,4.49,1596,4.183,1599,4.902,1610,3.423,1611,3.674,1612,3.674,1613,3.734,1614,3.734,1619,2.377,1620,2.214,1621,2.595,1623,2.377,1624,2.377,1634,2.595,1635,2.595,1636,2.595,1637,2.595,1638,2.595,1828,2.377,1836,2.595,2797,2.925,2798,4.521,2799,4.521,2800,4.521,2801,2.925,2802,2.925,2803,2.925,2804,2.925,2805,2.925,2806,2.925,2807,2.925,2808,2.925,2809,2.925,2810,2.925,2811,2.925,2812,2.925,2813,2.925,2814,2.925,2815,2.925,2816,2.925,2817,2.925,2818,4.521,2819,4.521,2820,4.521,2821,4.521,2822,4.521,2823,4.521,2824,4.521,2825,4.521,2826,4.521,2827,4.521,2828,4.521,2829,4.521,2830,4.521,2831,4.521,2832,4.521]],["title/interfaces/RegisterRequestDto.html",[247,0.291,626,3.087]],["body/interfaces/RegisterRequestDto.html",[3,0.098,4,0.074,8,0.062,30,0.008,38,0.098,171,0.007,172,0.007,186,0.383,202,0.525,209,1.318,247,0.441,249,1.483,258,0.665,540,4.932,542,4.614,626,5.523,706,4.276,1440,4.932,1613,6.064,1614,6.064,2833,6.937]],["title/components/ReleasesComponent.html",[0,0.225,124,0.92]],["body/components/ReleasesComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.613,125,1.038,126,1.017,127,1.581,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2834,5.05,2835,6.699,2836,6.699]],["title/components/ReleasesTableComponent.html",[0,0.225,126,0.92]],["body/components/ReleasesTableComponent.html",[0,0.235,1,1.106,2,0.734,3,0.067,4,0.025,5,0.481,6,0.481,7,0.481,8,0.021,10,1.443,12,0.481,13,1.939,14,1.939,15,0.763,17,0.763,18,1.458,19,0.779,20,1.594,21,1.87,23,2.067,24,1.666,25,0.779,27,0.81,29,0.523,30,0.008,31,0.718,32,0.273,34,0.749,35,0.749,36,0.917,37,1.013,38,0.033,39,0.248,41,3.239,43,0.481,44,0.779,45,0.779,46,0.481,47,1.128,48,0.481,49,0.585,50,0.481,51,0.472,52,0.481,53,0.472,54,0.481,55,0.472,56,0.481,57,0.472,58,0.481,59,0.472,60,0.481,61,0.472,62,0.444,63,0.779,64,0.481,65,0.453,66,0.453,67,1.396,68,0.472,69,0.779,70,0.472,71,0.481,72,0.472,73,0.481,74,0.472,75,0.444,76,0.472,77,0.481,78,0.472,79,0.462,80,0.779,81,0.472,82,0.481,83,0.472,84,0.481,85,0.472,86,0.481,87,0.472,88,0.481,89,0.472,90,0.481,91,0.472,92,0.481,93,0.472,94,0.481,95,0.981,96,0.472,97,0.481,98,0.472,99,0.427,100,0.472,101,0.481,102,0.472,103,0.481,104,0.472,105,0.481,106,0.472,107,0.481,108,0.472,109,0.472,110,1.163,111,0.472,112,0.749,113,0.481,114,0.719,115,0.779,116,0.472,117,0.472,118,0.481,119,0.481,120,0.481,121,0.481,122,0.472,123,0.481,124,0.472,125,0.481,126,1.106,127,1.704,128,0.472,129,0.481,130,0.472,131,0.453,132,0.472,133,0.481,134,0.472,135,0.481,136,0.481,137,0.472,138,0.481,139,0.472,140,0.481,141,0.472,142,0.481,143,0.472,144,0.472,145,0.481,146,0.472,147,0.888,148,0.481,149,0.481,150,0.481,151,0.472,152,0.481,153,0.472,154,0.481,155,0.472,156,0.481,157,0.472,158,0.472,159,0.472,160,0.402,161,0.472,162,0.481,163,0.481,164,0.453,165,0.472,166,0.481,167,0.472,168,0.481,169,0.481,170,0.481,171,0.003,172,0.003,179,1.293,180,2.014,186,0.129,187,0.93,189,2.315,190,2.082,194,0.826,196,3.103,199,1.781,201,1.239,202,0.474,203,1.191,205,1.669,206,2.15,209,0.996,226,0.689,256,1.322,258,0.309,288,2.861,300,2.701,311,3.087,316,2.088,317,1.97,325,0.552,398,1.322,399,1.322,400,1.322,401,1.383,402,1.352,460,0.854,505,2.701,539,0.854,546,1.187,555,1.78,628,2.624,658,4.023,661,1.1,663,0.733,665,1.132,679,1.833,681,2.654,684,2.654,700,2.336,718,2.181,729,1.889,788,4.556,796,1.948,840,1.04,882,1.78,883,3.642,885,2.38,886,2.38,887,2.38,905,2.355,906,3.734,921,2.624,922,2.624,930,1.167,936,1.167,937,1.287,938,1.04,939,1.167,940,1.167,945,2.077,947,0.895,956,3.239,957,1.948,958,1.243,966,2.149,978,2.822,979,2.822,980,2.822,983,2.735,984,2.735,1011,1.1,1012,3.08,1014,3.248,1024,3.076,1040,4.236,1047,1.1,1085,3.362,1086,3.08,1087,3.08,1088,1.52,1113,3.403,1119,2.077,1120,1.902,1121,1.385,1135,1.508,1152,1.558,1153,2.077,1202,2.869,1203,2.701,1204,3.08,1205,3.08,1206,2.869,1214,1.668,1215,4.939,1216,4.297,1217,3.227,1218,2.944,1219,2.701,1220,2.701,1221,3.403,1223,3.883,1224,3.881,1225,3.881,1228,2.701,1232,4.155,1233,3.08,1234,3.08,1235,3.615,1236,3.881,1237,3.403,1238,3.403,1239,3.403,1240,3.615,1241,3.403,1243,1.772,1244,1.772,1245,1.902,1248,1.668,1249,1.902,1251,2.701,1252,3.912,1261,1.902,1262,3.08,1264,2.701,1270,2.336,1271,2.869,1272,2.441,1283,1.582,1284,1.443,1285,1.508,1291,2.869,1292,1.902,1293,2.536,1294,1.287,1295,1.167,1296,1.443,1297,1.443,1298,1.132,1299,1.204,1300,1.443,1304,1.582,1305,1.508,1306,2.826,1307,2.944,1308,3.615,1309,1.668,1310,2.869,1311,2.869,1312,2.701,1313,2.561,1314,2.701,1315,2.701,1316,2.869,1317,2.701,1318,2.869,1319,2.336,1320,3.535,1321,2.561,1322,2.701,1323,4.361,1324,2.561,1325,4.156,1326,2.701,1327,2.701,1328,3.912,1329,2.701,1331,2.701,1336,3.881,1339,2.159,1340,2.083,1341,2.083,1342,2.441,1344,2.701,1346,2.701,1352,2.336,1354,2.869,1794,1.772,2067,2.077,2068,2.077,2072,2.077,2073,2.077,2074,1.902,2075,2.077,2079,2.077,2633,1.902,2837,8.879,2838,8.879,2839,4.776,2840,4.776,2841,4.776,2842,5.489,2843,3.79,2844,5.489,2845,2.341,2846,2.341,2847,2.341,2848,2.341,2849,2.341,2850,2.341,2851,2.341,2852,3.79,2853,2.341,2854,3.881,2855,2.341,2856,3.79,2857,2.341,2858,2.341,2859,3.79,2860,3.79,2861,3.79,2862,2.341,2863,3.79,2864,3.79,2865,2.341,2866,2.341,2867,2.341,2868,2.341,2869,2.341,2870,2.341,2871,2.341,2872,3.362,2873,3.362,2874,3.362,2875,7.075,2876,2.341,2877,2.341,2878,2.341,2879,2.341,2880,2.341,2881,2.341,2882,2.341,2883,2.341,2884,2.341,2885,2.341,2886,2.341,2887,2.341,2888,3.79,2889,3.79,2890,3.79,2891,3.79,2892,3.79,2893,3.79]],["title/components/ReplaysComponent.html",[0,0.225,128,0.92]],["body/components/ReplaysComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.613,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2894,5.05,2895,8.007,2896,6.699,2897,6.699]],["title/components/ResetPasswordComponent.html",[0,0.225,130,0.92]],["body/components/ResetPasswordComponent.html",[0,0.297,1,0.681,2,0.977,3,0.048,4,0.036,5,0.694,6,0.694,7,0.694,8,0.03,12,0.694,13,1.98,14,1.98,15,0.681,17,1.016,18,0.957,19,1.036,20,2.015,21,2.363,22,3.572,24,2.106,25,1.036,27,1.078,29,0.523,30,0.008,31,1.036,32,0.394,33,1.543,34,1.081,35,1.081,36,1.323,38,0.048,39,0.358,41,3.434,43,0.694,44,1.036,45,1.036,46,0.694,47,1.375,48,0.694,49,0.52,50,0.694,51,0.681,52,0.694,53,0.681,54,0.694,55,0.681,56,0.694,57,0.681,58,0.694,59,0.681,60,0.694,61,0.681,62,0.641,63,1.036,64,0.694,65,0.654,66,0.654,67,1.6,68,0.681,69,1.036,70,0.681,71,0.694,72,0.681,73,0.694,74,0.681,75,0.641,76,0.681,77,0.694,78,0.681,79,0.667,80,1.036,81,0.681,82,0.694,83,0.681,84,0.694,85,0.681,86,0.694,87,0.681,88,0.694,89,0.681,90,0.694,91,0.681,92,0.694,93,0.681,94,0.694,95,1.24,96,0.681,97,0.694,98,0.681,99,0.616,100,0.681,101,0.694,102,0.681,103,0.694,104,0.681,105,0.694,106,0.681,107,0.694,108,0.681,109,0.681,110,0.935,111,0.681,112,0.996,113,0.694,114,0.957,115,1.036,116,0.681,117,0.681,118,0.694,119,0.694,120,0.694,121,0.694,122,0.681,123,0.694,124,0.681,125,0.694,126,0.681,127,0.641,128,0.681,129,0.694,130,1.348,131,1.507,132,0.681,133,0.694,134,0.681,135,0.694,136,0.694,137,0.681,138,0.694,139,0.681,140,0.694,141,0.681,142,0.694,143,0.681,144,0.681,145,0.694,146,0.681,147,1.123,148,0.694,149,0.694,150,0.694,151,0.681,152,0.694,153,0.681,154,0.694,155,0.681,156,0.694,157,0.681,158,0.681,159,0.681,160,0.58,161,0.681,162,0.694,163,0.694,164,0.654,165,0.681,166,0.694,167,0.681,168,0.694,169,0.694,170,0.694,171,0.004,172,0.004,179,1.721,180,2.545,186,0.187,187,1.238,189,2.823,190,2.388,194,1.1,196,3.556,199,1.678,201,0.694,202,0.41,203,1.538,205,1.424,206,1.775,209,0.688,226,0.994,258,0.411,288,1.975,316,1.288,317,1.19,325,0.797,361,1.262,453,1.739,460,1.233,522,2.083,525,5.688,542,3.441,546,1.579,663,1.058,679,1.634,718,2.757,729,2.514,840,1.502,881,3.103,882,2.369,883,4.076,885,3.008,887,3.008,891,4.079,892,3.572,901,3.441,905,2.841,906,4.129,907,4.002,921,2.772,922,2.772,924,4.002,937,1.857,938,1.502,940,1.684,947,1.292,966,2.363,969,2.283,970,2.283,971,2.283,973,2.176,978,2.593,979,2.593,980,2.593,983,2.514,984,3.008,1298,1.634,1306,2,1373,2.997,1374,4.475,1375,4.475,1377,5.354,1380,4.302,1382,2.283,1390,2.997,1393,3.595,1395,2.997,1396,2.997,1399,2.997,1400,2.408,1401,5.354,1402,2.176,1404,2.176,1408,2.283,1409,2.408,1410,2.408,1411,2.408,1414,2.997,1417,2.997,1418,2.997,1419,2.997,1420,2.997,1422,2.408,1423,2.997,1431,4.475,1437,4.475,1596,4.57,1610,3.819,1611,4.099,1620,2.558,1623,2.746,1624,2.746,1628,2.746,1910,2.283,2898,8.454,2899,8.454,2900,6.036,2901,6.036,2902,5.044,2903,3.379,2904,3.379,2905,3.379,2906,3.379,2907,3.379,2908,3.379,2909,3.379,2910,8.807,2911,3.379,2912,3.379,2913,5.044,2914,5.354,2915,3.379,2916,5.044,2917,5.044,2918,5.044,2919,5.044]],["title/interfaces/ResetPasswordRequestDto.html",[247,0.291,630,3.712]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.101,4,0.077,8,0.065,30,0.008,38,0.101,171,0.007,172,0.007,186,0.398,202,0.479,209,1.275,247,0.458,249,1.539,258,0.68,542,3.703,630,6.79,706,4.44,1910,6.137,2914,8.056,2920,7.202]],["title/components/ResourcesComponent.html",[0,0.225,132,0.92]],["body/components/ResourcesComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.613,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2921,5.05,2922,8.007,2923,6.699,2924,6.699]],["title/interfaces/Role.html",[247,0.291,1592,2.51]],["body/interfaces/Role.html",[3,0.092,4,0.07,8,0.059,29,0.47,30,0.008,38,0.111,49,0.759,171,0.006,172,0.006,186,0.363,202,0.531,209,1.301,247,0.504,249,1.405,258,0.645,285,4.234,300,2.88,361,2.455,453,1.894,540,3.613,1011,3.088,1088,3.407,1091,3.38,1092,3.613,1281,4.51,1295,3.945,1299,4.07,1440,3.613,1484,4.977,1592,4.845,1613,4.442,1614,4.442,1660,6.283,2925,5.832,2926,7.165,2927,6.675,2928,5.832,2929,5.832,2930,5.342,2931,5.342,2932,5.342]],["title/injectables/RoleEffects.html",[323,1.016,487,3.712]],["body/injectables/RoleEffects.html",[3,0.089,4,0.068,8,0.057,29,0.531,30,0.008,32,0.741,38,0.089,39,0.673,49,0.548,171,0.006,172,0.006,186,0.351,190,2.104,194,1.692,199,1.563,201,1.307,202,0.365,203,1.256,258,0.632,316,1.624,317,1.5,323,1.725,325,1.5,487,6.306,515,2.375,531,5.059,533,4.956,534,4.592,539,2.321,544,4.592,546,2.43,563,4.956,592,3.764,593,3.624,594,3.764,991,4.121,2060,6.306,2093,7.085,2442,6.306,2933,6.361,2934,6.361,2935,7.389,2936,6.361,2937,7.76,2938,7.76,2939,7.428,2940,7.76,2941,6.361,2942,6.361,2943,5.642,2944,5.642]],["title/injectables/RoleService.html",[323,1.016,2935,3.712]],["body/injectables/RoleService.html",[3,0.096,4,0.073,8,0.061,29,0.541,30,0.008,32,0.792,38,0.096,39,0.72,49,0.586,171,0.006,172,0.006,182,3.023,186,0.376,187,1.983,194,1.483,199,1.628,201,1.398,202,0.39,203,1.343,205,1.604,323,1.796,325,1.604,370,3.195,371,2.944,391,4.049,430,2.13,515,2.54,610,4.026,611,5.08,613,4.44,633,4.026,634,4.603,647,4.026,667,4.597,1592,3.738,2935,6.566,2945,6.803,2946,8.917,2947,6.803,2948,6.803,2949,6.803]],["title/interfaces/RoleState.html",[247,0.291,467,3.712]],["body/interfaces/RoleState.html",[3,0.087,4,0.066,8,0.055,29,0.512,30,0.008,38,0.116,99,1.125,171,0.006,172,0.006,186,0.341,202,0.473,226,2.24,247,0.392,249,1.318,256,2.152,258,0.62,273,3.276,331,4.365,398,2.152,399,2.152,400,2.152,401,2.251,402,2.201,403,2.358,453,2.684,467,6.713,489,5.472,546,2.935,648,4.168,658,4.604,661,4.052,662,4.694,663,1.931,664,3.802,665,2.983,667,4.168,670,4.694,671,3.802,672,5.092,673,3.802,675,3.802,679,2.983,681,2.983,682,3.802,684,2.983,685,4.905,884,2.983,1152,2.536,1592,4.741,2060,7.335,2093,5.013,2939,5.472,2943,5.472,2944,5.472,2950,6.169,2951,6.169,2952,6.169,2953,6.169,2954,6.169]],["title/components/ScreenLoadsComponent.html",[0,0.225,134,0.92]],["body/components/ScreenLoadsComponent.html",[0,0.368,1,1.007,2,1.288,3,0.07,4,0.053,5,1.027,6,1.027,7,1.027,8,0.045,12,1.027,13,2.011,14,2.011,15,1.007,17,1.34,18,1.263,19,1.027,25,1.367,27,1.422,29,0.297,30,0.007,32,0.582,38,0.07,39,0.529,43,1.027,44,1.367,45,1.367,46,1.027,47,1.638,48,1.027,49,0.573,50,1.027,51,1.007,52,1.027,53,1.007,54,1.027,55,1.007,56,1.027,57,1.007,58,1.027,59,1.007,60,1.027,61,1.007,62,0.949,63,1.367,64,1.027,65,0.968,66,0.968,67,1.791,68,1.007,69,1.367,70,1.007,71,1.027,72,1.007,73,1.027,74,1.007,75,0.949,76,1.007,77,1.027,78,1.007,79,0.987,80,1.367,81,1.007,82,1.027,83,1.007,84,1.027,85,1.007,86,1.027,87,1.007,88,1.027,89,1.007,90,1.027,91,1.007,92,1.027,93,1.007,94,1.027,95,1.537,96,1.007,97,1.027,98,1.007,99,0.912,100,1.007,101,1.027,102,1.007,103,1.027,104,1.007,105,1.027,106,1.007,107,1.027,108,1.007,109,1.007,110,1.159,111,1.007,112,1.314,113,1.027,114,1.263,115,1.367,116,1.007,117,1.007,118,1.027,119,1.027,120,1.027,121,1.027,122,1.007,123,1.027,124,1.007,125,1.027,126,1.007,127,0.949,128,1.007,129,1.027,130,1.007,131,0.968,132,1.007,133,1.027,134,1.606,135,1.841,136,1.027,137,1.007,138,1.027,139,1.007,140,1.027,141,1.007,142,1.027,143,1.007,144,1.007,145,1.027,146,1.007,147,1.392,148,1.027,149,1.027,150,1.027,151,1.007,152,1.027,153,1.007,154,1.027,155,1.007,156,1.027,157,1.007,158,1.007,159,1.007,160,0.858,161,1.007,162,1.027,163,1.027,164,0.968,165,1.007,166,1.027,167,1.007,168,1.027,169,1.027,170,1.027,171,0.005,172,0.005,177,2.669,2955,4.999,2956,4.999,2957,4.999,2958,7.073,2959,6.654,2960,6.654]],["title/components/SdksComponent.html",[0,0.225,137,0.92]],["body/components/SdksComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.613,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2961,5.05,2962,8.007,2963,6.699,2964,6.699]],["title/components/SecurityComponent.html",[0,0.225,139,0.92]],["body/components/SecurityComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.613,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,2636,7.102,2965,5.05,2966,6.699,2967,6.699]],["title/injectables/SessionStorage.html",[323,1.016,2968,4.052]],["body/injectables/SessionStorage.html",[3,0.08,4,0.06,8,0.051,29,0.472,30,0.008,31,1.734,32,0.659,38,0.08,39,0.599,49,0.72,171,0.006,172,0.006,179,1.93,182,2.514,186,0.398,187,1.77,190,2.153,194,1.731,199,1.83,201,1.718,202,0.495,203,1.651,205,2.037,206,2.597,209,1.295,214,4.031,226,1.664,258,0.587,313,3.438,317,1.972,323,1.603,328,3.643,370,2.657,374,5.443,381,2.385,430,2.486,453,2.409,515,2.112,731,4.873,1016,3.822,1681,4.282,1682,5.959,1691,4.596,1693,4.596,1722,6.011,1723,5.861,1724,5.836,1725,5.861,1726,5.861,1727,6.452,1728,6.397,1729,5.861,1730,5.861,1731,5.017,1732,5.861,1733,5.017,1734,5.861,1735,5.017,1736,4.596,1737,4.596,1738,5.017,1739,5.46,1740,4.282,1741,5.017,1742,5.017,1743,5.017,1744,5.017,1745,6.397,1747,5.017,1748,5.017,1749,5.017,1750,5.017,1751,5.017,1752,5.017,2968,6.397,2969,9.174,2970,5.656]],["title/components/SessionsComponent.html",[0,0.225,141,0.92]],["body/components/SessionsComponent.html",[0,0.266,1,0.569,2,0.852,3,0.04,4,0.03,5,0.58,6,0.58,7,0.58,8,0.025,12,0.58,13,1.961,14,1.961,15,0.569,17,0.886,18,1.255,19,0.904,20,1.804,24,1.885,25,0.904,27,0.94,29,0.514,30,0.008,31,0.866,32,0.329,34,0.903,35,0.903,38,0.04,39,0.299,41,3.5,43,0.58,44,0.904,45,0.904,46,0.58,47,1.253,48,0.58,49,0.569,50,0.58,51,0.569,52,0.58,53,0.569,54,0.58,55,0.569,56,0.58,57,0.569,58,0.58,59,0.569,60,0.58,61,0.569,62,0.536,63,0.904,64,0.58,65,0.547,66,0.547,67,1.502,68,0.569,69,0.904,70,0.569,71,0.58,72,0.569,73,0.58,74,0.569,75,0.536,76,0.569,77,0.58,78,0.569,79,0.558,80,0.904,81,0.569,82,0.58,83,0.569,84,0.58,85,0.569,86,0.58,87,0.569,88,0.58,89,0.569,90,0.58,91,0.569,92,0.58,93,0.569,94,0.58,95,1.11,96,0.569,97,0.58,98,0.569,99,0.515,100,0.569,101,0.58,102,0.569,103,0.58,104,0.569,105,0.58,106,0.569,107,0.58,108,0.569,109,0.569,110,1.085,111,0.569,112,0.869,113,0.58,114,1.435,115,0.904,116,0.569,117,0.569,118,0.58,119,1.253,120,0.58,121,0.58,122,0.569,123,0.58,124,0.569,125,0.58,126,0.569,127,0.536,128,0.569,129,0.58,130,0.569,131,0.547,132,0.569,133,0.58,134,0.569,135,0.58,136,0.58,137,0.569,138,0.58,139,0.569,140,0.58,141,1.229,142,0.58,143,0.569,144,0.569,145,0.58,146,0.569,147,1.005,148,0.58,149,0.58,150,0.58,151,0.569,152,0.58,153,0.569,154,0.58,155,0.569,156,0.58,157,0.569,158,0.569,159,0.569,160,0.485,161,0.569,162,0.58,163,0.58,164,0.547,165,0.569,166,0.58,167,0.569,168,0.58,169,0.58,170,0.58,171,0.004,172,0.004,179,1.501,180,2.279,186,0.156,187,1.079,189,2.573,190,2.194,194,0.959,199,1.758,201,1.11,202,0.464,203,1.598,205,1.652,206,2.224,209,1.136,258,0.358,300,1.437,311,1.809,316,1.867,317,1.833,325,0.666,381,1.855,391,3.106,430,1.377,453,0.814,460,1.031,539,1.031,663,0.884,718,2.468,785,1.671,840,1.255,881,2.778,887,2.693,901,3.136,905,2.556,924,2.778,947,1.08,956,2.168,966,1.722,975,2.066,1024,3.481,1026,4.391,1029,4.793,1030,4.793,1031,2.97,1032,4.793,1033,4.091,1034,4.793,1035,4.793,1036,4.793,1037,5.726,1039,4.091,1041,5.411,1042,3.902,1043,3.902,1045,5.411,1047,1.326,1051,3.902,1052,5.411,1056,3.902,1062,3.331,1063,3.851,1068,3.575,1070,3.575,1071,2.833,1074,5.411,1088,3.034,1121,1.671,1122,2.013,1123,1.908,1124,2.295,1125,2.295,1126,1.908,1128,2.505,1130,1.671,1131,2.505,1132,2.505,1134,2.505,1135,1.819,1137,2.295,1138,2.505,1139,2.505,1140,2.505,1141,2.295,1142,2.505,1143,2.505,1150,2.505,1152,1.809,1154,3.902,1156,3.33,1157,2.295,1158,3.33,1159,3.575,1160,3.902,1161,3.902,1162,4.793,1163,3.902,1164,4.793,1165,4.793,1166,2.505,1169,4.793,1170,2.505,1171,3.902,1172,2.505,1173,3.902,1174,5.411,1175,2.505,1176,2.505,1177,5.411,1178,4.793,1179,3.902,1180,3.902,1181,2.505,1182,2.505,1202,4.618,1203,4.348,1204,4.957,1205,4.957,1206,4.618,1753,2.138,1756,5.411,1757,5.411,1759,5.411,1760,5.411,1761,5.411,1762,5.411,1763,5.942,1773,2.505,2971,2.824,2972,3.902,2973,4.399,2974,4.399,2975,2.824,2976,2.824,2977,2.824,2978,2.824,2979,2.824,2980,2.824,2981,2.824,2982,2.824,2983,2.824,2984,2.824,2985,2.824,2986,2.824,2987,2.824,2988,2.824,2989,2.824,2990,4.399,2991,4.399,2992,4.399,2993,4.399,2994,4.399,2995,4.399,2996,2.824,2997,2.824,2998,2.824,2999,2.824,3000,2.824,3001,2.824,3002,2.824,3003,2.824,3004,4.399,3005,4.399,3006,4.399,3007,4.399,3008,4.399,3009,4.399,3010,4.399,3011,4.399,3012,4.399,3013,4.399,3014,4.399,3015,4.399,3016,4.399,3017,4.399,3018,4.399,3019,4.399,3020,4.399]],["title/components/SettingsComponent.html",[0,0.225,143,0.92]],["body/components/SettingsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.613,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,714,6.506,3021,5.05,3022,6.699,3023,6.699]],["title/components/SidebarComponent.html",[0,0.225,144,0.92]],["body/components/SidebarComponent.html",[0,0.258,1,0.544,2,0.823,3,0.038,4,0.029,5,0.555,6,0.555,7,0.555,8,0.024,12,0.555,13,1.956,14,1.956,15,1.304,17,0.856,18,0.997,19,0.873,20,1.754,25,0.873,29,0.408,30,0.008,31,0.829,32,0.315,34,0.864,35,0.864,38,0.038,39,0.811,43,0.555,44,0.873,45,1.612,46,0.555,47,1.224,48,0.555,49,0.513,50,0.555,51,0.544,52,0.555,53,0.544,54,0.555,55,0.544,56,0.555,57,0.544,58,0.555,59,0.544,60,0.555,61,0.544,62,0.513,63,0.873,64,0.555,65,0.523,66,0.523,67,1.478,68,0.544,69,0.873,70,0.544,71,0.555,72,0.544,73,0.555,74,0.544,75,0.513,76,0.544,77,0.555,78,0.544,79,0.534,80,0.873,81,0.544,82,0.555,83,0.544,84,0.555,85,0.544,86,0.555,87,0.544,88,0.555,89,0.544,90,0.555,91,0.544,92,0.555,93,0.544,94,0.555,95,1.079,96,0.544,97,0.555,98,0.544,99,0.493,100,1.2,101,0.555,102,0.544,103,0.555,104,0.544,105,0.555,106,0.544,107,0.555,108,0.544,109,0.544,110,0.814,111,0.544,112,0.839,113,0.555,114,0.807,115,0.873,116,0.544,117,0.544,118,0.555,119,0.555,120,0.555,121,0.555,122,0.544,123,0.555,124,0.544,125,0.555,126,0.544,127,0.513,128,0.544,129,0.555,130,0.544,131,0.523,132,0.544,133,0.555,134,0.544,135,0.555,136,0.555,137,0.544,138,0.555,139,0.544,140,0.555,141,0.544,142,0.555,143,0.544,144,1.2,145,0.555,146,0.544,147,0.977,148,0.555,149,0.555,150,0.555,151,0.544,152,0.555,153,0.544,154,0.555,155,0.544,156,0.555,157,0.544,158,0.544,159,0.544,160,0.464,161,0.544,162,0.555,163,0.555,164,0.523,165,0.544,166,0.555,167,0.544,168,0.555,169,0.555,170,0.555,171,0.003,172,0.003,179,1.45,180,2.215,186,0.149,187,1.881,189,2.899,190,1.615,194,1.499,196,3.813,197,4.556,199,1.385,201,1.224,202,0.412,203,0.839,205,1.003,206,1.25,215,1.826,251,1.666,253,1.666,256,0.943,257,3.218,258,0.56,259,3.671,269,4.633,270,4.733,276,1.826,279,3.671,282,3.029,293,2.421,298,4.171,311,1.111,316,0.69,317,0.637,350,3.273,357,2.872,360,1.926,361,1.962,365,4.428,375,3.029,383,4.428,388,4.434,390,2.738,393,3.55,398,0.943,399,0.943,400,1.483,401,1.551,402,0.964,403,1.033,423,2.872,678,3.77,711,4.269,712,3.744,721,4.428,732,2.046,734,3.77,736,3.744,737,5.283,738,3.977,743,3.218,745,4.84,746,3.454,751,5.126,755,3.454,756,3.454,768,4.269,811,4.84,841,3.836,905,1.551,929,4.366,938,1.201,1031,2.336,1130,3.525,1319,5.613,1320,6.216,1321,2.872,1325,3.384,1446,3.77,1476,5.803,1482,6.541,1488,3.454,1548,2.397,1552,7.421,1569,3.77,1592,2.336,1795,5.845,1975,2.046,2139,1.826,2169,3.218,2171,3.77,2186,3.77,2207,3.77,2211,3.77,2259,3.77,2260,3.454,2958,2.397,3024,2.703,3025,5.253,3026,4.25,3027,7.665,3028,4.25,3029,4.25,3030,5.283,3031,7.451,3032,5.283,3033,5.283,3034,5.253,3035,5.253,3036,5.253,3037,5.253,3038,4.66,3039,6.476,3040,5.253,3041,5.253,3042,5.253,3043,5.253,3044,2.703,3045,4.25,3046,5.283,3047,4.25,3048,2.703,3049,2.703,3050,2.703,3051,3.77,3052,2.703,3053,4.25,3054,2.703,3055,2.703,3056,5.253,3057,2.703,3058,2.703,3059,9.106,3060,2.703,3061,2.703,3062,2.703,3063,3.77,3064,2.703,3065,2.703,3066,2.703,3067,2.703,3068,2.703,3069,4.25,3070,2.703,3071,2.703,3072,2.703,3073,2.703,3074,2.703,3075,2.703,3076,2.703,3077,4.25,3078,2.703,3079,2.703,3080,2.703,3081,2.703,3082,2.703,3083,2.703,3084,2.703,3085,2.703,3086,2.703,3087,2.703,3088,2.703,3089,2.703,3090,2.703,3091,2.703,3092,2.703,3093,2.703,3094,3.77,3095,2.703,3096,2.703,3097,2.397,3098,2.703,3099,2.703,3100,2.703,3101,2.703,3102,2.703,3103,2.703,3104,2.703,3105,2.703,3106,2.703,3107,2.703,3108,2.703,3109,2.703,3110,2.703,3111,2.703,3112,2.703,3113,2.703,3114,2.703,3115,2.703,3116,2.703,3117,2.703,3118,2.703,3119,2.703,3120,2.703,3121,2.703,3122,2.703,3123,2.703,3124,2.703,3125,2.703,3126,2.703,3127,2.703,3128,2.703,3129,2.703,3130,2.703,3131,2.703,3132,2.703,3133,2.703,3134,2.703,3135,2.703,3136,2.703,3137,2.703,3138,2.703]],["title/components/SingleProjectCardComponent.html",[0,0.225,146,0.92]],["body/components/SingleProjectCardComponent.html",[0,0.269,1,0.581,2,0.865,3,0.041,4,0.031,5,0.592,6,0.592,7,0.592,8,0.026,12,0.592,13,1.964,14,1.964,15,0.581,17,0.9,18,1.171,19,0.918,20,1.828,21,2.143,22,3.24,23,2.369,24,1.91,25,0.918,27,0.955,29,0.497,30,0.008,31,0.884,32,0.336,33,1.316,34,0.922,35,0.922,36,1.128,37,1.247,38,0.041,39,0.305,41,3.205,43,1.125,44,0.918,45,0.918,46,0.592,47,1.267,48,0.592,49,0.575,50,0.592,51,0.581,52,0.592,53,0.581,54,0.592,55,0.581,56,0.592,57,0.581,58,0.592,59,0.581,60,0.592,61,0.581,62,0.547,63,0.918,64,0.592,65,0.558,66,0.558,67,1.514,68,0.581,69,0.918,70,0.581,71,0.592,72,0.581,73,0.592,74,0.581,75,0.547,76,0.581,77,0.592,78,0.581,79,0.569,80,0.918,81,0.581,82,0.592,83,0.581,84,0.592,85,0.581,86,0.592,87,0.581,88,0.592,89,0.581,90,0.592,91,0.581,92,0.592,93,0.581,94,0.592,95,1.125,96,0.581,97,0.592,98,0.581,99,0.526,100,0.581,101,0.592,102,0.581,103,0.592,104,0.581,105,0.592,106,0.581,107,0.592,108,0.581,109,0.581,110,1.445,111,0.581,112,0.883,113,0.592,114,0.848,115,0.918,116,0.581,117,0.581,118,0.592,119,0.592,120,0.592,121,0.592,122,0.581,123,0.592,124,0.581,125,0.592,126,0.581,127,0.547,128,0.581,129,0.592,130,0.581,131,0.558,132,0.581,133,0.592,134,0.581,135,0.592,136,0.592,137,0.581,138,0.592,139,0.581,140,0.592,141,0.581,142,0.592,143,0.581,144,0.581,145,0.592,146,1.242,147,1.455,148,0.592,149,0.592,150,0.592,151,0.581,152,0.592,153,0.581,154,0.592,155,0.581,156,0.592,157,0.581,158,0.581,159,0.581,160,0.495,161,0.581,162,0.592,163,0.592,164,0.558,165,0.581,166,0.592,167,0.581,168,0.592,169,0.592,170,0.592,171,0.004,172,0.004,179,1.525,181,3.119,186,0.302,187,1.097,188,3.514,190,2.12,194,0.974,199,1.609,201,1.125,202,0.466,203,1.455,205,1.455,206,1.814,209,0.609,258,0.364,288,1.75,300,1.46,311,2.904,313,3.131,316,1.141,317,1.054,320,1.856,344,3.02,389,1.394,400,1.005,430,0.902,546,0.902,723,3.964,729,2.227,785,4.506,882,2.099,892,4.814,907,3.788,975,3.753,991,4.152,1031,3.389,1086,3.632,1087,3.632,1088,3.054,1121,1.706,1202,4.144,1203,3.901,1206,2.182,1308,2.182,1482,4.396,1483,5.012,1792,3.964,1855,3.374,1897,1.777,2565,2.342,2566,5.346,2598,2.557,2602,2.557,2641,5.739,2648,2.557,2704,7.216,2755,2.557,2778,2.557,2783,3.964,2972,3.964,3097,5.471,3139,8.135,3140,2.882,3141,7.818,3142,4.469,3143,5.474,3144,5.474,3145,5.474,3146,4.469,3147,4.469,3148,5.474,3149,5.474,3150,5.474,3151,4.469,3152,6.168,3153,4.469,3154,4.469,3155,2.882,3156,4.469,3157,5.474,3158,2.882,3159,2.882,3160,2.882,3161,2.882,3162,4.469,3163,2.882,3164,2.882,3165,4.469,3166,4.469,3167,2.882,3168,2.882,3169,2.882,3170,2.882,3171,2.882,3172,2.882,3173,2.557,3174,2.882,3175,4.469,3176,2.882,3177,2.882,3178,2.882,3179,2.882,3180,5.474,3181,2.882,3182,2.882,3183,2.882,3184,2.882,3185,2.882,3186,2.882,3187,2.557,3188,4.469,3189,4.469,3190,2.882,3191,2.882,3192,2.882,3193,6.168,3194,2.882,3195,2.882,3196,4.469,3197,4.469,3198,4.469,3199,4.469,3200,4.469,3201,4.469,3202,4.469,3203,4.469,3204,7.087,3205,8.26,3206,4.469,3207,4.469,3208,4.469,3209,4.469]],["title/injectables/SingleProjectEffects.html",[323,1.016,507,3.712]],["body/injectables/SingleProjectEffects.html",[3,0.04,4,0.03,8,0.026,29,0.394,30,0.008,32,0.33,38,0.04,39,0.3,49,0.244,66,1.359,75,1.562,110,1.173,127,1.562,147,0.528,158,1.658,164,1.593,171,0.004,172,0.004,186,0.157,190,1.197,194,0.962,199,1.759,201,0.583,202,0.163,203,0.56,258,0.359,316,2.214,317,2.045,323,0.982,325,0.669,505,6.263,507,3.588,515,1.059,531,4.025,533,5.494,534,5.483,539,1.035,544,5.483,546,2.901,563,1.679,592,1.679,593,1.616,594,1.679,1301,5.425,1302,5.425,1303,5.425,1304,1.917,2565,2.305,2566,5.312,2570,5.425,2585,2.517,2872,5.425,2873,5.425,2874,5.425,3210,7.142,3211,2.837,3212,6.116,3213,5.425,3214,6.116,3215,6.116,3216,6.116,3217,5.425,3218,6.116,3219,6.116,3220,5.425,3221,6.116,3222,6.116,3223,2.837,3224,4.415,3225,8.218,3226,4.415,3227,6.224,3228,7.017,3229,5.42,3230,7.017,3231,4.415,3232,2.837,3233,4.415,3234,4.415,3235,6.116,3236,7.017,3237,5.42,3238,4.415,3239,2.837,3240,4.415,3241,4.415,3242,7.017,3243,5.42,3244,4.415,3245,2.837,3246,4.415,3247,4.415,3248,6.116,3249,7.017,3250,5.42,3251,4.415,3252,2.837,3253,4.415,3254,4.415,3255,6.719,3256,6.224,3257,5.42,3258,4.415,3259,2.837,3260,4.415,3261,4.415,3262,5.42,3263,4.415,3264,2.837,3265,4.415,3266,4.415,3267,5.42,3268,4.415,3269,2.837,3270,4.415,3271,4.415,3272,5.42,3273,4.415,3274,2.837,3275,4.415,3276,4.415,3277,5.42,3278,4.415,3279,2.837,3280,4.415,3281,4.415,3282,5.42,3283,4.415,3284,2.837,3285,4.415,3286,4.415,3287,5.42,3288,4.415,3289,2.837,3290,4.415,3291,4.415,3292,5.42,3293,4.415,3294,2.837,3295,4.415,3296,4.415,3297,5.42,3298,4.415,3299,2.837,3300,4.415,3301,4.415,3302,5.42,3303,4.415,3304,2.837,3305,4.415,3306,4.415,3307,5.42,3308,4.415,3309,2.837,3310,4.415,3311,4.415,3312,5.42,3313,4.415,3314,2.837,3315,4.415,3316,4.415,3317,5.42,3318,4.415,3319,2.837,3320,2.837,3321,2.837,3322,2.837,3323,2.837,3324,2.837,3325,2.837,3326,2.837,3327,2.837,3328,2.837,3329,2.837,3330,2.837,3331,2.837,3332,2.837,3333,2.837,3334,2.837,3335,2.837,3336,2.837]],["title/components/SingleTeamComponent.html",[0,0.225,151,0.92]],["body/components/SingleTeamComponent.html",[0,0.23,1,1.087,2,0.716,3,0.052,4,0.024,5,0.467,6,0.467,7,0.467,8,0.02,10,1.401,12,0.467,13,1.935,14,1.935,15,0.458,17,0.745,18,0.888,19,0.76,20,1.562,21,1.832,23,2.025,24,1.632,25,0.76,27,0.791,29,0.534,30,0.008,31,0.697,32,0.265,33,1.038,34,0.727,35,0.727,36,0.89,37,0.984,38,0.032,39,0.241,41,3.114,43,0.467,44,0.76,45,0.76,46,0.467,47,1.108,48,0.467,49,0.578,50,0.467,51,0.458,52,0.467,53,0.458,54,0.467,55,0.458,56,0.467,57,0.458,58,0.467,59,0.458,60,0.467,61,0.458,62,0.431,63,0.76,64,0.467,65,0.44,66,0.44,67,1.379,68,0.458,69,0.76,70,0.458,71,0.467,72,0.458,73,0.467,74,0.458,75,0.431,76,0.458,77,0.467,78,0.458,79,0.449,80,0.76,81,0.458,82,0.467,83,0.458,84,0.467,85,0.458,86,0.467,87,0.458,88,0.467,89,0.458,90,0.467,91,0.458,92,0.467,93,1.087,94,0.467,95,0.962,96,0.458,97,0.467,98,1.087,99,1.161,100,0.458,101,0.467,102,0.458,103,0.467,104,1.087,105,0.467,106,0.458,107,0.467,108,0.458,109,0.458,110,0.986,111,1.087,112,0.731,113,0.467,114,1.274,115,0.76,116,1.087,117,0.458,118,0.467,119,0.467,120,0.467,121,0.467,122,0.458,123,0.467,124,0.458,125,0.467,126,0.458,127,0.431,128,0.458,129,0.467,130,0.458,131,0.44,132,0.458,133,0.467,134,0.458,135,0.467,136,0.467,137,0.458,138,0.467,139,0.458,140,0.467,141,0.458,142,0.467,143,0.458,144,0.458,145,0.467,146,0.458,147,1.622,148,0.467,149,0.467,150,0.467,151,1.087,152,0.467,153,0.458,154,0.467,155,0.458,156,0.467,157,0.458,158,0.458,159,0.458,160,1.333,161,0.458,162,0.467,163,0.467,164,0.44,165,0.458,166,0.467,167,0.458,168,0.467,169,0.467,170,0.467,171,0.003,172,0.003,179,1.262,180,1.973,186,0.126,187,0.908,189,2.275,190,2.227,194,0.807,196,3.065,199,1.781,201,1.22,202,0.426,203,1.325,205,1.65,206,2.128,209,1.077,226,0.668,256,1.291,258,0.301,288,1.832,300,1.762,311,2.218,316,2.073,317,2.007,325,0.536,361,1.748,389,1.099,398,1.291,399,1.291,400,1.882,401,1.35,402,1.32,403,1.414,430,0.712,453,1.934,460,0.829,500,6.769,539,0.829,546,1.689,555,1.738,628,1.249,658,2.959,661,1.067,663,0.712,665,1.099,681,1.099,684,1.789,700,1.401,729,1.844,788,3.474,796,1.168,881,2.406,882,1.738,883,3.604,885,2.332,886,2.332,893,4.231,896,3.803,897,3.803,899,3.007,901,2.773,902,2.801,905,2.323,907,3.45,912,3.007,914,3.153,919,2.801,924,2.406,929,2.666,930,1.132,934,3.007,936,1.132,938,1.01,939,1.132,940,1.132,941,1.401,942,2.281,943,1.401,947,0.869,954,1.847,955,1.401,956,1.484,957,1.902,958,1.207,959,1.401,960,1.401,961,1.847,966,2.325,978,1.902,979,1.902,980,1.902,983,1.844,984,2.332,986,3.007,991,2.865,992,1.721,996,1.847,999,3.007,1011,1.067,1033,3.543,1047,1.067,1071,3.474,1121,1.345,1152,1.521,1157,3.007,1158,2.801,1215,4.888,1217,3.162,1223,3.824,1270,3.923,1272,2.383,1283,1.536,1285,1.464,1291,2.801,1293,1.965,1294,1.249,1295,1.132,1296,1.401,1297,1.401,1298,1.099,1299,1.168,1300,1.401,1305,1.464,1306,3.514,1312,1.62,1313,1.536,1314,1.62,1315,1.62,1317,1.62,1319,1.401,1320,2.383,1321,1.536,1322,1.62,1323,3.325,1324,1.536,1325,3.014,1326,1.62,1327,1.62,1328,2.637,1329,1.62,1331,1.62,1339,1.295,1340,1.249,1341,1.249,1342,1.464,1352,3.923,1851,2.016,1859,3.803,1899,1.847,1927,3.007,1938,3.335,1943,3.543,1953,4.083,1962,1.62,1967,1.721,1968,2.016,1969,1.847,1970,2.801,2326,2.016,2340,4.151,2341,4.151,2347,4.151,2385,2.016,2386,2.016,2604,2.016,2721,2.016,2722,1.847,2854,4.383,3337,8.877,3338,2.273,3339,4.68,3340,4.68,3341,3.7,3342,3.7,3343,5.394,3344,4.68,3345,4.68,3346,4.68,3347,4.68,3348,4.68,3349,4.083,3350,5.394,3351,3.7,3352,3.7,3353,5.424,3354,4.782,3355,3.7,3356,2.273,3357,2.273,3358,2.273,3359,2.273,3360,2.273,3361,2.273,3362,3.7,3363,2.273,3364,2.273,3365,3.7,3366,2.273,3367,5.646,3368,2.273,3369,2.273,3370,2.273,3371,3.7,3372,2.273,3373,3.7,3374,2.273,3375,3.7,3376,2.273,3377,2.273,3378,3.7,3379,2.273,3380,2.273,3381,2.273,3382,2.273,3383,2.273,3384,3.7,3385,2.273,3386,2.273,3387,2.273,3388,3.7,3389,2.273,3390,2.273,3391,2.273,3392,2.801,3393,2.801,3394,1.847,3395,1.847,3396,1.847,3397,2.801,3398,2.801,3399,2.016,3400,2.801,3401,1.62,3402,2.273,3403,2.273,3404,2.273,3405,2.273,3406,2.273,3407,2.273,3408,2.273,3409,2.273,3410,3.7,3411,2.273,3412,2.273,3413,2.273,3414,2.273,3415,6.995,3416,2.273,3417,2.273,3418,3.7,3419,2.273,3420,2.273,3421,2.273,3422,4.68,3423,2.273,3424,2.273,3425,2.273,3426,2.273,3427,3.7,3428,2.273,3429,2.273,3430,2.273,3431,2.273,3432,3.7,3433,3.7,3434,3.7,3435,3.7,3436,3.282,3437,3.7,3438,3.7,3439,3.7]],["title/injectables/SingleTeamEffects.html",[323,1.016,499,3.712]],["body/injectables/SingleTeamEffects.html",[3,0.058,4,0.044,8,0.037,29,0.46,30,0.008,32,0.478,38,0.058,39,0.435,49,0.354,99,1.622,114,1.688,147,0.764,160,1.45,171,0.005,172,0.005,186,0.227,190,1.576,194,1.267,199,1.73,201,0.844,202,0.235,203,0.811,258,0.473,316,2.156,317,1.992,323,1.292,325,0.969,499,4.724,500,6.593,515,1.533,531,4.544,533,5.433,534,5.406,539,1.499,544,5.406,546,2.86,563,2.43,592,2.43,593,2.339,594,2.43,1992,7.133,2576,7.133,3210,7.077,3225,8.104,3227,5.157,3255,7.492,3354,5.731,3392,5.555,3393,5.555,3394,5.963,3395,5.963,3396,5.963,3397,5.555,3398,3.109,3400,5.555,3401,2.927,3440,4.107,3441,6.748,3442,3.643,3443,4.107,3444,5.813,3445,5.813,3446,5.986,3447,5.813,3448,4.107,3449,5.813,3450,5.813,3451,5.986,3452,5.813,3453,4.107,3454,5.813,3455,5.813,3456,6.509,3457,5.986,3458,5.813,3459,4.107,3460,5.813,3461,5.813,3462,5.986,3463,5.813,3464,4.107,3465,5.813,3466,5.813,3467,5.986,3468,5.813,3469,4.107,3470,5.813,3471,5.813,3472,5.986,3473,5.813,3474,4.107,3475,5.813,3476,5.813,3477,5.986,3478,5.813,3479,4.107,3480,5.813,3481,5.813,3482,5.986,3483,5.813,3484,4.107,3485,3.643,3486,3.643,3487,3.643,3488,3.643,3489,3.643,3490,3.643,3491,3.643,3492,3.643,3493,3.643]],["title/interfaces/SingleTeamState.html",[247,0.291,469,3.712]],["body/interfaces/SingleTeamState.html",[3,0.053,4,0.04,8,0.034,29,0.464,30,0.008,38,0.091,99,1.624,110,1.094,114,1.691,147,0.702,160,1.418,171,0.004,172,0.004,186,0.208,202,0.525,226,1.61,247,0.24,249,0.807,256,1.317,258,0.446,331,4.652,361,2.637,398,1.317,399,1.317,402,1.346,403,1.443,453,2.779,469,5.232,500,2.857,502,3.348,546,2.826,661,4.386,662,3.373,663,1.182,664,2.327,665,1.825,667,2.55,670,3.968,671,5.091,675,5.091,681,3.994,684,3.994,1152,3.396,2658,3.067,3210,3.067,3392,2.857,3393,2.857,3394,3.067,3395,3.067,3396,3.067,3397,2.857,3398,2.857,3399,3.348,3400,2.857,3401,2.69,3446,3.348,3451,3.348,3457,3.348,3462,3.348,3467,3.348,3472,3.348,3477,3.348,3482,3.348,3486,3.348,3487,3.348,3488,3.348,3489,3.348,3490,3.348,3491,3.348,3492,3.348,3493,3.348,3494,3.774,3495,8.259,3496,8.259,3497,8.259,3498,8.259,3499,8.259,3500,8.259,3501,8.259,3502,8.259,3503,8.259,3504,8.259,3505,8.259,3506,8.259,3507,8.064,3508,8.259,3509,8.259,3510,8.259,3511,8.259,3512,3.348,3513,3.774,3514,3.774,3515,3.774,3516,3.774,3517,3.774,3518,3.774,3519,3.774,3520,3.774,3521,3.774,3522,3.774,3523,3.774,3524,3.774,3525,3.774,3526,3.774,3527,3.774,3528,3.774,3529,3.774,3530,3.774,3531,3.774,3532,3.774,3533,3.774,3534,3.774,3535,3.774,3536,3.774,3537,3.774]],["title/components/StatsComponent.html",[0,0.225,153,0.92]],["body/components/StatsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.613,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,3538,5.05,3539,8.007,3540,6.699,3541,6.699]],["title/components/SupportComponent.html",[0,0.225,155,0.92]],["body/components/SupportComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.613,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.017,168,1.038,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,3542,5.05,3543,7.102,3544,6.699,3545,6.699]],["title/components/TagsTableComponent.html",[0,0.225,157,0.92]],["body/components/TagsTableComponent.html",[0,0.239,1,1.122,2,0.749,3,0.068,4,0.026,5,0.493,6,0.493,7,0.493,8,0.022,10,1.479,12,0.493,13,1.942,14,1.942,15,0.779,17,0.779,18,1.468,19,0.794,20,1.621,21,1.901,23,2.101,24,1.694,25,0.794,27,0.826,29,0.52,30,0.008,31,0.736,32,0.279,34,0.767,35,0.767,36,0.939,37,1.038,38,0.034,39,0.254,41,3.035,43,0.493,44,0.794,45,0.794,46,0.493,47,1.144,48,0.493,49,0.591,50,0.493,51,0.483,52,0.493,53,0.483,54,0.493,55,0.483,56,0.493,57,0.483,58,0.493,59,0.483,60,0.493,61,0.483,62,0.455,63,0.794,64,0.493,65,0.465,66,0.465,67,1.41,68,0.483,69,0.794,70,0.483,71,0.493,72,0.483,73,0.493,74,0.483,75,0.455,76,0.483,77,0.493,78,0.483,79,0.474,80,0.794,81,0.483,82,0.493,83,0.483,84,0.493,85,0.483,86,0.493,87,0.483,88,0.493,89,0.483,90,0.493,91,0.483,92,0.493,93,0.483,94,0.493,95,0.998,96,0.483,97,0.493,98,0.483,99,0.438,100,0.483,101,0.493,102,0.483,103,0.493,104,0.483,105,0.493,106,0.483,107,0.493,108,0.483,109,0.483,110,1.142,111,0.483,112,0.764,113,0.493,114,0.734,115,0.794,116,0.483,117,0.483,118,0.493,119,0.493,120,0.493,121,0.493,122,0.483,123,0.493,124,0.483,125,0.493,126,0.483,127,0.455,128,0.483,129,0.493,130,0.483,131,0.465,132,0.483,133,0.493,134,0.483,135,0.493,136,0.493,137,0.483,138,0.493,139,0.483,140,0.493,141,0.483,142,0.493,143,0.483,144,0.483,145,0.493,146,0.483,147,0.903,148,0.493,149,0.493,150,0.493,151,0.483,152,0.493,153,0.483,154,0.493,155,0.483,156,0.493,157,1.122,158,1.814,159,0.483,160,0.412,161,0.483,162,0.493,163,0.493,164,0.465,165,0.483,166,0.493,167,0.483,168,0.493,169,0.493,170,0.493,171,0.003,172,0.003,179,1.319,180,2.048,186,0.133,187,0.949,189,2.348,190,2.097,194,0.843,196,3.134,199,1.788,201,1.255,202,0.481,203,1.206,205,1.684,206,2.168,209,1.055,226,0.706,256,1.349,258,0.315,288,2.886,300,2.716,311,3.111,316,2.1,317,1.98,325,0.566,398,1.349,399,1.349,400,1.349,401,1.411,402,1.379,460,0.876,505,2.755,539,0.876,546,1.211,555,1.816,658,4.047,661,1.127,663,0.751,665,1.16,679,1.87,681,2.693,684,2.693,700,2.383,718,2.218,729,1.927,788,4.599,796,1.988,840,1.066,882,1.816,883,3.673,885,2.42,886,2.42,887,2.42,905,2.382,906,3.772,921,2.669,922,2.669,930,1.196,936,1.196,937,1.319,938,1.066,939,1.196,940,1.196,947,0.917,956,3.258,957,1.988,958,1.274,966,2.18,978,2.863,979,2.863,980,2.863,983,2.775,984,2.775,1011,1.127,1024,3.128,1047,1.127,1121,1.42,1135,1.545,1152,1.59,1214,1.71,1215,4.981,1216,4.352,1217,3.281,1218,2.993,1219,2.755,1220,2.755,1221,3.461,1223,3.933,1224,3.946,1225,3.946,1228,2.755,1232,4.216,1233,3.142,1234,3.142,1235,3.676,1236,3.946,1237,3.461,1238,3.461,1239,3.461,1240,3.676,1241,3.461,1242,2.128,1243,1.817,1244,1.817,1245,1.95,1246,2.128,1247,2.128,1248,1.71,1249,1.95,1250,2.128,1251,2.755,1252,3.969,1262,3.142,1264,2.755,1265,2.128,1268,1.95,1269,2.128,1270,2.383,1271,2.927,1272,2.49,1274,1.95,1280,1.95,1281,1.367,1282,1.95,1283,1.621,1284,1.479,1285,1.545,1291,2.927,1292,1.95,1293,2.579,1294,1.319,1295,1.196,1296,1.479,1297,1.479,1298,1.16,1299,1.234,1300,1.479,1304,1.621,1305,1.545,1306,2.874,1307,2.993,1308,3.676,1309,1.71,1310,2.927,1311,2.927,1312,2.755,1313,2.613,1314,2.755,1315,2.755,1316,2.927,1317,2.755,1318,2.927,1319,2.383,1320,3.587,1321,2.613,1322,2.755,1323,4.401,1324,2.613,1325,4.203,1326,2.755,1327,2.755,1328,3.969,1329,2.755,1331,2.755,1336,3.946,1339,2.203,1340,2.125,1341,2.125,1342,2.49,1344,2.755,1346,2.755,1352,2.383,1354,2.927,2081,1.95,2734,2.128,2740,2.128,2741,2.128,3213,3.43,3217,3.43,3220,3.43,3546,8.91,3547,8.91,3548,4.856,3549,4.856,3550,4.856,3551,4.856,3552,5.569,3553,3.866,3554,5.569,3555,2.4,3556,2.4,3557,3.866,3558,2.4,3559,2.4,3560,3.866,3561,2.4,3562,6.864,3563,3.866,3564,3.866,3565,2.4,3566,3.866,3567,2.4,3568,3.866,3569,3.866,3570,3.866,3571,2.4,3572,2.4,3573,2.4,3574,2.4,3575,2.4,3576,2.4,3577,7.14,3578,2.4,3579,2.4,3580,2.4,3581,2.4,3582,2.4,3583,2.4,3584,2.4,3585,2.4,3586,2.4,3587,2.4,3588,2.4,3589,2.4,3590,2.4,3591,3.866,3592,3.866,3593,3.866,3594,3.866,3595,3.866]],["title/interfaces/Team.html",[160,0.784,247,0.291]],["body/interfaces/Team.html",[3,0.099,4,0.075,8,0.063,30,0.008,38,0.099,160,1.415,171,0.007,172,0.007,186,0.389,202,0.517,209,1.269,247,0.448,249,1.504,258,0.671,914,4.788,1088,3.733,1091,4.635,1092,4.954,3353,6.425,3596,7.037]],["title/interfaces/TeamDto.html",[247,0.291,3597,3.712]],["body/interfaces/TeamDto.html",[3,0.099,4,0.075,8,0.063,30,0.008,38,0.099,171,0.007,172,0.007,186,0.389,202,0.517,209,1.269,247,0.448,249,1.504,258,0.671,914,4.788,1088,3.733,1091,4.635,1092,4.954,3353,6.425,3597,6.698,3598,7.037]],["title/injectables/TeamEffects.html",[323,1.016,491,3.712]],["body/injectables/TeamEffects.html",[3,0.075,4,0.057,8,0.048,29,0.503,30,0.008,32,0.62,38,0.075,39,0.564,49,0.458,164,1.582,171,0.006,172,0.006,186,0.294,190,1.881,194,1.512,199,1.707,201,1.094,202,0.305,203,1.052,258,0.565,316,2.087,317,1.928,323,1.542,325,1.256,491,5.637,515,1.988,531,4.863,533,5.369,534,5.311,536,5.825,539,2.815,544,5.311,546,2.81,563,5.016,592,3.151,593,3.033,594,3.151,2699,6.188,3256,7.25,3349,6.188,3354,6.193,3401,3.795,3442,4.723,3456,6.153,3485,4.723,3599,5.324,3600,7.25,3601,6.188,3602,5.324,3603,6.936,3604,6.936,3605,6.936,3606,6.936,3607,5.324,3608,6.936,3609,6.936,3610,6.936,3611,6.936,3612,6.936,3613,5.324,3614,6.936,3615,6.936,3616,6.936,3617,6.936,3618,5.324,3619,6.936,3620,6.936,3621,6.936,3622,6.936,3623,5.324,3624,4.723,3625,4.723,3626,4.723,3627,4.723,3628,5.324,3629,4.723,3630,4.723,3631,4.723]],["title/components/TeamPickerComponent.html",[0,0.225,159,0.92]],["body/components/TeamPickerComponent.html",[0,0.309,1,0.73,2,1.029,3,0.051,4,0.039,5,0.745,6,0.745,7,0.745,8,0.033,12,0.745,13,1.986,14,1.986,15,0.73,17,1.07,18,1.194,19,1.091,20,2.1,21,2.462,23,2.722,24,2.194,25,1.091,27,1.135,29,0.525,30,0.008,31,1.111,32,0.422,34,1.159,35,1.159,36,1.419,37,1.568,38,0.051,39,0.384,43,0.745,44,1.091,45,1.091,46,0.745,47,1.423,48,0.745,49,0.686,50,0.745,51,0.73,52,0.745,53,0.73,54,0.745,55,0.73,56,0.745,57,0.73,58,0.745,59,0.73,60,0.745,61,0.73,62,0.688,63,1.091,64,0.745,65,0.702,66,0.702,67,1.636,68,0.73,69,1.091,70,0.73,71,0.745,72,0.73,73,0.745,74,0.73,75,0.688,76,0.73,77,0.745,78,0.73,79,0.716,80,1.091,81,0.73,82,0.745,83,0.73,84,0.745,85,0.73,86,0.745,87,0.73,88,0.745,89,0.73,90,0.745,91,0.73,92,0.745,93,0.73,94,0.745,95,1.292,96,0.73,97,0.745,98,0.73,99,0.969,100,0.73,101,0.745,102,0.73,103,0.745,104,0.73,105,0.745,106,0.73,107,0.745,108,0.73,109,0.73,110,0.974,111,0.73,112,1.049,113,0.745,114,1.008,115,1.091,116,0.73,117,0.73,118,0.745,119,0.745,120,0.745,121,0.745,122,0.73,123,0.745,124,0.73,125,0.745,126,0.73,127,0.688,128,0.73,129,0.745,130,0.73,131,0.702,132,0.73,133,0.745,134,0.73,135,0.745,136,0.745,137,0.73,138,0.745,139,0.73,140,0.745,141,0.73,142,0.745,143,0.73,144,0.73,145,0.745,146,0.73,147,1.17,148,0.745,149,0.745,150,0.745,151,0.73,152,0.745,153,0.73,154,0.745,155,0.73,156,0.745,157,0.73,158,0.73,159,1.395,160,1.53,161,0.73,162,0.745,163,0.745,164,1.428,165,0.73,166,0.745,167,0.73,168,0.745,169,0.745,170,0.745,171,0.004,172,0.004,186,0.2,187,1.304,194,0.79,199,1.749,201,1.515,202,0.477,203,1.456,205,1.739,206,2.342,258,0.432,288,2.712,299,2.449,311,2.184,316,1.768,317,1.739,325,0.855,350,2.919,371,1.568,453,1.044,460,1.322,555,1.702,663,1.135,729,2.647,796,1.863,905,2.812,947,1.385,956,2.778,966,1.419,1039,2.743,1047,1.702,1152,1.49,1218,3.877,1284,2.234,1293,2.821,1294,1.991,1339,2.064,1340,1.991,1341,1.991,1852,2.945,1853,4.317,1854,5.111,1855,3.877,1856,4.317,1857,4.317,1860,5.111,1862,4.317,1863,4.317,1864,4.317,1865,4.317,1866,5.628,1874,2.945,1877,4.317,1878,5.628,1880,4.317,1881,5.628,1883,4.317,1884,5.628,1886,4.317,1887,5.628,1895,2.945,1897,2.234,1898,2.945,1921,2.743,1922,2.743,1928,2.945,2698,3.214,2700,2.945,2702,2.945,2711,2.945,3436,4.712,3601,2.743,3632,8.771,3633,8.771,3634,6.289,3635,6.289,3636,6.289,3637,6.289,3638,6.289,3639,3.624,3640,3.624,3641,3.624,3642,3.624,3643,3.624,3644,3.624,3645,3.624,3646,3.624,3647,4.712,3648,3.624,3649,3.624,3650,3.214,3651,3.214,3652,3.214,3653,3.214,3654,3.624,3655,3.624,3656,3.624,3657,3.624,3658,3.624,3659,3.624,3660,5.312,3661,5.312,3662,5.312,3663,5.312]],["title/injectables/TeamService.html",[323,1.016,3354,3.256]],["body/injectables/TeamService.html",[3,0.061,4,0.046,8,0.039,29,0.523,30,0.008,32,0.504,38,0.061,39,0.458,49,0.773,110,0.67,160,0.743,171,0.005,172,0.005,182,1.923,186,0.239,187,1.48,194,0.943,199,1.834,201,1.844,202,0.522,203,1.773,205,2.133,209,1.316,323,1.341,325,1.021,361,1.616,370,2.033,371,1.873,391,4.442,430,2.832,515,1.616,610,2.561,611,4.278,613,3.315,628,4.494,633,2.561,634,3.436,638,2.668,639,2.924,640,3.517,647,5.352,648,5.074,667,2.924,893,4.298,914,3.687,998,4.566,1017,6.103,1152,2.48,1281,3.436,1675,5.642,2463,3.839,2468,3.839,2471,3.839,2559,3.517,2658,3.517,2854,7.591,3349,4.566,3353,6.397,3354,4.298,3392,4.566,3393,4.566,3397,4.566,3398,4.566,3400,4.566,3597,3.517,3664,4.328,3665,6.032,3666,7.51,3667,7.51,3668,6.032,3669,6.032,3670,6.032,3671,4.328,3672,6.032,3673,4.328,3674,6.032,3675,4.328,3676,6.032,3677,4.328,3678,6.032,3679,4.328,3680,4.328,3681,4.328,3682,6.032,3683,4.328,3684,6.032,3685,4.328,3686,6.032,3687,4.328,3688,4.328,3689,6.032,3690,4.328,3691,6.032,3692,4.328,3693,6.032,3694,4.328,3695,4.328,3696,4.328,3697,6.943,3698,8.178,3699,6.943,3700,6.943,3701,4.328,3702,6.943,3703,6.032]],["title/interfaces/TeamState.html",[247,0.291,470,3.712]],["body/interfaces/TeamState.html",[3,0.065,4,0.049,8,0.041,29,0.458,30,0.008,38,0.101,62,1.361,160,1.557,164,1.613,171,0.005,172,0.005,186,0.254,202,0.511,226,1.85,247,0.293,249,0.983,256,2.689,258,0.512,273,2.443,331,4.588,361,1.718,381,3.023,398,2.689,399,2.689,400,2.689,401,2.813,402,2.75,403,2.946,453,2.756,470,5.826,493,4.08,546,2.758,658,2.292,661,4.289,662,3.878,663,1.44,664,2.835,665,2.224,670,3.878,671,4.751,672,5.43,673,3.878,675,4.751,679,3.467,681,3.727,682,4.419,684,3.727,685,4.964,884,2.224,1152,3.169,2676,6.772,2699,3.482,2711,3.738,3349,3.482,3353,4.483,3401,3.278,3512,4.08,3600,4.08,3601,3.482,3624,4.08,3625,4.08,3626,4.08,3627,4.08,3629,4.08,3630,4.08,3631,4.08,3704,4.6,3705,8.531,3706,8.531,3707,8.686,3708,8.686,3709,8.686,3710,8.686,3711,7.704,3712,8.686,3713,8.686,3714,4.6,3715,4.6,3716,6.291,3717,4.6,3718,4.6,3719,4.6,3720,4.6,3721,4.6,3722,4.6,3723,4.6,3724,4.6,3725,4.6,3726,4.6]],["title/components/TeamsComponent.html",[0,0.225,161,0.92]],["body/components/TeamsComponent.html",[0,0.327,1,1.46,2,1.104,3,0.056,4,0.043,5,0.821,6,0.821,7,0.821,8,0.036,10,2.463,12,0.821,13,1.994,14,1.994,15,0.805,17,1.149,18,1.082,19,1.171,20,2.219,24,2.319,25,1.171,27,1.219,29,0.534,30,0.008,31,1.225,32,0.465,34,1.278,35,1.278,38,0.056,39,0.423,43,0.821,44,1.171,45,1.171,46,0.821,47,1.489,48,0.821,49,0.572,50,0.821,51,0.805,52,0.821,53,0.805,54,0.821,55,0.805,56,0.821,57,0.805,58,0.821,59,0.805,60,0.821,61,0.805,62,0.758,63,1.171,64,0.821,65,0.774,66,0.774,67,1.685,68,0.805,69,1.171,70,0.805,71,0.821,72,0.805,73,0.821,74,0.805,75,0.758,76,0.805,77,0.821,78,0.805,79,0.789,80,1.171,81,0.805,82,0.821,83,0.805,84,0.821,85,0.805,86,0.821,87,0.805,88,0.821,89,0.805,90,0.821,91,0.805,92,0.821,93,0.805,94,0.821,95,1.366,96,0.805,97,0.821,98,0.805,99,0.729,100,0.805,101,0.821,102,0.805,103,0.821,104,0.805,105,0.821,106,0.805,107,0.821,108,0.805,109,0.805,110,1.03,111,0.805,112,1.126,113,0.821,114,1.082,115,1.171,116,0.805,117,0.805,118,0.821,119,0.821,120,0.821,121,0.821,122,0.805,123,0.821,124,0.805,125,0.821,126,0.805,127,0.758,128,0.805,129,0.821,130,0.805,131,0.774,132,0.805,133,0.821,134,0.805,135,0.821,136,0.821,137,0.805,138,0.821,139,0.805,140,0.821,141,0.805,142,0.821,143,0.805,144,0.805,145,0.821,146,0.805,147,1.237,148,0.821,149,0.821,150,0.821,151,0.805,152,0.821,153,0.805,154,0.821,155,0.805,156,0.821,157,0.805,158,0.805,159,0.805,160,0.686,161,1.46,162,0.821,163,1.489,164,1.287,165,0.805,166,0.821,167,0.805,168,0.821,169,0.821,170,0.821,171,0.005,172,0.005,179,1.945,180,2.803,186,0.221,187,1.399,189,3.057,194,0.871,199,1.719,201,0.821,202,0.229,203,0.789,205,0.943,206,1.677,258,0.464,316,2.094,317,2.067,325,0.943,371,1.729,460,1.458,539,1.458,663,1.251,905,2.908,947,1.528,966,2.838,1011,1.877,1047,1.877,1071,4.669,1223,4.937,1270,4.912,1272,3.672,1285,2.574,1295,1.991,1296,2.463,1297,2.463,1298,1.932,1299,2.054,1300,2.463,1352,3.514,1938,4.737,1942,5.402,1943,5.032,1951,4.633,1953,4.316,1962,2.848,1967,3.025,1970,3.025,2675,6.43,2676,5.402,2693,5.058,2696,5.058,2699,3.025,2700,3.247,2701,3.545,2702,3.247,2706,3.545,3367,7.069,3601,3.025,3647,5.058,3650,6.43,3651,3.545,3652,3.545,3653,5.058,3711,5.897,3727,3.996,3728,5.702,3729,5.702,3730,3.996,3731,3.996,3732,3.996,3733,3.996,3734,3.996,3735,3.996,3736,3.996,3737,3.996,3738,3.996,3739,3.996,3740,3.996]],["title/interfaces/Token.html",[247,0.291,659,3.458]],["body/interfaces/Token.html",[3,0.1,4,0.076,8,0.064,30,0.007,38,0.1,171,0.007,172,0.007,186,0.393,202,0.476,209,1.272,247,0.453,249,1.521,258,0.676,608,6.85,659,6.283,975,3.898,3741,7.119,3742,8.027,3743,8.027,3744,8.027]],["title/interfaces/TokenDto.html",[247,0.291,635,3.712]],["body/interfaces/TokenDto.html",[3,0.1,4,0.076,8,0.064,30,0.007,38,0.1,171,0.007,172,0.007,186,0.393,202,0.476,209,1.272,247,0.453,249,1.521,258,0.676,608,6.85,635,6.744,975,3.898,3742,8.027,3743,8.027,3744,8.027,3745,7.119]],["title/components/TopbarComponent.html",[0,0.225,165,0.92]],["body/components/TopbarComponent.html",[0,0.312,1,0.74,2,1.039,3,0.052,4,0.039,5,0.755,6,0.755,7,0.755,8,0.033,12,0.755,13,1.987,14,1.987,15,0.74,17,1.081,18,1.018,19,1.102,20,2.116,21,2.481,23,2.743,24,2.211,25,1.102,27,1.147,29,0.537,30,0.008,31,1.126,32,0.428,33,1.677,34,1.174,35,1.174,36,1.438,37,1.589,38,0.052,39,0.389,43,0.755,44,1.102,45,1.102,46,0.755,47,1.432,48,0.755,49,0.6,50,0.755,51,0.74,52,0.755,53,0.74,54,0.755,55,0.74,56,0.755,57,0.74,58,0.755,59,0.74,60,0.755,61,0.74,62,0.697,63,1.102,64,0.755,65,0.711,66,0.711,67,1.643,68,0.74,69,1.102,70,0.74,71,0.755,72,0.74,73,0.755,74,0.74,75,0.697,76,0.74,77,0.755,78,0.74,79,0.725,80,1.102,81,0.74,82,0.755,83,0.74,84,0.755,85,0.74,86,0.755,87,0.74,88,0.755,89,0.74,90,0.755,91,0.74,92,0.755,93,0.74,94,0.755,95,1.302,96,0.74,97,0.755,98,0.74,99,0.67,100,0.74,101,0.755,102,0.74,103,0.755,104,0.74,105,0.755,106,0.74,107,0.755,108,0.74,109,0.74,110,0.982,111,0.74,112,1.059,113,0.755,114,1.018,115,1.102,116,0.74,117,0.74,118,0.755,119,0.755,120,0.755,121,0.755,122,0.74,123,0.755,124,0.74,125,0.755,126,0.74,127,0.697,128,0.74,129,0.755,130,0.74,131,0.711,132,0.74,133,0.755,134,0.74,135,0.755,136,0.755,137,0.74,138,0.755,139,0.74,140,0.755,141,0.74,142,0.755,143,0.74,144,0.74,145,0.755,146,0.74,147,1.179,148,0.755,149,0.755,150,0.755,151,0.74,152,0.755,153,0.74,154,0.755,155,0.74,156,0.755,157,0.74,158,0.74,159,0.74,160,0.63,161,0.74,162,0.755,163,0.755,164,0.711,165,1.404,166,0.755,167,0.74,168,0.755,169,0.755,170,0.755,171,0.004,172,0.004,186,0.203,187,1.316,190,1.718,194,1.169,196,3.652,197,4.763,199,1.786,201,1.102,202,0.479,203,1.059,205,1.644,206,1.864,215,2.482,256,2.211,258,0.437,293,3.611,316,1.78,317,1.826,361,2.367,398,2.211,399,2.211,400,2.211,401,2.313,402,2.261,403,2.423,430,1.15,460,1.34,526,2.984,663,1.15,718,2.895,721,4.082,732,2.78,738,2.78,751,4.517,840,1.632,884,3.065,905,2.918,907,4.111,929,4.555,930,3.158,936,1.83,938,1.632,947,1.404,951,2.984,953,2.78,1025,4.798,1078,2.365,1136,2.78,1298,1.776,1402,2.365,1404,2.365,1476,4.798,1482,3.823,1507,4.759,1628,2.984,1828,2.984,1835,3.258,1855,3.907,1897,2.264,2379,4.759,3038,5.622,3746,3.673,3747,5.365,3748,5.365,3749,5.365,3750,6.338,3751,6.338,3752,6.338,3753,5.365,3754,7.743,3755,6.97,3756,7.743,3757,5.365,3758,5.365,3759,3.673,3760,3.673,3761,3.673,3762,3.673,3763,3.673,3764,5.365,3765,5.365,3766,5.365,3767,5.365,3768,3.673,3769,3.673,3770,5.365,3771,5.365,3772,3.673,3773,3.673,3774,3.673,3775,5.365,3776,3.673,3777,3.673,3778,3.673,3779,3.673,3780,3.673,3781,3.673,3782,3.673,3783,5.365,3784,5.365]],["title/interfaces/User.html",[247,0.291,361,1.706]],["body/interfaces/User.html",[3,0.087,4,0.066,8,0.055,29,0.452,30,0.008,38,0.107,49,0.53,171,0.006,172,0.006,186,0.34,202,0.542,209,1.316,247,0.484,249,1.315,258,0.619,285,3.963,300,2.816,361,2.839,453,2.378,540,4.737,1011,2.89,1088,3.734,1091,4.431,1092,4.737,1295,3.789,1299,3.909,1440,4.737,1484,6.525,1592,5.076,1613,5.824,1614,5.824,1660,4.385,2925,5.458,2926,5,2927,4.658,2928,5.458,2929,5.458,2930,7.004,2931,7.004,2932,7.004]],["title/interfaces/UserDto.html",[247,0.291,639,3.087]],["body/interfaces/UserDto.html",[3,0.087,4,0.066,8,0.055,29,0.452,30,0.008,38,0.087,49,0.531,171,0.006,172,0.006,186,0.341,202,0.546,209,1.316,247,0.392,249,1.318,258,0.62,285,3.973,300,2.818,453,2.38,540,4.741,639,5.146,1011,2.898,1088,3.736,1091,4.435,1092,4.741,1281,4.338,1295,3.795,1299,3.915,1440,4.741,1484,6.531,1592,4.741,1613,5.829,1614,5.829,1660,4.396,2926,5.013,2927,4.67,2930,7.01,2931,7.01,2932,7.01,3785,6.169,3786,6.169,3787,6.169]],["title/components/VitalsComponent.html",[0,0.225,167,0.92]],["body/components/VitalsComponent.html",[0,0.369,1,1.017,2,1.297,3,0.071,4,0.054,5,1.038,6,1.038,7,1.038,8,0.045,12,1.038,13,2.011,14,2.011,15,1.017,17,1.35,18,1.272,19,1.038,25,1.376,27,1.432,29,0.3,30,0.007,32,0.588,38,0.071,39,0.535,43,1.038,44,1.376,45,1.376,46,1.038,47,1.645,48,1.038,49,0.577,50,1.038,51,1.017,52,1.038,53,1.017,54,1.038,55,1.017,56,1.038,57,1.017,58,1.038,59,1.017,60,1.038,61,1.017,62,0.959,63,1.376,64,1.038,65,0.978,66,0.978,67,1.795,68,1.017,69,1.376,70,1.017,71,1.038,72,1.017,73,1.038,74,1.017,75,0.959,76,1.017,77,1.038,78,1.017,79,0.997,80,1.376,81,1.017,82,1.038,83,1.017,84,1.038,85,1.017,86,1.038,87,1.017,88,1.038,89,1.017,90,1.038,91,1.017,92,1.038,93,1.017,94,1.038,95,1.545,96,1.017,97,1.038,98,1.017,99,0.921,100,1.017,101,1.038,102,1.017,103,1.038,104,1.017,105,1.038,106,1.017,107,1.038,108,1.017,109,1.017,110,1.164,111,1.017,112,1.323,113,1.038,114,1.272,115,1.376,116,1.017,117,1.017,118,1.038,119,1.038,120,1.038,121,1.038,122,1.017,123,1.038,124,1.017,125,1.038,126,1.017,127,0.959,128,1.017,129,1.038,130,1.017,131,0.978,132,1.017,133,1.038,134,1.017,135,1.038,136,1.038,137,1.017,138,1.038,139,1.017,140,1.038,141,1.017,142,1.038,143,1.017,144,1.017,145,1.038,146,1.017,147,1.399,148,1.038,149,1.038,150,1.038,151,1.017,152,1.038,153,1.017,154,1.038,155,1.017,156,1.038,157,1.017,158,1.017,159,1.017,160,0.867,161,1.017,162,1.038,163,1.038,164,0.978,165,1.017,166,1.038,167,1.613,168,1.712,169,1.038,170,1.038,171,0.005,172,0.005,177,2.687,3788,5.05,3789,6.699,3790,6.699]],["title/dependencies.html",[3791,3.09,3792,4.88]],["body/dependencies.html",[8,0.06,30,0.008,31,2.029,32,0.771,33,3.023,34,2.542,35,2.117,171,0.006,172,0.006,325,1.561,593,3.77,663,2.489,840,2.941,2139,4.472,2272,5.871,3792,5.871,3793,6.619,3794,9.513,3795,6.619,3796,6.619,3797,8.52,3798,7.051,3799,6.619,3800,6.619,3801,8.52,3802,6.619,3803,6.619,3804,6.619,3805,6.619,3806,6.619,3807,6.619,3808,6.619,3809,6.619,3810,6.619,3811,6.619,3812,6.619,3813,6.619,3814,5.379,3815,6.619,3816,6.619,3817,6.619,3818,6.619,3819,6.619,3820,6.619,3821,6.619,3822,5.871,3823,6.619,3824,6.619,3825,6.619,3826,6.619,3827,6.619,3828,6.619]],["title/miscellaneous/enumerations.html",[3829,2.878,3830,4.88]],["body/miscellaneous/enumerations.html",[8,0.065,30,0.008,62,1.362,110,1.111,160,1.232,171,0.006,172,0.006,186,0.31,317,2.31,361,2.679,406,5.432,546,2.246,661,3.37,673,4.423,679,3.469,701,4.848,778,4.848,884,3.469,1009,5.432,1295,4.154,1299,3.689,1485,5.432,1592,3.943,2139,4.848,2512,4.246,2515,5.831,3030,6.364,3173,6.364,3814,5.831,3829,4.248,3830,4.977,3831,5.611,3832,8.813,3833,5.611,3834,5.611,3835,5.611,3836,5.611,3837,7.175,3838,5.611,3839,5.611,3840,6.364,3841,7.175,3842,5.611,3843,7.175,3844,7.175,3845,7.175,3846,7.175,3847,7.175,3848,7.175,3849,7.175,3850,7.175,3851,6.364,3852,7.175,3853,7.175,3854,7.175,3855,7.175,3856,7.175,3857,7.175,3858,7.175,3859,7.175,3860,7.175,3861,5.611,3862,7.175,3863,7.175,3864,7.175,3865,7.175,3866,7.175,3867,7.175,3868,7.175,3869,7.175,3870,5.611,3871,7.175]],["title/miscellaneous/functions.html",[271,3.921,3829,2.878]],["body/miscellaneous/functions.html",[30,0.008,49,0.772,171,0.007,172,0.007,186,0.383,201,1.843,202,0.514,203,1.772,205,1.634,271,4.937,300,2.263,317,1.634,361,3.243,611,4.653,613,3.807,1295,4.07,1299,4.199,1471,5.629,3829,5.244,3872,8.167,3873,8.167,3874,8.167,3875,6.928,3876,8.167,3877,6.928,3878,8.167,3879,6.928,3880,6.928,3881,6.928,3882,6.928,3883,6.928,3884,8.167,3885,8.167,3886,6.928,3887,6.928]],["title/index.html",[186,0.21,3888,3.373,3889,3.373]],["body/index.html",[0,0.382,2,1.354,4,0.058,17,1.087,30,0.007,49,0.602,66,1.354,110,1.272,171,0.006,172,0.006,179,1.841,253,3.325,270,3.193,305,4.986,306,3.325,327,3.645,331,2.609,365,3.475,381,2.275,388,5.472,390,5,400,1.882,404,3.645,408,6.215,613,2.965,634,3.073,743,4.084,778,3.645,802,4.084,907,2.773,1014,4.595,1078,5,1323,4.786,1485,6.443,1847,4.785,2139,5.246,2149,5.533,2209,4.785,2222,6.205,2224,6.309,2245,5.685,2492,6.309,2498,6.205,2512,3.193,3046,4.785,3791,4.384,3798,4.785,3822,4.785,3890,6.996,3891,6.996,3892,7.764,3893,6.996,3894,6.996,3895,6.996,3896,4.785,3897,4.785,3898,4.785,3899,5.395,3900,5.395,3901,5.395,3902,5.395,3903,6.996,3904,5.395,3905,5.395,3906,5.395,3907,5.395,3908,5.395,3909,5.395,3910,5.395,3911,5.395,3912,5.395,3913,5.395,3914,5.395,3915,5.395,3916,5.395,3917,4.785,3918,8.195,3919,8.721,3920,5.395,3921,5.395,3922,5.395,3923,5.395,3924,4.785,3925,5.395,3926,5.395,3927,6.887,3928,5.395,3929,9.095,3930,5.395,3931,5.395,3932,5.395,3933,5.395,3934,9.382,3935,8.721,3936,6.996,3937,8.068,3938,5.395,3939,5.395,3940,7.764,3941,6.887,3942,6.996,3943,6.996,3944,7.764,3945,6.205,3946,6.996,3947,8.215,3948,5.395,3949,6.996,3950,5.395,3951,5.395,3952,5.395,3953,4.785,3954,4.785,3955,5.395,3956,5.395,3957,6.996,3958,5.395,3959,5.395,3960,6.996,3961,5.395,3962,6.996,3963,5.395,3964,5.395,3965,4.785,3966,4.785,3967,7.764,3968,5.395,3969,6.996,3970,4.785,3971,5.395,3972,5.395,3973,4.785,3974,4.785,3975,5.395,3976,5.395,3977,4.785,3978,5.395,3979,5.395,3980,4.785]],["title/license.html",[3888,3.373,3889,3.373,3981,3.373]],["body/license.html",[0,0.215,4,0.092,8,0.021,15,0.971,16,1.195,29,0.08,30,0.004,39,0.143,66,0.742,147,0.442,171,0.003,172,0.002,177,2.605,187,0.331,190,0.365,198,2.408,199,0.271,202,0.136,206,0.396,247,0.331,249,0.68,252,2.408,253,5.163,259,4.702,265,0.96,268,1.02,270,3.843,274,4.869,275,4.189,278,4.103,279,0.83,280,3.308,292,1.797,293,0.768,298,3.104,301,2.408,302,3.114,303,1.02,309,1.02,312,0.96,313,0.976,320,4.914,324,0.96,327,1.604,331,0.651,343,2.408,358,0.96,361,2.606,368,2.731,374,0.83,376,3.649,381,2.194,384,2.408,387,3.649,390,2.468,400,0.47,401,0.492,408,0.96,411,1.02,430,0.422,432,1.02,437,1.02,441,3.435,446,0.96,531,0.74,542,0.693,658,0.671,682,0.83,700,1.463,721,5.104,735,1.095,736,1.691,738,1.797,739,4.275,746,3.551,747,1.195,752,1.195,759,1.195,760,6.514,766,1.095,767,3.399,768,3.114,771,2.105,776,1.195,782,2.105,785,2.586,794,2.105,796,2.478,800,5.173,801,1.195,808,1.195,809,2.105,810,2.105,813,5.163,870,5.918,884,1.148,956,0.54,983,0.671,991,0.716,1014,4.69,1019,1.691,1023,1.195,1031,1.748,1088,0.54,1203,2.267,1294,0.74,1295,3.026,1324,0.91,1425,4.406,1471,1.095,1479,2.821,1483,1.929,1486,1.929,1492,1.195,1494,1.195,1585,4.275,1682,0.96,1724,0.91,1795,1.095,1921,1.02,1922,1.02,1975,4.406,2008,1.195,2137,1.195,2139,2.953,2144,1.195,2149,3.114,2162,1.929,2163,4.496,2166,2.105,2169,2.408,2172,4.496,2184,1.195,2205,4.908,2210,2.105,2212,5.918,2216,1.195,2220,2.105,2224,6.386,2226,3.399,2241,1.195,2245,1.095,2246,1.195,2248,2.105,2249,4.615,2250,4.908,2263,2.105,2302,1.195,2308,1.195,2328,1.195,2368,1.195,2491,1.195,2492,1.929,2507,2.585,2927,4.597,3032,1.195,3033,1.195,3051,1.195,3063,2.105,3094,1.195,3187,6.689,3204,3.876,3543,2.821,3814,1.929,3840,1.195,3851,4.908,3896,1.195,3897,1.195,3898,1.195,3917,1.195,3918,4.908,3924,3.399,3927,1.195,3937,6.061,3941,1.195,3945,2.821,3953,3.876,3954,3.399,3965,6.061,3966,2.821,3970,2.821,3973,6.907,3974,2.105,3977,2.821,3980,2.105,3981,8.304,3982,7.446,3983,1.347,3984,1.347,3985,3.181,3986,8.203,3987,8.046,3988,4.82,3989,1.347,3990,1.347,3991,2.373,3992,4.37,3993,7.925,3994,4.37,3995,3.181,3996,6.833,3997,1.347,3998,3.181,3999,1.347,4000,1.347,4001,2.373,4002,4.82,4003,1.347,4004,4.82,4005,1.347,4006,5.533,4007,2.373,4008,1.347,4009,1.347,4010,1.347,4011,6.833,4012,8.78,4013,3.181,4014,9.322,4015,2.373,4016,5.203,4017,5.203,4018,4.82,4019,1.347,4020,1.347,4021,3.832,4022,5.533,4023,3.181,4024,1.347,4025,2.373,4026,1.347,4027,3.181,4028,7.446,4029,3.832,4030,1.347,4031,1.347,4032,2.373,4033,3.832,4034,2.373,4035,6.494,4036,2.373,4037,2.373,4038,3.832,4039,5.203,4040,4.37,4041,1.347,4042,5.533,4043,4.82,4044,8.294,4045,3.181,4046,5.203,4047,1.347,4048,1.347,4049,4.37,4050,5.533,4051,2.373,4052,6.295,4053,4.37,4054,2.373,4055,1.347,4056,1.347,4057,6.978,4058,2.373,4059,1.347,4060,1.347,4061,6.672,4062,2.373,4063,3.181,4064,1.347,4065,1.347,4066,2.373,4067,1.347,4068,3.832,4069,1.347,4070,1.347,4071,1.347,4072,1.347,4073,1.347,4074,2.373,4075,1.347,4076,1.347,4077,1.347,4078,2.373,4079,1.347,4080,3.181,4081,2.373,4082,1.347,4083,1.347,4084,2.373,4085,2.373,4086,6.833,4087,1.347,4088,2.373,4089,2.373,4090,1.347,4091,1.347,4092,2.373,4093,3.181,4094,2.373,4095,3.181,4096,2.373,4097,1.347,4098,1.347,4099,4.82,4100,1.347,4101,1.347,4102,4.37,4103,1.347,4104,3.832,4105,2.373,4106,3.181,4107,1.347,4108,1.347,4109,6.833,4110,3.832,4111,4.37,4112,4.82,4113,3.181,4114,1.347,4115,3.181,4116,2.373,4117,1.347,4118,1.347,4119,1.347,4120,3.181,4121,8.688,4122,1.347,4123,1.347,4124,2.373,4125,2.373,4126,1.347,4127,6.072,4128,1.347,4129,3.832,4130,3.181,4131,2.373,4132,8.608,4133,3.181,4134,5.82,4135,3.832,4136,2.373,4137,1.347,4138,2.373,4139,3.181,4140,5.82,4141,6.072,4142,3.832,4143,2.373,4144,2.373,4145,3.832,4146,1.347,4147,3.181,4148,7.987,4149,2.373,4150,1.347,4151,5.533,4152,1.347,4153,3.181,4154,5.533,4155,1.347,4156,6.978,4157,3.832,4158,2.373,4159,6.295,4160,4.82,4161,1.347,4162,1.347,4163,1.347,4164,5.533,4165,1.347,4166,2.373,4167,1.347,4168,3.181,4169,3.181,4170,1.347,4171,1.347,4172,1.347,4173,6.295,4174,3.181,4175,1.347,4176,1.347,4177,1.347,4178,2.373,4179,6.072,4180,1.347,4181,1.347,4182,1.347,4183,3.181,4184,3.181,4185,3.181,4186,3.181,4187,1.347,4188,1.347,4189,4.37,4190,1.347,4191,2.373,4192,1.347,4193,3.181,4194,1.347,4195,3.181,4196,1.347,4197,1.347,4198,1.347,4199,2.373,4200,1.347,4201,7.787,4202,5.533,4203,1.347,4204,2.373,4205,1.347,4206,1.347,4207,2.373,4208,2.373,4209,1.347,4210,1.347,4211,1.347,4212,2.373,4213,3.181,4214,4.37,4215,1.347,4216,2.373,4217,1.347,4218,1.347,4219,1.347,4220,1.347,4221,5.203,4222,3.832,4223,1.347,4224,4.37,4225,1.347,4226,1.347,4227,1.347,4228,3.181,4229,1.347,4230,1.347,4231,1.347,4232,3.181,4233,3.181,4234,1.347,4235,1.347,4236,2.373,4237,2.373,4238,2.373,4239,1.347,4240,2.373,4241,1.347,4242,1.347,4243,1.347,4244,1.347,4245,1.347,4246,3.181,4247,1.347,4248,1.347,4249,6.978,4250,1.347,4251,1.347,4252,1.347,4253,4.37,4254,4.37,4255,1.347,4256,1.347,4257,3.181,4258,1.347,4259,1.347,4260,3.832,4261,1.347,4262,2.373,4263,1.347,4264,1.347,4265,1.347,4266,1.347,4267,1.347,4268,1.347,4269,2.373,4270,2.373,4271,1.347,4272,3.181,4273,1.347,4274,1.347,4275,2.373,4276,1.347,4277,1.347,4278,1.347,4279,1.347,4280,2.373,4281,2.373,4282,2.373,4283,2.373,4284,5.82,4285,2.373,4286,4.82,4287,1.347,4288,1.347,4289,2.373,4290,3.181,4291,3.832,4292,3.832,4293,3.181,4294,3.832,4295,3.181,4296,1.347,4297,4.37,4298,4.37,4299,3.181,4300,1.347,4301,2.373,4302,4.37,4303,2.373,4304,3.832,4305,3.832,4306,2.373,4307,3.181,4308,4.37,4309,1.347,4310,1.347,4311,1.347,4312,3.181,4313,2.373,4314,1.347,4315,1.347,4316,1.347,4317,1.347,4318,2.373,4319,1.347,4320,1.347,4321,3.181,4322,1.347,4323,1.347,4324,2.373,4325,3.181,4326,1.347,4327,2.373,4328,1.347,4329,3.181,4330,1.347,4331,1.347,4332,1.347,4333,2.373,4334,2.373,4335,4.82,4336,7.629,4337,3.181,4338,2.373,4339,2.373,4340,2.373,4341,2.373,4342,3.832,4343,3.832,4344,2.373,4345,1.347,4346,1.347,4347,1.347,4348,1.347,4349,5.203,4350,4.82,4351,2.373,4352,1.347,4353,1.347,4354,1.347,4355,1.347,4356,2.373,4357,1.347,4358,2.373,4359,1.347,4360,4.37,4361,1.347,4362,6.295,4363,1.347,4364,1.347,4365,1.347,4366,1.347,4367,2.373,4368,1.347,4369,1.347,4370,1.347,4371,2.373,4372,3.181,4373,4.37,4374,2.373,4375,3.832,4376,2.373,4377,1.347,4378,1.347,4379,1.347,4380,1.347,4381,1.347,4382,2.373,4383,1.347,4384,1.347,4385,3.832,4386,1.347,4387,2.373,4388,2.373,4389,1.347,4390,1.347,4391,3.181,4392,1.347,4393,1.347,4394,1.347,4395,1.347,4396,1.347,4397,2.373,4398,1.347,4399,1.347,4400,2.373,4401,1.347,4402,1.347,4403,1.347,4404,3.181,4405,1.347,4406,1.347,4407,1.347,4408,1.347,4409,1.347,4410,4.37,4411,1.347,4412,3.832,4413,1.347,4414,1.347,4415,3.832,4416,1.347,4417,1.347,4418,1.347,4419,1.347,4420,1.347,4421,2.373,4422,5.203,4423,3.181,4424,1.347,4425,3.832,4426,1.347,4427,1.347,4428,3.181,4429,1.347,4430,1.347,4431,3.181,4432,1.347,4433,2.373,4434,1.347,4435,1.347,4436,1.347,4437,1.347,4438,1.347,4439,1.347,4440,1.347,4441,1.347,4442,2.373,4443,1.347,4444,1.347,4445,1.347,4446,2.373,4447,2.373,4448,1.347,4449,1.347,4450,3.181,4451,1.347,4452,2.373,4453,2.373,4454,1.347,4455,2.373,4456,1.347,4457,3.181,4458,5.203,4459,1.347,4460,1.347,4461,2.373,4462,1.347,4463,1.347,4464,1.347,4465,1.347,4466,1.347,4467,2.373,4468,3.832,4469,1.347,4470,4.37,4471,1.347,4472,1.347,4473,1.347,4474,1.347,4475,1.347,4476,2.373,4477,2.373,4478,2.373,4479,3.181,4480,1.347,4481,2.373,4482,1.347,4483,3.181,4484,1.347,4485,2.373,4486,1.347,4487,2.373,4488,2.373,4489,1.347,4490,1.347,4491,2.373,4492,7.787,4493,2.373,4494,1.347,4495,4.37,4496,6.072,4497,3.181,4498,1.347,4499,1.347,4500,1.347,4501,3.832,4502,1.347,4503,1.347,4504,3.181,4505,1.347,4506,2.373,4507,1.347,4508,1.347,4509,1.347,4510,3.832,4511,1.347,4512,1.347,4513,1.347,4514,1.347,4515,3.832,4516,1.347,4517,1.347,4518,3.181,4519,1.347,4520,2.373,4521,3.181,4522,2.373,4523,1.347,4524,1.347,4525,1.347,4526,2.373,4527,3.181,4528,1.347,4529,1.347,4530,2.373,4531,1.347,4532,1.347,4533,1.347,4534,1.347,4535,1.347,4536,1.347,4537,3.181,4538,2.373,4539,1.347,4540,1.347,4541,3.832,4542,1.347,4543,3.181,4544,1.347,4545,1.347,4546,1.347,4547,2.373,4548,1.347,4549,1.347,4550,1.347,4551,3.181,4552,2.373,4553,2.373,4554,1.347,4555,5.203,4556,2.373,4557,3.181,4558,3.832,4559,1.347,4560,1.347,4561,1.347,4562,2.373,4563,1.347,4564,3.181,4565,1.347,4566,2.373,4567,1.347,4568,1.347,4569,1.347,4570,1.347,4571,3.181,4572,1.347,4573,3.181,4574,2.373,4575,1.347,4576,2.373,4577,1.347,4578,1.347,4579,2.373,4580,2.373,4581,1.347,4582,1.347,4583,2.373,4584,1.347,4585,1.347,4586,1.347,4587,1.347,4588,1.347,4589,3.181,4590,1.347,4591,1.347,4592,1.347,4593,1.347,4594,1.347,4595,3.832,4596,3.181,4597,1.347,4598,1.347,4599,1.347,4600,1.347,4601,1.347,4602,2.373,4603,1.347,4604,1.347,4605,1.347,4606,1.347,4607,1.347,4608,1.347,4609,1.347,4610,1.347,4611,1.347,4612,1.347,4613,1.347,4614,1.347,4615,1.347,4616,1.347,4617,3.832,4618,1.347,4619,2.373,4620,1.347,4621,1.347,4622,1.347,4623,1.347,4624,1.347,4625,1.347,4626,1.347,4627,1.347,4628,1.347,4629,3.181,4630,1.347,4631,1.347,4632,1.347,4633,2.373,4634,1.347,4635,1.347,4636,1.347,4637,1.347,4638,1.347,4639,2.373,4640,2.373,4641,4.37,4642,3.181,4643,1.347,4644,2.373,4645,1.347,4646,1.347,4647,1.347,4648,1.347,4649,3.181,4650,2.373,4651,1.347,4652,2.373,4653,2.373,4654,2.373,4655,1.347,4656,1.347,4657,1.347,4658,1.347,4659,1.347,4660,1.347,4661,2.373,4662,1.347,4663,1.347,4664,1.347,4665,1.347,4666,3.181,4667,1.347,4668,1.347,4669,1.347,4670,1.347,4671,1.347,4672,1.347,4673,1.347,4674,1.347,4675,1.347,4676,1.347,4677,2.373,4678,1.347,4679,1.347,4680,1.347,4681,1.347,4682,1.347,4683,1.347,4684,1.347,4685,1.347,4686,1.347,4687,1.347,4688,1.347,4689,1.347,4690,1.347,4691,1.347,4692,1.347,4693,1.347,4694,1.347,4695,1.347,4696,3.181,4697,2.373,4698,1.347,4699,1.347,4700,1.347,4701,1.347,4702,1.347,4703,2.373,4704,1.347,4705,1.347,4706,1.347,4707,1.347,4708,1.347,4709,1.347,4710,1.347,4711,1.347,4712,2.373,4713,1.347,4714,1.347,4715,1.347,4716,1.347,4717,1.347,4718,1.347,4719,1.347,4720,1.347,4721,1.347,4722,1.347,4723,1.347,4724,1.347,4725,1.347,4726,1.347,4727,1.347,4728,1.347,4729,1.347,4730,1.347,4731,1.347]],["title/modules.html",[4732,5.554]],["body/modules.html",[30,0.007,171,0.007,172,0.007,4732,6.714]],["title/overview.html",[4733,5.554]],["body/overview.html",[2,1.448,30,0.007,39,0.792,171,0.007,172,0.007,249,1.598,515,2.792,785,4.425,4733,6.632,4734,7.477,4735,7.477,4736,7.477]],["title/properties.html",[258,0.448,3791,3.09]],["body/properties.html",[30,0.007,171,0.007,172,0.007,258,0.613,1014,4.459,4737,7.535]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":975,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["0.0.0",{"_index":4737,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":3793,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":2283,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.4",{"_index":3828,"title":{},"body":{"dependencies.html":{}}}],["0xff",{"_index":1914,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["1",{"_index":785,"title":{"components/ProjectsComponent-1.html":{}},"body":{"components/ConfigComponent.html":{},"components/DevicesComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{},"overview.html":{}}}],["1.0.9",{"_index":3811,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":3808,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2507,"title":{},"body":{"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"license.html":{}}}],["100",{"_index":2410,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["11",{"_index":4262,"title":{},"body":{"license.html":{}}}],["12",{"_index":807,"title":{},"body":{"components/ConfigComponent.html":{}}}],["13",{"_index":808,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["14",{"_index":318,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["15",{"_index":809,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":810,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["17",{"_index":3909,"title":{},"body":{"index.html":{}}}],["17.1.1",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":3906,"title":{},"body":{"index.html":{}}}],["17.12.0",{"_index":3823,"title":{},"body":{"dependencies.html":{}}}],["17.3.2",{"_index":3794,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":4268,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":1573,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":4049,"title":{},"body":{"license.html":{}}}],["2.0.5",{"_index":3817,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":3826,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4266,"title":{},"body":{"license.html":{}}}],["2007",{"_index":3985,"title":{},"body":{"license.html":{}}}],["2021",{"_index":877,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":876,"title":{},"body":{"components/ConfigComponent.html":{}}}],["25",{"_index":4735,"title":{},"body":{"overview.html":{}}}],["28",{"_index":4613,"title":{},"body":{"license.html":{}}}],["29",{"_index":3983,"title":{},"body":{"license.html":{}}}],["3",{"_index":3204,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["3.3.1",{"_index":3819,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2368,"title":{},"body":{"components/OrganizationComponent.html":{},"license.html":{}}}],["4",{"_index":4299,"title":{},"body":{"license.html":{}}}],["4.19.2",{"_index":3815,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":3813,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":977,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["404",{"_index":976,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundComponent.html":{}}}],["409",{"_index":1630,"title":{},"body":{"components/InvitationComponent.html":{}}}],["5",{"_index":4330,"title":{},"body":{"license.html":{}}}],["51",{"_index":4736,"title":{},"body":{"overview.html":{}}}],["58",{"_index":4734,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":3821,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4505,"title":{},"body":{"license.html":{}}}],["6b",{"_index":4357,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4380,"title":{},"body":{"license.html":{}}}],["7",{"_index":4295,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":3824,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1913,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["8.0.0",{"_index":3806,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":3944,"title":{},"body":{"index.html":{}}}],["90",{"_index":2370,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["991",{"_index":435,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["_val",{"_index":819,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":4430,"title":{},"body":{"license.html":{}}}],["above",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":4296,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4686,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":4711,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":4077,"title":{},"body":{"license.html":{}}}],["accept",{"_index":700,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"license.html":{}}}],["acceptance",{"_index":4515,"title":{},"body":{"license.html":{}}}],["acceptbuttonstyleclass",{"_index":1322,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["accepticon",{"_index":1327,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["acceptinvitation",{"_index":517,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["acceptinvitation(invitationhash",{"_index":1665,"title":{},"body":{"injectables/InvitationService.html":{}}}],["acceptinvitationerror",{"_index":652,"title":{},"body":{"interfaces/AuthState.html":{}}}],["acceptinvitationfailure",{"_index":597,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["acceptinvitationsuccess",{"_index":518,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["access",{"_index":15,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["accessdeniedcomponent",{"_index":1,"title":{"components/AccessDeniedComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["accessible",{"_index":4582,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":731,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":3742,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["accompanied",{"_index":4337,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4690,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4294,"title":{},"body":{"license.html":{}}}],["according",{"_index":4681,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":407,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["achieve",{"_index":4695,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":4230,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4562,"title":{},"body":{"license.html":{}}}],["action",{"_index":676,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/MembersEffects.html":{}}}],["actions",{"_index":531,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"license.html":{}}}],["activated",{"_index":1484,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":1467,"title":{},"body":{"components/HomeComponent.html":{}}}],["active",{"_index":352,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":2197,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activemembers",{"_index":1941,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersState.html":{}}}],["activememberserror",{"_index":2032,"title":{},"body":{"interfaces/MembersState.html":{}}}],["activemembersstatus",{"_index":2033,"title":{},"body":{"interfaces/MembersState.html":{}}}],["activeroute",{"_index":2299,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":4147,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4609,"title":{},"body":{"license.html":{}}}],["actual",{"_index":4587,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":170,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["actually",{"_index":4403,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":4126,"title":{},"body":{"license.html":{}}}],["add",{"_index":3954,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":4293,"title":{},"body":{"license.html":{}}}],["adding",{"_index":748,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":800,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["addmemberserror",{"_index":3495,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addmembersstatus",{"_index":3496,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojectdebugfile",{"_index":3212,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectdebugfilefailure",{"_index":3320,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectdebugfilesuccess",{"_index":3229,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectenvironments",{"_index":1301,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["addprojectenvironmentsfailure",{"_index":3321,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectenvironmentssuccess",{"_index":3237,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectrelease",{"_index":2872,"title":{},"body":{"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["addprojectreleasefailure",{"_index":3322,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectreleasesuccess",{"_index":3243,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectserror",{"_index":3497,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojectsstatus",{"_index":3498,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojecttags",{"_index":3213,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["addprojecttagsfailure",{"_index":3323,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojecttagssuccess",{"_index":3250,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectteams",{"_index":3214,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectteamsfailure",{"_index":3324,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectteamssuccess",{"_index":3257,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["address",{"_index":4636,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":4123,"title":{},"body":{"license.html":{}}}],["adds",{"_index":1470,"title":{},"body":{"components/HomeComponent.html":{}}}],["addteammembers",{"_index":3392,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["addteammembers(teamid",{"_index":3672,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteammembersfailure",{"_index":3486,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteammemberssuccess",{"_index":3446,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteamprojects",{"_index":3393,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["addteamprojects(teamid",{"_index":3674,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteamprojectsfailure",{"_index":3487,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteamprojectssuccess",{"_index":3451,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["adjust",{"_index":314,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":4265,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4436,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4678,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4437,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4629,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4542,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4226,"title":{},"body":{"license.html":{}}}],["afterviewchecked",{"_index":3339,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["afterviewinit",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["against",{"_index":4283,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":4321,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4625,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4665,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4573,"title":{},"body":{"license.html":{}}}],["aim",{"_index":4073,"title":{},"body":{"license.html":{}}}],["alerts",{"_index":174,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts'},{'name",{"_index":52,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alerts.component.html",{"_index":175,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts.component.scss",{"_index":176,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertscomponent",{"_index":51,"title":{"components/AlertsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alleging",{"_index":4550,"title":{},"body":{"license.html":{}}}],["allow",{"_index":4100,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":3998,"title":{},"body":{"license.html":{}}}],["alloweddomains",{"_index":2638,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["allows",{"_index":404,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["allprojects",{"_index":2650,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectserror",{"_index":2651,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectsstatus",{"_index":2652,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["along",{"_index":4298,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":2140,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":4561,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4353,"title":{},"body":{"license.html":{}}}],["although",{"_index":4069,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":4516,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4053,"title":{},"body":{"license.html":{}}}],["android",{"_index":3843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular",{"_index":1485,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["angular's",{"_index":2207,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":2272,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3795,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":31,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["angular/compiler",{"_index":3796,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":840,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":3797,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2270,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":2280,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":2276,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":4252,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4305,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4135,"title":{},"body":{"license.html":{}}}],["api",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["api.authoptions",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["api.authoptionsautocontenttype",{"_index":2472,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.authurl",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.invitationurl",{"_index":1673,"title":{},"body":{"injectables/InvitationService.html":{}}}],["api.noauthoptions",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["api.organizationurl",{"_index":2466,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.teamurl",{"_index":3698,"title":{},"body":{"injectables/TeamService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["appconfig",{"_index":248,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["appefects",{"_index":509,"title":{},"body":{"interfaces/AppState.html":{}}}],["applicable",{"_index":4140,"title":{},"body":{"license.html":{}}}],["application",{"_index":388,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":713,"title":{},"body":{"components/ConfigComponent.html":{}}}],["applications",{"_index":3898,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":312,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":782,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyfilterglobal",{"_index":1228,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["applyfilterglobal($event",{"_index":1251,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["applyscale",{"_index":724,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appropriate",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":4288,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4685,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":1450,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":460,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["appstore",{"_index":510,"title":{},"body":{"interfaces/AppState.html":{}}}],["apptopbar",{"_index":1451,"title":{},"body":{"components/HomeComponent.html":{}}}],["architecture",{"_index":1090,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["archiveperiod",{"_index":2345,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["area",{"_index":4079,"title":{},"body":{"license.html":{}}}],["args.dto).pipe",{"_index":3227,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["args.environments).pipe",{"_index":3235,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["args.ids).pipe",{"_index":3255,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["args.tags).pipe",{"_index":3248,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["arise",{"_index":4087,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4669,"title":{},"body":{"license.html":{}}}],["around",{"_index":3043,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":4583,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":4596,"title":{},"body":{"license.html":{}}}],["array",{"_index":811,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["array.isarray($event.sortfield",{"_index":1175,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["article",{"_index":4261,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":3930,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1178,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["asking",{"_index":4031,"title":{},"body":{"license.html":{}}}],["assert",{"_index":4048,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1426,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["assets",{"_index":4532,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":378,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":2246,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":4660,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":4689,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4478,"title":{},"body":{"license.html":{}}}],["assures",{"_index":4107,"title":{},"body":{"license.html":{}}}],["async",{"_index":1352,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["async)?.pictureurl",{"_index":2418,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["async)?.slug",{"_index":3433,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["attach",{"_index":4697,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4490,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":792,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":4064,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":4462,"title":{},"body":{"license.html":{}}}],["auth",{"_index":512,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{}}}],["auth'},{'name",{"_index":56,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["auth.actions",{"_index":604,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":513,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":514,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":1413,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.invitation.back_to_login",{"_index":1654,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_is_required",{"_index":1649,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_label",{"_index":1648,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_is_required",{"_index":1651,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_label",{"_index":1650,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_is_required",{"_index":1653,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_label",{"_index":1652,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_label",{"_index":1645,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_length",{"_index":1646,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_not_strong",{"_index":1647,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error",{"_index":1631,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_username_exists",{"_index":1632,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_wrong_hash",{"_index":1633,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_is_required",{"_index":1643,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_label",{"_index":1642,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_length",{"_index":1644,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_description",{"_index":1641,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_message",{"_index":1640,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.login.authorization_error",{"_index":1831,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1844,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1842,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1841,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1843,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1845,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1838,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1839,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":1433,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1840,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1837,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1832,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":2832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":2827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":2826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":2829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":2828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":2831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":2830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":2823,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":2824,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":2825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":2815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":2816,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":2821,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":2820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":2822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":2819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":2818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":2910,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":472,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":474,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":55,"title":{"components/AuthComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["autheffects",{"_index":471,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{}}}],["authenticate",{"_index":519,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{}}}],["authenticate(request",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticaterequestdto",{"_index":615,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{}}}],["authentication",{"_index":678,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{}}}],["authenticationfailure",{"_index":598,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess",{"_index":520,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess(token",{"_index":559,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["author",{"_index":4461,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":4414,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4454,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":4556,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":4600,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4017,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":473,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authservice",{"_index":528,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authstate",{"_index":462,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["automatic",{"_index":4524,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3924,"title":{},"body":{"index.html":{},"license.html":{}}}],["avaialbleteams",{"_index":3634,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["available",{"_index":813,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["availablemembers",{"_index":1858,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["availableprojects",{"_index":2605,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["avatarmodule",{"_index":1855,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["avoid",{"_index":2308,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":4005,"title":{},"body":{"license.html":{}}}],["b",{"_index":1585,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["badgemodule",{"_index":2341,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["bar",{"_index":3097,"title":{},"body":{"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["based",{"_index":298,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":4220,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":4241,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":297,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":1486,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":4593,"title":{},"body":{"license.html":{}}}],["bell",{"_index":3124,"title":{},"body":{"components/SidebarComponent.html":{}}}],["below",{"_index":4247,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":4586,"title":{},"body":{"license.html":{}}}],["best",{"_index":4694,"title":{},"body":{"license.html":{}}}],["better",{"_index":2138,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":4218,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":4323,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":2282,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":2234,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":1472,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":1459,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":1501,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":1471,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["book",{"_index":3128,"title":{},"body":{"components/SidebarComponent.html":{}}}],["boolean",{"_index":300,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Page.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":869,"title":{},"body":{"components/ConfigComponent.html":{}}}],["both",{"_index":4058,"title":{},"body":{"license.html":{}}}],["box",{"_index":3094,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["breadcrumb",{"_index":1480,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":1447,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":1475,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":1570,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":1571,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":1572,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":3798,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":3929,"title":{},"body":{"index.html":{}}}],["building",{"_index":3114,"title":{},"body":{"components/SidebarComponent.html":{}}}],["business",{"_index":4606,"title":{},"body":{"license.html":{}}}],["button",{"_index":788,"title":{},"body":{"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["buttonmodule",{"_index":21,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":307,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":3851,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["calendarmodule",{"_index":2724,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["call",{"_index":2247,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":803,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":2169,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":3913,"title":{},"body":{"index.html":{}}}],["can't",{"_index":3976,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":3903,"title":{},"body":{"index.html":{}}}],["card",{"_index":3142,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card'},{'name",{"_index":148,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["card.component",{"_index":2705,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["card.component.html",{"_index":3146,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.scss",{"_index":3147,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts",{"_index":3140,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:110",{"_index":3158,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:119",{"_index":3160,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:35",{"_index":3155,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:37",{"_index":3168,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:39",{"_index":3164,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:40",{"_index":3167,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:53",{"_index":3154,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:61",{"_index":3161,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:76",{"_index":3163,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card/single",{"_index":2704,"title":{},"body":{"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["cardmodule",{"_index":3144,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["carry",{"_index":4301,"title":{},"body":{"license.html":{}}}],["case",{"_index":4178,"title":{},"body":{"license.html":{}}}],["cases",{"_index":4397,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":594,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["catcherror((error",{"_index":544,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["cause",{"_index":4327,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2198,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":4494,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":3892,"title":{},"body":{"index.html":{}}}],["certain",{"_index":767,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":4507,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1427,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["change",{"_index":2149,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":801,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":2199,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":3753,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":3758,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":405,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changeslugandcheckvalidity",{"_index":898,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changeslugandcheckvalidity(organizationname",{"_index":909,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changetheme",{"_index":725,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":772,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":3997,"title":{},"body":{"license.html":{}}}],["char.charcodeat(0",{"_index":1912,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["characterized",{"_index":4427,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4022,"title":{},"body":{"license.html":{}}}],["chart",{"_index":3077,"title":{},"body":{"components/SidebarComponent.html":{}}}],["chart.js",{"_index":3812,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":3148,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["chartmodule",{"_index":3143,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["chartoptions",{"_index":3149,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["checkname",{"_index":2730,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checkname(name",{"_index":2739,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checks",{"_index":425,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkslug",{"_index":899,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["checkslug(slug",{"_index":912,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["checkusername",{"_index":1381,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":1384,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":1561,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":1567,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":1563,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":1558,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":1560,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":3952,"title":{},"body":{"index.html":{}}}],["choose",{"_index":4644,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4648,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1321,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["circumstances",{"_index":4245,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4253,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4688,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4547,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4558,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/PageableDefault.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{},"overview.html":{}}}],["class.active",{"_index":2195,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":2235,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["classes",{"_index":2508,"title":{},"body":{"classes/PageableDefault.html":{}}}],["cleanupperiod",{"_index":2346,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clear",{"_index":1682,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":4055,"title":{},"body":{"license.html":{}}}],["cli",{"_index":3905,"title":{},"body":{"index.html":{}}}],["click",{"_index":1495,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":310,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":2185,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":3912,"title":{},"body":{"index.html":{}}}],["client.dto.ts",{"_index":2637,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["clock",{"_index":3074,"title":{},"body":{"components/SidebarComponent.html":{}}}],["clone",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":858,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["close",{"_index":355,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CloseComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["close'},{'name",{"_index":58,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["close.component.html",{"_index":708,"title":{},"body":{"components/CloseComponent.html":{}}}],["close.component.scss",{"_index":709,"title":{},"body":{"components/CloseComponent.html":{}}}],["closecomponent",{"_index":57,"title":{"components/CloseComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["closed",{"_index":397,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":4684,"title":{},"body":{"license.html":{}}}],["cms",{"_index":3895,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":3943,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":3964,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":3963,"title":{},"body":{"index.html":{}}}],["code",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":2278,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":3896,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colour",{"_index":1915,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["combination",{"_index":4632,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4630,"title":{},"body":{"license.html":{}}}],["combined",{"_index":4318,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4306,"title":{},"body":{"license.html":{}}}],["command",{"_index":2222,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":4168,"title":{},"body":{"license.html":{}}}],["comment",{"_index":3862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":4408,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":4574,"title":{},"body":{"license.html":{}}}],["common",{"_index":4402,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":20,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":4216,"title":{},"body":{"license.html":{}}}],["compact",{"_index":872,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":4313,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4322,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4611,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":4198,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":4529,"title":{},"body":{"license.html":{}}}],["comply",{"_index":4239,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":764,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":1522,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":1523,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":1524,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/single",{"_index":2703,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["components/topbar/topbar.component",{"_index":1525,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":3969,"title":{},"body":{"index.html":{}}}],["computer",{"_index":4143,"title":{},"body":{"license.html":{}}}],["computers",{"_index":4103,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":4631,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4637,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":765,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":4605,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4109,"title":{},"body":{"license.html":{}}}],["config",{"_index":319,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["config'},{'name",{"_index":60,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["config.component.html",{"_index":719,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":720,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":867,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":865,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":862,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":866,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":864,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":868,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":861,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":863,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":59,"title":{"components/ConfigComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["configsidebarvisible",{"_index":336,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":380,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["confirmationservice",{"_index":1215,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["confirmdialogmodule",{"_index":1217,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["conjunction",{"_index":777,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":4595,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":4518,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4668,"title":{},"body":{"license.html":{}}}],["consider",{"_index":4725,"title":{},"body":{"license.html":{}}}],["considered",{"_index":4480,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4566,"title":{},"body":{"license.html":{}}}],["console.log('search",{"_index":3002,"title":{},"body":{"components/SessionsComponent.html":{}}}],["conspicuously",{"_index":4287,"title":{},"body":{"license.html":{}}}],["const",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["constantly",{"_index":4098,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":4229,"title":{},"body":{"license.html":{}}}],["construct",{"_index":2217,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":1487,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":527,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":1382,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["constructor(layoutservice",{"_index":732,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(localstorage",{"_index":1704,"title":{},"body":{"injectables/LayoutService.html":{}}}],["constructor(membersservice",{"_index":1981,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["constructor(organizationservice",{"_index":903,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{}}}],["constructor(platformservice",{"_index":2522,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["constructor(private",{"_index":371,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{},"injectables/RoleService.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["constructor(projectservice",{"_index":2565,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["constructor(roleservice",{"_index":2934,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["constructor(storage",{"_index":1687,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":1047,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamservice",{"_index":3442,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["constructor(translate",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":4615,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4385,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4704,"title":{},"body":{"license.html":{}}}],["contain",{"_index":747,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":3960,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":1464,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":4463,"title":{},"body":{"license.html":{}}}],["contains",{"_index":2162,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":2491,"title":{},"body":{"interfaces/Page.html":{},"license.html":{}}}],["contents",{"_index":4570,"title":{},"body":{"license.html":{}}}],["contenttype",{"_index":1361,"title":{},"body":{"interfaces/FileDto.html":{}}}],["context",{"_index":4192,"title":{},"body":{"license.html":{}}}],["continue",{"_index":4433,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4417,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":4477,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4621,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4008,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4555,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4557,"title":{},"body":{"license.html":{}}}],["control",{"_index":739,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":4560,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":4161,"title":{},"body":{"license.html":{}}}],["convention",{"_index":410,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["converttodate",{"_index":3872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttodate(body",{"_index":3880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":4148,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4598,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4428,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4156,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4476,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3996,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3993,"title":{},"body":{"license.html":{}}}],["copying",{"_index":4110,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4000,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3986,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4119,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4243,"title":{},"body":{"license.html":{}}}],["core/domain/dto/invitation.dto",{"_index":2090,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/domain/dto/log",{"_index":1128,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["core/domain/dto/project",{"_index":3172,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["core/domain/dto/requests/create",{"_index":945,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["core/domain/dto/requests/register",{"_index":1621,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["core/domain/models/enums/permission.enum",{"_index":1296,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/resource",{"_index":1300,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/state",{"_index":1305,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["core/domain/models/organization.entity",{"_index":2390,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["core/domain/models/platform.entity",{"_index":2754,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/project",{"_index":1119,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["core/domain/models/project.entity",{"_index":1121,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["core/domain/models/team.entity",{"_index":2698,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{}}}],["core/domain/models/user.entity",{"_index":1899,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["core/domain/pageable/page.dto",{"_index":1131,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["core/domain/pageable/pageable.dto",{"_index":1134,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":1405,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/api/invitation.api.service",{"_index":1625,"title":{},"body":{"components/InvitationComponent.html":{}}}],["core/services/api/log",{"_index":1132,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["core/services/api/organization.api.service",{"_index":946,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/services/api/project.api.service",{"_index":2755,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["core/services/api/team.api.service",{"_index":3391,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["core/services/layout.service",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":839,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":947,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":1404,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":1298,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/members/members.actions",{"_index":1901,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/members/members.selectors",{"_index":1904,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/organization/organization.actions",{"_index":949,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/state/organization/organization.selectors",{"_index":953,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/platform/platform.actions",{"_index":2756,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/platform/platform.selectors",{"_index":2758,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.actions",{"_index":1123,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/SessionsComponent.html":{}}}],["core/state/project/project.selectors",{"_index":1126,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/SessionsComponent.html":{}}}],["core/state/role/role.actions",{"_index":2094,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/role/role.selectors",{"_index":2096,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/single",{"_index":1291,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["core/state/team/team.actions",{"_index":2700,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["core/state/team/team.selectors",{"_index":2702,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["core/utils/regex.constants",{"_index":1624,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cores",{"_index":1797,"title":{},"body":{"interfaces/LogSourceDto.html":{}}}],["correction",{"_index":4664,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3968,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":4201,"title":{},"body":{"license.html":{}}}],["cost",{"_index":4351,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":4548,"title":{},"body":{"license.html":{}}}],["countries",{"_index":4146,"title":{},"body":{"license.html":{}}}],["country",{"_index":4589,"title":{},"body":{"license.html":{}}}],["course",{"_index":4716,"title":{},"body":{"license.html":{}}}],["court",{"_index":4620,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4683,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4577,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4400,"title":{},"body":{"license.html":{}}}],["covered",{"_index":4132,"title":{},"body":{"license.html":{}}}],["cpp",{"_index":3852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cpuinfo",{"_index":1790,"title":{},"body":{"interfaces/LogSourceDto.html":{}}}],["cpuinfo.cores",{"_index":1083,"title":{},"body":{"components/DevicesComponent.html":{}}}],["cpuinfo.model",{"_index":1081,"title":{},"body":{"components/DevicesComponent.html":{}}}],["cpuinfo.speed",{"_index":1082,"title":{},"body":{"components/DevicesComponent.html":{}}}],["cpuinfo.threads",{"_index":1084,"title":{},"body":{"components/DevicesComponent.html":{}}}],["crash",{"_index":3186,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["crashfree",{"_index":1756,"title":{},"body":{"interfaces/LogSessionDto.html":{},"components/SessionsComponent.html":{}}}],["crashfreegain",{"_index":2595,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["crashfreepercentage",{"_index":2596,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["crashfreepercentagegain",{"_index":2642,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["create",{"_index":62,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createbreadcrumbs",{"_index":1460,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":1474,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":392,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":1091,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createdtime",{"_index":1362,"title":{},"body":{"interfaces/FileDto.html":{}}}],["createeffect",{"_index":533,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["createnewenvironment",{"_index":1229,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["createneworganization",{"_index":2428,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createnewproject",{"_index":2731,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewprojectform",{"_index":2725,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewrelease",{"_index":2842,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["createnewtag",{"_index":3552,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["createnewteam",{"_index":3665,"title":{},"body":{"injectables/TeamService.html":{}}}],["createnewteam(dto",{"_index":3676,"title":{},"body":{"injectables/TeamService.html":{}}}],["createorganization",{"_index":900,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["createorganization(dto",{"_index":2456,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationcomponent",{"_index":61,"title":{"components/CreateOrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["createorganizationfailure",{"_index":2477,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["createorganizationform",{"_index":890,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["createorganizationrequestdto",{"_index":944,"title":{"interfaces/CreateOrganizationRequestDto.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"injectables/OrganizationService.html":{}}}],["createorganizationsuccess",{"_index":2447,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["createorganizationsuccess(organization",{"_index":2433,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createorganizationteamerror",{"_index":3705,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createorganizationteamstatus",{"_index":3706,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createproject",{"_index":2563,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{}}}],["createprojectdebugfiledto",{"_index":1007,"title":{"interfaces/CreateProjectDebugFileDto.html":{}},"body":{"interfaces/CreateProjectDebugFileDto.html":{}}}],["createprojecterror",{"_index":2653,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectfailure",{"_index":2586,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectreleasedto",{"_index":1012,"title":{"interfaces/CreateProjectReleaseDto.html":{}},"body":{"interfaces/CreateProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{}}}],["createprojectrequestdto",{"_index":1015,"title":{"interfaces/CreateProjectRequestDto.html":{}},"body":{"interfaces/CreateProjectRequestDto.html":{}}}],["createprojectstatus",{"_index":2654,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectsuccess",{"_index":2587,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectsuccess(project",{"_index":2571,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["createreducer",{"_index":662,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["createreleaseform",{"_index":2839,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["creates",{"_index":1478,"title":{},"body":{"components/HomeComponent.html":{}}}],["createteam",{"_index":3600,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamfailure",{"_index":3624,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamrequestdto",{"_index":1017,"title":{"interfaces/CreateTeamRequestDto.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"injectables/TeamService.html":{}}}],["createteamsuccess",{"_index":3625,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamsuccess(team",{"_index":3605,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["creating",{"_index":382,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":653,"title":{},"body":{"interfaces/AuthState.html":{}}}],["criterion",{"_index":4171,"title":{},"body":{"license.html":{}}}],["cross",{"_index":4546,"title":{},"body":{"license.html":{}}}],["cs",{"_index":3860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["css",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":2281,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":4511,"title":{},"body":{"license.html":{}}}],["current",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["currently",{"_index":345,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentpage",{"_index":1029,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["currentpageable",{"_index":1030,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["currentuser",{"_index":1452,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":1453,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":2155,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":4340,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4347,"title":{},"body":{"license.html":{}}}],["d",{"_index":1203,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["damages",{"_index":4666,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1324,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"license.html":{}}}],["dark",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["data",{"_index":1031,"title":{},"body":{"components/DevicesComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["data.append('picture",{"_index":2470,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["database",{"_index":3080,"title":{},"body":{"components/SidebarComponent.html":{}}}],["datasets",{"_index":3183,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["date",{"_index":1088,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/FileDto.html":{},"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["datepipe",{"_index":3141,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["days",{"_index":4506,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":941,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["debouncetime(500",{"_index":959,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["debug",{"_index":65,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["debug_file",{"_index":3863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debugfileid",{"_index":2551,"title":{},"body":{"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["debugfiles",{"_index":3230,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["debugfilestablecomponent",{"_index":64,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["debugfiletype",{"_index":1009,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"miscellaneous/enumerations.html":{}}}],["december",{"_index":4267,"title":{},"body":{"license.html":{}}}],["decide",{"_index":4646,"title":{},"body":{"license.html":{}}}],["declares",{"_index":332,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":4469,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":758,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":930,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":781,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":726,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":4255,"title":{},"body":{"license.html":{}}}],["default",{"_index":316,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"classes/PageableDefault.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["defective",{"_index":4659,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4618,"title":{},"body":{"license.html":{}}}],["defined",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"classes/PageableDefault.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":364,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":4208,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":4114,"title":{},"body":{"license.html":{}}}],["delete",{"_index":3841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteorganization",{"_index":2350,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["deleteteam",{"_index":3349,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["deleteteam(teamid",{"_index":3678,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteteamerror",{"_index":3707,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamfailure",{"_index":3626,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamstatus",{"_index":3708,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamsuccess",{"_index":3627,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamsuccess({teamid",{"_index":3610,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["denied",{"_index":16,"title":{},"body":{"components/AccessDeniedComponent.html":{},"license.html":{}}}],["denied'},{'name",{"_index":50,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["denied.access_denied",{"_index":40,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component",{"_index":1285,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["denied.component.html",{"_index":26,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.scss",{"_index":28,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.ts",{"_index":11,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.insufficient_permission",{"_index":42,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied/access",{"_index":10,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["denominated",{"_index":4575,"title":{},"body":{"license.html":{}}}],["deny",{"_index":4067,"title":{},"body":{"license.html":{}}}],["denying",{"_index":4030,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":3792,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":755,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":3936,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":3956,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":4584,"title":{},"body":{"license.html":{}}}],["desc",{"_index":1179,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["description",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":871,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":4359,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4004,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":347,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":983,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"license.html":{}}}],["details",{"_index":1019,"title":{},"body":{"components/DetailsComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/ProjectDetailsComponent.html":{},"license.html":{}}}],["details'},{'name",{"_index":69,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["details.component.html",{"_index":1020,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.scss",{"_index":1021,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.ts",{"_index":2558,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["details.the",{"_index":4714,"title":{},"body":{"license.html":{}}}],["details/project",{"_index":2557,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["detailscomponent",{"_index":68,"title":{"components/DetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["detected",{"_index":2206,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":2204,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":4395,"title":{},"body":{"license.html":{}}}],["dev",{"_index":3921,"title":{},"body":{"index.html":{}}}],["develop",{"_index":4691,"title":{},"body":{"license.html":{}}}],["developers",{"_index":4045,"title":{},"body":{"license.html":{}}}],["development",{"_index":3917,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":348,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device.online",{"_index":1200,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.architecture",{"_index":1197,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.environment",{"_index":1195,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.ipaddress",{"_index":1198,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.logsourceid",{"_index":1193,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.macaddress",{"_index":1199,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.os",{"_index":1194,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.release.version",{"_index":1196,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device?.updatedat",{"_index":1201,"title":{},"body":{"components/DevicesComponent.html":{}}}],["device_state",{"_index":3864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":1023,"title":{},"body":{"components/DevicesComponent.html":{},"license.html":{}}}],["devices'},{'name",{"_index":71,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devices.architecture",{"_index":1188,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.architecture_description",{"_index":1109,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.html",{"_index":1027,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.scss",{"_index":1028,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.cpu_info_cores_description",{"_index":1103,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.cpu_info_model_description",{"_index":1101,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.cpu_info_speed_description",{"_index":1102,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.cpu_info_threads_description",{"_index":1104,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.created_at_description",{"_index":1110,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.environment",{"_index":1186,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.environment_description",{"_index":1098,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.id",{"_index":1184,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.id_description",{"_index":1094,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.ip_address",{"_index":1189,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.ip_address_description",{"_index":1099,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.last_registration",{"_index":1192,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.mac_address",{"_index":1190,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.mac_address_description",{"_index":1100,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.max_ram_description",{"_index":1108,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.no_devices_found",{"_index":1207,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.online",{"_index":1191,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.os",{"_index":1185,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.os_description",{"_index":1096,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.os_version_description",{"_index":1097,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.release_release_id_description",{"_index":1105,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.release_timestamp_description",{"_index":1107,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.release_version_description",{"_index":1106,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.unique_identifier_description",{"_index":1095,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.updated_at_description",{"_index":1111,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.version",{"_index":1187,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devicescomponent",{"_index":70,"title":{"components/DevicesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devtools",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["dialogmodule",{"_index":1218,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["differ",{"_index":4635,"title":{},"body":{"license.html":{}}}],["different",{"_index":768,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":4459,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4242,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4365,"title":{},"body":{"license.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directives",{"_index":169,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3928,"title":{},"body":{"index.html":{}}}],["directly",{"_index":4136,"title":{},"body":{"license.html":{}}}],["directory",{"_index":3933,"title":{},"body":{"index.html":{}}}],["disable",{"_index":399,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["disabled",{"_index":1589,"title":{},"body":{"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":4278,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4649,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4456,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":4602,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":590,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["display",{"_index":1483,"title":{},"body":{"components/HomeComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["displayed",{"_index":3051,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":4158,"title":{},"body":{"license.html":{}}}],["dist",{"_index":3932,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":942,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["distinguishing",{"_index":4638,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3994,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3897,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":4607,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4111,"title":{},"body":{"license.html":{}}}],["dividermodule",{"_index":2340,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["docker",{"_index":3934,"title":{},"body":{"index.html":{}}}],["document",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":1583,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1209,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation'},{'name",{"_index":73,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documentation.component.html",{"_index":1210,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":1211,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentationcomponent",{"_index":72,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documented",{"_index":4443,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["domain/dto/file.dto",{"_index":2465,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/invitation.dto",{"_index":1671,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/log",{"_index":1772,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["domain/dto/members.dto",{"_index":2028,"title":{},"body":{"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["domain/dto/organization.dto",{"_index":2464,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/platform.dto",{"_index":2538,"title":{},"body":{"injectables/PlatformService.html":{}}}],["domain/dto/project.dto",{"_index":3695,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/requests/authenticate",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/create",{"_index":2463,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["domain/dto/requests/invitation",{"_index":1672,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/requests/register",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["domain/dto/requests/reset",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/team.dto",{"_index":3696,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/token.dto",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MembersService.html":{},"injectables/TeamService.html":{}}}],["domain/models/enums/state",{"_index":664,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/invitation.entity",{"_index":2039,"title":{},"body":{"interfaces/MembersState.html":{}}}],["domain/models/menu",{"_index":2179,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/organization.entity",{"_index":2476,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["domain/models/platform.entity",{"_index":2541,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["domain/models/project.entity",{"_index":2658,"title":{},"body":{"interfaces/ProjectState.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["domain/models/team.entity",{"_index":3512,"title":{},"body":{"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/token.entity",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["domain/pageable/page.dto",{"_index":1774,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["domain/pageable/pageable.dto",{"_index":1771,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["domain/your",{"_index":3938,"title":{},"body":{"index.html":{}}}],["domains",{"_index":4089,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":4396,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":4526,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":1370,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":3942,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1025,"title":{},"body":{"components/DevicesComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["dt",{"_index":1221,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["dto",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["due",{"_index":3972,"title":{},"body":{"index.html":{}}}],["durable",{"_index":4339,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":4394,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":3799,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":4210,"title":{},"body":{"license.html":{}}}],["e",{"_index":4374,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":2243,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":3951,"title":{},"body":{"index.html":{}}}],["each",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":4131,"title":{},"body":{"license.html":{}}}],["effect",{"_index":309,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":4276,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4256,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4105,"title":{},"body":{"license.html":{}}}],["effects",{"_index":304,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":4540,"title":{},"body":{"license.html":{}}}],["el",{"_index":3027,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":4705,"title":{},"body":{"license.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["elementref",{"_index":929,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":289,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":1440,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":4334,"title":{},"body":{"license.html":{}}}],["emit",{"_index":385,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":366,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1341,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["emitting",{"_index":2153,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":4718,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2260,"title":{},"body":{"components/MenuitemComponent.html":{},"interfaces/Page.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":3767,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enable",{"_index":303,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableaddaction",{"_index":1235,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableeditaction",{"_index":1236,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enablefiltering",{"_index":1237,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableglobalsearch",{"_index":1238,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableinviteaction",{"_index":2065,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enablepagination",{"_index":1239,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableremoveaction",{"_index":1240,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enables",{"_index":4150,"title":{},"body":{"license.html":{}}}],["enablesorting",{"_index":1241,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["end",{"_index":408,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enddate",{"_index":3157,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["endinterval",{"_index":2597,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["endtime",{"_index":1757,"title":{},"body":{"interfaces/LogSessionDto.html":{},"components/SessionsComponent.html":{}}}],["enforce",{"_index":4576,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":4282,"title":{},"body":{"license.html":{}}}],["english",{"_index":3766,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":3900,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":4371,"title":{},"body":{"license.html":{}}}],["entered",{"_index":4612,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4304,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4628,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4530,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":3830,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/debug",{"_index":2553,"title":{},"body":{"interfaces/ProjectDebugFile.html":{}}}],["enums/permission.enum",{"_index":2928,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["enums/platform",{"_index":2516,"title":{},"body":{"interfaces/Platform.html":{}}}],["enums/resource",{"_index":2929,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["env",{"_index":3978,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":3069,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment",{"_index":1078,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/LogSourceDto.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["environment.appname",{"_index":1835,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1836,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment.environment",{"_index":1355,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["environments",{"_index":75,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["environments.add(environment",{"_index":1145,"title":{},"body":{"components/DevicesComponent.html":{}}}],["environments/environment",{"_index":1828,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["environments?.map((environment",{"_index":1267,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["environmentsform",{"_index":1222,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["environmentstablecomponent",{"_index":74,"title":{"components/EnvironmentsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["equal",{"_index":429,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":4232,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":4065,"title":{},"body":{"license.html":{}}}],["error",{"_index":546,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["error('method",{"_index":2395,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["error.status",{"_index":974,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{}}}],["errors",{"_index":2598,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["errorsubscription",{"_index":891,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":398,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["eslint/ban",{"_index":856,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":2275,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":402,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["essential",{"_index":4193,"title":{},"body":{"license.html":{}}}],["even",{"_index":4677,"title":{},"body":{"license.html":{}}}],["event",{"_index":956,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["event.files.length",{"_index":2401,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.files[0",{"_index":2402,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.first",{"_index":1172,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["event.model",{"_index":2180,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":2150,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["event.preventdefault",{"_index":2311,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.rows",{"_index":1170,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["event.sortfield",{"_index":1173,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["event.sortfield[0",{"_index":1176,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["event.sortorder",{"_index":1180,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["event.target",{"_index":957,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["event.value",{"_index":2707,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["events",{"_index":367,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["eventtarget",{"_index":1314,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["everyone",{"_index":3991,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2302,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":3937,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":4142,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":4447,"title":{},"body":{"license.html":{}}}],["exclamation",{"_index":3112,"title":{},"body":{"components/SidebarComponent.html":{}}}],["excluded",{"_index":4384,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4616,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4700,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4567,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4237,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4622,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4184,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2245,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":804,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":2241,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":4541,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4277,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2254,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":2259,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["expected",{"_index":4406,"title":{},"body":{"license.html":{}}}],["expects",{"_index":4405,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":3743,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":4056,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":403,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["explicitly",{"_index":2248,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["express",{"_index":3814,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expressed",{"_index":4651,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":4489,"title":{},"body":{"license.html":{}}}],["extend",{"_index":4092,"title":{},"body":{"license.html":{}}}],["extended",{"_index":4601,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":4317,"title":{},"body":{"license.html":{}}}],["extent",{"_index":4160,"title":{},"body":{"license.html":{}}}],["f",{"_index":4474,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4238,"title":{},"body":{"license.html":{}}}],["fails",{"_index":4502,"title":{},"body":{"license.html":{}}}],["failure",{"_index":682,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["fair",{"_index":4231,"title":{},"body":{"license.html":{}}}],["false",{"_index":311,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["family",{"_index":4389,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":4128,"title":{},"body":{"license.html":{}}}],["favor",{"_index":4399,"title":{},"body":{"license.html":{}}}],["feature",{"_index":4163,"title":{},"body":{"license.html":{}}}],["features",{"_index":3908,"title":{},"body":{"index.html":{}}}],["fee",{"_index":4038,"title":{},"body":{"license.html":{}}}],["feel",{"_index":742,"title":{},"body":{"components/ConfigComponent.html":{}}}],["fetchdata",{"_index":1041,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["file.dto.ts",{"_index":1008,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["file.entity.ts",{"_index":2550,"title":{},"body":{"interfaces/ProjectDebugFile.html":{}}}],["filedto",{"_index":1359,"title":{"interfaces/FileDto.html":{}},"body":{"interfaces/FileDto.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["filedto.url",{"_index":2487,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["filename",{"_index":1363,"title":{},"body":{"interfaces/FileDto.html":{}}}],["files",{"_index":66,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["filesize",{"_index":1364,"title":{},"body":{"interfaces/FileDto.html":{}}}],["fileupload",{"_index":2381,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadhandlerevent",{"_index":2366,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadmodule",{"_index":2343,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileurl",{"_index":2552,"title":{},"body":{"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["filled",{"_index":291,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":1293,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["filter((members",{"_index":1919,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["filter((projects",{"_index":2618,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["filter((teams",{"_index":3654,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["filteredprojects",{"_index":2673,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtermyteams",{"_index":2677,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtermyteams($event",{"_index":2680,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filterprojects",{"_index":2678,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filters",{"_index":1769,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["filters.environments",{"_index":1802,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["filters.logsourceids",{"_index":1782,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["filters.projectids",{"_index":1784,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["filters.releaseids",{"_index":1804,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["filters.search",{"_index":1786,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["filterservice",{"_index":2670,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtervalue",{"_index":2674,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["finally",{"_index":4096,"title":{},"body":{"license.html":{}}}],["find",{"_index":4367,"title":{},"body":{"license.html":{}}}],["findall",{"_index":1766,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["findall(pageable",{"_index":1768,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["first",{"_index":2492,"title":{},"body":{"interfaces/Page.html":{},"index.html":{},"license.html":{}}}],["firstname",{"_index":1613,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":4654,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":4338,"title":{},"body":{"license.html":{}}}],["flag",{"_index":3764,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":4217,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":874,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":4113,"title":{},"body":{"license.html":{}}}],["following",{"_index":4571,"title":{},"body":{"license.html":{}}}],["font",{"_index":770,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":1367,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":77,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["footer.component.html",{"_index":1368,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1369,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":76,"title":{"components/FooterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forbid",{"_index":4275,"title":{},"body":{"license.html":{}}}],["force",{"_index":4234,"title":{},"body":{"license.html":{}}}],["foreach((value",{"_index":2399,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["forgot",{"_index":79,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassword",{"_index":521,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{}}}],["forgotpassword(username",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":78,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassworderror",{"_index":654,"title":{},"body":{"interfaces/AuthState.html":{}}}],["forgotpasswordfailure",{"_index":599,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["forgotpasswordform",{"_index":1376,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":1438,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["forgotpasswordsuccess",{"_index":570,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["form",{"_index":4173,"title":{},"body":{"license.html":{}}}],["format",{"_index":4441,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":906,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["formdata",{"_index":2469,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["forms",{"_index":4328,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":718,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":2328,"title":{},"body":{"components/NotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":105,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["found.component",{"_index":3412,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["found.component.html",{"_index":2329,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":2330,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":2327,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_available",{"_index":2332,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_found",{"_index":2331,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":2326,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SingleTeamComponent.html":{}}}],["foundation",{"_index":3988,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":2306,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":3187,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["freedom",{"_index":4006,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":4041,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":943,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["fromevent(this.nameinput.nativeelement",{"_index":962,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["fromevent(this.sluginput.nativeelement",{"_index":954,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":1406,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":4259,"title":{},"body":{"license.html":{}}}],["full",{"_index":3941,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":350,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/SidebarComponent.html":{},"components/TeamPickerComponent.html":{}}}],["functionality",{"_index":711,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":4418,"title":{},"body":{"license.html":{}}}],["functions",{"_index":271,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":4071,"title":{},"body":{"license.html":{}}}],["further",{"_index":2250,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":4094,"title":{},"body":{"license.html":{}}}],["fw",{"_index":3059,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":3765,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":3973,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":4206,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3927,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":3904,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":2269,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getactivemembers",{"_index":2020,"title":{},"body":{"injectables/MembersService.html":{}}}],["getapplicationname",{"_index":1812,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":3754,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["getchartlabel",{"_index":3151,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getchartlabel(startdate",{"_index":3156,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getcontainerclass",{"_index":1518,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":828,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getinvitationdetails",{"_index":1662,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getinvitationdetails(invitationhash",{"_index":1667,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getitem",{"_index":1723,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1729,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1736,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmembers",{"_index":2021,"title":{},"body":{"injectables/MembersService.html":{}}}],["getmenumode",{"_index":824,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getmyteams",{"_index":3666,"title":{},"body":{"injectables/TeamService.html":{}}}],["getorganization",{"_index":2454,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizationinitials",{"_index":2351,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationinitials(organization",{"_index":2357,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationteams",{"_index":3667,"title":{},"body":{"injectables/TeamService.html":{}}}],["getplatforms",{"_index":2535,"title":{},"body":{"injectables/PlatformService.html":{}}}],["getprojectstats(this.project?.projectid",{"_index":3174,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getrefreshtoken",{"_index":1683,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":832,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getroles",{"_index":2946,"title":{},"body":{"injectables/RoleService.html":{}}}],["getscale",{"_index":820,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":2267,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getteambyid",{"_index":3668,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(teamid",{"_index":3682,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteammembers",{"_index":3669,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteammembers(teamid",{"_index":3684,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamprojects",{"_index":3670,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamprojects(teamid",{"_index":3686,"title":{},"body":{"injectables/TeamService.html":{}}}],["getting",{"_index":3888,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1684,"title":{},"body":{"injectables/JwtService.html":{}}}],["getuserinitials",{"_index":1861,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["getuserinitials(member",{"_index":1875,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["getvisible",{"_index":815,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":3962,"title":{},"body":{"index.html":{}}}],["gi",{"_index":1587,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":3959,"title":{},"body":{"index.html":{}}}],["give",{"_index":4297,"title":{},"body":{"license.html":{}}}],["given",{"_index":1479,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":4310,"title":{},"body":{"license.html":{}}}],["giving",{"_index":4051,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":3982,"title":{},"body":{"license.html":{}}}],["go",{"_index":3849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gotoprofilepage",{"_index":3755,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":4450,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4046,"title":{},"body":{"license.html":{}}}],["grant",{"_index":4470,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4221,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4521,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":4037,"title":{},"body":{"license.html":{}}}],["greater",{"_index":434,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":4692,"title":{},"body":{"license.html":{}}}],["green",{"_index":322,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":4010,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4717,"title":{},"body":{"license.html":{}}}],["guides",{"_index":1442,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides'},{'name",{"_index":82,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["guides.component.html",{"_index":1443,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides.component.scss",{"_index":1444,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guidescomponent",{"_index":81,"title":{"components/GuidesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["h:mm",{"_index":3193,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["h:mm:ss",{"_index":1205,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{}}}],["handle",{"_index":672,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["handles",{"_index":2240,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handleupdate",{"_index":2488,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["handling",{"_index":753,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hascreatepermission",{"_index":1942,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["hasdeletepermission",{"_index":1943,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["hash",{"_index":1910,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["haspermission",{"_index":3874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["haspermission(user",{"_index":3883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasreadpermission",{"_index":1223,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["hasupdatepermission",{"_index":2347,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["having",{"_index":4236,"title":{},"body":{"license.html":{}}}],["header",{"_index":1317,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["heart",{"_index":3083,"title":{},"body":{"components/SidebarComponent.html":{}}}],["height",{"_index":2279,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":3940,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":4563,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":351,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":1461,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":1462,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":1490,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":4496,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4455,"title":{},"body":{"license.html":{}}}],["home",{"_index":1446,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":84,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["home.component.html",{"_index":1448,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1449,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/devices",{"_index":3072,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/documentation",{"_index":3129,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/guides",{"_index":3135,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/sdks",{"_index":3132,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/support",{"_index":3138,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/issues",{"_index":3067,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/logs",{"_index":3064,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/messages",{"_index":3070,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/performance",{"_index":3078,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/projects",{"_index":3061,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/queries",{"_index":3081,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/releases",{"_index":3095,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/replays",{"_index":3092,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/resources",{"_index":3089,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/screen",{"_index":3087,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/sessions",{"_index":3075,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings",{"_index":3100,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account",{"_index":3102,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/close",{"_index":3111,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/details",{"_index":3104,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/notifications",{"_index":3109,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/security",{"_index":3106,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/alerts",{"_index":3125,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/members",{"_index":3122,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/organization",{"_index":3115,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/projects",{"_index":3117,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/teams",{"_index":3120,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/stats",{"_index":3098,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/vitals",{"_index":3084,"title":{},"body":{"components/SidebarComponent.html":{}}}],["homecomponent",{"_index":83,"title":{"components/HomeComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["hope",{"_index":4702,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":296,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":2236,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding",{"_index":2273,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":2317,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":2233,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":2194,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":4368,"title":{},"body":{"license.html":{}}}],["hour",{"_index":2593,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["hourbyhour",{"_index":2643,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["hourlystat",{"_index":3189,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.endinterval",{"_index":3182,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.errors",{"_index":3185,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.numberofcrashfreesessions",{"_index":3190,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.numberofsessions",{"_index":3191,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.transactions",{"_index":3184,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["household",{"_index":4390,"title":{},"body":{"license.html":{}}}],["hover",{"_index":2244,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":362,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["htmlelement).closest",{"_index":2775,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["htmlinputelement).value",{"_index":958,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["http",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":3923,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory",{"_index":3876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":3887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://fsf.org",{"_index":3990,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":4722,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":4730,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":2228,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":4715,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":2258,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":1319,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["iconurl",{"_index":2514,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{}}}],["id",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/DevicesComponent.html":{},"interfaces/ProjectHourByHourStatDto.html":{}}}],["identifiable",{"_index":4591,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":2219,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identifiers",{"_index":2231,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":2230,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["ids",{"_index":2854,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["if(isusernametaken",{"_index":1434,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":2304,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":3935,"title":{},"body":{"index.html":{}}}],["implement",{"_index":2137,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":4191,"title":{},"body":{"license.html":{}}}],["implemented",{"_index":2396,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["implements",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"index.html":{}}}],["implied",{"_index":4617,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["important",{"_index":3971,"title":{},"body":{"index.html":{}}}],["importing",{"_index":4554,"title":{},"body":{"license.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["impose",{"_index":4479,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4619,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4670,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4673,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":346,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inbox",{"_index":3066,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inc",{"_index":3989,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4667,"title":{},"body":{"license.html":{}}}],["include",{"_index":376,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":4186,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2226,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":4202,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":4326,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":4072,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4723,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4393,"title":{},"body":{"license.html":{}}}],["increments",{"_index":784,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":727,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":4475,"title":{},"body":{"license.html":{}}}],["independent",{"_index":4315,"title":{},"body":{"license.html":{}}}],["index",{"_index":186,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indicate",{"_index":411,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":394,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":437,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":4324,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":4081,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4409,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["inform",{"_index":4377,"title":{},"body":{"license.html":{}}}],["information",{"_index":2163,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":4522,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4551,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4139,"title":{},"body":{"license.html":{}}}],["initial",{"_index":379,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":763,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":375,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":670,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["initiate",{"_index":4544,"title":{},"body":{"license.html":{}}}],["inject",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(document",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(platform_id",{"_index":1742,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["injectable",{"_index":323,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["injectables",{"_index":515,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"overview.html":{}}}],["injected",{"_index":2211,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":756,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["input",{"_index":288,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["input'},{'name",{"_index":121,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["input.component",{"_index":1140,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["input/query",{"_index":1139,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["inputmaskmodule",{"_index":1595,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputnumbermodule",{"_index":2342,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inputs",{"_index":729,"title":{},"body":{"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/InvitationComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["inputstyle",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":849,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":717,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":886,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["inside",{"_index":3032,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":3810,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":4068,"title":{},"body":{"license.html":{}}}],["installation",{"_index":4412,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4431,"title":{},"body":{"license.html":{}}}],["instance",{"_index":383,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":1547,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["instead",{"_index":4728,"title":{},"body":{"license.html":{}}}],["intact",{"_index":4290,"title":{},"body":{"license.html":{}}}],["intended",{"_index":4009,"title":{},"body":{"license.html":{}}}],["intention",{"_index":4279,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":4153,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":754,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":4157,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":4341,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4538,"title":{},"body":{"license.html":{}}}],["interface",{"_index":247,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["interfaces",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":4420,"title":{},"body":{"license.html":{}}}],["internal",{"_index":2926,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":3034,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":4680,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4200,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4215,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":4311,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":701,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/MembersState.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":86,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitation.component.html",{"_index":1597,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":1598,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.dto",{"_index":1976,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["invitationcomponent",{"_index":85,"title":{"components/InvitationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitationdto",{"_index":1655,"title":{"interfaces/InvitationDto.html":{}},"body":{"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"interfaces/MembersDto.html":{},"components/MembersTableComponent.html":{}}}],["invitationhash",{"_index":1600,"title":{},"body":{"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["invitationid",{"_index":1591,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{}}}],["invitationrequestdto",{"_index":1658,"title":{"interfaces/InvitationRequestDto.html":{}},"body":{"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{}}}],["invitations",{"_index":1974,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["invitationservice",{"_index":530,"title":{"injectables/InvitationService.html":{}},"body":{"injectables/AuthEffects.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{}}}],["invitationstatus",{"_index":2034,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmember",{"_index":2035,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmembers",{"_index":1944,"title":{},"body":{"components/MembersComponent.html":{}}}],["invitemember",{"_index":1663,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["invitemember(dto",{"_index":1669,"title":{},"body":{"injectables/InvitationService.html":{}}}],["invitemembererror",{"_index":2036,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitememberfailure",{"_index":2010,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess",{"_index":2011,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess(invitation",{"_index":1987,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["invitenewuserform",{"_index":2056,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ios",{"_index":3844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ipaddress",{"_index":1079,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["irrevocable",{"_index":4223,"title":{},"body":{"license.html":{}}}],["isaddnewdialogvisible",{"_index":1224,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["isaddnewprojectdialogvisible",{"_index":2726,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isdeletebuttonclicked",{"_index":2774,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isdesktop",{"_index":438,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isinvitedialogvisible",{"_index":2057,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isiso8601",{"_index":3878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isiso8601(value",{"_index":3881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":892,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["isloadingactivemembers",{"_index":1902,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["isloadingallprojects",{"_index":2614,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["isloadingauthstate",{"_index":1400,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingcreatenew",{"_index":1225,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["isloadingcreatenewproject",{"_index":2727,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingcreateproject",{"_index":2759,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingdata",{"_index":1032,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["isloadingenvironments",{"_index":1226,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingmembers",{"_index":1859,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/SingleTeamComponent.html":{}}}],["isloadingmyprojects",{"_index":1124,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["isloadingmyteams",{"_index":2675,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["isloadingorganization",{"_index":950,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["isloadingorganizationteams",{"_index":3650,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["isloadingprojects",{"_index":1033,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectPickerComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{}}}],["isloadingreleases",{"_index":2840,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingremoveenvironments",{"_index":1227,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingremovemembers",{"_index":2058,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingremovereleases",{"_index":2841,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingremovetags",{"_index":3548,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingsendinvitation",{"_index":2059,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingsingleprojectaddenvironments",{"_index":1286,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingsingleprojectaddrelease",{"_index":2866,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingsingleprojectaddtags",{"_index":3571,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingsingleprojectenvironments",{"_index":1287,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingsingleprojectreleases",{"_index":2867,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingsingleprojectremoveenvironments",{"_index":1279,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingsingleprojectremovereleases",{"_index":2868,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingsingleprojectremovetags",{"_index":3572,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingsingleprojecttags",{"_index":3573,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingtags",{"_index":3549,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingteammembers",{"_index":3402,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["isloadingteamprojects",{"_index":3403,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["isloadingteams",{"_index":3635,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["isloadingupdateteam",{"_index":3343,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["ismobile",{"_index":444,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isnametaken",{"_index":2728,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isnametaken(name",{"_index":2779,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isoutsideclicked",{"_index":1531,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":426,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ispickerdialogvisible",{"_index":1860,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["isplatformbrowser",{"_index":1741,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1743,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1813,"title":{},"body":{"components/LoginComponent.html":{}}}],["isslugtaken",{"_index":893,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["isslugtaken(slug",{"_index":998,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["issuccess",{"_index":1401,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["issue",{"_index":3865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["issues",{"_index":1677,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues'},{'name",{"_index":88,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["issues.component.html",{"_index":1678,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues.component.scss",{"_index":1679,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issuescomponent",{"_index":87,"title":{"components/IssuesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["isupdateorganizationpictureloading",{"_index":2392,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isuploadinprogress",{"_index":2348,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isusernameavialable",{"_index":655,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isusernametaken",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":2184,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":2320,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":2191,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":2238,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":751,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":4434,"title":{},"body":{"license.html":{}}}],["java",{"_index":3850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1566,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":3853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json.parse(localstorageconfig",{"_index":455,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["json.stringify(this.config",{"_index":459,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["june",{"_index":3984,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":529,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{}}}],["karma",{"_index":3950,"title":{},"body":{"index.html":{}}}],["keep",{"_index":343,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":4194,"title":{},"body":{"license.html":{}}}],["key",{"_index":1724,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1730,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":2144,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":2146,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":4149,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":4001,"title":{},"body":{"license.html":{}}}],["know",{"_index":4025,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":4579,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4588,"title":{},"body":{"license.html":{}}}],["label",{"_index":1482,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TopbarComponent.html":{}}}],["labels",{"_index":3179,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["landscape",{"_index":440,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":738,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":3784,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":3038,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":321,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["laravel",{"_index":3857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["larger",{"_index":4319,"title":{},"body":{"license.html":{}}}],["last",{"_index":2493,"title":{},"body":{"interfaces/Page.html":{}}}],["lastlogintime",{"_index":2931,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1614,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":4641,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3958,"title":{},"body":{"index.html":{}}}],["law",{"_index":4141,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4116,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4549,"title":{},"body":{"license.html":{}}}],["layout",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":197,"title":{"injectables/LayoutService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["layoutstate",{"_index":329,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["leaks",{"_index":2264,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":4052,"title":{},"body":{"license.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["length",{"_index":1727,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":4727,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":4731,"title":{},"body":{"license.html":{}}}],["liability",{"_index":4458,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4138,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4183,"title":{},"body":{"license.html":{}}}],["library",{"_index":384,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":3981,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4120,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4122,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4124,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4002,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4525,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4468,"title":{},"body":{"license.html":{}}}],["light",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":4519,"title":{},"body":{"license.html":{}}}],["limit",{"_index":4280,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3974,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":4652,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":4457,"title":{},"body":{"license.html":{}}}],["line",{"_index":401,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["link",{"_index":776,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":4211,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4726,"title":{},"body":{"license.html":{}}}],["links",{"_index":308,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":3063,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["listener",{"_index":1496,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1281,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"injectables/MemoryStorage.html":{},"interfaces/Page.html":{},"interfaces/Role.html":{},"components/TagsTableComponent.html":{},"injectables/TeamService.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":4545,"title":{},"body":{"license.html":{}}}],["load",{"_index":685,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["loadactivemembers",{"_index":1900,"title":{},"body":{"components/MemberPickerComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivemembersfailure",{"_index":2012,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivememberssuccess",{"_index":2013,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivememberssuccess({members",{"_index":1993,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadallprojects",{"_index":2564,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{}}}],["loadallprojectsfailure",{"_index":2588,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess",{"_index":2589,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess({projects",{"_index":2577,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadcurrentorganization",{"_index":948,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationfailure",{"_index":2448,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess",{"_index":2449,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess(organization",{"_index":2438,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["loadcurrentuser",{"_index":522,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loadcurrentuserfailure",{"_index":600,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess",{"_index":601,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess(user",{"_index":566,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":797,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":3805,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":673,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["loadmyprojects",{"_index":1122,"title":{},"body":{"components/DevicesComponent.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["loadmyprojectsfailure",{"_index":2590,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadmyprojectssuccess",{"_index":2591,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadmyprojectssuccess({projects",{"_index":2582,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadmyteams",{"_index":2699,"title":{},"body":{"components/ProjectsComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadmyteamsfailure",{"_index":3628,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadmyteamssuccess",{"_index":3629,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadmyteamssuccess({teams",{"_index":3616,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadorganizationmembers",{"_index":1963,"title":{},"body":{"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmembersfailure",{"_index":2014,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess",{"_index":2015,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess(members",{"_index":1998,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadorganizationteams",{"_index":3601,"title":{},"body":{"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadorganizationteamsfailure",{"_index":3630,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess",{"_index":3631,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess({teams",{"_index":3621,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadpage",{"_index":1042,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["loadpage($event",{"_index":1051,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["loadplatforms",{"_index":2521,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["loadplatformsfailure",{"_index":2532,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadplatformssuccess",{"_index":2527,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadprojectbyid",{"_index":3215,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectbyidfailure",{"_index":3325,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectbyidsuccess",{"_index":3262,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectdebugfiles",{"_index":3216,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectdebugfilesfailure",{"_index":3326,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectdebugfilessuccess",{"_index":3267,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectenvironments",{"_index":1302,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["loadprojectenvironmentsfailure",{"_index":3327,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectenvironmentssuccess",{"_index":3272,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectreleases",{"_index":2873,"title":{},"body":{"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["loadprojectreleasesfailure",{"_index":3328,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectreleasessuccess",{"_index":3277,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojecttags",{"_index":3217,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["loadprojecttagsfailure",{"_index":3329,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojecttagssuccess",{"_index":3282,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectteams",{"_index":3218,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectteamsfailure",{"_index":3330,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectteamssuccess",{"_index":3287,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadroles",{"_index":2093,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolesfailure",{"_index":2943,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolessuccess",{"_index":2939,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loads",{"_index":2958,"title":{},"body":{"components/ScreenLoadsComponent.html":{},"components/SidebarComponent.html":{}}}],["loads'},{'name",{"_index":136,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loads.component.html",{"_index":2959,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.scss",{"_index":2960,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.ts",{"_index":2957,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads/screen",{"_index":2956,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loadteambyid",{"_index":3394,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteambyidfailure",{"_index":3488,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteambyidsuccess",{"_index":3457,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammembers",{"_index":3395,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammembersfailure",{"_index":3489,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammemberssuccess",{"_index":3462,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojects",{"_index":3396,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojectsfailure",{"_index":3490,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojectssuccess",{"_index":3467,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["local",{"_index":327,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":3035,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":1568,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":326,"title":{"injectables/LocalStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{}}}],["localstorageconfig",{"_index":451,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["location",{"_index":3899,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":3866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":3867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":3868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":3893,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":3890,"title":{},"body":{"index.html":{}}}],["login",{"_index":1808,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":90,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["login.component.html",{"_index":1809,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1810,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":89,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loginform",{"_index":1811,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":3756,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1847,"title":{},"body":{"components/LogsComponent.html":{},"index.html":{}}}],["logs'},{'name",{"_index":92,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["logs.component.html",{"_index":1848,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1849,"title":{},"body":{"components/LogsComponent.html":{}}}],["logscomponent",{"_index":91,"title":{"components/LogsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["logsessiondto",{"_index":1753,"title":{"interfaces/LogSessionDto.html":{}},"body":{"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"components/SessionsComponent.html":{}}}],["logsessionservice",{"_index":1763,"title":{"injectables/LogSessionService.html":{}},"body":{"injectables/LogSessionService.html":{},"components/SessionsComponent.html":{}}}],["logsourcedto",{"_index":1127,"title":{"interfaces/LogSourceDto.html":{}},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{}}}],["logsourceid",{"_index":1758,"title":{},"body":{"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{}}}],["logsourceids",{"_index":1775,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["logsourceservice",{"_index":1048,"title":{"injectables/LogSourceService.html":{}},"body":{"components/DevicesComponent.html":{},"injectables/LogSourceService.html":{}}}],["long",{"_index":4233,"title":{},"body":{"license.html":{}}}],["look",{"_index":741,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":4671,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4674,"title":{},"body":{"license.html":{}}}],["macaddress",{"_index":1080,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["machine",{"_index":4331,"title":{},"body":{"license.html":{}}}],["made",{"_index":4421,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4707,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":4364,"title":{},"body":{"license.html":{}}}],["major",{"_index":4189,"title":{},"body":{"license.html":{}}}],["make",{"_index":3965,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":4250,"title":{},"body":{"license.html":{}}}],["making",{"_index":2205,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":743,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":3915,"title":{},"body":{"index.html":{}}}],["managing",{"_index":737,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":744,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":4564,"title":{},"body":{"license.html":{}}}],["manually",{"_index":2202,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":4070,"title":{},"body":{"license.html":{}}}],["map",{"_index":539,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"injectables/RoleEffects.html":{},"components/SessionsComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{}}}],["map((environments",{"_index":3236,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((event",{"_index":955,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["map((files",{"_index":3228,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((invitation",{"_index":1986,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((members",{"_index":1992,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["map((organization",{"_index":2432,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["map((page",{"_index":1161,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["map((project",{"_index":2570,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleProjectEffects.html":{}}}],["map((projects",{"_index":2576,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["map((releases",{"_index":3242,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((result",{"_index":2442,"title":{},"body":{"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/RoleEffects.html":{}}}],["map((segment",{"_index":1564,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((tags",{"_index":3249,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((team",{"_index":3456,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["map((teams",{"_index":3256,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["map((token",{"_index":556,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":565,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((value",{"_index":2686,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["march",{"_index":4614,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4062,"title":{},"body":{"license.html":{}}}],["marks",{"_index":759,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":4118,"title":{},"body":{"license.html":{}}}],["matching",{"_index":172,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":870,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":4435,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":2305,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["maxram",{"_index":1089,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["meaning",{"_index":4482,"title":{},"body":{"license.html":{}}}],["means",{"_index":760,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":4258,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4272,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":2208,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":4286,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4300,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4170,"title":{},"body":{"license.html":{}}}],["member",{"_index":94,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["member.email",{"_index":2121,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.email.charat(0",{"_index":1909,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.firstname",{"_index":1906,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.firstname?.charat(0",{"_index":1907,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.invitationid",{"_index":2112,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.lastname",{"_index":1905,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.lastname?.charat(0",{"_index":1908,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.pictureurl",{"_index":2123,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.role.name",{"_index":2122,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.userid",{"_index":1927,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["member?.firstname",{"_index":2119,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.lastname",{"_index":2120,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["memberid",{"_index":2027,"title":{},"body":{"injectables/MembersService.html":{},"components/MembersTableComponent.html":{}}}],["memberpickercomponent",{"_index":93,"title":{"components/MemberPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members",{"_index":99,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/PlatformState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members'},{'name",{"_index":97,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members.actions",{"_index":2017,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["members.component.html",{"_index":1939,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.component.scss",{"_index":1940,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.map((member",{"_index":3432,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["members/members.effects",{"_index":476,"title":{},"body":{"interfaces/AppState.html":{}}}],["members/members.reducer",{"_index":478,"title":{},"body":{"interfaces/AppState.html":{}}}],["members?.filter",{"_index":1924,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["memberscomponent",{"_index":96,"title":{"components/MembersComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["membersdto",{"_index":1972,"title":{"interfaces/MembersDto.html":{}},"body":{"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["memberseffects",{"_index":475,"title":{"injectables/MembersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MembersEffects.html":{}}}],["memberserror",{"_index":3499,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["membersreducer",{"_index":477,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersservice",{"_index":1982,"title":{"injectables/MembersService.html":{}},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{}}}],["membersstate",{"_index":463,"title":{"interfaces/MembersState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersstatus",{"_index":3500,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["memberstablecomponent",{"_index":98,"title":{"components/MembersTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["memory",{"_index":1740,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1739,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["menu",{"_index":293,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":3750,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":2147,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{}}}],["menuhoveractive",{"_index":338,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":1476,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":2188,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":2187,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":3052,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":101,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menuitemcomponent",{"_index":100,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menumode",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":847,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":1454,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":2189,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":341,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":722,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusource",{"_index":2156,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":2190,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":4653,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4152,"title":{},"body":{"license.html":{}}}],["merging",{"_index":4534,"title":{},"body":{"license.html":{}}}],["message",{"_index":1315,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["messages",{"_index":2322,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages'},{'name",{"_index":103,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messages.component.html",{"_index":2323,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":2324,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagescomponent",{"_index":102,"title":{"components/MessagesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messageservice",{"_index":883,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["met",{"_index":4225,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["method",{"_index":2215,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":730,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":3829,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["misrepresentation",{"_index":4464,"title":{},"body":{"license.html":{}}}],["mmm",{"_index":1202,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["mobile",{"_index":360,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":292,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["model",{"_index":1795,"title":{},"body":{"interfaces/LogSourceDto.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/debug",{"_index":1010,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["models/enums/permission.enum",{"_index":3786,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/platform",{"_index":2519,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["models/enums/resource",{"_index":3787,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/user.entity",{"_index":1657,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["modification",{"_index":4112,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4174,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4061,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4303,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4035,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4144,"title":{},"body":{"license.html":{}}}],["modules",{"_index":4732,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":3902,"title":{},"body":{"index.html":{}}}],["more",{"_index":4349,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":4508,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2743,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["move",{"_index":373,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["multiselectchangeevent",{"_index":2681,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["multiselectmodule",{"_index":1026,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["myprojects",{"_index":2655,"title":{},"body":{"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{}}}],["myprojectserror",{"_index":2656,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["myprojectsstatus",{"_index":2657,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["myteams",{"_index":2676,"title":{},"body":{"components/ProjectsComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["myteamserror",{"_index":3709,"title":{},"body":{"interfaces/TeamState.html":{}}}],["myteamsstatus",{"_index":3710,"title":{},"body":{"interfaces/TeamState.html":{}}}],["na",{"_index":2397,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":3939,"title":{},"body":{"index.html":{}}}],["namechecksubscription",{"_index":2729,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["named",{"_index":255,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["nameinput",{"_index":894,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["names",{"_index":4467,"title":{},"body":{"license.html":{}}}],["native",{"_index":3031,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":4316,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":3922,"title":{},"body":{"index.html":{}}}],["navigatetoprojectsettings",{"_index":3152,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["navigation",{"_index":745,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":1520,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":4661,"title":{},"body":{"license.html":{}}}],["need",{"_index":3953,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":4095,"title":{},"body":{"license.html":{}}}],["nest",{"_index":3859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":4154,"title":{},"body":{"license.html":{}}}],["networkspeed",{"_index":1759,"title":{},"body":{"interfaces/LogSessionDto.html":{},"components/SessionsComponent.html":{}}}],["networktype",{"_index":1760,"title":{},"body":{"interfaces/LogSessionDto.html":{},"components/SessionsComponent.html":{}}}],["new",{"_index":381,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/DevicesComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/ProjectState.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["newhref",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["newpassword",{"_index":2914,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":400,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":3919,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":3350,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["ngafterviewinit",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["ngondestroy",{"_index":901,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{}}}],["ngoninit",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["ngrx",{"_index":3914,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":593,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":34,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["node",{"_index":3845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["non",{"_index":1425,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":4355,"title":{},"body":{"license.html":{}}}],["none",{"_index":1328,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["normal",{"_index":4187,"title":{},"body":{"license.html":{}}}],["normally",{"_index":4388,"title":{},"body":{"license.html":{}}}],["notfoundcomponent",{"_index":104,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["nothing",{"_index":4520,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4164,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4159,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":2173,"title":{},"body":{"injectables/MenuService.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":107,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifications.component.html",{"_index":2334,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":2335,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscomponent",{"_index":106,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifies",{"_index":4509,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4503,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4453,"title":{},"body":{"license.html":{}}}],["null",{"_index":453,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["number",{"_index":313,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/DevicesComponent.html":{},"interfaces/FileDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["numbered",{"_index":4640,"title":{},"body":{"license.html":{}}}],["numberofcrashfreesessions",{"_index":2599,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["numberofelements",{"_index":2494,"title":{},"body":{"interfaces/Page.html":{}}}],["numberofsessions",{"_index":2600,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["numbers",{"_index":812,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":320,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["object's",{"_index":428,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":2145,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":2142,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":1488,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":4626,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4370,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4260,"title":{},"body":{"license.html":{}}}],["observable",{"_index":391,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/DevicesComponent.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"components/SessionsComponent.html":{},"injectables/TeamService.html":{}}}],["observables",{"_index":369,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":4354,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":4517,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4078,"title":{},"body":{"license.html":{}}}],["of(acceptinvitationfailure",{"_index":545,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(addprojectdebugfilefailure",{"_index":3231,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojectenvironmentsfailure",{"_index":3238,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojectreleasefailure",{"_index":3244,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojecttagsfailure",{"_index":3251,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojectteamsfailure",{"_index":3258,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addteammembersfailure",{"_index":3447,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(addteamprojectsfailure",{"_index":3452,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(authenticate(request",{"_index":549,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":560,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(createprojectfailure",{"_index":2572,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(createteamfailure",{"_index":3606,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(deleteteamfailure",{"_index":3612,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":571,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(invitememberfailure",{"_index":1988,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadactivemembersfailure",{"_index":1994,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadallprojectsfailure",{"_index":2578,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadcurrentorganizationfailure",{"_index":2434,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":574,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadmyprojectsfailure",{"_index":2583,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadmyteamsfailure",{"_index":3617,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadorganizationmembers",{"_index":2006,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationmembersfailure",{"_index":1999,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationteamsfailure",{"_index":3622,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadplatformsfailure",{"_index":2529,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["of(loadprojectbyidfailure",{"_index":3263,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectdebugfilesfailure",{"_index":3268,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectenvironmentsfailure",{"_index":3273,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectreleasesfailure",{"_index":3278,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojecttagsfailure",{"_index":3283,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectteamsfailure",{"_index":3288,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadrolesfailure",{"_index":2940,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["of(loadteambyidfailure",{"_index":3458,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(loadteammembersfailure",{"_index":3463,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(loadteamprojectsfailure",{"_index":3468,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(registernewuserfailure",{"_index":578,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(removememberfailure",{"_index":2003,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(removeprojectdebugfilesfailure",{"_index":3293,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojectenvironmentsfailure",{"_index":3298,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojectreleasesfailure",{"_index":3303,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojecttagsfailure",{"_index":3308,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojectteamsfailure",{"_index":3313,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeteammembersfailure",{"_index":3473,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(removeteamprojectsfailure",{"_index":3478,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(resetpasswordfailure",{"_index":585,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(updateorganizationpicturefailure",{"_index":2444,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(updateprojectfailure",{"_index":3318,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(updateteamfailure",{"_index":3483,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["offer",{"_index":4050,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4379,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4358,"title":{},"body":{"license.html":{}}}],["official",{"_index":4175,"title":{},"body":{"license.html":{}}}],["offset",{"_index":2503,"title":{},"body":{"interfaces/Page.html":{}}}],["oftype",{"_index":592,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["oftype(acceptinvitation",{"_index":535,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(acceptinvitationsuccess",{"_index":548,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(addprojectdebugfile",{"_index":3224,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojectenvironments",{"_index":3233,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojectrelease",{"_index":3240,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojecttags",{"_index":3246,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojectteams",{"_index":3253,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addteammembers",{"_index":3444,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(addteamprojects",{"_index":3449,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(authenticate",{"_index":551,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":562,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(createorganization",{"_index":2430,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(createproject",{"_index":2568,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(createteam",{"_index":3603,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(deleteteam",{"_index":3608,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(forgotpassword",{"_index":568,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(invitemember",{"_index":1984,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadactivemembers",{"_index":1990,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadallprojects",{"_index":2574,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadcurrentorganization",{"_index":2436,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":573,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadmyprojects",{"_index":2580,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadmyteams",{"_index":3614,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadorganizationmembers",{"_index":1996,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadorganizationteams",{"_index":3619,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadplatforms",{"_index":2525,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["oftype(loadprojectbyid",{"_index":3260,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectdebugfiles",{"_index":3265,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectenvironments",{"_index":3270,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectreleases",{"_index":3275,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojecttags",{"_index":3280,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectteams",{"_index":3285,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadroles",{"_index":2937,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["oftype(loadteambyid",{"_index":3454,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(loadteammembers",{"_index":3460,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(loadteamprojects",{"_index":3465,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(registernewuser",{"_index":576,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":580,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(removemember",{"_index":2001,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removemembersuccess",{"_index":2005,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removeprojectdebugfiles",{"_index":3290,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojectenvironments",{"_index":3295,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojectreleases",{"_index":3300,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojecttags",{"_index":3305,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojectteams",{"_index":3310,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeteammembers",{"_index":3470,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(removeteamprojects",{"_index":3475,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(resetpassword",{"_index":582,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":587,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(updateorganizationpicture",{"_index":2440,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(updateproject",{"_index":3315,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(updateteam",{"_index":3480,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["on(acceptinvitation",{"_index":702,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationfailure",{"_index":704,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationsuccess",{"_index":703,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(addteammembers",{"_index":3526,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteammembersfailure",{"_index":3528,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteammemberssuccess",{"_index":3527,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojects",{"_index":3532,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojectsfailure",{"_index":3534,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojectssuccess",{"_index":3533,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(authenticate",{"_index":677,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationfailure",{"_index":683,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationsuccess",{"_index":680,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(createorganization",{"_index":2481,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationfailure",{"_index":2483,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationsuccess",{"_index":2482,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createproject",{"_index":2665,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectfailure",{"_index":2668,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectsuccess",{"_index":2666,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createteam",{"_index":3719,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamfailure",{"_index":3722,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamsuccess",{"_index":3720,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteam",{"_index":3723,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamfailure",{"_index":3726,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamsuccess",{"_index":3724,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(forgotpassword",{"_index":691,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordfailure",{"_index":693,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordsuccess",{"_index":692,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(invitemember",{"_index":2043,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitememberfailure",{"_index":2048,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitemembersuccess",{"_index":2044,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivemembers",{"_index":2052,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivemembersfailure",{"_index":2054,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivememberssuccess",{"_index":2053,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadallprojects",{"_index":2659,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectsfailure",{"_index":2661,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectssuccess",{"_index":2660,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadcurrentorganization",{"_index":2478,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationfailure",{"_index":2480,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationsuccess",{"_index":2479,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentuser",{"_index":674,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentuserfailure",{"_index":687,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentusersuccess",{"_index":686,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadmyprojects",{"_index":2662,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyprojectsfailure",{"_index":2664,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyprojectssuccess",{"_index":2663,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyteams",{"_index":3717,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadmyteamssuccess",{"_index":3718,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationmembers",{"_index":2040,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmembersfailure",{"_index":2042,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmemberssuccess",{"_index":2041,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationteams",{"_index":3714,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamsfailure",{"_index":3716,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamssuccess",{"_index":3715,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadplatforms",{"_index":2542,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformsfailure",{"_index":2545,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformssuccess",{"_index":2543,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadroles",{"_index":2951,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolesfailure",{"_index":2954,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolessuccess",{"_index":2952,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadteambyid",{"_index":3514,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteambyidfailure",{"_index":3516,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteambyidsuccess",{"_index":3515,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammembers",{"_index":3517,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammembersfailure",{"_index":3519,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammemberssuccess",{"_index":3518,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojects",{"_index":3520,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojectsfailure",{"_index":3522,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojectssuccess",{"_index":3521,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(registernewuser",{"_index":697,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewuserfailure",{"_index":699,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewusersuccess",{"_index":698,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(removemember",{"_index":2049,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removememberfailure",{"_index":2051,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removemembersuccess",{"_index":2050,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removeteammembers",{"_index":3529,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteammembersfailure",{"_index":3531,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteammemberssuccess",{"_index":3530,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojects",{"_index":3535,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojectsfailure",{"_index":3537,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojectssuccess",{"_index":3536,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(resetpassword",{"_index":694,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordfailure",{"_index":696,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordsuccess",{"_index":695,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetsingleteamstate",{"_index":3513,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(setcurrentuser",{"_index":688,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(settoken",{"_index":689,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(signout",{"_index":690,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(updateorganizationpicture",{"_index":2484,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturefailure",{"_index":2489,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturesuccess",{"_index":2485,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateteam",{"_index":3523,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(updateteamfailure",{"_index":3525,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(updateteamsuccess",{"_index":3524,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["onaddmembers",{"_index":3344,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onaddprojects",{"_index":3345,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["once",{"_index":795,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":789,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":728,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":447,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":881,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{}}}],["one",{"_index":796,"title":{},"body":{"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["oninit",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["online",{"_index":1791,"title":{},"body":{"interfaces/LogSourceDto.html":{}}}],["onmemberspicked",{"_index":1868,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["onmembersremoved",{"_index":1869,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["onmenustatechange",{"_index":2158,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":2159,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":349,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["onmovealltosource",{"_index":1862,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovealltosource(event",{"_index":1877,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovealltotarget",{"_index":1863,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovealltotarget(event",{"_index":1880,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetosource",{"_index":1864,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetosource(event",{"_index":1883,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetotarget",{"_index":1865,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetotarget(event",{"_index":1886,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onprojectspicked",{"_index":2606,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["onprojectsremoved",{"_index":2607,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["onquerychanged",{"_index":1043,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["onquerychanged($event",{"_index":1056,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["onremovemembers",{"_index":3346,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onremoveprojects",{"_index":3347,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onteamspicked",{"_index":3636,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["onteamsremoved",{"_index":3637,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["open",{"_index":2165,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":396,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":421,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opensingleproject",{"_index":2732,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["opensingleproject(event",{"_index":2742,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["operate",{"_index":4676,"title":{},"body":{"license.html":{}}}],["operated",{"_index":4361,"title":{},"body":{"license.html":{}}}],["operating",{"_index":4196,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4281,"title":{},"body":{"license.html":{}}}],["operator",{"_index":377,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":445,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":301,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":268,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":2220,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":884,"title":{"interfaces/Organization.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["organization'},{'name",{"_index":63,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organization.actions",{"_index":2452,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["organization.archive_period",{"_index":2419,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.archive_period_description",{"_index":2420,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.avatar",{"_index":2417,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period",{"_index":2421,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period_description",{"_index":2422,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.html",{"_index":888,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":889,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.ts",{"_index":880,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:108",{"_index":918,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:140",{"_index":917,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:146",{"_index":915,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:154",{"_index":920,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:159",{"_index":910,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:165",{"_index":913,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:64",{"_index":935,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:65",{"_index":908,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:76",{"_index":923,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:81",{"_index":928,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:82",{"_index":927,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:84",{"_index":933,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:85",{"_index":932,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:86",{"_index":925,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:88",{"_index":916,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.delete",{"_index":2423,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.delete_description",{"_index":2424,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.error",{"_index":982,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.error_description",{"_index":985,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.failed_to_upload_picture",{"_index":2408,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id",{"_index":2411,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id_description",{"_index":2412,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name",{"_index":2415,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_description",{"_index":2416,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_is_required",{"_index":1003,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_label",{"_index":1002,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug",{"_index":2413,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug.split",{"_index":2398,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_description",{"_index":2414,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_is_required",{"_index":1005,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_label",{"_index":1004,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_description",{"_index":1001,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_message",{"_index":1000,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/create",{"_index":879,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/organization.effects",{"_index":480,"title":{},"body":{"interfaces/AppState.html":{}}}],["organization/organization.reducer",{"_index":482,"title":{},"body":{"interfaces/AppState.html":{}}}],["organizationcomponent",{"_index":108,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organizationdto",{"_index":2425,"title":{"interfaces/OrganizationDto.html":{}},"body":{"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{}}}],["organizationeffects",{"_index":479,"title":{"injectables/OrganizationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/OrganizationEffects.html":{}}}],["organizationerrorsubscription",{"_index":1455,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizationid",{"_index":2337,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["organizationname",{"_index":911,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationreducer",{"_index":481,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizations",{"_index":4125,"title":{},"body":{"license.html":{}}}],["organizationservice",{"_index":904,"title":{"injectables/OrganizationService.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{}}}],["organizationstate",{"_index":464,"title":{"interfaces/OrganizationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizationsubscription",{"_index":895,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationteams",{"_index":3711,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["organizationteamserror",{"_index":3712,"title":{},"body":{"interfaces/TeamState.html":{}}}],["organizationteamsstatus",{"_index":3713,"title":{},"body":{"interfaces/TeamState.html":{}}}],["origin",{"_index":4465,"title":{},"body":{"license.html":{}}}],["original",{"_index":794,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":2313,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["os",{"_index":1076,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["osversion",{"_index":1077,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["others",{"_index":4029,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":441,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":1921,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["outlined",{"_index":290,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":4228,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1494,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":363,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":740,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":295,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":334,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":1456,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":395,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":4733,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":4559,"title":{},"body":{"license.html":{}}}],["owner",{"_index":1945,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["p",{"_index":1323,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"index.html":{}}}],["package",{"_index":3791,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":4309,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":4188,"title":{},"body":{"license.html":{}}}],["page",{"_index":1130,"title":{"interfaces/Page.html":{}},"body":{"components/DevicesComponent.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{}}}],["page.content",{"_index":1163,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["pageable",{"_index":1062,"title":{"interfaces/Pageable.html":{}},"body":{"components/DevicesComponent.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"components/SessionsComponent.html":{}}}],["pageable.page",{"_index":1777,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["pageable.size",{"_index":1779,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["pageable.sort",{"_index":1781,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["pageabledefault",{"_index":1063,"title":{"classes/PageableDefault.html":{}},"body":{"components/DevicesComponent.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"components/SessionsComponent.html":{}}}],["paged",{"_index":2504,"title":{},"body":{"interfaces/Page.html":{}}}],["pagenumber",{"_index":2499,"title":{},"body":{"interfaces/Page.html":{}}}],["pagesize",{"_index":2500,"title":{},"body":{"interfaces/Page.html":{}}}],["panelmodule",{"_index":1938,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["paper",{"_index":4706,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4493,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4572,"title":{},"body":{"license.html":{}}}],["param",{"_index":841,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":393,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"injectables/TeamService.html":{}}}],["params.platforms",{"_index":2544,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["params.roles",{"_index":2953,"title":{},"body":{"interfaces/RoleState.html":{}}}],["params['environments",{"_index":1803,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["params['logsourceids",{"_index":1783,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["params['page",{"_index":1776,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["params['projectids",{"_index":1785,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["params['releaseids",{"_index":1805,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["params['search",{"_index":1787,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["params['size",{"_index":1778,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["params['sort",{"_index":1780,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["parent",{"_index":762,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":2193,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":4127,"title":{},"body":{"license.html":{}}}],["particular",{"_index":4179,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4151,"title":{},"body":{"license.html":{}}}],["parts",{"_index":387,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":4362,"title":{},"body":{"license.html":{}}}],["party's",{"_index":4536,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2216,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":761,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":542,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"license.html":{}}}],["password'},{'name",{"_index":80,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["password.back_to_login",{"_index":1437,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":1421,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":1374,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1375,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1373,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:125",{"_index":2905,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":1388,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":1386,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":1385,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":2902,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1383,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":2906,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1392,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":1394,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1395,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1390,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1399,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":1396,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1397,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":2903,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":1387,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":2904,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":1389,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":1414,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":1416,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":2916,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":2917,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":2918,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":2919,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":1420,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":2912,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":1415,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":1435,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":1436,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":1432,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":1431,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":2911,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":1372,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/reset",{"_index":2899,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordmodule",{"_index":1596,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patent",{"_index":4492,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4099,"title":{},"body":{"license.html":{}}}],["paths",{"_index":2301,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":4076,"title":{},"body":{"license.html":{}}}],["payment",{"_index":4608,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4375,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4378,"title":{},"body":{"license.html":{}}}],["pending",{"_index":3871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":799,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":4657,"title":{},"body":{"license.html":{}}}],["performing",{"_index":4207,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4501,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1295,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["permission.create",{"_index":1951,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permission.delete",{"_index":1953,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.read",{"_index":1272,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.update",{"_index":2374,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["permissions",{"_index":2927,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissiontype",{"_index":3884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissionvalue",{"_index":3885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissive",{"_index":4292,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4325,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4484,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3992,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":4426,"title":{},"body":{"license.html":{}}}],["personal",{"_index":4387,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4624,"title":{},"body":{"license.html":{}}}],["php",{"_index":3858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physical",{"_index":4335,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4352,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1320,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["picker",{"_index":1853,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker'},{'name",{"_index":95,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["picker.component",{"_index":3410,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["picker.component.html",{"_index":1856,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.scss",{"_index":1857,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts",{"_index":1852,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts:100",{"_index":1888,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:102",{"_index":2608,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:106",{"_index":1879,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:108",{"_index":2609,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:112",{"_index":1882,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":3639,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:34",{"_index":3648,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":3646,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:36",{"_index":3649,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:39",{"_index":3641,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:40",{"_index":1871,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:42",{"_index":1895,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts:43",{"_index":1893,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:44",{"_index":1896,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:45",{"_index":3640,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:47",{"_index":1874,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts:50",{"_index":1872,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:53",{"_index":1873,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:55",{"_index":1876,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:63",{"_index":1891,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:68",{"_index":2612,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:69",{"_index":3644,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:75",{"_index":3645,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:76",{"_index":1889,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:81",{"_index":3642,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:87",{"_index":3643,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:90",{"_index":2610,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:94",{"_index":1885,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:96",{"_index":2611,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker/member",{"_index":1851,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picker/project",{"_index":2604,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picker/team",{"_index":3633,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picklistmodule",{"_index":1854,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovealltosourceevent",{"_index":1878,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovealltotargetevent",{"_index":1881,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovetosourceevent",{"_index":1884,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovetotargetevent",{"_index":1887,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picture",{"_index":2462,"title":{},"body":{"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["pictureurl",{"_index":2338,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{}}}],["pieces",{"_index":4024,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":555,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["pipe(filter((event",{"_index":1546,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pipe(map((releases",{"_index":2864,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["pipe(map((tags",{"_index":3569,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["pipe(map((value",{"_index":1071,"title":{},"body":{"components/DevicesComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["pixels",{"_index":436,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":4360,"title":{},"body":{"license.html":{}}}],["platform",{"_index":2512,"title":{"interfaces/Platform.html":{}},"body":{"interfaces/Platform.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsTableComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform.actions",{"_index":2533,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["platform.dto",{"_index":2561,"title":{},"body":{"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["platform.entity",{"_index":2547,"title":{},"body":{"interfaces/Project.html":{}}}],["platform.type",{"_index":2790,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform.version",{"_index":2791,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform/platform.effects",{"_index":498,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform/platform.reducer",{"_index":496,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1738,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformdto",{"_index":2517,"title":{"interfaces/PlatformDto.html":{}},"body":{"interfaces/PlatformDto.html":{},"injectables/PlatformService.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["platformeffects",{"_index":497,"title":{"injectables/PlatformEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/PlatformEffects.html":{}}}],["platformid",{"_index":1016,"title":{},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/LocalStorage.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsTableComponent.html":{},"injectables/SessionStorage.html":{}}}],["platformreducer",{"_index":495,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platforms",{"_index":2528,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["platformservice",{"_index":2523,"title":{"injectables/PlatformService.html":{}},"body":{"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{}}}],["platformstate",{"_index":465,"title":{"interfaces/PlatformState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platformtype",{"_index":2515,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"miscellaneous/enumerations.html":{}}}],["play",{"_index":3091,"title":{},"body":{"components/SidebarComponent.html":{}}}],["please",{"_index":4729,"title":{},"body":{"license.html":{}}}],["plugins",{"_index":3166,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["plus",{"_index":4539,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":4701,"title":{},"body":{"license.html":{}}}],["portion",{"_index":4382,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":442,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":4348,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4307,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4679,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4693,"title":{},"body":{"license.html":{}}}],["power",{"_index":4274,"title":{},"body":{"license.html":{}}}],["practical",{"_index":4003,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4085,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":3999,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4108,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":4082,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":4537,"title":{},"body":{"license.html":{}}}],["preference",{"_index":3040,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":4172,"title":{},"body":{"license.html":{}}}],["present",{"_index":1922,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["presents",{"_index":4167,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4460,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":2263,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":4419,"title":{},"body":{"license.html":{}}}],["previous",{"_index":4066,"title":{},"body":{"license.html":{}}}],["price",{"_index":4021,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4610,"title":{},"body":{"license.html":{}}}],["primefileupload",{"_index":2349,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeflex",{"_index":3818,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":3820,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3822,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":938,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1897,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/badge",{"_index":2385,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/breadcrumb",{"_index":1521,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":36,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/calendar",{"_index":2753,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["primeng/card",{"_index":3169,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/chart",{"_index":3170,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/confirmdialog",{"_index":1283,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeng/dialog",{"_index":1284,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["primeng/divider",{"_index":2386,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/dropdown",{"_index":1136,"title":{},"body":{"components/DevicesComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/fileupload",{"_index":2387,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputmask",{"_index":1619,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputnumber",{"_index":2388,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputswitch",{"_index":838,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":939,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeng/multiselect",{"_index":1137,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["primeng/panel",{"_index":1962,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["primeng/password",{"_index":1620,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/picklist",{"_index":1898,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["primeng/progressspinner",{"_index":2389,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{}}}],["primeng/radiobutton",{"_index":836,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":37,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":837,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/skeleton",{"_index":3171,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/table",{"_index":1135,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeng/tabview",{"_index":3390,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["primeng/toast",{"_index":940,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeone",{"_index":875,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":4504,"title":{},"body":{"license.html":{}}}],["private",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":4063,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":4413,"title":{},"body":{"license.html":{}}}],["processing",{"_index":2309,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":4597,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4199,"title":{},"body":{"license.html":{}}}],["product",{"_index":4336,"title":{},"body":{"license.html":{}}}],["products",{"_index":4080,"title":{},"body":{"license.html":{}}}],["profile",{"_index":356,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["profileiconurl",{"_index":2932,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":1457,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":335,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["program",{"_index":4012,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4285,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4719,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4180,"title":{},"body":{"license.html":{}}}],["programs",{"_index":4018,"title":{},"body":{"license.html":{}}}],["progressspinnermodule",{"_index":2344,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{}}}],["prohibit",{"_index":4084,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":4270,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4604,"title":{},"body":{"license.html":{}}}],["project",{"_index":110,"title":{"interfaces/Project.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"interfaces/LogSourceDto.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["project'},{'name",{"_index":150,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["project.actions",{"_index":1304,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["project.effects",{"_index":508,"title":{},"body":{"interfaces/AppState.html":{}}}],["project.effects.ts",{"_index":3211,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:110",{"_index":3314,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:122",{"_index":3309,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:134",{"_index":3252,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:14",{"_index":3264,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:146",{"_index":3299,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:158",{"_index":3239,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:170",{"_index":3304,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:182",{"_index":3245,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:194",{"_index":3294,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:206",{"_index":3232,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:26",{"_index":3319,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:38",{"_index":3289,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:50",{"_index":3284,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:62",{"_index":3274,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:74",{"_index":3269,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:8",{"_index":3223,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:86",{"_index":3279,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:98",{"_index":3259,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.environments.foreach((environment",{"_index":1144,"title":{},"body":{"components/DevicesComponent.html":{}}}],["project.name",{"_index":2628,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.name.includes(this.filtervalue",{"_index":2689,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.platform.type",{"_index":2629,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.platform.version",{"_index":2631,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.projectid",{"_index":1158,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectPickerComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{}}}],["project.reducer",{"_index":506,"title":{},"body":{"interfaces/AppState.html":{}}}],["project.releases.foreach((release",{"_index":1146,"title":{},"body":{"components/DevicesComponent.html":{}}}],["project.selectors",{"_index":1292,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["project/project.effects",{"_index":484,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/project.reducer",{"_index":486,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/single",{"_index":505,"title":{},"body":{"interfaces/AppState.html":{},"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["project?.name",{"_index":2783,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["project?.platform?.type",{"_index":2784,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.version",{"_index":2785,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project_release",{"_index":3869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projectdebugfile",{"_index":2548,"title":{"interfaces/ProjectDebugFile.html":{}},"body":{"interfaces/ProjectDebugFile.html":{}}}],["projectdebugfiledto",{"_index":2554,"title":{"interfaces/ProjectDebugFileDto.html":{}},"body":{"interfaces/ProjectDebugFileDto.html":{}}}],["projectdetailscomponent",{"_index":109,"title":{"components/ProjectDetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectdto",{"_index":2559,"title":{"interfaces/ProjectDto.html":{}},"body":{"interfaces/ProjectDto.html":{},"injectables/TeamService.html":{}}}],["projecteffects",{"_index":483,"title":{"injectables/ProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ProjectEffects.html":{}}}],["projecthourbyhourstatdto",{"_index":2592,"title":{"interfaces/ProjectHourByHourStatDto.html":{}},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["projectid",{"_index":1307,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"interfaces/LogSessionDto.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["projectids",{"_index":1156,"title":{},"body":{"components/DevicesComponent.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/SessionsComponent.html":{}}}],["projectpickercomponent",{"_index":111,"title":{"components/ProjectPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectreducer",{"_index":485,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["projectrelease",{"_index":1113,"title":{"interfaces/ProjectRelease.html":{}},"body":{"components/DevicesComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectRelease.html":{},"components/ReleasesTableComponent.html":{}}}],["projectreleasedto",{"_index":1793,"title":{"interfaces/ProjectReleaseDto.html":{}},"body":{"interfaces/LogSourceDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["projects",{"_index":114,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects'},{'name",{"_index":113,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects.component.html",{"_index":2671,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.component.scss",{"_index":2672,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.crash_free_sessions",{"_index":3202,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.errors",{"_index":3198,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.latest_deploys",{"_index":3206,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.map((project",{"_index":1157,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{}}}],["projects.projects",{"_index":2713,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.sessions",{"_index":3200,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.transactions",{"_index":3196,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects?.filter",{"_index":2621,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["projectscomponent",{"_index":112,"title":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectsecurityclientdto",{"_index":2635,"title":{"interfaces/ProjectSecurityClientDto.html":{}},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["projectserror",{"_index":3501,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["projectservice",{"_index":2566,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["projectsstatus",{"_index":3502,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["projectstablecomponent",{"_index":116,"title":{"components/ProjectsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectstat",{"_index":3150,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.crashfreepercentage",{"_index":3203,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.crashfreepercentagegain",{"_index":3205,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases",{"_index":3207,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases?.length",{"_index":3208,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases?.slice(0",{"_index":3209,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totalerrors",{"_index":3199,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totalsessions",{"_index":3201,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totaltransactions",{"_index":3197,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstatdto",{"_index":2641,"title":{"interfaces/ProjectStatDto.html":{}},"body":{"interfaces/ProjectStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["projectstate",{"_index":466,"title":{"interfaces/ProjectState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["projectsubscription",{"_index":1034,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["prominent",{"_index":4169,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4162,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":2286,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":4134,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4523,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4145,"title":{},"body":{"license.html":{}}}],["properties",{"_index":258,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":4106,"title":{},"body":{"license.html":{}}}],["protect",{"_index":4027,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":4074,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4054,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":4440,"title":{},"body":{"license.html":{}}}],["prove",{"_index":4658,"title":{},"body":{"license.html":{}}}],["provide",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["provided",{"_index":2212,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":370,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["providers",{"_index":882,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["provides",{"_index":365,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provision",{"_index":4093,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4498,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4645,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4647,"title":{},"body":{"license.html":{}}}],["public",{"_index":721,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":4466,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4442,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4289,"title":{},"body":{"license.html":{}}}],["published",{"_index":4642,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3957,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":4102,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4391,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":4594,"title":{},"body":{"license.html":{}}}],["px",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["python",{"_index":3854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qualify",{"_index":4514,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4656,"title":{},"body":{"license.html":{}}}],["queries",{"_index":2794,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries'},{'name",{"_index":118,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queries.component.html",{"_index":2795,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries.component.scss",{"_index":2796,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queriescomponent",{"_index":117,"title":{"components/QueriesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["query",{"_index":120,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queryinputcomponent",{"_index":119,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["querykeys",{"_index":1035,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["querykeysdescription",{"_index":1036,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["queryparams",{"_index":2303,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["question",{"_index":3134,"title":{},"body":{"components/SidebarComponent.html":{}}}],["radiobuttonmodule",{"_index":716,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":406,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/enumerations.html":{}}}],["reactiveformsmodule",{"_index":887,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/TagsTableComponent.html":{}}}],["read",{"_index":3840,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":4332,"title":{},"body":{"license.html":{}}}],["readily",{"_index":4581,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4445,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1722,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":4091,"title":{},"body":{"license.html":{}}}],["reason",{"_index":4592,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4350,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":4512,"title":{},"body":{"license.html":{}}}],["receive",{"_index":2172,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":4042,"title":{},"body":{"license.html":{}}}],["receives",{"_index":4527,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4599,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4425,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4590,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4039,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":4176,"title":{},"body":{"license.html":{}}}],["record",{"_index":1074,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["redistribute",{"_index":4696,"title":{},"body":{"license.html":{}}}],["referring",{"_index":4020,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4115,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":4627,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":1697,"title":{},"body":{"injectables/JwtService.html":{}}}],["refreshexpiresin",{"_index":3744,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken(refreshtoken",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":4451,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4308,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":4219,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":1584,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":123,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["register(dto",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":2798,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2799,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":122,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["registerform",{"_index":1599,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":523,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["registernewuserfailure",{"_index":602,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registernewusersuccess",{"_index":524,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registeronce",{"_index":3348,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["registerrequestdto",{"_index":626,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{}}}],["registrationerror",{"_index":656,"title":{},"body":{"interfaces/AuthState.html":{}}}],["registry",{"_index":3961,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":4497,"title":{},"body":{"license.html":{}}}],["reject",{"_index":1331,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["rejectbuttonstyleclass",{"_index":1326,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["rejecticon",{"_index":1329,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["related",{"_index":712,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":4244,"title":{},"body":{"license.html":{}}}],["release",{"_index":1792,"title":{},"body":{"interfaces/LogSourceDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["release.dto",{"_index":1794,"title":{},"body":{"interfaces/LogSourceDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ReleasesTableComponent.html":{}}}],["release.dto.ts",{"_index":1013,"title":{},"body":{"interfaces/CreateProjectReleaseDto.html":{},"interfaces/ProjectReleaseDto.html":{}}}],["release.entity",{"_index":1120,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/Project.html":{},"components/ReleasesTableComponent.html":{}}}],["release.entity.ts",{"_index":2632,"title":{},"body":{"interfaces/ProjectRelease.html":{}}}],["release.releaseid",{"_index":1085,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["release.releasetimestamp",{"_index":1087,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["release.version",{"_index":1086,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["released",{"_index":4015,"title":{},"body":{"license.html":{}}}],["releaseid",{"_index":2633,"title":{},"body":{"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{}}}],["releaseids",{"_index":1167,"title":{},"body":{"components/DevicesComponent.html":{},"injectables/LogSourceService.html":{}}}],["releases",{"_index":127,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases'},{'name",{"_index":125,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases.add(release",{"_index":1147,"title":{},"body":{"components/DevicesComponent.html":{}}}],["releases.component.html",{"_index":2835,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases.component.scss",{"_index":2836,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releasescomponent",{"_index":124,"title":{"components/ReleasesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releasestablecomponent",{"_index":126,"title":{"components/ReleasesTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releasetimestamp",{"_index":2634,"title":{},"body":{"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{}}}],["relevant",{"_index":2166,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":4485,"title":{},"body":{"license.html":{}}}],["reload",{"_index":3925,"title":{},"body":{"index.html":{}}}],["relying",{"_index":4580,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4369,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4013,"title":{},"body":{"license.html":{}}}],["remote",{"_index":3891,"title":{},"body":{"index.html":{}}}],["removal",{"_index":2008,"title":{},"body":{"injectables/MembersEffects.html":{},"license.html":{}}}],["remove",{"_index":4452,"title":{},"body":{"license.html":{}}}],["removeenvironments",{"_index":1230,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["removeenvironments(environments",{"_index":1256,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["removeitem",{"_index":1725,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1732,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removemember",{"_index":1979,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["removemember(member",{"_index":2077,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["removemember(memberid",{"_index":2025,"title":{},"body":{"injectables/MembersService.html":{}}}],["removemembererror",{"_index":2037,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removememberfailure",{"_index":2016,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removememberserror",{"_index":3503,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removemembersstatus",{"_index":3504,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removememberstatus",{"_index":2038,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removemembersuccess",{"_index":1980,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removeprojectdebugfiles",{"_index":3219,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectdebugfilesfailure",{"_index":3331,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectdebugfilessuccess",{"_index":3292,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectenvironments",{"_index":1303,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["removeprojectenvironmentsfailure",{"_index":3332,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectenvironmentssuccess",{"_index":3297,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectreleases",{"_index":2874,"title":{},"body":{"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["removeprojectreleasesfailure",{"_index":3333,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectreleasessuccess",{"_index":3302,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectserror",{"_index":3505,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removeprojectsstatus",{"_index":3506,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removeprojecttags",{"_index":3220,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["removeprojecttagsfailure",{"_index":3334,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojecttagssuccess",{"_index":3307,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectteams",{"_index":3221,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectteamsfailure",{"_index":3335,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectteamssuccess",{"_index":3312,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removereleases",{"_index":2843,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["removereleases(ids",{"_index":2852,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["removes",{"_index":793,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removetags",{"_index":3553,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["removetags(tags",{"_index":3557,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["removeteammembers",{"_index":3397,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["removeteammembers(teamid",{"_index":3689,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeteammembersfailure",{"_index":3491,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteammemberssuccess",{"_index":3472,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteamprojects",{"_index":3398,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["removeteamprojects(teamid",{"_index":3691,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeteamprojectsfailure",{"_index":3492,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteamprojectss",{"_index":3441,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["removeteamprojectssuccess",{"_index":3477,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removing",{"_index":749,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":766,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":4672,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":1458,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":1465,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":3911,"title":{},"body":{"index.html":{}}}],["repair",{"_index":4663,"title":{},"body":{"license.html":{}}}],["replace('lara",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":853,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":791,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacing",{"_index":775,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replays",{"_index":2895,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays'},{'name",{"_index":129,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["replays.component.html",{"_index":2896,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays.component.scss",{"_index":2897,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replayscomponent",{"_index":128,"title":{"components/ReplaysComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["represent",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":779,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["request",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.dto",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{}}}],["request.dto).pipe",{"_index":538,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.password",{"_index":543,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.ts",{"_index":706,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["request.dto.username",{"_index":541,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.password",{"_index":554,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.teamid",{"_index":3611,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["request.username",{"_index":553,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":4214,"title":{},"body":{"license.html":{}}}],["required",{"_index":4415,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":4302,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4373,"title":{},"body":{"license.html":{}}}],["requires",{"_index":4060,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":4129,"title":{},"body":{"license.html":{}}}],["reset",{"_index":131,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetenvironmentsform",{"_index":1231,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["resetinviteform",{"_index":2061,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["resetpassword",{"_index":525,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(dto",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":130,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetpassworderror",{"_index":657,"title":{},"body":{"interfaces/AuthState.html":{}}}],["resetpasswordfailure",{"_index":603,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetpasswordform",{"_index":2900,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":630,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["resetpasswordsuccess",{"_index":584,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetprojectsform",{"_index":2733,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["resetreleasesform",{"_index":2844,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["resets",{"_index":1491,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsingleteamstate",{"_index":3399,"title":{},"body":{"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{}}}],["resetsource",{"_index":2157,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resettagsform",{"_index":3554,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["resolved",{"_index":4398,"title":{},"body":{"license.html":{}}}],["resources",{"_index":2922,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":133,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resources.component.html",{"_index":2923,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":2924,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resourcescomponent",{"_index":132,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resourcetype",{"_index":1299,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["respect",{"_index":4036,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":4034,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4528,"title":{},"body":{"license.html":{}}}],["restoreconfig",{"_index":450,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["restorescale",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["restoretheme",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["restrict",{"_index":4101,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":4271,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4483,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4481,"title":{},"body":{"license.html":{}}}],["result",{"_index":991,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/PlatformEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["result.hourbyhour.map",{"_index":3188,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["result.hourbyhour.map((hourlystat",{"_index":3180,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["resulting",{"_index":4130,"title":{},"body":{"license.html":{}}}],["results",{"_index":171,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retains",{"_index":4429,"title":{},"body":{"license.html":{}}}],["return",{"_index":430,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/HomeComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["returning",{"_index":427,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":4682,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4633,"title":{},"body":{"license.html":{}}}],["right",{"_index":4423,"title":{},"body":{"license.html":{}}}],["rights",{"_index":4028,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":851,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":23,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":4655,"title":{},"body":{"license.html":{}}}],["role",{"_index":1592,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["role.actions",{"_index":2944,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["role/role.effects",{"_index":488,"title":{},"body":{"interfaces/AppState.html":{}}}],["role/role.reducer",{"_index":490,"title":{},"body":{"interfaces/AppState.html":{}}}],["roleeffects",{"_index":487,"title":{"injectables/RoleEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/RoleEffects.html":{}}}],["roleid",{"_index":1660,"title":{},"body":{"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rolereducer",{"_index":489,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["roles",{"_index":2060,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["roleservice",{"_index":2935,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleEffects.html":{},"injectables/RoleService.html":{}}}],["rolestate",{"_index":467,"title":{"interfaces/RoleState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["rom",{"_index":4432,"title":{},"body":{"license.html":{}}}],["root",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["route",{"_index":1466,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":1559,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":2151,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":907,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["routerlink",{"_index":1552,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["routeroutlet",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routeurl",{"_index":1562,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":2209,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":4543,"title":{},"body":{"license.html":{}}}],["ruby",{"_index":3856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rules",{"_index":4439,"title":{},"body":{"license.html":{}}}],["run",{"_index":3918,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3945,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":4197,"title":{},"body":{"license.html":{}}}],["rust",{"_index":3855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":325,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/SessionsComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2274,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":4698,"title":{},"body":{"license.html":{}}}],["sake",{"_index":4059,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4553,"title":{},"body":{"license.html":{}}}],["same",{"_index":4040,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":4372,"title":{},"body":{"license.html":{}}}],["saveconfig",{"_index":457,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["saver",{"_index":3816,"title":{},"body":{"dependencies.html":{}}}],["saverefreshtoken",{"_index":1685,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":1692,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":1686,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1694,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":4366,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":3926,"title":{},"body":{"index.html":{}}}],["scale",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":844,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":723,"title":{},"body":{"components/ConfigComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["scheme",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":4720,"title":{},"body":{"license.html":{}}}],["scope",{"_index":4603,"title":{},"body":{"license.html":{}}}],["screen",{"_index":135,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["screenloadscomponent",{"_index":134,"title":{"components/ScreenLoadsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["scripts",{"_index":4203,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":1502,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":1586,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":1473,"title":{},"body":{"components/HomeComponent.html":{}}}],["sdks",{"_index":2962,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks'},{'name",{"_index":138,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sdks.component.html",{"_index":2963,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks.component.scss",{"_index":2964,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdkscomponent",{"_index":137,"title":{"components/SdksComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["search",{"_index":1037,"title":{},"body":{"components/DevicesComponent.html":{},"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{},"components/SessionsComponent.html":{}}}],["secondarily",{"_index":4137,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2901,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":4249,"title":{},"body":{"license.html":{}}}],["sections",{"_index":4329,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1623,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":2636,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{},"components/SecurityComponent.html":{}}}],["security'},{'name",{"_index":140,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["security.component.html",{"_index":2966,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security.component.scss",{"_index":2967,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securitycomponent",{"_index":139,"title":{"components/SecurityComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["securityheader",{"_index":2639,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["securitytoken",{"_index":2640,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["see",{"_index":3970,"title":{},"body":{"index.html":{},"license.html":{}}}],["seed",{"_index":1796,"title":{},"body":{"interfaces/LogSourceDto.html":{}}}],["segment.path",{"_index":1565,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":1418,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectacceptinvitationerror",{"_index":1629,"title":{},"body":{"components/InvitationComponent.html":{}}}],["select(selectactivemembers",{"_index":1918,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["select(selectaddprojectenvironmentsstatus",{"_index":1338,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["select(selectaddprojectreleasestatus",{"_index":2881,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["select(selectaddprojecttagsstatus",{"_index":3583,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["select(selectallprojects",{"_index":2617,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["select(selectauthorizationerror",{"_index":1830,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcreateprojectstatus",{"_index":2766,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["select(selectcurrentorganization",{"_index":967,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectcurrentuser",{"_index":1410,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":1412,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectinvitationsendstatus",{"_index":2100,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectinvitedmembers",{"_index":1956,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectmyprojects",{"_index":1070,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["select(selectmyteams",{"_index":2696,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["select(selectorganizationerror",{"_index":972,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["select(selectorganizationmembers",{"_index":1948,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectorganizationteams",{"_index":3653,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["select(selectownerasarray",{"_index":1960,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectregistrationerror",{"_index":2814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectremovememberstatus",{"_index":2109,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectremoveprojectenvironmentsstatus",{"_index":1348,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["select(selectremoveprojectreleasesstatus",{"_index":2884,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["select(selectremoveprojecttagsstatus",{"_index":3586,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["select(selectresetpassworderror",{"_index":2908,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["select(selectsingleprojectenvironments",{"_index":1266,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["select(selectsingleprojectreleases",{"_index":2863,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["select(selectsingleprojecttags",{"_index":3568,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["select(selectsingleteammembers",{"_index":3378,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["select(selectsingleteamprojects",{"_index":3384,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["select(selectupdateorganizationpicturestatus",{"_index":2406,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["select(selectupdateteamstatus",{"_index":3430,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectacceptinvitationerror",{"_index":1622,"title":{},"body":{"components/InvitationComponent.html":{}}}],["selectactivemembers",{"_index":1903,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectaddprojectenvironmentsstatus",{"_index":1288,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectaddprojectreleasestatus",{"_index":2869,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectaddprojecttagsstatus",{"_index":3574,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectallprojects",{"_index":2615,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["selectauthorizationerror",{"_index":1829,"title":{},"body":{"components/LoginComponent.html":{}}}],["selectcreateprojectstatus",{"_index":2760,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectcurrentorganization",{"_index":951,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["selectcurrentuser",{"_index":1402,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["selected",{"_index":299,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["selected.projectid",{"_index":2623,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["selected.teamid",{"_index":3659,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["selected.userid",{"_index":1926,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectedenvironments",{"_index":1038,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{}}}],["selectedlanguage",{"_index":3751,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":3783,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedmembers",{"_index":1870,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectedprojects",{"_index":1039,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectPickerComponent.html":{},"components/SessionsComponent.html":{},"components/TeamPickerComponent.html":{}}}],["selectedreleases",{"_index":1040,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["selectedtags",{"_index":3550,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectedteams",{"_index":3638,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["selectenvironment",{"_index":1044,"title":{},"body":{"components/DevicesComponent.html":{}}}],["selectforgotpassworderror",{"_index":1403,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["selecthaspermission",{"_index":1297,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.organization",{"_index":2372,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selecthaspermission(resourcetype.project",{"_index":1271,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["selecthaspermission(resourcetype.team",{"_index":3367,"title":{},"body":{"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.user",{"_index":1950,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectinvitationsendstatus",{"_index":2091,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectinvitedmembers",{"_index":1965,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectmyprojects",{"_index":1125,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["selectmyteams",{"_index":2701,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["selectorganizationerror",{"_index":952,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["selectorganizationmembers",{"_index":1964,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectorganizationteams",{"_index":3651,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["selectownerasarray",{"_index":1966,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectplatforms",{"_index":2757,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectprojects",{"_index":1045,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["selectregistrationerror",{"_index":2812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selectrelease",{"_index":1046,"title":{},"body":{"components/DevicesComponent.html":{}}}],["selectremovememberstatus",{"_index":2092,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectremoveprojectenvironmentsstatus",{"_index":1289,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectremoveprojectreleasesstatus",{"_index":2870,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectremoveprojecttagsstatus",{"_index":3575,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectresetpassworderror",{"_index":2907,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectroles",{"_index":2095,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectsingleprojectenvironments",{"_index":1290,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectsingleprojectreleases",{"_index":2871,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectsingleprojecttags",{"_index":3576,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectsingleteam",{"_index":3404,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectsingleteammembers",{"_index":3405,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectsingleteamprojects",{"_index":3406,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectupdateorganizationpicturestatus",{"_index":2393,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selectupdateteamstatus",{"_index":3407,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["sell",{"_index":4569,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4552,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4117,"title":{},"body":{"license.html":{}}}],["send",{"_index":1674,"title":{},"body":{"injectables/InvitationService.html":{}}}],["sendinvite",{"_index":2062,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["sends",{"_index":2161,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":4381,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4314,"title":{},"body":{"license.html":{}}}],["separated",{"_index":2227,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":4312,"title":{},"body":{"license.html":{}}}],["serve",{"_index":3920,"title":{},"body":{"index.html":{}}}],["served",{"_index":3975,"title":{},"body":{"index.html":{}}}],["server",{"_index":2139,"title":{},"body":{"injectables/MemoryStorage.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["serves",{"_index":4190,"title":{},"body":{"license.html":{}}}],["service",{"_index":736,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":2171,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":595,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/api/invitation.api.service",{"_index":605,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["services/api/members.api.service",{"_index":2018,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["services/api/organization.api.service",{"_index":2446,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["services/api/platform.api.service",{"_index":2531,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["services/api/project.api.service",{"_index":2585,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleProjectEffects.html":{}}}],["services/api/role.api.service",{"_index":2942,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["services/api/team.api.service",{"_index":3485,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["services/token",{"_index":596,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":4662,"title":{},"body":{"license.html":{}}}],["session.api.service",{"_index":2999,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session.api.service.ts",{"_index":1765,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["session.api.service.ts:12",{"_index":1767,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["session.api.service.ts:15",{"_index":1770,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["session.crashfree",{"_index":3017,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session.dto",{"_index":1773,"title":{},"body":{"injectables/LogSessionService.html":{},"components/SessionsComponent.html":{}}}],["session.dto.ts",{"_index":1755,"title":{},"body":{"interfaces/LogSessionDto.html":{}}}],["session?.endtime",{"_index":3019,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session?.logsourceid",{"_index":3013,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session?.networkspeed",{"_index":3016,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session?.networktype",{"_index":3015,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session?.projectid",{"_index":3014,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session?.sessionid",{"_index":3012,"title":{},"body":{"components/SessionsComponent.html":{}}}],["session?.starttime",{"_index":3018,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessionid",{"_index":1761,"title":{},"body":{"interfaces/LogSessionDto.html":{},"components/SessionsComponent.html":{}}}],["sessions",{"_index":2972,"title":{},"body":{"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["sessions'},{'name",{"_index":142,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessions.component.html",{"_index":2973,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.component.scss",{"_index":2974,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.crash_free",{"_index":3009,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.crash_free_description",{"_index":2993,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.device_id",{"_index":3005,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.end_time",{"_index":3011,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.end_time_description",{"_index":2992,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.id",{"_index":3004,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.network_speed",{"_index":3008,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.network_speed_description",{"_index":2995,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.network_type",{"_index":3007,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.network_type_description",{"_index":2994,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.no_sessions_found",{"_index":3020,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.project_id",{"_index":3006,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.session_id_description",{"_index":2990,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.start_time",{"_index":3010,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.start_time_description",{"_index":2991,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessionscomponent",{"_index":141,"title":{"components/SessionsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessionstorage",{"_index":2968,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{}}}],["set",{"_index":306,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/DevicesComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["setcurrentuser",{"_index":668,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setinputstyle(_val",{"_index":830,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1726,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1734,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":826,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":834,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":423,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":822,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":714,"title":{},"body":{"components/ConfigComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":115,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settings.component.html",{"_index":3022,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":3023,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":143,"title":{"components/SettingsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settoken",{"_index":669,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setupchartdata",{"_index":3153,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["setupchartdata(result",{"_index":3162,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["setupsidenavitems",{"_index":3028,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":3047,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":817,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":979,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["shall",{"_index":4254,"title":{},"body":{"license.html":{}}}],["shape",{"_index":330,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":4007,"title":{},"body":{"license.html":{}}}],["shared",{"_index":4209,"title":{},"body":{"license.html":{}}}],["shared/components/access",{"_index":1967,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["shared/components/member",{"_index":3409,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/members",{"_index":1968,"title":{},"body":{"components/MembersComponent.html":{},"components/SingleTeamComponent.html":{}}}],["shared/components/not",{"_index":3411,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/project",{"_index":3413,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/projects",{"_index":2721,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{}}}],["shared/components/query",{"_index":1138,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["shared/components/teams",{"_index":3739,"title":{},"body":{"components/TeamsComponent.html":{}}}],["shield",{"_index":3107,"title":{},"body":{"components/SidebarComponent.html":{}}}],["short",{"_index":4709,"title":{},"body":{"license.html":{}}}],["show",{"_index":4043,"title":{},"body":{"license.html":{}}}],["showadddialog",{"_index":1232,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showconfigsidebar",{"_index":359,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showdeleteconfirmation",{"_index":1233,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showdeleteconfirmation(environment",{"_index":1260,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["showdeleteconfirmation(releaseid",{"_index":2856,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["showdeleteconfirmation(tag",{"_index":3560,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["showdeleteselectionconfirmation",{"_index":1234,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showdeleteselectionconfirmation(event",{"_index":1262,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showdeleteteamconfirmation",{"_index":3351,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["showdeleteteamconfirmation(event",{"_index":3362,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["showinvitedialog",{"_index":2063,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shown",{"_index":353,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showpickerdialog",{"_index":1866,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["showprofilesidebar",{"_index":354,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showremovememberconfirmation",{"_index":2064,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["showremovememberconfirmation(member",{"_index":2082,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shows",{"_index":787,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":3046,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":357,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":145,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebar.component.html",{"_index":3026,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":3025,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":144,"title":{"components/SidebarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebarmodule",{"_index":715,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":342,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":1569,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.devices",{"_index":3071,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":3057,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help",{"_index":3126,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_documentation",{"_index":3127,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_guides",{"_index":3133,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_sdks",{"_index":3130,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_support",{"_index":3136,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":3058,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.issues",{"_index":3065,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.logs",{"_index":3062,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.messages",{"_index":3068,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.performance",{"_index":3076,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.projects",{"_index":3060,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.queries",{"_index":3079,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.releases",{"_index":3093,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.replays",{"_index":3090,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.resources",{"_index":3088,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.screen_loads",{"_index":3085,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sessions",{"_index":3073,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings",{"_index":3099,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account",{"_index":3101,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_close",{"_index":3110,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_details",{"_index":3103,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_notifications",{"_index":3108,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_security",{"_index":3105,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_alerts",{"_index":3123,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_members",{"_index":3121,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_organization",{"_index":3113,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_projects",{"_index":3116,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_teams",{"_index":3118,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.stats",{"_index":3096,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.vitals",{"_index":3082,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":4721,"title":{},"body":{"license.html":{}}}],["significant",{"_index":4411,"title":{},"body":{"license.html":{}}}],["signout",{"_index":526,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{}}}],["similar",{"_index":4269,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":4623,"title":{},"body":{"license.html":{}}}],["single",{"_index":147,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["singleprojectcardcomponent",{"_index":146,"title":{"components/SingleProjectCardComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleprojectcomponent",{"_index":149,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleprojecteffects",{"_index":507,"title":{"injectables/SingleProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SingleProjectEffects.html":{}}}],["singleprojectreducer",{"_index":504,"title":{},"body":{"interfaces/AppState.html":{}}}],["singleprojectstate",{"_index":468,"title":{},"body":{"interfaces/AppState.html":{}}}],["singleteam",{"_index":3507,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["singleteamcomponent",{"_index":151,"title":{"components/SingleTeamComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleteameffects",{"_index":499,"title":{"injectables/SingleTeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SingleTeamEffects.html":{}}}],["singleteamerror",{"_index":3508,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["singleteamreducer",{"_index":502,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SingleTeamState.html":{}}}],["singleteamstate",{"_index":469,"title":{"interfaces/SingleTeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SingleTeamState.html":{}}}],["singleteamstatus",{"_index":3509,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["sitemap",{"_index":3119,"title":{},"body":{"components/SidebarComponent.html":{}}}],["size",{"_index":315,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{}}}],["sizes",{"_index":814,"title":{},"body":{"components/ConfigComponent.html":{}}}],["skeletonmodule",{"_index":3145,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["slug",{"_index":914,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["slug.tolowercase().replaceall",{"_index":992,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["slug/taken?slug",{"_index":2468,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["slugchecksubscription",{"_index":896,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["sluginput",{"_index":897,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["snippet",{"_index":2167,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":3987,"title":{},"body":{"license.html":{}}}],["sold",{"_index":4392,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4235,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4246,"title":{},"body":{"license.html":{}}}],["solution",{"_index":3894,"title":{},"body":{"index.html":{}}}],["sort",{"_index":2495,"title":{},"body":{"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{}}}],["sorted",{"_index":2501,"title":{},"body":{"interfaces/Page.html":{}}}],["sortfield",{"_index":1174,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["sortorder",{"_index":1177,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["source.api.service",{"_index":1133,"title":{},"body":{"components/DevicesComponent.html":{}}}],["source.api.service.ts",{"_index":1799,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["source.api.service.ts:12",{"_index":1800,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["source.api.service.ts:15",{"_index":1801,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["source.dto",{"_index":1129,"title":{},"body":{"components/DevicesComponent.html":{},"injectables/LogSourceService.html":{}}}],["source.dto.ts",{"_index":1789,"title":{},"body":{"interfaces/LogSourceDto.html":{}}}],["spare",{"_index":4346,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4019,"title":{},"body":{"license.html":{}}}],["special",{"_index":4104,"title":{},"body":{"license.html":{}}}],["specific",{"_index":4195,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":4213,"title":{},"body":{"license.html":{}}}],["specified",{"_index":771,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":4639,"title":{},"body":{"license.html":{}}}],["specify",{"_index":4643,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":4634,"title":{},"body":{"license.html":{}}}],["spring",{"_index":3848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":3877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.selectors.ts",{"_index":3875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date.interceptor.ts",{"_index":3873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug",{"_index":3831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../permission.enum.ts",{"_index":3833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../platform",{"_index":3834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resource",{"_index":3835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":3836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":3886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/domain/dto/file.dto.ts",{"_index":1360,"title":{},"body":{"interfaces/FileDto.html":{}}}],["src/app/core/domain/dto/invitation.dto.ts",{"_index":1656,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["src/app/core/domain/dto/log",{"_index":1754,"title":{},"body":{"interfaces/LogSessionDto.html":{},"interfaces/LogSourceDto.html":{}}}],["src/app/core/domain/dto/members.dto.ts",{"_index":1973,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["src/app/core/domain/dto/organization.dto.ts",{"_index":2426,"title":{},"body":{"interfaces/OrganizationDto.html":{}}}],["src/app/core/domain/dto/platform.dto.ts",{"_index":2518,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["src/app/core/domain/dto/project",{"_index":2555,"title":{},"body":{"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["src/app/core/domain/dto/project.dto.ts",{"_index":2560,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":705,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{}}}],["src/app/core/domain/dto/requests/create",{"_index":1006,"title":{},"body":{"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":1439,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/requests/invitation",{"_index":1659,"title":{},"body":{"interfaces/InvitationRequestDto.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":2833,"title":{},"body":{"interfaces/RegisterRequestDto.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":2920,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/team.dto.ts",{"_index":3598,"title":{},"body":{"interfaces/TeamDto.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":3745,"title":{},"body":{"interfaces/TokenDto.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":3785,"title":{},"body":{"interfaces/UserDto.html":{}}}],["src/app/core/domain/models/enums/debug",{"_index":3838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":3839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/platform",{"_index":3842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":3861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":3870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/invitation.entity.ts",{"_index":1590,"title":{},"body":{"interfaces/Invitation.html":{}}}],["src/app/core/domain/models/menu",{"_index":2148,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["src/app/core/domain/models/organization.entity.ts",{"_index":2336,"title":{},"body":{"interfaces/Organization.html":{}}}],["src/app/core/domain/models/platform.entity.ts",{"_index":2513,"title":{},"body":{"interfaces/Platform.html":{}}}],["src/app/core/domain/models/project",{"_index":2549,"title":{},"body":{"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectRelease.html":{}}}],["src/app/core/domain/models/project.entity.ts",{"_index":2546,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/core/domain/models/team.entity.ts",{"_index":3596,"title":{},"body":{"interfaces/Team.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":3741,"title":{},"body":{"interfaces/Token.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":2925,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["src/app/core/domain/pageable/page.dto.ts",{"_index":2490,"title":{},"body":{"interfaces/Page.html":{}}}],["src/app/core/domain/pageable/pageable.dto.ts",{"_index":2506,"title":{},"body":{"interfaces/Pageable.html":{},"classes/PageableDefault.html":{}}}],["src/app/core/domain/pageable/pageable.dto.ts:10",{"_index":2511,"title":{},"body":{"classes/PageableDefault.html":{}}}],["src/app/core/domain/pageable/pageable.dto.ts:8",{"_index":2510,"title":{},"body":{"classes/PageableDefault.html":{}}}],["src/app/core/domain/pageable/pageable.dto.ts:9",{"_index":2509,"title":{},"body":{"classes/PageableDefault.html":{}}}],["src/app/core/interceptors/date.interceptor.ts",{"_index":3879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts",{"_index":1661,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:12",{"_index":1664,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:15",{"_index":1670,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:23",{"_index":1668,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:30",{"_index":1666,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/log",{"_index":1764,"title":{},"body":{"injectables/LogSessionService.html":{},"injectables/LogSourceService.html":{}}}],["src/app/core/services/api/members.api.service.ts",{"_index":2019,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:11",{"_index":2022,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:14",{"_index":2024,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:18",{"_index":2023,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:23",{"_index":2026,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/organization.api.service.ts",{"_index":2453,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:12",{"_index":2455,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:15",{"_index":2457,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:25",{"_index":2458,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:29",{"_index":2459,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:36",{"_index":2461,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/platform.api.service.ts",{"_index":2534,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:10",{"_index":2536,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:13",{"_index":2537,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/role.api.service.ts",{"_index":2945,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:10",{"_index":2947,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:13",{"_index":2948,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/team.api.service.ts",{"_index":3664,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:15",{"_index":3671,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:18",{"_index":3681,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:22",{"_index":3680,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:26",{"_index":3683,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:30",{"_index":3685,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:37",{"_index":3687,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:44",{"_index":3688,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:51",{"_index":3677,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:55",{"_index":3679,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:59",{"_index":3694,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:67",{"_index":3673,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:78",{"_index":3690,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:85",{"_index":3675,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:96",{"_index":3692,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["src/app/core/services/layout.service.ts:100",{"_index":1715,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:115",{"_index":1720,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:130",{"_index":1716,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:139",{"_index":1718,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:145",{"_index":1717,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:151",{"_index":1719,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:156",{"_index":1710,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:180",{"_index":1714,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:190",{"_index":1713,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:199",{"_index":1708,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:211",{"_index":1706,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:220",{"_index":1707,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:227",{"_index":1709,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:232",{"_index":1711,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:240",{"_index":1712,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:92",{"_index":1705,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1721,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["src/app/core/services/memory",{"_index":2130,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":2152,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":2170,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":2176,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":2175,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":2178,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":2160,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":2168,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":2969,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["src/app/core/services/token",{"_index":1680,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/state/app.state.ts",{"_index":461,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":516,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:111",{"_index":591,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:122",{"_index":579,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:139",{"_index":581,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:146",{"_index":547,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:163",{"_index":550,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":532,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:38",{"_index":575,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:50",{"_index":561,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:71",{"_index":572,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:85",{"_index":586,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:99",{"_index":567,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":651,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":3882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/state/members/members.effects.ts",{"_index":1978,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:22",{"_index":1983,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:29",{"_index":2000,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:41",{"_index":1995,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:53",{"_index":1989,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:65",{"_index":2004,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:77",{"_index":2009,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.reducer.ts",{"_index":2031,"title":{},"body":{"interfaces/MembersState.html":{}}}],["src/app/core/state/organization/organization.effects.ts",{"_index":2427,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:14",{"_index":2439,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:26",{"_index":2435,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:38",{"_index":2445,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:8",{"_index":2429,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.reducer.ts",{"_index":2473,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["src/app/core/state/platform/platform.effects.ts",{"_index":2520,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:12",{"_index":2524,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:18",{"_index":2530,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.reducer.ts",{"_index":2540,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["src/app/core/state/project/project.effects.ts",{"_index":2562,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:14",{"_index":2579,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:26",{"_index":2584,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:39",{"_index":2573,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:8",{"_index":2567,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.reducer.ts",{"_index":2649,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["src/app/core/state/role/role.effects.ts",{"_index":2933,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:14",{"_index":2941,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:8",{"_index":2936,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.reducer.ts",{"_index":2950,"title":{},"body":{"interfaces/RoleState.html":{}}}],["src/app/core/state/single",{"_index":3210,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["src/app/core/state/team/team.effects.ts",{"_index":3599,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:14",{"_index":3623,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:26",{"_index":3618,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:38",{"_index":3607,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:50",{"_index":3613,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:8",{"_index":3602,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.reducer.ts",{"_index":3704,"title":{},"body":{"interfaces/TeamState.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":511,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1371,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":1594,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:147",{"_index":1603,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:158",{"_index":1604,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:164",{"_index":1606,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:177",{"_index":1602,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:60",{"_index":1617,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:62",{"_index":1601,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:74",{"_index":1608,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:75",{"_index":1609,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:77",{"_index":1615,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:95",{"_index":1618,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:96",{"_index":1607,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:97",{"_index":1616,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:99",{"_index":1605,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1807,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1818,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1820,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1816,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1817,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1815,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1825,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1823,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1824,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1827,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1822,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1826,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1819,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1821,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":2797,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":2804,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":2802,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":2803,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":2805,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":2801,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":2800,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":2807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":2808,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":2809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":2811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":2806,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":2810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":2898,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/features/create",{"_index":878,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["src/app/features/devices/devices.component.ts",{"_index":1022,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:102",{"_index":1069,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:103",{"_index":1067,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:104",{"_index":1114,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:105",{"_index":1066,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:106",{"_index":1064,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:107",{"_index":1061,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:108",{"_index":1065,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:110",{"_index":1117,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:111",{"_index":1118,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:112",{"_index":1116,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:114",{"_index":1115,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:116",{"_index":1055,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:149",{"_index":1057,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:154",{"_index":1050,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:176",{"_index":1053,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:197",{"_index":1054,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:201",{"_index":1059,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:220",{"_index":1058,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:225",{"_index":1060,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:49",{"_index":1049,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:55",{"_index":1093,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:76",{"_index":1112,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:97",{"_index":1073,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/devices/devices.component.ts:99",{"_index":1072,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/help/documentation/documentation.component.ts",{"_index":1208,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/features/help/guides/guides.component.ts",{"_index":1441,"title":{},"body":{"components/GuidesComponent.html":{}}}],["src/app/features/help/sdks/sdks.component.ts",{"_index":2961,"title":{},"body":{"components/SdksComponent.html":{}}}],["src/app/features/help/support/support.component.ts",{"_index":3542,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":710,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:101",{"_index":835,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:109",{"_index":786,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:121",{"_index":773,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:143",{"_index":790,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:163",{"_index":780,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:171",{"_index":783,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:179",{"_index":769,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":757,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":733,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":805,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":806,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":816,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":818,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":821,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":823,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:79",{"_index":825,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:83",{"_index":827,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:88",{"_index":829,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:92",{"_index":831,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:97",{"_index":833,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":1366,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":2183,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":2262,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":2200,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":2261,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":2266,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":2255,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":2256,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":2239,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":2268,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":2237,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":2251,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":2221,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":2213,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":2232,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":2225,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":2257,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":2265,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":3024,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":3029,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":3050,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":3049,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":3044,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":3048,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":3746,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:35",{"_index":3772,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:36",{"_index":3776,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:37",{"_index":3757,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:40",{"_index":3769,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":3763,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:50",{"_index":3768,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:52",{"_index":3774,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:54",{"_index":3773,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:55",{"_index":3777,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:57",{"_index":3762,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:62",{"_index":3761,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:67",{"_index":3759,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:71",{"_index":3760,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1445,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:120",{"_index":1508,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":1510,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:123",{"_index":1511,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":1513,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":1516,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":1509,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:130",{"_index":1515,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:131",{"_index":1514,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:133",{"_index":1499,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:140",{"_index":1497,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:155",{"_index":1498,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:177",{"_index":1477,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:218",{"_index":1489,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:232",{"_index":1493,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:243",{"_index":1469,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:254",{"_index":1500,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:268",{"_index":1519,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1505,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":1468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:49",{"_index":1512,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:50",{"_index":1517,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/issues/issues.component.ts",{"_index":1676,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/features/logs/logs.component.ts",{"_index":1846,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/features/messages/messages.component.ts",{"_index":2321,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/features/peformance/queries/queries.component.ts",{"_index":2793,"title":{},"body":{"components/QueriesComponent.html":{}}}],["src/app/features/peformance/resources/resources.component.ts",{"_index":2921,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/features/peformance/screen",{"_index":2955,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["src/app/features/peformance/vitals/vitals.component.ts",{"_index":3788,"title":{},"body":{"components/VitalsComponent.html":{}}}],["src/app/features/project",{"_index":2556,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["src/app/features/projects/components/single",{"_index":3139,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["src/app/features/projects/projects.component.ts",{"_index":2669,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:46",{"_index":2679,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:52",{"_index":2697,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:55",{"_index":2694,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:57",{"_index":2691,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:59",{"_index":2695,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:63",{"_index":2690,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:71",{"_index":2692,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:73",{"_index":2684,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:78",{"_index":2682,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:93",{"_index":2683,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/releases/releases.component.ts",{"_index":2834,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["src/app/features/replays/replays.component.ts",{"_index":2894,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts",{"_index":2971,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:102",{"_index":2978,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:106",{"_index":2980,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:111",{"_index":2981,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:116",{"_index":2976,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:137",{"_index":2977,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:40",{"_index":2975,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:46",{"_index":2987,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:49",{"_index":2986,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:50",{"_index":2985,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:52",{"_index":2983,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:53",{"_index":2982,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:54",{"_index":2984,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:56",{"_index":2998,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:58",{"_index":2988,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:59",{"_index":2997,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:61",{"_index":2989,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:70",{"_index":2996,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts:79",{"_index":2979,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/settings/account/close/close.component.ts",{"_index":707,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/features/settings/account/details/details.component.ts",{"_index":1018,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/settings/account/notifications/notifications.component.ts",{"_index":2333,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/features/settings/account/security/security.component.ts",{"_index":2965,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/features/settings/alerts/alerts.component.ts",{"_index":173,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/features/settings/members/members.component.ts",{"_index":1937,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:38",{"_index":1946,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:41",{"_index":1955,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:44",{"_index":1954,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:47",{"_index":1952,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:50",{"_index":1959,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:51",{"_index":1949,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:54",{"_index":1957,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:57",{"_index":1961,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:61",{"_index":1947,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts",{"_index":2339,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:110",{"_index":2360,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:114",{"_index":2356,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:118",{"_index":2362,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:123",{"_index":2358,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:135",{"_index":2361,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:148",{"_index":2367,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:182",{"_index":2364,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:186",{"_index":2355,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:75",{"_index":2384,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:76",{"_index":2354,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:85",{"_index":2380,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:86",{"_index":2375,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:89",{"_index":2373,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:92",{"_index":2376,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:93",{"_index":2369,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:94",{"_index":2371,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:95",{"_index":2378,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:97",{"_index":2383,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:99",{"_index":2359,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/projects/projects.component.ts",{"_index":2714,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:32",{"_index":2715,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:35",{"_index":2718,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:38",{"_index":2717,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:42",{"_index":2719,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:43",{"_index":2720,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:47",{"_index":2716,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":3021,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/teams/components/single",{"_index":3337,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts",{"_index":3727,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:37",{"_index":3730,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:40",{"_index":3734,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:43",{"_index":3733,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:46",{"_index":3732,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:50",{"_index":3736,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:51",{"_index":3735,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:52",{"_index":3738,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:55",{"_index":3737,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:59",{"_index":3731,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/stats/stats.component.ts",{"_index":3538,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/shared/components/access",{"_index":9,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["src/app/shared/components/environments",{"_index":1212,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["src/app/shared/components/member",{"_index":1850,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["src/app/shared/components/members",{"_index":2055,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["src/app/shared/components/not",{"_index":2325,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/shared/components/project",{"_index":2603,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["src/app/shared/components/projects",{"_index":2723,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["src/app/shared/components/releases",{"_index":2837,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["src/app/shared/components/tags",{"_index":3546,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["src/app/shared/components/team",{"_index":3632,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["ssr",{"_index":3910,"title":{},"body":{"index.html":{}}}],["stand",{"_index":4090,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{}}}],["standard",{"_index":3977,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":4177,"title":{},"body":{"license.html":{}}}],["start",{"_index":4699,"title":{},"body":{"license.html":{}}}],["startdate",{"_index":3159,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["started",{"_index":3889,"title":{"index.html":{},"license.html":{}},"body":{}}],["startinterval",{"_index":2601,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["starts",{"_index":4710,"title":{},"body":{"license.html":{}}}],["starttime",{"_index":1762,"title":{},"body":{"interfaces/LogSessionDto.html":{},"components/SessionsComponent.html":{}}}],["stat.dto",{"_index":2648,"title":{},"body":{"interfaces/ProjectStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["stat.dto.ts",{"_index":2594,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["state",{"_index":331,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["state.allprojects",{"_index":2667,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["state.members?.invitations",{"_index":2046,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.owner",{"_index":2045,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.users",{"_index":2047,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.organization",{"_index":2486,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["state.organizationteams",{"_index":3721,"title":{},"body":{"interfaces/TeamState.html":{}}}],["state.organizationteams?.filter((team",{"_index":3725,"title":{},"body":{"interfaces/TeamState.html":{}}}],["stated",{"_index":4224,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4487,"title":{},"body":{"license.html":{}}}],["states",{"_index":1492,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":661,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":684,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["statestatus.loading",{"_index":675,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.pending",{"_index":671,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.success",{"_index":681,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["static",{"_index":294,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":333,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":337,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":4291,"title":{},"body":{"license.html":{}}}],["stats",{"_index":3539,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":154,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["stats.component.html",{"_index":3540,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":3541,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":153,"title":{"components/StatsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["status",{"_index":658,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["status.enum",{"_index":665,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["status.enum.ts",{"_index":3837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":4047,"title":{},"body":{"license.html":{}}}],["stopwatch",{"_index":3086,"title":{},"body":{"components/SidebarComponent.html":{}}}],["storage",{"_index":374,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":328,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":1681,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:10",{"_index":1688,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":2131,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":1689,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":2132,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":1695,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1737,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":1691,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":2133,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":1693,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":2134,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1731,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":1690,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1733,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1735,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":2135,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":2136,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1728,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":905,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["stored",{"_index":3931,"title":{},"body":{"index.html":{}}}],["str",{"_index":1892,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["str.split('').foreach((char",{"_index":1911,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stream",{"_index":1365,"title":{},"body":{"interfaces/FileDto.html":{}}}],["string",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["string(this.index",{"_index":2298,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":3037,"title":{},"body":{"components/SidebarComponent.html":{}}}],["stringtocolour",{"_index":1867,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stringtocolour(str",{"_index":1890,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stringval",{"_index":1252,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["style",{"_index":287,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["styleurls",{"_index":2186,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":2223,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":4533,"title":{},"body":{"license.html":{}}}],["subject",{"_index":324,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":4565,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4248,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":2196,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":4212,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4724,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":389,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((data",{"_index":960,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((error",{"_index":973,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":1419,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((members",{"_index":1920,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["subscribe((organization",{"_index":968,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["subscribe((projects",{"_index":2619,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["subscribe((status",{"_index":1342,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["subscribe((teams",{"_index":3655,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["subscribe((user",{"_index":1411,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":2201,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":2154,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":924,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscriptions",{"_index":2253,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":4356,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":4407,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4088,"title":{},"body":{"license.html":{}}}],["success",{"_index":679,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":2007,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["successsubscription",{"_index":1377,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":4578,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4416,"title":{},"body":{"license.html":{}}}],["summary",{"_index":980,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["supplement",{"_index":4446,"title":{},"body":{"license.html":{}}}],["support",{"_index":3543,"title":{},"body":{"components/SupportComponent.html":{},"license.html":{}}}],["support'},{'name",{"_index":156,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["support.component.html",{"_index":3544,"title":{},"body":{"components/SupportComponent.html":{}}}],["support.component.scss",{"_index":3545,"title":{},"body":{"components/SupportComponent.html":{}}}],["supportcomponent",{"_index":155,"title":{"components/SupportComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["supports",{"_index":4363,"title":{},"body":{"license.html":{}}}],["sure",{"_index":3966,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":4032,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4486,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4675,"title":{},"body":{"license.html":{}}}],["svelte",{"_index":3847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":563,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["switchmap((args",{"_index":3225,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["switchmap((request",{"_index":536,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["symbol",{"_index":2214,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":746,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":4075,"title":{},"body":{"license.html":{}}}],["t",{"_index":2498,"title":{},"body":{"interfaces/Page.html":{},"index.html":{}}}],["table",{"_index":1216,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table'},{'name",{"_index":67,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["table.actions",{"_index":1354,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.avatar",{"_index":2118,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component",{"_index":1970,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["table.component.html",{"_index":1219,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.scss",{"_index":1220,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts",{"_index":1214,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:100",{"_index":1274,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:101",{"_index":2735,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:102",{"_index":1282,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:103",{"_index":1268,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:104",{"_index":2736,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:105",{"_index":2075,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:106",{"_index":3567,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:107",{"_index":2734,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:108",{"_index":3565,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:109",{"_index":2081,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:110",{"_index":2857,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:111",{"_index":1278,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:112",{"_index":1276,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:113",{"_index":1280,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:114",{"_index":2750,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:115",{"_index":2080,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:116",{"_index":1273,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:118",{"_index":2751,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:119",{"_index":3555,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:120",{"_index":1255,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:124",{"_index":3561,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:126",{"_index":1253,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:131",{"_index":1261,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:135",{"_index":2738,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:139",{"_index":2746,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:145",{"_index":2741,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:151",{"_index":2079,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:154",{"_index":1263,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:156",{"_index":2850,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:159",{"_index":2083,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:165",{"_index":3559,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:170",{"_index":3556,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:178",{"_index":1259,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:182",{"_index":2078,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:183",{"_index":1254,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:185",{"_index":2747,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:190",{"_index":2745,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:193",{"_index":2853,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:197",{"_index":2744,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:207",{"_index":2740,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:222",{"_index":2076,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:226",{"_index":1257,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:229",{"_index":2855,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:230",{"_index":2084,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:243",{"_index":3558,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:266",{"_index":1258,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:48",{"_index":2845,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:57",{"_index":2858,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:60",{"_index":2849,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:61",{"_index":2066,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:62",{"_index":1242,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:63",{"_index":2848,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:66",{"_index":2847,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:69",{"_index":2846,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:70",{"_index":2085,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:71",{"_index":1265,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:72",{"_index":2067,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:74",{"_index":1250,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:75",{"_index":2074,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:77",{"_index":1247,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:78",{"_index":2068,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:80",{"_index":1246,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:81",{"_index":2073,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:83",{"_index":1245,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:84",{"_index":2069,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:85",{"_index":2748,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:86",{"_index":1249,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:87",{"_index":2071,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:88",{"_index":2865,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:89",{"_index":1243,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:90",{"_index":2070,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:92",{"_index":1244,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:93",{"_index":2072,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:94",{"_index":2862,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:95",{"_index":1248,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:96",{"_index":2086,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:97",{"_index":1269,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:98",{"_index":2737,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:99",{"_index":2851,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.created_at",{"_index":2890,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.delete_confirmation",{"_index":1318,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.delete_confirmation_message",{"_index":1316,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.email",{"_index":2116,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_is_required",{"_index":2126,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_label",{"_index":2125,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.environment",{"_index":1353,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.environment_created",{"_index":1347,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.environment_is_required",{"_index":1358,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.environment_label",{"_index":1357,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.error",{"_index":1344,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.failed_to_create_environment",{"_index":1345,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.failed_to_create_project",{"_index":2768,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.failed_to_create_release",{"_index":2882,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.failed_to_create_tag",{"_index":3584,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.failed_to_delete_environments",{"_index":1349,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.failed_to_delete_releases",{"_index":2885,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.failed_to_delete_tags",{"_index":3587,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.failed_to_remove_member",{"_index":2110,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.failed_to_send_invite",{"_index":2102,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.first_name",{"_index":2114,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.id",{"_index":2888,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.invalid_email",{"_index":2127,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invite_sent",{"_index":2103,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.last_name",{"_index":2115,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.name",{"_index":2781,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_is_required",{"_index":2788,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_label",{"_index":2787,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_environments_found",{"_index":1356,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.no_members_found",{"_index":2124,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.no_projects_found",{"_index":2786,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_releases_found",{"_index":2891,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.no_tags_found",{"_index":3593,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.platform",{"_index":2782,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_is_required",{"_index":2792,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_label",{"_index":2789,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.project_created",{"_index":2769,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.release_created",{"_index":2883,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.removed_environments",{"_index":1350,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.removed_memeber",{"_index":2111,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.removed_releases",{"_index":2886,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.removed_tags",{"_index":3588,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.role",{"_index":2117,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_is_required",{"_index":2129,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_label",{"_index":2128,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.success",{"_index":1346,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.tag",{"_index":3591,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.tag_created",{"_index":3585,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.tag_is_required",{"_index":3595,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.tag_label",{"_index":3594,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.version",{"_index":2889,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.version_is_required",{"_index":2893,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.version_label",{"_index":2892,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table/environments",{"_index":1213,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table/members",{"_index":1969,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["table/projects",{"_index":2722,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["table/releases",{"_index":2838,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table/tags",{"_index":3547,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table/teams",{"_index":3740,"title":{},"body":{"components/TeamsComponent.html":{}}}],["tablelazyloadevent",{"_index":1052,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["tablemodule",{"_index":1024,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/TagsTableComponent.html":{}}}],["tablet",{"_index":439,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tabviewmodule",{"_index":3340,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["tag",{"_index":3562,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tag.tag",{"_index":3592,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tags",{"_index":158,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tags?.map((tag",{"_index":3570,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tagsform",{"_index":3551,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tagstablecomponent",{"_index":157,"title":{"components/TagsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tailwind",{"_index":873,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1294,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["take(1",{"_index":1339,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["takes",{"_index":734,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":4386,"title":{},"body":{"license.html":{}}}],["tap",{"_index":588,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1313,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["team",{"_index":160,"title":{"interfaces/Team.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["team'},{'name",{"_index":152,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["team.actions",{"_index":3401,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["team.component.html",{"_index":3341,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.scss",{"_index":3342,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts",{"_index":3338,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:100",{"_index":3355,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:110",{"_index":3369,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:113",{"_index":3368,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:116",{"_index":3370,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:119",{"_index":3372,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:120",{"_index":3374,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:121",{"_index":3376,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:122",{"_index":3377,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:123",{"_index":3389,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:124",{"_index":3379,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:127",{"_index":3385,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:130",{"_index":3386,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:132",{"_index":3387,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:134",{"_index":3361,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:140",{"_index":3359,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:154",{"_index":3360,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:160",{"_index":3363,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:180",{"_index":3364,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:185",{"_index":3358,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:202",{"_index":3357,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:214",{"_index":3366,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:240",{"_index":3380,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:249",{"_index":3382,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:258",{"_index":3381,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:267",{"_index":3383,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:98",{"_index":3356,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete",{"_index":3438,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_confirmation",{"_index":3423,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_confirmation_message",{"_index":3421,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_description",{"_index":3439,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.effects",{"_index":501,"title":{},"body":{"interfaces/AppState.html":{}}}],["team.effects.ts",{"_index":3440,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:111",{"_index":3453,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:123",{"_index":3479,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:33",{"_index":3443,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:39",{"_index":3459,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:51",{"_index":3464,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:63",{"_index":3469,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:75",{"_index":3484,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:87",{"_index":3448,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:99",{"_index":3474,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.error",{"_index":3427,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.failed_to_delete_team",{"_index":3428,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.failed_to_update_team",{"_index":3431,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.id",{"_index":3434,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.id_description",{"_index":3435,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.reducer",{"_index":503,"title":{},"body":{"interfaces/AppState.html":{}}}],["team.reducer.ts",{"_index":3494,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["team.selectors",{"_index":3408,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.slug",{"_index":3436,"title":{},"body":{"components/SingleTeamComponent.html":{},"components/TeamPickerComponent.html":{}}}],["team.slug_description",{"_index":3437,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.teamid",{"_index":2711,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{}}}],["team/single",{"_index":500,"title":{},"body":{"interfaces/AppState.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["team/team.effects",{"_index":492,"title":{},"body":{"interfaces/AppState.html":{}}}],["team/team.reducer",{"_index":494,"title":{},"body":{"interfaces/AppState.html":{}}}],["teamdto",{"_index":3597,"title":{"interfaces/TeamDto.html":{}},"body":{"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["teameffects",{"_index":491,"title":{"injectables/TeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TeamEffects.html":{}}}],["teamid",{"_index":3353,"title":{},"body":{"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["teamids",{"_index":2709,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teamid}/members",{"_index":3699,"title":{},"body":{"injectables/TeamService.html":{}}}],["teamid}/projects",{"_index":3700,"title":{},"body":{"injectables/TeamService.html":{}}}],["teampickercomponent",{"_index":159,"title":{"components/TeamPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamreducer",{"_index":493,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["teams",{"_index":164,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams'},{'name",{"_index":162,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams.component.html",{"_index":3728,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.scss",{"_index":3729,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.map((team",{"_index":2710,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teams?.filter",{"_index":3657,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["teams?.length",{"_index":2708,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teamscomponent",{"_index":161,"title":{"components/TeamsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamservice",{"_index":3354,"title":{"injectables/TeamService.html":{}},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["teamstablecomponent",{"_index":163,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamstate",{"_index":470,"title":{"interfaces/TeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["technological",{"_index":4257,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":3916,"title":{},"body":{"index.html":{}}}],["tells",{"_index":4165,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2141,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["term",{"_index":4222,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":4708,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":4491,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4513,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4500,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4488,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4044,"title":{},"body":{"license.html":{}}}],["test",{"_index":3948,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3955,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3947,"title":{},"body":{"index.html":{}}}],["text",{"_index":1325,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["theme",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["therefore",{"_index":4033,"title":{},"body":{"license.html":{}}}],["things",{"_index":4026,"title":{},"body":{"license.html":{}}}],["third",{"_index":4284,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":534,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["this.active",{"_index":2288,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":860,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":1533,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":1532,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":1539,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":1538,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":1535,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":1534,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":1541,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":1540,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":552,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":569,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":564,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":577,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":583,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.avaialbleteams",{"_index":3656,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.availablemembers",{"_index":1923,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.availableprojects",{"_index":2620,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.blockbodyscroll",{"_index":1544,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.changeslugandcheckvalidity(data",{"_index":963,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.chartdata",{"_index":3178,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.checkname(data",{"_index":2761,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.checkslug(data",{"_index":961,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.checkslug(slug",{"_index":995,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkusername(data",{"_index":1407,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config",{"_index":454,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.config.menumode",{"_index":431,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":412,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":449,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.confirmationservice.confirm",{"_index":1312,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.createbreadcrumbs(child",{"_index":1574,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":1550,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createnewprojectform",{"_index":2773,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('name')?.value",{"_index":2770,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('platform')?.value?.platformid",{"_index":2771,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createorganizationform.get('name')?.value",{"_index":988,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.setvalue(slug",{"_index":994,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.value",{"_index":989,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createreleaseform",{"_index":2887,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.createreleaseform.get('version')?.value",{"_index":2880,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.currentpage",{"_index":1154,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.currentpage.pipe",{"_index":1160,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.currentpageable",{"_index":3001,"title":{},"body":{"components/SessionsComponent.html":{}}}],["this.currentpageable.page",{"_index":1171,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.currentpageable.size",{"_index":1169,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.currentpageable.sort",{"_index":1181,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":1555,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1159,"title":{},"body":{"components/DevicesComponent.html":{},"injectables/MemoryStorage.html":{},"components/SessionsComponent.html":{}}}],["this.data[key",{"_index":2143,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.datepipe.transform(enddate",{"_index":3194,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.datepipe.transform(startdate",{"_index":3192,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.deleteteam",{"_index":3424,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.document",{"_index":1530,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":1579,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":1580,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":1582,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":1581,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.dt?.filterglobal(($event.target",{"_index":1309,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.environments",{"_index":1149,"title":{},"body":{"components/DevicesComponent.html":{}}}],["this.environmentsform",{"_index":1351,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.environmentsform.get('environment')?.value",{"_index":1337,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.errorsubscription",{"_index":971,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":970,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.fetchdata",{"_index":1165,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.filteredprojects",{"_index":2712,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.filtervalue",{"_index":2688,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":1428,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":921,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.getchartlabel(hourlystat.startinterval",{"_index":3181,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.hidemenu",{"_index":1536,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":1542,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":1551,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.delete(api.membersurl",{"_index":2030,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.delete(api.teamurl",{"_index":3702,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.get",{"_index":1675,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["this.http.get(api.authurl",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(api.membersurl",{"_index":2029,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.get(api.organizationurl",{"_index":2467,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(api.platformurl",{"_index":2539,"title":{},"body":{"injectables/PlatformService.html":{}}}],["this.http.get(api.roleurl",{"_index":2949,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.get(api.teamurl",{"_index":3697,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.get>(api.logsessionurl",{"_index":1788,"title":{},"body":{"injectables/LogSessionService.html":{}}}],["this.http.get>(api.logsourceurl",{"_index":1806,"title":{},"body":{"injectables/LogSourceService.html":{}}}],["this.http.patch",{"_index":2471,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["this.http.post",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{}}}],["this.http.post(api.teamurl",{"_index":3701,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.put",{"_index":3703,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.index",{"_index":2297,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.invitationhash",{"_index":1639,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.acceptinvitation(request.invitationhash",{"_index":537,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.invitationservice.getinvitationdetails(this.invitationhash",{"_index":1626,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.invitemember(request).pipe",{"_index":1985,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.invitenewuserform",{"_index":2107,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('email')?.value",{"_index":2104,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('role')?.value?.roleid",{"_index":2105,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isaddnewdialogvisible",{"_index":1336,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.isaddnewprojectdialogvisible",{"_index":2765,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isdesktop",{"_index":418,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isinvitedialogvisible",{"_index":2099,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isloading",{"_index":3175,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.isloadingdata",{"_index":1162,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.isnametaken",{"_index":2780,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isoverlay",{"_index":415,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.ispickerdialogvisible",{"_index":1928,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["this.isslugtaken",{"_index":999,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.isusernametaken",{"_index":1430,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":2314,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":2312,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":2310,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":2315,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":2294,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":1549,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":589,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":558,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":557,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":2290,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":3779,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":854,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":848,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":846,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":850,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":855,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":1527,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.restoreconfig",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.layoutservice.saveconfig",{"_index":845,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":852,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":842,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":1576,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":1575,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":1578,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":1588,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":1543,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.localstorage.getitem(\"ui_config",{"_index":452,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.localstorage.setitem(\"ui_config",{"_index":458,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.loginform.get('password')?.value",{"_index":1834,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1833,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logsessionservice.findall",{"_index":3000,"title":{},"body":{"components/SessionsComponent.html":{}}}],["this.logsessionservice.findall(this.currentpageable",{"_index":3003,"title":{},"body":{"components/SessionsComponent.html":{}}}],["this.logsourceservice.findall(this.currentpageable",{"_index":1155,"title":{},"body":{"components/DevicesComponent.html":{}}}],["this.membersservice.getactivemembers().pipe",{"_index":1991,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.getmembers().pipe",{"_index":1997,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.removemember(request.memberid).pipe",{"_index":2002,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.menuoutsideclicklistener",{"_index":1528,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":2292,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":2319,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":2285,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":2307,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":2293,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":2174,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":2181,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":2284,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":2318,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":978,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.model",{"_index":3054,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":3056,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.myprojects.pipe",{"_index":2685,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.namechecksubscription",{"_index":2777,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.namechecksubscription?.unsubscribe",{"_index":2762,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.onconfigupdate",{"_index":456,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.onmemberspicked",{"_index":1931,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmemberspicked(event.items",{"_index":1932,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmembersremoved",{"_index":1929,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmembersremoved(event.items",{"_index":1930,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onprojectspicked",{"_index":2626,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectspicked(event.items",{"_index":2627,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectsremoved",{"_index":2624,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectsremoved(event.items",{"_index":2625,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onteamspicked",{"_index":3662,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.onteamspicked(event.items",{"_index":3663,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.onteamsremoved",{"_index":3660,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.onteamsremoved(event.items",{"_index":3661,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.organizationerrorsubscription",{"_index":1553,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationerrorsubscription?.unsubscribe",{"_index":1556,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationservice",{"_index":997,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.organizationservice.createorganization(request).pipe",{"_index":2431,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.getorganization().pipe",{"_index":2437,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.updateorganizationpicture(request.file).pipe",{"_index":2441,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationsubscription",{"_index":965,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationsubscription?.unsubscribe",{"_index":987,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":1526,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":1557,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":413,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":417,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":2296,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.platformservice.getplatforms().pipe",{"_index":2526,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["this.primefileupload.clear",{"_index":2409,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.progress",{"_index":2404,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.uploading",{"_index":2403,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":1537,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.project?.projectid",{"_index":1308,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.projects.subscribe((projects",{"_index":1143,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.projectservice",{"_index":2778,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["this.projectservice.addprojectdebugfile(args.projectid",{"_index":3226,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojectenvironments(args.projectid",{"_index":3234,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojectrelease(args.projectid",{"_index":3241,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojecttags(args.projectid",{"_index":3247,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojectteams(args.projectid",{"_index":3254,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.createproject(request).pipe",{"_index":2569,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getallprojects().pipe",{"_index":2575,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getmyprojects(request.teamids).pipe",{"_index":2581,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getprojectbyid(args.projectid).pipe",{"_index":3261,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectdebugfiles(args.projectid).pipe",{"_index":3266,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectenvironments(args.projectid).pipe",{"_index":3271,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectreleases(args.projectid).pipe",{"_index":3276,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojecttags(args.projectid).pipe",{"_index":3281,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectteams(args.projectid).pipe",{"_index":3286,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectdebugfiles(args.projectid",{"_index":3291,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectenvironments(args.projectid",{"_index":3296,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectreleases(args.projectid",{"_index":3301,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojecttags(args.projectid",{"_index":3306,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectteams(args.projectid",{"_index":3311,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.updateproject(args.projectid",{"_index":3316,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectstat",{"_index":3176,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.projectsubscription",{"_index":1142,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.projectsubscription?.unsubscribe",{"_index":1182,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.registerform.get('email')?.setvalue(details.email",{"_index":1627,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1636,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1637,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1638,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1635,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1634,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registeronce",{"_index":3418,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.releases",{"_index":1148,"title":{},"body":{"components/DevicesComponent.html":{}}}],["this.removeenvironments",{"_index":1332,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.removeenvironments([environment",{"_index":1330,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.removemember(member",{"_index":2108,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.removereleases([releaseid",{"_index":2876,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.removereleases(this.selectedreleases.map((value",{"_index":2877,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.removetags([tag",{"_index":3578,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.removetags(this.selectedtags.map((value",{"_index":3579,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.renderer.listen",{"_index":1529,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.resetenvironmentsform",{"_index":1335,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.resetinviteform",{"_index":2097,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":2915,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetprojectsform",{"_index":2763,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.resetreleasesform",{"_index":2879,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.resetsource.asobservable",{"_index":2177,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":2182,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resettagsform",{"_index":3581,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.restorescale",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["this.restoretheme",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["this.roleservice.getroles().pipe",{"_index":2938,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["this.root",{"_index":2316,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":1545,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":2300,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1628,"title":{},"body":{"components/InvitationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":2813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1554,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":969,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/settings/account",{"_index":3781,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.router.navigate(['/home/settings/projects",{"_index":3195,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.router.navigate(['/home/settings/teams",{"_index":3426,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.router.navigate([`/home/settings/projects/${project.projectid",{"_index":2776,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.saveconfig",{"_index":448,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.scale",{"_index":859,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.search",{"_index":1164,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.secret",{"_index":2913,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedenvironments",{"_index":1151,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{}}}],["this.selectedenvironments.map((value",{"_index":1333,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.selectedlanguage",{"_index":3778,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.selectedmembers.some((selected",{"_index":1925,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.selectedprojects",{"_index":1150,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.selectedprojects.some",{"_index":2622,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.selectedprojects?.foreach((project",{"_index":1183,"title":{},"body":{"components/DevicesComponent.html":{}}}],["this.selectedprojects?.map((project",{"_index":1166,"title":{},"body":{"components/DevicesComponent.html":{},"components/SessionsComponent.html":{}}}],["this.selectedreleases",{"_index":1153,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["this.selectedreleases?.map((release",{"_index":1168,"title":{},"body":{"components/DevicesComponent.html":{}}}],["this.selectedtags",{"_index":3589,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.selectedteams.some",{"_index":3658,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.setupchartdata(result",{"_index":3177,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":3055,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.slugchecksubscription",{"_index":996,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.slugchecksubscription?.unsubscribe",{"_index":986,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.sluginput",{"_index":3419,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":424,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":416,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":422,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":419,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":420,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1745,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1748,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1749,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":1703,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":1701,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1750,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1747,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1751,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":1699,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":1698,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1752,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":1702,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":1700,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":966,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch",{"_index":1306,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.store.dispatch(createorganization(dto",{"_index":990,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.dispatch(createproject(dto",{"_index":2772,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(invitemember(dto",{"_index":2106,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadactivemembers",{"_index":1917,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.store.dispatch(loadallprojects",{"_index":2616,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["this.store.dispatch(loadcurrentorganization",{"_index":964,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":1408,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadmyprojects",{"_index":1141,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["this.store.dispatch(loadmyteams",{"_index":2706,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadorganizationmembers",{"_index":1971,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.dispatch(loadorganizationteams",{"_index":3652,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadplatforms",{"_index":2764,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(loadroles",{"_index":2098,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadteambyid",{"_index":3414,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(loadteammembers",{"_index":3416,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(loadteamprojects",{"_index":3417,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":2817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(removemember",{"_index":2113,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(resetsingleteamstate",{"_index":3420,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(signout",{"_index":3780,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.dispatch(updateorganizationpicture",{"_index":2405,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select",{"_index":1270,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingactivemembers",{"_index":1894,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.store.select(isloadingallprojects",{"_index":2613,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["this.store.select(isloadingauthstate",{"_index":1393,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingcreateproject",{"_index":2749,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(isloadingmembers",{"_index":1958,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.select(isloadingmyprojects",{"_index":1068,"title":{},"body":{"components/DevicesComponent.html":{},"components/ProjectsComponent.html":{},"components/SessionsComponent.html":{}}}],["this.store.select(isloadingmyteams",{"_index":2693,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingorganization",{"_index":926,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.select(isloadingorganizationteams",{"_index":3647,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingremovemembers",{"_index":2087,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsendinvitation",{"_index":2088,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectaddenvironments",{"_index":1275,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectaddrelease",{"_index":2859,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectaddtags",{"_index":3563,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectenvironments",{"_index":1277,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectreleases",{"_index":2860,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectremovereleases",{"_index":2861,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectremovetags",{"_index":3564,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojecttags",{"_index":3566,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.store.select(isloadingteammembers",{"_index":3371,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isloadingteamprojects",{"_index":3373,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isloadingupdateteam",{"_index":3375,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isupdateorganizationpictureloading",{"_index":2377,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select(selectcurrentorganization",{"_index":2379,"title":{},"body":{"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":1507,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectplatforms",{"_index":2752,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(selectroles",{"_index":2089,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(selectsingleteam",{"_index":3388,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.successsubscription",{"_index":1417,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":1423,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.tagsform",{"_index":3590,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.tagsform.get('tag')?.value",{"_index":3582,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.teamid",{"_index":3415,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.addteammembers(args.teamid",{"_index":3445,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.addteamprojects(args.teamid",{"_index":3450,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.createnewteam(request).pipe",{"_index":3604,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(request.teamid).pipe",{"_index":3609,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(this.teamid",{"_index":3425,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.getmyteams().pipe",{"_index":3615,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getorganizationteams().pipe",{"_index":3620,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getteambyid(args.teamid).pipe",{"_index":3455,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.getteammembers(args.teamid).pipe",{"_index":3461,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.getteamprojects(args.teamid).pipe",{"_index":3466,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.isslugtaken(slug).subscribe",{"_index":3429,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.removeteammembers(args.teamid",{"_index":3471,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.removeteamprojects(args.teamid",{"_index":3476,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.updateteam(args.teamid",{"_index":3481,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.toslugvalue(organizationname",{"_index":993,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant",{"_index":984,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":2909,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('create",{"_index":981,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant('environments",{"_index":1343,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.translateservice.instant('members",{"_index":2101,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.translateservice.instant('organization.error",{"_index":2407,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.translateservice.instant('projects",{"_index":2767,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.translateservice.instant('releases",{"_index":2875,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.translateservice.instant('single",{"_index":3422,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.translateservice.instant('tags",{"_index":3577,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":1548,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":3782,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":1577,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":2295,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":1429,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":1424,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":1409,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":1422,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":4086,"title":{},"body":{"license.html":{}}}],["though",{"_index":4449,"title":{},"body":{"license.html":{}}}],["threads",{"_index":1798,"title":{},"body":{"interfaces/LogSourceDto.html":{}}}],["threatened",{"_index":4097,"title":{},"body":{"license.html":{}}}],["three",{"_index":4344,"title":{},"body":{"license.html":{}}}],["through",{"_index":368,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["throw",{"_index":2394,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["thus",{"_index":4240,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3137,"title":{},"body":{"components/SidebarComponent.html":{}}}],["time",{"_index":4510,"title":{},"body":{"license.html":{}}}],["titlecase",{"_index":2630,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["toastmodule",{"_index":885,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["todo",{"_index":372,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{}}}],["toggle",{"_index":339,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":414,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":2242,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":659,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{}}}],["token_key",{"_index":1696,"title":{},"body":{"injectables/JwtService.html":{}}}],["tokendto",{"_index":635,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{}}}],["tools",{"_index":4205,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":3747,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":166,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbar.component.html",{"_index":3748,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":3749,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":165,"title":{"components/TopbarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbarmenubutton",{"_index":3752,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toslugvalue",{"_index":902,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["toslugvalue(slug",{"_index":919,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["totalcrashfreesessions",{"_index":2644,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totalelements",{"_index":2496,"title":{},"body":{"interfaces/Page.html":{}}}],["totalerrors",{"_index":2645,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totalpages",{"_index":2497,"title":{},"body":{"interfaces/Page.html":{}}}],["totalsessions",{"_index":2646,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totaltransactions",{"_index":2647,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["track",{"_index":344,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["trade",{"_index":4472,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4471,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4473,"title":{},"body":{"license.html":{}}}],["trail",{"_index":1481,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":4422,"title":{},"body":{"license.html":{}}}],["transactions",{"_index":2602,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["transfer",{"_index":4155,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4424,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4531,"title":{},"body":{"license.html":{}}}],["transition",{"_index":2271,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":41,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["translate.addlangs(['en",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":35,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3804,"title":{},"body":{"dependencies.html":{}}}],["translatemodule",{"_index":24,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["translateservice",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":3036,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":4376,"title":{},"body":{"license.html":{}}}],["treated",{"_index":4448,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":4264,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["trigger",{"_index":2203,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":2277,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":2164,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":3901,"title":{},"body":{"index.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tslib",{"_index":3825,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":735,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/LogSessionDto.html":{},"injectables/LogSessionService.html":{},"interfaces/LogSourceDto.html":{},"injectables/LogSourceService.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Page.html":{},"interfaces/Pageable.html":{},"classes/PageableDefault.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type.enum",{"_index":1011,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":3832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":857,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["typical",{"_index":4401,"title":{},"body":{"license.html":{}}}],["typically",{"_index":798,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":305,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":4083,"title":{},"body":{"license.html":{}}}],["unblock",{"_index":1503,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":1463,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":1152,"title":{},"body":{"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SessionsComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["under",{"_index":4121,"title":{},"body":{"license.html":{}}}],["unique",{"_index":2218,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniqueidentifier",{"_index":1075,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{}}}],["uniquely",{"_index":2229,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":3946,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":3173,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":4410,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":4227,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4133,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4251,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4444,"title":{},"body":{"license.html":{}}}],["unpaged",{"_index":2505,"title":{},"body":{"interfaces/Page.html":{}}}],["unsorted",{"_index":2502,"title":{},"body":{"interfaces/Page.html":{}}}],["unsubscribe",{"_index":1340,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["unsubscribes",{"_index":2252,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":4499,"title":{},"body":{"license.html":{}}}],["unused",{"_index":1310,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["up",{"_index":3045,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":778,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":2192,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":386,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":1092,"title":{},"body":{"components/DevicesComponent.html":{},"interfaces/LogSourceDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updateorganizationnameandslug",{"_index":2352,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationnameandslug(name",{"_index":2363,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationpicture",{"_index":2391,"title":{},"body":{"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicture(picture",{"_index":2460,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["updateorganizationpicturefailure",{"_index":2450,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess",{"_index":2451,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess(result",{"_index":2443,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["updatepictureerror",{"_index":2474,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updatepicturestatus",{"_index":2475,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updateproject",{"_index":3222,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["updateprojectfailure",{"_index":3336,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["updateprojectsucess",{"_index":3317,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["updates",{"_index":446,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updateteam",{"_index":3400,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["updateteam(teamid",{"_index":3693,"title":{},"body":{"injectables/TeamService.html":{}}}],["updateteamerror",{"_index":3510,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["updateteamfailure",{"_index":3493,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["updateteamslug",{"_index":3352,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["updateteamslug(slug",{"_index":3365,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["updateteamstatus",{"_index":3511,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["updateteamsuccess",{"_index":3482,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["updating",{"_index":750,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["uploadnewavatar",{"_index":2353,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["uploadnewavatar($event",{"_index":2365,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":802,"title":{},"body":{"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["use",{"_index":2224,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":4703,"title":{},"body":{"license.html":{}}}],["user",{"_index":361,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":3039,"title":{},"body":{"components/SidebarComponent.html":{}}}],["user.dto",{"_index":1977,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["user.email",{"_index":1936,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.entity",{"_index":1593,"title":{},"body":{"interfaces/Invitation.html":{}}}],["user.firstname",{"_index":1934,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.lastname",{"_index":1935,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.pictureurl",{"_index":1933,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["userdto",{"_index":639,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"injectables/TeamService.html":{},"interfaces/UserDto.html":{}}}],["userid",{"_index":2930,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":540,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":660,"title":{},"body":{"interfaces/AuthState.html":{}}}],["usernamechecksubscription",{"_index":1378,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":1379,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1975,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["userservice",{"_index":3053,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":3041,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":1380,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":4404,"title":{},"body":{"license.html":{}}}],["using",{"_index":390,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utc",{"_index":1206,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["utilizes",{"_index":3907,"title":{},"body":{"index.html":{}}}],["valid",{"_index":4343,"title":{},"body":{"license.html":{}}}],["validators",{"_index":937,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["validators.email",{"_index":1612,"title":{},"body":{"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1391,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1610,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1611,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":922,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["value",{"_index":317,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"classes/PageableDefault.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.charat(0",{"_index":2400,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["value.environment",{"_index":1334,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["value.filter((project",{"_index":2687,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["value.key",{"_index":2289,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":2291,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.releaseid",{"_index":2878,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["value.routeevent",{"_index":2287,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.tag",{"_index":3580,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["value.tostring(16).padstart(2",{"_index":1916,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["values",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["varaibles",{"_index":3979,"title":{},"body":{"index.html":{}}}],["variable",{"_index":409,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["variables",{"_index":3967,"title":{},"body":{"index.html":{}}}],["various",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["vars",{"_index":1311,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["verbatim",{"_index":3995,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":3807,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":3809,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":1014,"title":{},"body":{"interfaces/CreateProjectReleaseDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":4011,"title":{},"body":{"license.html":{}}}],["via",{"_index":3949,"title":{},"body":{"index.html":{}}}],["view",{"_index":3033,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":936,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('dt",{"_index":1264,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["viewchild('fileupload",{"_index":2382,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["viewchild('menubutton",{"_index":3771,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('name",{"_index":931,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["viewchild('slug",{"_index":934,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["viewchild('topbarmenu",{"_index":3770,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":3775,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":1398,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":1504,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":1506,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":4438,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4495,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":340,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":358,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":843,"title":{},"body":{"components/ConfigComponent.html":{}}}],["vitals",{"_index":168,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["vitals.component.html",{"_index":3789,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitals.component.scss",{"_index":3790,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitalscomponent",{"_index":167,"title":{"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["void",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DevicesComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":4320,"title":{},"body":{"license.html":{}}}],["vue",{"_index":3846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["w",{"_index":4712,"title":{},"body":{"license.html":{}}}],["waive",{"_index":4273,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4687,"title":{},"body":{"license.html":{}}}],["want",{"_index":4023,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":4166,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4057,"title":{},"body":{"license.html":{}}}],["way",{"_index":4016,"title":{},"body":{"license.html":{}}}],["ways",{"_index":4333,"title":{},"body":{"license.html":{}}}],["web",{"_index":3030,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["webpage",{"_index":774,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":4713,"title":{},"body":{"license.html":{}}}],["well",{"_index":752,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":4535,"title":{},"body":{"license.html":{}}}],["whether",{"_index":302,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":4185,"title":{},"body":{"license.html":{}}}],["whose",{"_index":4383,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4181,"title":{},"body":{"license.html":{}}}],["width",{"_index":433,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":432,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":443,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1746,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":2970,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1744,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":4263,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3980,"title":{},"body":{"index.html":{},"license.html":{}}}],["within",{"_index":2210,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["without",{"_index":2249,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["work",{"_index":4014,"title":{},"body":{"license.html":{}}}],["work's",{"_index":4204,"title":{},"body":{"license.html":{}}}],["working",{"_index":4182,"title":{},"body":{"license.html":{}}}],["works",{"_index":177,"title":{},"body":{"components/AlertsComponent.html":{},"components/CloseComponent.html":{},"components/DetailsComponent.html":{},"components/DocumentationComponent.html":{},"components/GuidesComponent.html":{},"components/IssuesComponent.html":{},"components/LogsComponent.html":{},"components/MessagesComponent.html":{},"components/NotificationsComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/QueriesComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["worldwide",{"_index":4568,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":3042,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrench",{"_index":3131,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":4650,"title":{},"body":{"license.html":{}}}],["written",{"_index":4342,"title":{},"body":{"license.html":{}}}],["x",{"_index":3165,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["years",{"_index":4345,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":4585,"title":{},"body":{"license.html":{}}}],["yyyy",{"_index":1204,"title":{},"body":{"components/DevicesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SessionsComponent.html":{}}}],["zone.js",{"_index":3827,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessDeniedComponent.html":{"url":"components/AccessDeniedComponent.html","title":"component - AccessDeniedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessDeniedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/access-denied/access-denied.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-denied\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RouterModule\n                            RippleModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./access-denied.component.html\n            \n\n\n\n            \n                styleUrl\n                ./access-denied.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-access-denied',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RouterModule,\n    RippleModule,\n    TranslateModule\n  ],\n  templateUrl: './access-denied.component.html',\n  styleUrl: './access-denied.component.scss'\n})\nexport class AccessDeniedComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n          \n          \n            {{'access-denied.access_denied' | translate}}\n          \n          {{'access-denied.insufficient_permission' | translate}}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{\\'access-denied.access_denied\\' | translate}}                    {{\\'access-denied.insufficient_permission\\' | translate}}                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessDeniedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsComponent.html":{"url":"components/AlertsComponent.html","title":"component - AlertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/alerts/alerts.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alerts\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./alerts.component.html\n            \n\n\n\n            \n                styleUrl\n                ./alerts.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  standalone: true,\n  imports: [],\n  templateUrl: './alerts.component.html',\n  styleUrl: './alerts.component.scss'\n})\nexport class AlertsComponent {\n\n}\n\n    \n\n    \n        alerts works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'alerts works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                replaceThemeLink\n                            \n                            \n                                    Private\n                                restoreScale\n                            \n                            \n                                    Private\n                                restoreTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, layoutService: LayoutService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceThemeLink(href: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LayoutService } from './core/services/layout.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  constructor(\n    translate: TranslateService,\n    private layoutService: LayoutService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n  ngOnInit(): void {\n    this.layoutService.restoreConfig();\n    this.restoreScale();\n  }\n\n  ngAfterViewInit() {\n    this.restoreTheme();\n  }\n\n  private restoreScale() {\n    this.document.documentElement.style.fontSize =\n      this.layoutService.config.scale + 'px';\n  }\n\n  private restoreTheme() {\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace('lara-light-blue', this.layoutService.config.theme);\n    this.replaceThemeLink(newHref);\n  }\n\n  private replaceThemeLink(href: string) {\n    const id = 'theme-css';\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            membersState\n                                        \n                                \n                                \n                                        \n                                            organizationState\n                                        \n                                \n                                \n                                        \n                                            platformState\n                                        \n                                \n                                \n                                        \n                                            projectState\n                                        \n                                \n                                \n                                        \n                                            roleState\n                                        \n                                \n                                \n                                        \n                                            singleProjectState\n                                        \n                                \n                                \n                                        \n                                            singleTeamState\n                                        \n                                \n                                \n                                        \n                                            teamState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersState:         MembersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationState:         OrganizationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformState:         PlatformState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectState:         ProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleState:         RoleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleProjectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleProjectState:         SingleProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SingleProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamState:         SingleTeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SingleTeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamState:         TeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\nimport { MembersEffects } from './members/members.effects';\nimport { MembersState, membersReducer } from './members/members.reducer';\nimport { OrganizationEffects } from './organization/organization.effects';\nimport {\n  OrganizationState,\n  organizationReducer,\n} from './organization/organization.reducer';\nimport { ProjectEffects } from './project/project.effects';\nimport { ProjectState, projectReducer } from './project/project.reducer';\nimport { RoleEffects } from './role/role.effects';\nimport { RoleState, roleReducer } from './role/role.reducer';\nimport { TeamEffects } from './team/team.effects';\nimport { TeamState, teamReducer } from './team/team.reducer';\nimport { PlatformState, platformReducer } from './platform/platform.reducer';\nimport { PlatformEffects } from './platform/platform.effects';\nimport { SingleTeamEffects } from './single-team/single-team.effects';\nimport { SingleTeamState, singleTeamReducer } from './single-team/single-team.reducer';\nimport { SingleProjectState, singleProjectReducer } from './single-project/single-project.reducer';\nimport { SingleProjectEffects } from './single-project/single-project.effects';\n\nexport interface AppState {\n  authState: AuthState;\n  organizationState: OrganizationState;\n  membersState: MembersState;\n  roleState: RoleState;\n  teamState: TeamState;\n  projectState: ProjectState;\n  platformState: PlatformState;\n  singleTeamState: SingleTeamState;\n  singleProjectState: SingleProjectState;\n}\n\nexport const appEfects = [\n  AuthEffects,\n  OrganizationEffects,\n  MembersEffects,\n  RoleEffects,\n  TeamEffects,\n  ProjectEffects,\n  PlatformEffects,\n  SingleTeamEffects,\n  SingleProjectEffects,\n];\n\nexport const appStore = {\n  authState: authReducer,\n  organizationState: organizationReducer,\n  membersState: membersReducer,\n  roleState: roleReducer,\n  teamState: teamReducer,\n  projectState: projectReducer,\n  platformState: platformReducer,\n  singleTeamState: singleTeamReducer,\n  singleProjectState: singleProjectReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation$\n                            \n                            \n                                acceptInvitationSuccess$\n                            \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:111\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n\n  acceptInvitation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  acceptInvitationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acceptInvitationError\n                                        \n                                \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acceptInvitationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acceptInvitationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  acceptInvitationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  acceptInvitationError: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Accept Invitation\n  on(acceptInvitation, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Accept invitation success\n  on(acceptInvitationSuccess, (state) => ({\n    ...state,\n    acceptInvitationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Accept invitation failure\n  on(acceptInvitationFailure, (state, { error }) => ({\n    ...state,\n    acceptInvitationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseComponent.html":{"url":"components/CloseComponent.html","title":"component - CloseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/close/close.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./close.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  standalone: true,\n  imports: [],\n  templateUrl: './close.component.html',\n  styleUrl: './close.component.scss'\n})\nexport class CloseComponent {\n\n}\n\n    \n\n    \n        close works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'close works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:179\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:121\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:163\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:109\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:143\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:79\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:88\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:92\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:97\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n    this.layoutService.saveConfig();\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOrganizationComponent.html":{"url":"components/CreateOrganizationComponent.html","title":"component - CreateOrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/create-organization/create-organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-create-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganizationForm\n                            \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSlugAndCheckValidity\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createOrganization\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, store: Store, formBuilder: FormBuilder, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSlugAndCheckValidity\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSlugAndCheckValidity(organizationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../core/domain/dto/requests/create-organization-request.dto';\nimport { OrganizationService } from '../../core/services/api/organization.api.service';\nimport { AppState } from '../../core/state/app.state';\nimport {\n  createOrganization,\n  loadCurrentOrganization,\n} from '../../core/state/organization/organization.actions';\nimport {\n  isLoadingOrganization,\n  selectCurrentOrganization,\n  selectOrganizationError,\n} from '../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-create-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './create-organization.component.html',\n  styleUrl: './create-organization.component.scss',\n})\nexport class CreateOrganizationComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('name') nameInput!: ElementRef;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  createOrganizationForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  });\n\n  isSlugTaken: boolean | null = null;\n  isLoading = this.store.select(isLoadingOrganization);\n\n  private slugCheckSubscription?: Subscription;\n  private organizationSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.changeSlugAndCheckValidity(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.organizationSubscription = this.store\n      .select(selectCurrentOrganization)\n      .subscribe((organization) => {\n        if (organization != null) {\n          this.router.navigate(['/home']);\n          this.errorSubscription?.unsubscribe();\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 404 &&\n          error.status !== 401\n        ) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('create-organization.error'),\n            detail: this.translateService.instant(\n              'create-organization.error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n    this.organizationSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n  }\n\n  createOrganization() {\n    const dto: CreateOrganizationRequestDto = {\n      name: this.createOrganizationForm.get('name')?.value ?? '',\n      slug: this.createOrganizationForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createOrganization(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private changeSlugAndCheckValidity(organizationName: string) {\n    const slug = this.toSlugValue(organizationName);\n    this.createOrganizationForm.get('slug')?.setValue(slug);\n    this.checkSlug(slug);\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n            {{ \"create-organization.welcome_message\" | translate }}\n          \n          {{\n            \"create-organization.welcome_description\" | translate\n          }}\n        \n        \n          \n            {{ \"create-organization.name_label\" | translate }}\n            \n              \n              \n            \n            {{ \"create-organization.name_is_required\" | translate }}\n\n            {{ \"create-organization.slug_label\" | translate }}\n            \n              @if (isSlugTaken !== null && !isSlugTaken) {\n                \n              } @else {\n                \n              }\n              \n            \n            {{ \"create-organization.slug_is_required\" | translate }}\n\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ \"create-organization.welcome_message\" | translate }}                    {{            \"create-organization.welcome_description\" | translate          }}                                      {{ \"create-organization.name_label\" | translate }}                                                                {{ \"create-organization.name_is_required\" | translate }}            {{ \"create-organization.slug_label\" | translate }}                          @if (isSlugTaken !== null && !isSlugTaken) {                              } @else {                              }                                      {{ \"create-organization.slug_is_required\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrganizationRequestDto.html":{"url":"interfaces/CreateOrganizationRequestDto.html","title":"interface - CreateOrganizationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrganizationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-organization-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateOrganizationRequestDto {\n  slug: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectDebugFileDto.html":{"url":"interfaces/CreateProjectDebugFileDto.html","title":"interface - CreateProjectDebugFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectDebugFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-debug-file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DebugFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugFileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugFileType } from \"../../models/enums/debug-file-type.enum\";\n\nexport interface CreateProjectDebugFileDto {\n    type: DebugFileType;\n    file: File;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectReleaseDto.html":{"url":"interfaces/CreateProjectReleaseDto.html","title":"interface - CreateProjectReleaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectReleaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-release.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectReleaseDto {\n    version: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectRequestDto.html":{"url":"interfaces/CreateProjectRequestDto.html","title":"interface - CreateProjectRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectRequestDto {\n    name: string;\n    platformId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTeamRequestDto.html":{"url":"interfaces/CreateTeamRequestDto.html","title":"interface - CreateTeamRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTeamRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-team-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateTeamRequestDto {\n    slug: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/details/details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent {\n\n}\n\n    \n\n    \n        details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/devices/devices.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TableModule\n                            DropdownModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                            MultiSelectModule\n                            TranslateModule\n                                QueryInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n            \n                styleUrl\n                ./devices.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentPage\n                            \n                            \n                                    Private\n                                currentPageable\n                            \n                            \n                                    Optional\n                                data\n                            \n                            \n                                environments\n                            \n                            \n                                isLoadingData\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                projects\n                            \n                            \n                                    Private\n                                    Optional\n                                projectSubscription\n                            \n                            \n                                queryKeys\n                            \n                            \n                                queryKeysDescription\n                            \n                            \n                                releases\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Optional\n                                selectedEnvironments\n                            \n                            \n                                    Optional\n                                selectedProjects\n                            \n                            \n                                    Optional\n                                selectedReleases\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchData\n                            \n                            \n                                loadPage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryChanged\n                            \n                            \n                                selectEnvironment\n                            \n                            \n                                selectProjects\n                            \n                            \n                                selectRelease\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, logSourceService: LogSourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/devices/devices.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logSourceService\n                                                  \n                                                        \n                                                                        LogSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchData\n                        \n                    \n                \n            \n            \n                \nfetchData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPage\n                        \n                    \n                \n            \n            \n                \nloadPage($event: TableLazyLoadEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        TableLazyLoadEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onQueryChanged\n                        \n                    \n                \n            \n            \n                \nonQueryChanged($event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectEnvironment\n                        \n                    \n                \n            \n            \n                \nselectEnvironment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:220\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProjects\n                        \n                    \n                \n            \n            \n                \nselectProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRelease\n                        \n                    \n                \n            \n            \n                \nselectRelease()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/devices/devices.component.ts:225\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPageable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pageable\n\n                    \n                \n                \n                    \n                        Default value : new PageableDefault()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        projectSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"id\": \"string\",\n    \"uniqueIdentifier\": \"string\",\n    \"os\": \"string\",\n    \"osVersion\": \"string\",\n    \"environment\": \"string\",\n    \"ipAddress\": \"string\",\n    \"macAddress\": \"string\",\n    \"cpuInfo.model\": \"string\",\n    \"cpuInfo.speed\": \"number\",\n    \"cpuInfo.cores\": \"number\",\n    \"cpuInfo.threads\": \"number\",\n    \"release.releaseId\": \"string\",\n    \"release.version\": \"string\",\n    \"release.releaseTimestamp\": \"date\",\n    \"maxRam\": \"number\",\n    \"architecture\": \"string\",\n    \"createdAt\": \"date\",\n    \"updatedAt\": \"date\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKeysDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"id\": \"devices.id_description\",\n    \"uniqueIdentifier\": \"devices.unique_identifier_description\",\n    \"os\": \"devices.os_description\",\n    \"osVersion\": \"devices.os_version_description\",\n    \"environment\": \"devices.environment_description\",\n    \"ipAddress\": \"devices.ip_address_description\",\n    \"macAddress\": \"devices.mac_address_description\",\n    \"cpuInfo.model\": \"devices.cpu_info_model_description\",\n    \"cpuInfo.speed\": \"devices.cpu_info_speed_description\",\n    \"cpuInfo.cores\": \"devices.cpu_info_cores_description\",\n    \"cpuInfo.threads\": \"devices.cpu_info_threads_description\",\n    \"release.releaseId\": \"devices.release_release_id_description\",\n    \"release.version\": \"devices.release_version_description\",\n    \"release.releaseTimestamp\": \"devices.release_timestamp_description\",\n    \"maxRam\": \"devices.max_ram_description\",\n    \"architecture\": \"devices.architecture_description\",\n    \"createdAt\": \"devices.created_at_description\",\n    \"updatedAt\": \"devices.updated_at_description\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectRelease[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedProjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedReleases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectRelease[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/devices/devices.component.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription, map } from 'rxjs';\nimport { ProjectRelease } from '../../core/domain/models/project-release.entity';\nimport { Project } from '../../core/domain/models/project.entity';\nimport { AppState } from '../../core/state/app.state';\nimport { loadMyProjects } from '../../core/state/project/project.actions';\nimport {\n  isLoadingMyProjects,\n  selectMyProjects,\n} from '../../core/state/project/project.selectors';\nimport { LogSourceDto } from '../../core/domain/dto/log-source.dto';\nimport { Page } from '../../core/domain/pageable/page.dto';\nimport { LogSourceService } from '../../core/services/api/log-source.api.service';\nimport {\n  Pageable,\n  PageableDefault,\n} from '../../core/domain/pageable/pageable.dto';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { TableLazyLoadEvent, TableModule } from 'primeng/table';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { QueryInputComponent } from '../../shared/components/query-input/query-input.component';\n\n@Component({\n  selector: 'app-devices',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TableModule,\n    DropdownModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MultiSelectModule,\n    TranslateModule,\n    QueryInputComponent,\n  ],\n  templateUrl: './devices.component.html',\n  styleUrl: './devices.component.scss',\n})\nexport class DevicesComponent implements OnInit, OnDestroy {\n  constructor(\n    private store: Store,\n    private logSourceService: LogSourceService,\n  ) {}\n\n  queryKeys: Record = {\n    \"id\": \"string\",\n    \"uniqueIdentifier\": \"string\",\n    \"os\": \"string\",\n    \"osVersion\": \"string\",\n    \"environment\": \"string\",\n    \"ipAddress\": \"string\",\n    \"macAddress\": \"string\",\n    \"cpuInfo.model\": \"string\",\n    \"cpuInfo.speed\": \"number\",\n    \"cpuInfo.cores\": \"number\",\n    \"cpuInfo.threads\": \"number\",\n    \"release.releaseId\": \"string\",\n    \"release.version\": \"string\",\n    \"release.releaseTimestamp\": \"date\",\n    \"maxRam\": \"number\",\n    \"architecture\": \"string\",\n    \"createdAt\": \"date\",\n    \"updatedAt\": \"date\"\n  };\n\n  queryKeysDescription: Record = {\n    \"id\": \"devices.id_description\",\n    \"uniqueIdentifier\": \"devices.unique_identifier_description\",\n    \"os\": \"devices.os_description\",\n    \"osVersion\": \"devices.os_version_description\",\n    \"environment\": \"devices.environment_description\",\n    \"ipAddress\": \"devices.ip_address_description\",\n    \"macAddress\": \"devices.mac_address_description\",\n    \"cpuInfo.model\": \"devices.cpu_info_model_description\",\n    \"cpuInfo.speed\": \"devices.cpu_info_speed_description\",\n    \"cpuInfo.cores\": \"devices.cpu_info_cores_description\",\n    \"cpuInfo.threads\": \"devices.cpu_info_threads_description\",\n    \"release.releaseId\": \"devices.release_release_id_description\",\n    \"release.version\": \"devices.release_version_description\",\n    \"release.releaseTimestamp\": \"devices.release_timestamp_description\",\n    \"maxRam\": \"devices.max_ram_description\",\n    \"architecture\": \"devices.architecture_description\",\n    \"createdAt\": \"devices.created_at_description\",\n    \"updatedAt\": \"devices.updated_at_description\"\n  };\n\n  private projectSubscription?: Subscription;\n\n  projects = this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n  isLoadingProjects = this.store.select(isLoadingMyProjects);\n  isLoadingData = true;\n  releases: ProjectRelease[] = [];\n  environments: string[] = [];\n  private currentPageable: Pageable = new PageableDefault();\n  currentPage?: Observable>;\n  data?: Observable;\n\n  selectedProjects?: Project[];\n  selectedReleases?: ProjectRelease[];\n  selectedEnvironments?: string[];\n\n  private search: string = '';\n\n  ngOnInit(): void {\n    this.store.dispatch(loadMyProjects({}));\n    this.projectSubscription = this.projects.subscribe((projects) => {\n      if (projects && projects !== null) {\n        const environments: Set = new Set();\n        const releases: Set = new Set();\n        for (const project of projects) {\n          project.environments.forEach((environment) =>\n            environments.add(environment),\n          );\n          project.releases.forEach((release) => releases.add(release));\n        }\n        this.releases = [...releases];\n        this.environments = [...environments];\n\n        this.selectedProjects = projects;\n        this.selectedEnvironments = undefined;\n        this.selectedReleases = undefined;\n\n        this.currentPage = this.logSourceService.findAll(this.currentPageable, {\n          projectIds: projects.map((project) => project.projectId),\n        });\n\n        this.data = this.currentPage.pipe(\n          map((page) => {\n            this.isLoadingData = false;\n            return page.content;\n          }),\n        );\n      }\n    });\n  }\n\n  onQueryChanged($event: string) {\n    this.search = $event;\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.isLoadingData = true;\n    let search: string | undefined = undefined;\n    if (this.search !== '') {\n      search = this.search;\n    }\n    this.currentPage = this.logSourceService.findAll(this.currentPageable, {\n      projectIds:\n        this.selectedProjects?.map((project) => project.projectId) ?? [],\n      environments: this.selectedEnvironments,\n      releaseIds: this.selectedReleases?.map((release) => release.releaseId),\n      search: search,\n    });\n\n    this.data = this.currentPage.pipe(\n      map((page) => {\n        this.isLoadingData = false;\n        return page.content;\n      }),\n    );\n  }\n\n  loadPage($event: TableLazyLoadEvent) {\n    this.currentPageable.size = $event.rows ?? this.currentPageable.size;\n    this.currentPageable.page = $event.first ?? 0 / this.currentPageable.size;\n    if ($event.sortField) {\n      let sortField: string;\n      if (Array.isArray($event.sortField)) {\n        sortField = $event.sortField[0];\n      } else {\n        sortField = $event.sortField;\n      }\n      let sortOrder: 'ASC' | 'DESC' = 'ASC';\n      if ($event.sortOrder && $event.sortOrder === 1) {\n        sortOrder = 'ASC';\n      } else {\n        sortOrder = 'DESC';\n      }\n      this.currentPageable.sort = [sortField + ',' + sortOrder];\n    }\n    this.fetchData();\n  }\n\n  ngOnDestroy(): void {\n    this.projectSubscription?.unsubscribe();\n  }\n\n  selectProjects() {\n    this.currentPageable.page = 0;\n    const environments: Set = new Set();\n    const releases: Set = new Set();\n    this.selectedProjects?.forEach((project: Project) => {\n      project.environments.forEach((environment) =>\n        environments.add(environment),\n      );\n      project.releases.forEach((release) => releases.add(release));\n    });\n    this.releases = [...releases];\n    this.environments = [...environments];\n\n    this.selectedEnvironments = undefined;\n    this.selectedReleases = undefined;\n\n    this.fetchData();\n  }\n\n  selectEnvironment() {\n    this.currentPageable.page = 0;\n    this.fetchData();\n  }\n\n  selectRelease() {\n    this.currentPageable.page = 0;\n    this.fetchData();\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n  \n\n\n\n  \n    \n      \n        \n          {{ \"devices.id\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.os\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.environment\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.version\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.architecture\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.ip_address\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.mac_address\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.online\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"devices.last_registration\" | translate }}\n          \n        \n      \n    \n  \n  \n    \n      \n        {{ device?.logSourceId }}\n      \n      \n        {{ device?.os }}\n      \n      \n        {{ device?.environment }}\n      \n      \n        {{ device?.release.version }}\n      \n      \n        {{ device?.architecture }}\n      \n      \n        {{ device?.ipAddress }}\n      \n      \n        {{ device?.macAddress }}\n      \n      \n        \n          @if (device.online) {\n            \n          } @else {\n            \n          }\n        \n      \n      \n        {{ device?.updatedAt | date: \"MMM d, yyyy - h:mm:ss a (UTC)\" }}\n      \n    \n  \n  \n    \n      {{ \"devices.no_devices_found\" | translate }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ \"devices.id\" | translate }}                                                {{ \"devices.os\" | translate }}                                                {{ \"devices.environment\" | translate }}                                                {{ \"devices.version\" | translate }}                                                {{ \"devices.architecture\" | translate }}                                                {{ \"devices.ip_address\" | translate }}                                                {{ \"devices.mac_address\" | translate }}                                                {{ \"devices.online\" | translate }}                                                {{ \"devices.last_registration\" | translate }}                                                  {{ device?.logSourceId }}                    {{ device?.os }}                    {{ device?.environment }}                    {{ device?.release.version }}                    {{ device?.architecture }}                    {{ device?.ipAddress }}                    {{ device?.macAddress }}                              @if (device.online) {                      } @else {                      }                            {{ device?.updatedAt | date: \"MMM d, yyyy - h:mm:ss a (UTC)\" }}                        {{ \"devices.no_devices_found\" | translate }}      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  standalone: true,\n  imports: [],\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.scss'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        documentation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'documentation works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EnvironmentsTableComponent.html":{"url":"components/EnvironmentsTableComponent.html","title":"component - EnvironmentsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EnvironmentsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/environments-table/environments-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-environments-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            ConfirmDialogModule\n                            DialogModule\n                            TableModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                                AccessDeniedComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./environments-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./environments-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                environments\n                            \n                            \n                                environmentsForm\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isAddNewDialogVisible\n                            \n                            \n                                isLoadingCreateNew\n                            \n                            \n                                isLoadingEnvironments\n                            \n                            \n                                isLoadingRemoveEnvironments\n                            \n                            \n                                selectedEnvironments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                createNewEnvironment\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeEnvironments\n                            \n                            \n                                    Private\n                                resetEnvironmentsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                showDeleteSelectionConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableAddAction\n                            \n                            \n                                enableEditAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewEnvironment\n                        \n                    \n                \n            \n            \n                \ncreateNewEnvironment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeEnvironments\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEnvironments(environments: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:226\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                environments\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetEnvironmentsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetEnvironmentsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:266\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(environment: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                environment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteSelectionConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteSelectionConfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleProjectEnvironments)\n    .pipe(\n      map(\n        (environments) =>\n          environments?.map((environment) => ({ environment })) ?? [],\n      ),\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environmentsForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    environment: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNew\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectAddEnvironments)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectEnvironments)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    isLoadingSingleProjectRemoveEnvironments,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { AccessDeniedComponent } from '../access-denied/access-denied.component';\nimport { AppState } from '../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport {\n  isLoadingSingleProjectAddEnvironments,\n  isLoadingSingleProjectEnvironments,\n  isLoadingSingleProjectRemoveEnvironments,\n  selectAddProjectEnvironmentsStatus,\n  selectRemoveProjectEnvironmentsStatus,\n  selectSingleProjectEnvironments,\n} from '../../../core/state/single-project/single-project.selectors';\nimport { filter, map, take } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport {\n  addProjectEnvironments,\n  loadProjectEnvironments,\n  removeProjectEnvironments,\n} from '../../../core/state/single-project/single-project.actions';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\n\n@Component({\n  selector: 'app-environments-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    ConfirmDialogModule,\n    DialogModule,\n    TableModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AccessDeniedComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './environments-table.component.html',\n  styleUrl: './environments-table.component.scss',\n})\nexport class EnvironmentsTableComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n\n  @Input()\n  project?: Project;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableEditAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  environmentsForm = this.formBuilder.group({\n    environment: ['', [Validators.required]],\n  });\n  isAddNewDialogVisible: boolean = false;\n\n  selectedEnvironments: { environment: string }[] = [];\n  environments = this.store\n    .select(selectSingleProjectEnvironments)\n    .pipe(\n      map(\n        (environments) =>\n          environments?.map((environment) => ({ environment })) ?? [],\n      ),\n    );\n  isLoadingEnvironments = this.store.select(isLoadingSingleProjectEnvironments);\n  isLoadingCreateNew = this.store.select(isLoadingSingleProjectAddEnvironments);\n  isLoadingRemoveEnvironments = this.store.select(\n    isLoadingSingleProjectRemoveEnvironments,\n  );\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      loadProjectEnvironments({ projectId: this.project?.projectId ?? '' }),\n    );\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteConfirmation(environment: string, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'environments-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'environments-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeEnvironments([environment]);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteSelectionConfirmation(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'environments-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'environments-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeEnvironments(\n          this.selectedEnvironments.map((value) => value.environment),\n        );\n      },\n      reject: () => {},\n    });\n  }\n\n  showAddDialog() {\n    this.resetEnvironmentsForm();\n    this.isAddNewDialogVisible = true;\n  }\n\n  createNewEnvironment() {\n    const environments: string[] = [\n      this.environmentsForm.get('environment')?.value ?? '',\n    ];\n    this.store.dispatch(\n      addProjectEnvironments({\n        projectId: this.project?.projectId ?? '',\n        environments: environments,\n      }),\n    );\n    this.store\n      .select(selectAddProjectEnvironmentsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('environments-table.error'),\n            detail: this.translateService.instant(\n              'environments-table.failed_to_create_environment',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'environments-table.success',\n            ),\n            detail: this.translateService.instant(\n              'environments-table.environment_created',\n            ),\n          });\n          this.isAddNewDialogVisible = !this.isAddNewDialogVisible;\n        }\n      });\n  }\n\n  private removeEnvironments(environments: string[]) {\n    this.store.dispatch(\n      removeProjectEnvironments({\n        projectId: this.project?.projectId ?? '',\n        environments: environments,\n      }),\n    );\n    this.store\n      .select(selectRemoveProjectEnvironmentsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('environments-table.error'),\n            detail: this.translateService.instant(\n              'environments-table.failed_to_delete_environments',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'environments-table.success',\n            ),\n            detail: this.translateService.instant(\n              'environments-table.removed_environments',\n            ),\n          });\n          this.selectedEnvironments = [];\n        }\n      });\n  }\n\n  private resetEnvironmentsForm() {\n    this.environmentsForm = this.formBuilder.group({\n      environment: ['', [Validators.required]],\n    });\n  }\n}\n\n    \n\n    \n        \n\n@if ((hasReadPermission | async) === false) {\n  \n} @else {\n  \n    \n      \n        \n          \n          \n        \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n            {{ \"environments-table.environment\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"environments-table.actions\" | translate }}\n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ environment.environment }}\n        \n        \n            \n          \n      \n    \n\n    \n        \n          {{ \"environments-table.no_environments_found\" | translate }}\n        \n      \n  \n}\n\n\n  \n    \n      \n        {{ \"environments-table.environment_label\" | translate }}\n          \n        {{ \"environments-table.environment_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((hasReadPermission | async) === false) {  } @else {                                                                                                                                            {{ \"environments-table.environment\" | translate }}                                                                        {{ \"environments-table.actions\" | translate }}                                                                                  {{ environment.environment }}                                                                      {{ \"environments-table.no_environments_found\" | translate }}                }                    {{ \"environments-table.environment_label\" | translate }}                  {{ \"environments-table.environment_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EnvironmentsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileDto.html":{"url":"interfaces/FileDto.html","title":"interface - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentType\n                                        \n                                \n                                \n                                        \n                                            createdTime\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            fileSize\n                                        \n                                \n                                \n                                        \n                                            stream\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stream\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stream:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileDto {\n  fileName: string;\n  url: string;\n  contentType: string;\n  fileSize: number;\n  createdTime: Date;\n  stream: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GuidesComponent.html":{"url":"components/GuidesComponent.html","title":"component - GuidesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GuidesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/guides/guides.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-guides\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./guides.component.html\n            \n\n\n\n            \n                styleUrl\n                ./guides.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  standalone: true,\n  imports: [],\n  templateUrl: './guides.component.html',\n  styleUrl: './guides.component.scss'\n})\nexport class GuidesComponent {\n\n}\n\n    \n\n    \n        guides works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'guides works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GuidesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationErrorSubscription\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:243\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:177\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:218\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:232\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:254\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:268\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\nimport { loadCurrentOrganization } from '../../core/state/organization/organization.actions';\nimport { selectOrganizationError } from '../../core/state/organization/organization.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n  private organizationErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.home = { icon: 'pi pi-home', routerLink: '/home' };\n  }\n\n  ngAfterViewInit() {\n    this.organizationErrorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error &&\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 401\n        ) {\n          this.router.navigate(['/create-organization']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n    this.organizationErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, routerLink: [url] });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/invitation.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./user.entity\";\n\nexport interface Invitation {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                invitationHash\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService, invitationService: InvitationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        invitationHash\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  isLoadingAuthState,\n  selectAcceptInvitationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport {\n  acceptInvitation,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { InvitationService } from '../../../../core/services/api/invitation.api.service';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss',\n})\nexport class InvitationComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n  @Input()\n  private invitationHash?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private invitationService: InvitationService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    this.invitationService.getInvitationDetails(this.invitationHash ?? '').subscribe({\n      next: (details) => {\n        this.registerForm.get('email')?.setValue(details.email);\n      },\n      error: () => {\n        this.router.navigate(['/auth'])\n      }\n    })\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAcceptInvitationError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 409) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_username_exists',\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_wrong_hash',\n              ),\n            });\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(\n      acceptInvitation({ dto: dto, invitationHash: this.invitationHash ?? '' }),\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.invitation.welcome_message\" | translate }}\n  \n  {{\n    \"auth.invitation.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.invitation.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.invitation.username_is_required\" | translate }}\n    {{ \"auth.invitation.username_length\" | translate }}\n\n    {{ \"auth.invitation.password_label\" | translate }}\n    \n    {{ \"auth.invitation.password_length\" | translate }}\n    {{ \"auth.invitation.password_not_strong\" | translate }}\n\n    {{\n      \"auth.invitation.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.invitation.email_is_required\" | translate }}\n\n    {{ \"auth.invitation.first_name_label\" | translate }}\n    \n    {{ \"auth.invitation.first_name_is_required\" | translate }}\n\n    {{ \"auth.invitation.last_name_label\" | translate }}\n    \n    {{ \"auth.invitation.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.invitation.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.invitation.welcome_message\" | translate }}    {{    \"auth.invitation.welcome_description\" | translate  }}      {{ \"auth.invitation.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.invitation.username_is_required\" | translate }}    {{ \"auth.invitation.username_length\" | translate }}    {{ \"auth.invitation.password_label\" | translate }}        {{ \"auth.invitation.password_length\" | translate }}    {{ \"auth.invitation.password_not_strong\" | translate }}    {{      \"auth.invitation.email_label\" | translate    }}                        {{ \"auth.invitation.email_is_required\" | translate }}    {{ \"auth.invitation.first_name_label\" | translate }}        {{ \"auth.invitation.first_name_is_required\" | translate }}    {{ \"auth.invitation.last_name_label\" | translate }}        {{ \"auth.invitation.last_name_is_required\" | translate }}          {{ \"auth.invitation.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationDto.html":{"url":"interfaces/InvitationDto.html","title":"interface - InvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/invitation.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"../models/user.entity\";\n\nexport interface InvitationDto {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationRequestDto.html":{"url":"interfaces/InvitationRequestDto.html","title":"interface - InvitationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/invitation-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InvitationRequestDto {\n    email: string,\n    roleId: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitationService.html":{"url":"injectables/InvitationService.html","title":"injectable - InvitationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/invitation.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation\n                            \n                            \n                                getInvitationDetails\n                            \n                            \n                                inviteMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/invitation.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation\n                        \n                    \n                \n            \n            \n                \nacceptInvitation(invitationHash: string, dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInvitationDetails\n                        \n                    \n                \n            \n            \n                \ngetInvitationDetails(invitationHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember\n                        \n                    \n                \n            \n            \n                \ninviteMember(dto: InvitationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            InvitationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InvitationDto } from '../../domain/dto/invitation.dto';\nimport { InvitationRequestDto } from '../../domain/dto/requests/invitation-request.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvitationService {\n  constructor(private http: HttpClient) {}\n\n  inviteMember(dto: InvitationRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/send',\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getInvitationDetails(invitationHash: string): Observable {\n    return this.http.get(\n      api.invitationUrl + '/details/' + invitationHash,\n      api.noAuthOptions,\n    );\n  }\n\n  acceptInvitation(invitationHash: string, dto: RegisterRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/accept/' + invitationHash,\n      dto,\n      api.noAuthOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssuesComponent.html":{"url":"components/IssuesComponent.html","title":"component - IssuesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssuesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/issues/issues.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issues\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./issues.component.html\n            \n\n\n\n            \n                styleUrl\n                ./issues.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-issues',\n  standalone: true,\n  imports: [],\n  templateUrl: './issues.component.html',\n  styleUrl: './issues.component.scss'\n})\nexport class IssuesComponent {\n\n}\n\n    \n\n    \n        issues works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'issues works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssuesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                restoreConfig\n                            \n                            \n                                saveConfig\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:211\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:220\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:199\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:227\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:156\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreConfig\n                        \n                    \n                \n            \n            \n                \nrestoreConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:190\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:180\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:100\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:130\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:145\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:139\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:151\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:115\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogSessionDto.html":{"url":"interfaces/LogSessionDto.html","title":"interface - LogSessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogSessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/log-session.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFree\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            logSourceId\n                                        \n                                \n                                \n                                        \n                                            networkSpeed\n                                        \n                                \n                                \n                                        \n                                            networkType\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logSourceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logSourceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networkSpeed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkSpeed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networkType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogSessionDto {\n  sessionId: string;\n  startTime: Date;\n  endTime: Date;\n  networkType: string;\n  networkSpeed: string;\n  crashFree: boolean;\n  projectId: string;\n  logSourceId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogSessionService.html":{"url":"injectables/LogSessionService.html","title":"injectable - LogSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/log-session.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/log-session.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(pageable: Pageable, filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/log-session.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageable\n                                            \n                                                            Pageable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Pageable } from \"../../domain/pageable/pageable.dto\";\nimport { LogSessionDto } from \"../../domain/dto/log-session.dto\";\nimport { Page } from \"../../domain/pageable/page.dto\";\nimport { Observable } from \"rxjs\";\nimport { api } from \"./api\";\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class LogSessionService {\n    constructor(private http: HttpClient) {}\n  \n    findAll(\n      pageable: Pageable,\n      filters: {\n        projectIds?: string[];\n        logSourceIds?: string[];\n        search?: string;\n      },\n    ): Observable> {\n      const params: {\n        [param: string]:\n          | string\n          | number\n          | boolean\n          | readonly (string | number | boolean)[];\n      } = {};\n      params['page'] = pageable.page;\n      params['size'] = pageable.size;\n      params['sort'] = pageable.sort;\n      if (filters.logSourceIds) {\n          params['logSourceIds'] = filters.logSourceIds;\n      }\n      if (filters.projectIds) {\n        params['projectIds'] = filters.projectIds;\n      }\n      if (filters.search) {\n        params['search'] = filters.search;\n      }\n  \n      return this.http.get>(api.logSessionUrl, {\n        ...api.authOptions,\n        params: params,\n      });\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogSourceDto.html":{"url":"interfaces/LogSourceDto.html","title":"interface - LogSourceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogSourceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/log-source.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            architecture\n                                        \n                                \n                                \n                                        \n                                            cpuInfo\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            ipAddress\n                                        \n                                \n                                \n                                        \n                                            logSourceId\n                                        \n                                \n                                \n                                        \n                                            macAddress\n                                        \n                                \n                                \n                                        \n                                            maxRam\n                                        \n                                \n                                \n                                        \n                                            online\n                                        \n                                \n                                \n                                        \n                                            os\n                                        \n                                \n                                \n                                        \n                                            osVersion\n                                        \n                                \n                                \n                                        \n                                            release\n                                        \n                                \n                                \n                                        \n                                            uniqueIdentifier\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        architecture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        architecture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cpuInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cpuInfo:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ipAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ipAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logSourceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logSourceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        macAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        macAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRam:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        online\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        online:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        os:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        osVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release:         ProjectReleaseDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProjectReleaseDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uniqueIdentifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uniqueIdentifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ProjectReleaseDto } from \"./project-release.dto\";\n\nexport interface LogSourceDto {\n  logSourceId: string;\n  uniqueIdentifier: string;\n  os: string;\n  osVersion: string;\n  environment: string;\n  ipAddress: string;\n  cpuInfo: {\n    model: string;\n    seed: number;\n    cores: number;\n    threads: number;\n  };\n  macAddress: string;\n  release: ProjectReleaseDto;\n  maxRam: number;\n  architecture: string;\n  createdAt: Date;\n  updatedAt: Date;\n  online: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogSourceService.html":{"url":"injectables/LogSourceService.html","title":"injectable - LogSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/log-source.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/log-source.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(pageable: Pageable, filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/log-source.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageable\n                                            \n                                                            Pageable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Page } from '../../domain/pageable/page.dto';\nimport { LogSourceDto } from '../../domain/dto/log-source.dto';\nimport { api } from './api';\nimport { Pageable } from '../../domain/pageable/pageable.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogSourceService {\n  constructor(private http: HttpClient) {}\n\n  findAll(\n    pageable: Pageable,\n    filters: {\n      projectIds: string[];\n      environments?: string[];\n      releaseIds?: string[];\n      search?: string;\n    },\n  ): Observable> {\n    const params: {\n      [param: string]:\n        | string\n        | number\n        | boolean\n        | readonly (string | number | boolean)[];\n    } = {};\n    params['page'] = pageable.page;\n    params['size'] = pageable.size;\n    params['sort'] = pageable.sort;\n    params['projectIds'] = filters.projectIds;\n    if (filters.environments) {\n      params['environments'] = filters.environments;\n    }\n    if (filters.releaseIds) {\n        params['releaseIds'] = filters.releaseIds;\n    }\n    if (filters.search) {\n      params['search'] = filters.search;\n    }\n\n    return this.http.get>(api.logSourceUrl, {\n      ...api.authOptions,\n      params: params,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/logs/logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logs\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logs.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-logs',\n  standalone: true,\n  imports: [],\n  templateUrl: './logs.component.html',\n  styleUrl: './logs.component.scss'\n})\nexport class LogsComponent {\n\n}\n\n    \n\n    \n        logs works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logs works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberPickerComponent.html":{"url":"components/MemberPickerComponent.html","title":"component - MemberPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/member-picker/member-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./member-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./member-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInitials\n                            \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onMembersPicked\n                            \n                            \n                                onMembersRemoved\n                            \n                            \n                                selectedMembers\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onMembersPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMembersRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMembers\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingActiveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  PickListModule,\n  PickListMoveAllToSourceEvent,\n  PickListMoveAllToTargetEvent,\n  PickListMoveToSourceEvent,\n  PickListMoveToTargetEvent,\n} from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { filter, take } from 'rxjs';\nimport { User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadActiveMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingActiveMembers,\n  selectActiveMembers,\n} from '../../../core/state/members/members.selectors';\n\n@Component({\n  selector: 'app-member-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './member-picker.component.html',\n  styleUrl: './member-picker.component.scss',\n})\nexport class MemberPickerComponent {\n  constructor(private store: Store) {}\n  isLoadingMembers = this.store.select(isLoadingActiveMembers);\n  availableMembers: User[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedMembers: User[] = [];\n\n  @Input()\n  onMembersPicked?: (member: User[]) => void;\n\n  @Input()\n  onMembersRemoved?: (member: User[]) => void;\n\n  getUserInitials(member: User): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  showPickerDialog() {\n    this.store.dispatch(loadActiveMembers());\n    this.store\n      .select(selectActiveMembers)\n      .pipe(\n        filter((members) => members !== undefined && members !== null),\n        take(1) // unsubscribe after one emitted value\n      )\n      .subscribe((members) => {\n        // Filter out members that are also present in selectedMembers\n        this.availableMembers = members?.filter(\n          (member) => !this.selectedMembers.some((selected) => selected.userId === member.userId)\n        ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onMembersRemoved) {\n      this.onMembersRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onMembersPicked) {\n      this.onMembersPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onMembersRemoved) {\n      this.onMembersRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onMembersPicked) {\n      this.onMembersPicked(event.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        @if (!user.pictureUrl || user.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n        \n          {{ user.firstName }} {{ user.lastName }}\n          \n            {{ user.email }}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (!user.pictureUrl || user.pictureUrl === null) {                  } @else {                  }                  {{ user.firstName }} {{ user.lastName }}                      {{ user.email }}                                      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersComponent.html":{"url":"components/MembersComponent.html","title":"component - MembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/members/members.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-members\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                                MembersTableComponent\n                                AccessDeniedComponent\n                            TranslateModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMembers\n                            \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                invitedMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/members/members.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/members/members.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invitedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { PanelModule } from 'primeng/panel';\nimport { ToastModule } from 'primeng/toast';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadOrganizationMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingMembers,\n  selectOrganizationMembers,\n  selectInvitedMembers,\n  selectOwnerAsArray,\n} from '../../../core/state/members/members.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { MembersTableComponent } from '../../../shared/components/members-table/members-table.component';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-members',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    MembersTableComponent,\n    AccessDeniedComponent,\n    TranslateModule,\n    PanelModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './members.component.html',\n  styleUrl: './members.component.scss',\n})\nexport class MembersComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  );\n  isLoadingMembers = this.store.select(isLoadingMembers);\n  activeMembers = this.store\n    .select(selectOrganizationMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  invitedMembers = this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  owner = this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit() {\n    this.store.dispatch(loadOrganizationMembers());\n  }\n}\n\n    \n\n    \n        \n@if (hasReadPermission | async) {\n   -->\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n   -->\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {   -->                                             -->} @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersDto.html":{"url":"interfaces/MembersDto.html","title":"interface - MembersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/members.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invitations\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invitations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitations:     InvitationDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InvitationDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         UserDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     UserDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InvitationDto } from \"./invitation.dto\";\nimport { UserDto } from \"./user.dto\";\n\nexport interface MembersDto {\n    users: UserDto[];\n    invitations: InvitationDto[];\n    owner: UserDto;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersEffects.html":{"url":"injectables/MembersEffects.html","title":"injectable - MembersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inviteMember$\n                            \n                            \n                                loadActiveMembers$\n                            \n                            \n                                loadOrganizationMembers$\n                            \n                            \n                                removeMember$\n                            \n                            \n                                removeMemberSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(membersService: MembersService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/members/members.effects.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        membersService\n                                                  \n                                                        \n                                                                        MembersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadActiveMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadActiveMembers),\n      switchMap(() =>\n        this.membersService.getActiveMembers().pipe(\n          map((members) => loadActiveMembersSuccess({members: members})),\n          catchError((error) => of(loadActiveMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMemberSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:77\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadActiveMembers,\n  loadActiveMembersFailure,\n  loadActiveMembersSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { MembersService } from '../../services/api/members.api.service';\nimport { Injectable } from '@angular/core';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class MembersEffects {\n  constructor(\n    private membersService: MembersService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadActiveMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadActiveMembers),\n      switchMap(() =>\n        this.membersService.getActiveMembers().pipe(\n          map((members) => loadActiveMembersSuccess({members: members})),\n          catchError((error) => of(loadActiveMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  inviteMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMemberSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersService.html":{"url":"injectables/MembersService.html","title":"injectable - MembersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/members.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveMembers\n                            \n                            \n                                getMembers\n                            \n                            \n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/members.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveMembers\n                        \n                    \n                \n            \n            \n                \ngetActiveMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMembers\n                        \n                    \n                \n            \n            \n                \ngetMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { api } from './api';\nimport { UserDto } from '../../domain/dto/user.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  constructor(private http: HttpClient) {}\n\n  getMembers(): Observable {\n    return this.http.get(api.membersUrl, api.authOptions);\n  }\n\n  getActiveMembers(): Observable {\n    return this.http.get(api.membersUrl + '/active', api.authOptions);\n  }\n\n\n  removeMember(memberId: string) {\n    return this.http.delete(api.membersUrl + '/' + memberId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersState.html":{"url":"interfaces/MembersState.html","title":"interface - MembersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeMembers\n                                        \n                                \n                                \n                                        \n                                            activeMembersError\n                                        \n                                \n                                \n                                        \n                                            activeMembersStatus\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            invitationStatus\n                                        \n                                \n                                \n                                        \n                                            invitedMember\n                                        \n                                \n                                \n                                        \n                                            inviteMemberError\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            removeMemberError\n                                        \n                                \n                                \n                                        \n                                            removeMemberStatus\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembers:         User[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitedMember\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitedMember:         Invitation | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invitation | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         MembersDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Invitation } from '../../domain/models/invitation.entity';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadActiveMembers,\n  loadActiveMembersFailure,\n  loadActiveMembersSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { User } from '../../domain/models/user.entity';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface MembersState {\n  members: MembersDto | null;\n  activeMembers: User[] | null;\n  error: any | null;\n  inviteMemberError: any | null;\n  activeMembersError: any | null;\n  removeMemberError: any | null;\n  invitedMember: Invitation | null;\n  status: StateStatus;\n  invitationStatus: StateStatus;\n  removeMemberStatus: StateStatus;\n  activeMembersStatus: StateStatus;\n}\n\nexport const initialState: MembersState = {\n  members: null,\n  activeMembers: null,\n  error: undefined,\n  inviteMemberError: null,\n  invitedMember: null,\n  removeMemberError: null,\n  activeMembersError: null,\n  status: StateStatus.PENDING,\n  invitationStatus: StateStatus.PENDING,\n  removeMemberStatus: StateStatus.PENDING,\n  activeMembersStatus: StateStatus.PENDING,\n};\n\nexport const membersReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadOrganizationMembers, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationMembersSuccess, (state, members) => ({\n    ...state,\n    members: members,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationMembersFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  on(inviteMember, (state) => ({\n    ...state,\n    inviteMemberError: null,\n    invitedMember: null,\n    invitationStatus: StateStatus.LOADING,\n  })),\n\n  on(inviteMemberSuccess, (state, invitedMember) => ({\n    ...state,\n    invitedMember: invitedMember,\n    members: {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      owner: state.members?.owner!,\n      invitations: [...(state.members?.invitations || []), invitedMember],\n      users: state.members?.users || [],\n    },\n    inviteMemberError: null,\n    invitationStatus: StateStatus.SUCCESS,\n  })),\n\n  on(inviteMemberFailure, (state, { error }) => ({\n    ...state,\n    inviteMemberError: error,\n    invitationStatus: StateStatus.ERROR,\n  })),\n\n  on(removeMember, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.LOADING,\n  })),\n\n  on(removeMemberSuccess, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeMemberFailure, (state, { error }) => ({\n    ...state,\n    removeMemberError: error,\n    removeMemberStatus: StateStatus.ERROR,\n  })),\n\n  on(loadActiveMembers, (state) => ({\n    ...state,\n    activeMembersError: null,\n    activeMembersStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadActiveMembersSuccess, (state, { members }) => ({\n    ...state,\n    activeMembers: members,\n    activeMembersError: null,\n    activeMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadActiveMembersFailure, (state, { error }) => ({\n    ...state,\n    activeMembersError: error,\n    activeMembersStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersTableComponent.html":{"url":"components/MembersTableComponent.html","title":"component - MembersTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/members-table/members-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-members-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ToastModule\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                inviteNewUserForm\n                            \n                            \n                                isInviteDialogVisible\n                            \n                            \n                                isLoadingRemoveMembers\n                            \n                            \n                                isLoadingSendInvitation\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetInviteForm\n                            \n                            \n                                sendInvite\n                            \n                            \n                                showInviteDialog\n                            \n                            \n                                showRemoveMemberConfirmation\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enableInviteAction\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     User[] | InvitationDto[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:84\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableInviteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:75\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetInviteForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetInviteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendInvite\n                        \n                    \n                \n            \n            \n                \nsendInvite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInviteDialog\n                        \n                    \n                \n            \n            \n                \nshowInviteDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRemoveMemberConfirmation\n                        \n                    \n                \n            \n            \n                \nshowRemoveMemberConfirmation(member: any, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteNewUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInviteDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingRemoveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingSendInvitation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSendInvitation)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectRoles)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { filter, take } from 'rxjs';\nimport { InvitationDto } from '../../../core/domain/dto/invitation.dto';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Role, User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport {\n  inviteMember,\n  removeMember,\n} from '../../../core/state/members/members.actions';\nimport {\n  isLoadingRemoveMembers,\n  isLoadingSendInvitation,\n  selectInvitationSendStatus,\n  selectRemoveMemberStatus,\n} from '../../../core/state/members/members.selectors';\nimport { loadRoles } from '../../../core/state/role/role.actions';\nimport { selectRoles } from '../../../core/state/role/role.selectors';\n\n@Component({\n  selector: 'app-members-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastModule,\n    ConfirmDialogModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './members-table.component.html',\n  styleUrl: './members-table.component.scss',\n})\nexport class MembersTableComponent {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: User[] | InvitationDto[] = undefined;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableInviteAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  roles = this.store.select(selectRoles);\n  inviteNewUserForm = this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  });\n  isInviteDialogVisible: boolean = false;\n\n  isLoadingSendInvitation = this.store.select(isLoadingSendInvitation);\n  isLoadingRemoveMembers = this.store.select(isLoadingRemoveMembers);\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showInviteDialog() {\n    this.resetInviteForm();\n    this.store.dispatch(loadRoles());\n    this.isInviteDialogVisible = true;\n  }\n\n  sendInvite() {\n    this.store\n      .select(selectInvitationSendStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_send_invite',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant('members-table.invite_sent'),\n          });\n          this.isInviteDialogVisible = !this.isInviteDialogVisible;\n        }\n      });\n\n    const dto = {\n      email: this.inviteNewUserForm.get('email')?.value ?? '',\n      roleId: this.inviteNewUserForm.get('role')?.value?.roleId ?? '',\n    };\n    this.store.dispatch(inviteMember(dto));\n  }\n\n  private resetInviteForm() {\n    this.inviteNewUserForm = this.formBuilder.group({\n      role: [undefined as Role | undefined, [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showRemoveMemberConfirmation(member: any, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'members-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'members-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(member);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(member: any) {\n    this.store\n      .select(selectRemoveMemberStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_remove_member',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant(\n              'members-table.removed_memeber',\n            ),\n          });\n        }\n      });\n\n    let memberId = '';\n    if (member.userId) {\n      memberId = member.userId;\n    } else if (member.invitationId) {\n      memberId = member.invitationId;\n    }\n    this.store.dispatch(removeMember({ memberId: memberId }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getUserInitials(member: any): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"members-table.first_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.last_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.email\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.role\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.avatar\" | translate }}\n        \n      \n      \n        \n          {{ \"members-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ member?.firstName }}\n      \n      \n        {{ member?.lastName }}\n      \n      \n        {{ member.email }}\n      \n      \n        {{ member.role.name }}\n      \n      \n        @if (!member.pictureUrl || member.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"members-table.no_members_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"members-table.email_label\" | translate }}\n        \n          \n          \n        \n        {{ \"members-table.email_is_required\" | translate }}\n        {{ \"members-table.invalid_email\" | translate }}\n\n        {{ \"members-table.role_label\" | translate }}\n        \n        {{ \"members-table.role_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"members-table.first_name\" | translate }}                                                          {{ \"members-table.last_name\" | translate }}                                                          {{ \"members-table.email\" | translate }}                                                          {{ \"members-table.role\" | translate }}                                                          {{ \"members-table.avatar\" | translate }}                                      {{ \"members-table.actions\" | translate }}                                        {{ member?.firstName }}                    {{ member?.lastName }}                    {{ member.email }}                    {{ member.role.name }}                    @if (!member.pictureUrl || member.pictureUrl === null) {                  } @else {                  }                                            {{ \"members-table.no_members_found\" | translate }}                          {{ \"members-table.email_label\" | translate }}                                            {{ \"members-table.email_is_required\" | translate }}        {{ \"members-table.invalid_email\" | translate }}        {{ \"members-table.role_label\" | translate }}                {{ \"members-table.role_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/messages/messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  standalone: true,\n  imports: [],\n  templateUrl: './messages.component.html',\n  styleUrl: './messages.component.scss'\n})\nexport class MessagesComponent {\n\n}\n\n    \n\n    \n        messages works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'messages works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            RouterModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [CommonModule, ButtonModule, RippleModule, RouterModule, TranslateModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        404\n        \n          {{ \"not-found.not_found\" | translate }}\n        \n        \n          {{ \"not-found.not_available\" | translate }}\n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        404                  {{ \"not-found.not_found\" | translate }}                          {{ \"not-found.not_available\" | translate }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/notifications/notifications.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notifications.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})\nexport class NotificationsComponent {\n\n}\n\n    \n\n    \n        notifications works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notifications works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/organization.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Organization {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/organization/organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            PanelModule\n                            TranslateModule\n                            DividerModule\n                            BadgeModule\n                            InputTextModule\n                            ButtonModule\n                            RippleModule\n                            InputNumberModule\n                            FormsModule\n                            AvatarModule\n                            FileUploadModule\n                            ToastModule\n                            ProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archivePeriod\n                            \n                            \n                                cleanupPeriod\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                isUploadInProgress\n                            \n                            \n                                organization\n                            \n                            \n                                    \n                                primeFileUpload\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                deleteOrganization\n                            \n                            \n                                getOrganizationInitials\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                stringToColour\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateOrganizationNameAndSlug\n                            \n                            \n                                uploadNewAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, organizationService: OrganizationService, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \ndeleteOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationInitials\n                        \n                    \n                \n            \n            \n                \ngetOrganizationInitials(organization: Organization | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organization\n                                            \n                                                            Organization | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationNameAndSlug\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationNameAndSlug(name: string, slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadNewAvatar\n                        \n                    \n                \n            \n            \n                \nuploadNewAvatar($event: FileUploadHandlerEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        FileUploadHandlerEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        archivePeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanupPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUploadInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isUpdateOrganizationPictureLoading)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        primeFileUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileUpload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileUpload')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport {\n  FileUpload,\n  FileUploadHandlerEvent,\n  FileUploadModule\n} from 'primeng/fileupload';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Organization } from '../../../core/domain/models/organization.entity';\nimport { OrganizationService } from '../../../core/services/api/organization.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { updateOrganizationPicture } from '../../../core/state/organization/organization.actions';\nimport {\n  isUpdateOrganizationPictureLoading,\n  selectCurrentOrganization,\n  selectUpdateOrganizationPictureStatus,\n} from '../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PanelModule,\n    TranslateModule,\n    DividerModule,\n    BadgeModule,\n    InputTextModule,\n    ButtonModule,\n    RippleModule,\n    InputNumberModule,\n    FormsModule,\n    AvatarModule,\n    FileUploadModule,\n    ToastModule,\n    ProgressSpinnerModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './organization.component.html',\n  styleUrl: './organization.component.scss',\n})\nexport class OrganizationComponent implements OnDestroy, AfterViewInit {\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('fileUpload') primeFileUpload!: FileUpload;\n\n  constructor(\n    private store: Store,\n    private organizationService: OrganizationService,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  organization = this.store.select(selectCurrentOrganization);\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  );\n  isSlugTaken: boolean | null = null;\n  archivePeriod: number = 30;\n  cleanupPeriod: number = 90;\n  isUploadInProgress = this.store.select(isUpdateOrganizationPictureLoading);\n\n  private slugCheckSubscription?: Subscription;\n\n  ngAfterViewInit() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n  }\n\n  deleteOrganization() {\n    throw new Error('Method not implemented.');\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  getOrganizationInitials(organization: Organization | null): string {\n    if (organization == null) {\n      return 'NA';\n    } else {\n      let result = '';\n      organization.slug.split('-').forEach((value) => {\n        result += value.charAt(0);\n      });\n      return result;\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  uploadNewAvatar($event: FileUploadHandlerEvent) {\n    if ($event.files.length > 0) {\n      const file = $event.files[0];\n      this.primeFileUpload.uploading = true;\n      this.primeFileUpload.progress = 0;\n      this.store.dispatch(updateOrganizationPicture({ file: file }));\n      this.store\n        .select(selectUpdateOrganizationPictureStatus)\n        .pipe(\n          filter(\n            (status) =>\n              status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n          ),\n          take(1), // unsubscribe after one emitted value\n        )\n        .subscribe((status) => {\n          if (status && status == StateStatus.ERROR) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant('organization.error'),\n              detail: this.translateService.instant(\n                'organization.failed_to_upload_picture',\n              ),\n            });\n          } else {\n            this.primeFileUpload.clear();\n          }\n          this.primeFileUpload.uploading = false;\n          this.primeFileUpload.progress = 100;\n        });\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateOrganizationNameAndSlug(name: string, slug: string) {\n    throw new Error('Method not implemented.');\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n        {{ \"organization.id\" | translate }}\n      \n      {{ \"organization.id_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.slug\" | translate }}\n      \n      {{ \"organization.slug_description\" | translate }}\n    \n    \n      \n        @if (!isSlugTaken) {\n          \n        } @else {\n          \n        }\n        \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.name\" | translate }}\n      \n      {{ \"organization.name_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      {{ \"organization.avatar\" | translate }}\n    \n    \n      @if (\n        !(organization | async)?.pictureUrl ||\n        (organization | async)?.pictureUrl === null\n      ) {\n        \n      } @else {\n        \n      }\n\n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.archive_period\" | translate }}\n      \n      {{ \"organization.archive_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.cleanup_period\" | translate }}\n      \n      {{ \"organization.cleanup_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.delete\" | translate }}\n      \n      {{ \"organization.delete_description\" | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ \"organization.id\" | translate }}            {{ \"organization.id_description\" | translate }}                                          {{ \"organization.slug\" | translate }}            {{ \"organization.slug_description\" | translate }}                      @if (!isSlugTaken) {                  } @else {                  }                                          {{ \"organization.name\" | translate }}            {{ \"organization.name_description\" | translate }}                                  {{ \"organization.avatar\" | translate }}              @if (        !(organization | async)?.pictureUrl ||        (organization | async)?.pictureUrl === null      ) {              } @else {              }                                      {{ \"organization.archive_period\" | translate }}            {{ \"organization.archive_period_description\" | translate }}                                                {{ \"organization.cleanup_period\" | translate }}            {{ \"organization.cleanup_period_description\" | translate }}                                              {{ \"organization.delete\" | translate }}            {{ \"organization.delete_description\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDto.html":{"url":"interfaces/OrganizationDto.html","title":"interface - OrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/organization.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDto {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationEffects.html":{"url":"injectables/OrganizationEffects.html","title":"injectable - OrganizationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrganization$\n                            \n                            \n                                loadCurrentOrganization$\n                            \n                            \n                                updateOrganizationPicture$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/organization/organization.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { OrganizationService } from \"../../services/api/organization.api.service\";\nimport { createOrganization, createOrganizationSuccess, loadCurrentOrganization, loadCurrentOrganizationFailure, loadCurrentOrganizationSuccess, updateOrganizationPicture, updateOrganizationPictureFailure, updateOrganizationPictureSuccess } from \"./organization.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class OrganizationEffects {\n  constructor(\n    private organizationService: OrganizationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createNewOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateOrganizationPicture$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/organization.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getOrganization\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                updateOrganizationPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/organization.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(dto: CreateOrganizationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrganizationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganization\n                        \n                    \n                \n            \n            \n                \ngetOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationPicture(picture: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../domain/dto/requests/create-organization-request.dto';\nimport { OrganizationDto } from '../../domain/dto/organization.dto';\nimport { api } from './api';\nimport { FileDto } from '../../domain/dto/file.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationService {\n  constructor(private http: HttpClient) {}\n\n  createOrganization(\n    dto: CreateOrganizationRequestDto,\n  ): Observable {\n    return this.http.post(\n      api.organizationUrl,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getOrganization(): Observable {\n    return this.http.get(api.organizationUrl, api.authOptions);\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.organizationUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  updateOrganizationPicture(picture: File): Observable {\n    const data = new FormData();\n    data.append('picture', picture);\n    return this.http.patch(\n      api.organizationUrl + '/update-picture',\n      data,\n      api.authOptionsAutoContentType,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationState.html":{"url":"interfaces/OrganizationState.html","title":"interface - OrganizationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            organization\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatePictureError\n                                        \n                                \n                                \n                                        \n                                            updatePictureStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organization:         Organization | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organization | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Organization } from '../../domain/models/organization.entity';\nimport {\n  createOrganization,\n  createOrganizationFailure,\n  createOrganizationSuccess,\n  loadCurrentOrganization,\n  loadCurrentOrganizationFailure,\n  loadCurrentOrganizationSuccess,\n  updateOrganizationPicture,\n  updateOrganizationPictureFailure,\n  updateOrganizationPictureSuccess,\n} from './organization.actions';\n\nexport interface OrganizationState {\n  organization: Organization | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updatePictureError: any | null;\n  status: StateStatus;\n  updatePictureStatus: StateStatus;\n}\n\nexport const initialState: OrganizationState = {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n  updatePictureError: undefined,\n  updatePictureStatus: StateStatus.PENDING\n};\n\nexport const organizationReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle update organization picture\n  on(updateOrganizationPicture, (state) => ({\n    ...state,\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.LOADING,\n  })),\n\n  //Handle update organization picture success\n  on(updateOrganizationPictureSuccess, (state, fileDto) => ({\n    ...state,\n    organization: {...state.organization!, pictureUrl: fileDto.url},\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handleupdate organization picture failure\n  on(updateOrganizationPictureFailure, (state, { error }) => ({\n    ...state,\n    updatePictureError: error,\n    updatePictureStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/pageable/page.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            empty\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            numberOfElements\n                                        \n                                \n                                \n                                        \n                                            pageable\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        empty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageable:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Page {\n  content: T[];\n  pageable: {\n    pageNumber: number;\n    pageSize: number;\n    sort: {\n      sorted: boolean;\n      unsorted: boolean;\n      empty: boolean;\n    };\n    offset: number;\n    paged: boolean;\n    unpaged: boolean;\n  };\n  totalPages: number;\n  totalElements: number;\n  last: boolean;\n  first: boolean;\n  size: number;\n  number: number;\n  sort: {\n    sorted: boolean;\n    unsorted: boolean;\n    empty: boolean;\n  };\n  numberOfElements: number;\n  empty: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pageable.html":{"url":"interfaces/Pageable.html","title":"interface - Pageable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pageable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/pageable/pageable.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pageable {\n    page: number;\n    size: number;\n    sort: string[];\n}\n\nexport class PageableDefault implements Pageable{\n    size: number = 10;\n    page: number = 0;\n    sort: string[] = [];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableDefault.html":{"url":"classes/PageableDefault.html","title":"class - PageableDefault","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableDefault\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/pageable/pageable.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Pageable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                page\n                            \n                            \n                                size\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/core/domain/pageable/pageable.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/core/domain/pageable/pageable.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/domain/pageable/pageable.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Pageable {\n    page: number;\n    size: number;\n    sort: string[];\n}\n\nexport class PageableDefault implements Pageable{\n    size: number = 10;\n    page: number = 0;\n    sort: string[] = [];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/platform.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"./enums/platform-type.enum\";\n\nexport interface Platform {\n    platformId: string;\n    type: PlatformType;\n    version: string;\n    iconUrl: string | null;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformDto.html":{"url":"interfaces/PlatformDto.html","title":"interface - PlatformDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/platform.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"../models/enums/platform-type.enum\";\n\nexport interface PlatformDto {\n  platformId: string;\n  type: PlatformType;\n  version: string;\n  iconUrl: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformEffects.html":{"url":"injectables/PlatformEffects.html","title":"injectable - PlatformEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformService: PlatformService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/platform/platform.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformService\n                                                  \n                                                        \n                                                                        PlatformService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/platform/platform.effects.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { PlatformService } from '../../services/api/platform.api.service';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\n@Injectable()\nexport class PlatformEffects {\n  constructor(\n    private platformService: PlatformService,\n    private actions$: Actions,\n  ) {}\n\n  loadPlatforms$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformService.html":{"url":"injectables/PlatformService.html","title":"injectable - PlatformService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/platform.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatforms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/platform.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/platform.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PlatformDto } from '../../domain/dto/platform.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlatformService {\n  constructor(private http: HttpClient) {}\n\n  getPlatforms(): Observable {\n    return this.http.get(api.platformUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformState.html":{"url":"interfaces/PlatformState.html","title":"interface - PlatformState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:         Platform[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Platform } from '../../domain/models/platform.entity';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\nexport interface PlatformState {\n  platforms: Platform[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: PlatformState = {\n  platforms: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const platformReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadPlatforms, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadPlatformsSuccess, (state, params) => ({\n    ...state,\n    platforms: params.platforms,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadPlatformsFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            environments\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            releases\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        environments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environments:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         Platform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releases\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releases:     ProjectRelease[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectRelease[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Platform } from \"./platform.entity\"\nimport { ProjectRelease } from \"./project-release.entity\"\n\nexport interface Project {\n    projectId: string,\n    name: string,\n    platform: Platform,\n    environments: string[],\n    releases: ProjectRelease[],\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDebugFile.html":{"url":"interfaces/ProjectDebugFile.html","title":"interface - ProjectDebugFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDebugFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project-debug-file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            debugFileId\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugFileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugFileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DebugFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugFileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugFileType } from \"./enums/debug-file-type.enum\";\n\nexport interface ProjectDebugFile {\n  debugFileId: string;\n  type: DebugFileType;\n  fileUrl: string;\n  file: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDebugFileDto.html":{"url":"interfaces/ProjectDebugFileDto.html","title":"interface - ProjectDebugFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDebugFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-debug-file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            debugFileId\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugFileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugFileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DebugFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugFileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugFileType } from \"../models/enums/debug-file-type.enum\";\n\nexport interface ProjectDebugFileDto {\n    debugFileId: string;\n    type: DebugFileType;\n    fileUrl: string;\n    file: string;\n    createdAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectDetailsComponent.html":{"url":"components/ProjectDetailsComponent.html","title":"component - ProjectDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/project-details/project-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./project-details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-project-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './project-details.component.html',\n  styleUrl: './project-details.component.scss'\n})\nexport class ProjectDetailsComponent {\n\n}\n\n    \n\n    \n        project-details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'project-details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDto.html":{"url":"interfaces/ProjectDto.html","title":"interface - ProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            environments\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            releases\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        environments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environments:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releases\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releases:     ProjectReleaseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectReleaseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from \"./platform.dto\";\nimport { ProjectReleaseDto } from \"./project-release.dto\";\n\nexport interface ProjectDto {\n    projectId: string,\n    name: string,\n    platform: PlatformDto\n    environments: string[],\n    releases: ProjectReleaseDto[],\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectEffects.html":{"url":"injectables/ProjectEffects.html","title":"injectable - ProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createProject$\n                            \n                            \n                                loadAllProjects$\n                            \n                            \n                                loadMyProjects$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/project/project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAllProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyProjects),\n      switchMap((request) =>\n        this.projectService.getMyProjects(request.teamIds).pipe(\n          map((projects) => loadMyProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadMyProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess, loadMyProjects, loadMyProjectsFailure, loadMyProjectsSuccess } from \"./project.actions\";\nimport { Injectable } from \"@angular/core\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\n\n@Injectable()\nexport class ProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadAllProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyProjects),\n      switchMap((request) =>\n        this.projectService.getMyProjects(request.teamIds).pipe(\n          map((projects) => loadMyProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadMyProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n\n  createProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectHourByHourStatDto.html":{"url":"interfaces/ProjectHourByHourStatDto.html","title":"interface - ProjectHourByHourStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectHourByHourStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-hour-by-hour-stat.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFreeGain\n                                        \n                                \n                                \n                                        \n                                            crashFreePercentage\n                                        \n                                \n                                \n                                        \n                                            endInterval\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfCrashFreeSessions\n                                        \n                                \n                                \n                                        \n                                            numberOfSessions\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            startInterval\n                                        \n                                \n                                \n                                        \n                                            transactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreeGain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreeGain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endInterval:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfCrashFreeSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfCrashFreeSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startInterval:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectHourByHourStatDto {\n  id: string;\n  name: string;\n  projectId: string;\n  startInterval: Date;\n  endInterval: Date;\n  numberOfSessions: number;\n  numberOfCrashFreeSessions: number;\n  crashFreePercentage: number;\n  crashFreeGain: number;\n  errors: number;\n  transactions: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectPickerComponent.html":{"url":"components/ProjectPickerComponent.html","title":"component - ProjectPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/project-picker/project-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableProjects\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onProjectsPicked\n                            \n                            \n                                onProjectsRemoved\n                            \n                            \n                                selectedProjects\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onProjectsPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onProjectsRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedProjects\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableProjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  PickListModule,\n  PickListMoveAllToSourceEvent,\n  PickListMoveAllToTargetEvent,\n  PickListMoveToSourceEvent,\n  PickListMoveToTargetEvent,\n} from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { filter, take } from 'rxjs';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\n\n@Component({\n  selector: 'app-project-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './project-picker.component.html',\n  styleUrl: './project-picker.component.scss',\n})\nexport class ProjectPickerComponent {\n  constructor(private store: Store) {}\n  isLoadingProjects = this.store.select(isLoadingAllProjects);\n  availableProjects: Project[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedProjects: Project[] = [];\n\n  @Input()\n  onProjectsPicked?: (projects: Project[]) => void;\n\n  @Input()\n  onProjectsRemoved?: (projects: Project[]) => void;\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  showPickerDialog() {\n    this.store.dispatch(loadAllProjects());\n    this.store\n      .select(selectAllProjects)\n      .pipe(\n        filter((projects) => projects !== undefined && projects !== null),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((projects) => {\n        // Filter out members that are also present in selectedProjects\n        this.availableProjects =\n          projects?.filter(\n            (project) =>\n              !this.selectedProjects.some(\n                (selected) => selected.projectId === project.projectId,\n              ),\n          ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onProjectsRemoved) {\n      this.onProjectsRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onProjectsPicked) {\n      this.onProjectsPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onProjectsRemoved) {\n      this.onProjectsRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onProjectsPicked) {\n      this.onProjectsPicked(event.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        \n          {{ project.name }}\n          \n            {{ project.platform.type | titlecase }} {{project.platform.version}}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ project.name }}                      {{ project.platform.type | titlecase }} {{project.platform.version}}                                      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectRelease.html":{"url":"interfaces/ProjectRelease.html","title":"interface - ProjectRelease","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectRelease\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project-release.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            releaseId\n                                        \n                                \n                                \n                                        \n                                            releaseTimestamp\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        releaseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseTimestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectRelease {\n  releaseId: string;\n  version: string;\n  releaseTimestamp: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectReleaseDto.html":{"url":"interfaces/ProjectReleaseDto.html","title":"interface - ProjectReleaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectReleaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-release.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            releaseId\n                                        \n                                \n                                \n                                        \n                                            releaseTimestamp\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        releaseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseTimestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectReleaseDto {\n  releaseId: string;\n  version: string;\n  releaseTimestamp: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectSecurityClientDto.html":{"url":"interfaces/ProjectSecurityClientDto.html","title":"interface - ProjectSecurityClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectSecurityClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-security-client.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowedDomains\n                                        \n                                \n                                \n                                        \n                                            securityHeader\n                                        \n                                \n                                \n                                        \n                                            securityToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowedDomains\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedDomains:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securityHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        securityHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securityToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        securityToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectSecurityClientDto {\n  securityToken: string;\n  securityHeader: string;\n  allowedDomains: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectStatDto.html":{"url":"interfaces/ProjectStatDto.html","title":"interface - ProjectStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-stat.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFreePercentage\n                                        \n                                \n                                \n                                        \n                                            crashFreePercentageGain\n                                        \n                                \n                                \n                                        \n                                            hourByHour\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            releases\n                                        \n                                \n                                \n                                        \n                                            totalCrashFreeSessions\n                                        \n                                \n                                \n                                        \n                                            totalErrors\n                                        \n                                \n                                \n                                        \n                                            totalSessions\n                                        \n                                \n                                \n                                        \n                                            totalTransactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentageGain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentageGain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hourByHour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hourByHour:     ProjectHourByHourStatDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectHourByHourStatDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releases\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releases:     ProjectReleaseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectReleaseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCrashFreeSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCrashFreeSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalErrors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTransactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalTransactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from './platform.dto';\nimport { ProjectHourByHourStatDto } from './project-hour-by-hour-stat.dto';\nimport { ProjectReleaseDto } from './project-release.dto';\n\nexport interface ProjectStatDto {\n  projectId: string;\n  name: string;\n  platform: PlatformDto;\n  releases: ProjectReleaseDto[];\n  hourByHour: ProjectHourByHourStatDto[];\n  totalSessions: number;\n  totalCrashFreeSessions: number;\n  crashFreePercentage: number;\n  crashFreePercentageGain: number;\n  totalErrors: number;\n  totalTransactions: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectState.html":{"url":"interfaces/ProjectState.html","title":"interface - ProjectState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allProjects\n                                        \n                                \n                                \n                                        \n                                            allProjectsError\n                                        \n                                \n                                \n                                        \n                                            allProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            createProjectError\n                                        \n                                \n                                \n                                        \n                                            createProjectStatus\n                                        \n                                \n                                \n                                        \n                                            myProjects\n                                        \n                                \n                                \n                                        \n                                            myProjectsError\n                                        \n                                \n                                \n                                        \n                                            myProjectsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Project } from '../../domain/models/project.entity';\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess, loadMyProjects, loadMyProjectsFailure, loadMyProjectsSuccess } from './project.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface ProjectState {\n  allProjects: Project[] | null;\n  myProjects: Project[] | null;\n  allProjectsError: any | null;\n  createProjectError: any | null;\n  myProjectsError: any | null;\n  allProjectsStatus: StateStatus;\n  createProjectStatus: StateStatus;\n  myProjectsStatus: StateStatus\n}\n\nexport const initialState: ProjectState = {\n  allProjects: null,\n  myProjects: null,\n  allProjectsError: undefined,\n  allProjectsStatus: StateStatus.PENDING,\n  createProjectError: undefined,\n  createProjectStatus: StateStatus.PENDING,\n  myProjectsError: undefined,\n  myProjectsStatus: StateStatus.PENDING,\n};\n\nexport const projectReducer = createReducer(\n  initialState,\n\n  //Handle loading all projects\n  on(loadAllProjects, (state) => ({\n    ...state,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadAllProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    allProjects: projects,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadAllProjectsFailure, (state, { error }) => ({\n    ...state,\n    allProjectsError: error,\n    allProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading my projects\n  on(loadMyProjects, (state) => ({\n    ...state,\n    myProjectsError: null,\n    myProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    myProjects: projects,\n    myProjectsError: null,\n    myProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadMyProjectsFailure, (state, { error }) => ({\n    ...state,\n    myProjectsError: error,\n    myProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createProject, (state) => ({\n    ...state,\n    createProjectError: null,\n    createProjectStatus: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createProjectSuccess, (state, project) => ({\n    ...state,\n    allProjects: [...(state.allProjects || []), project],\n    createProjectError: null,\n    createProjectStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createProjectFailure, (state, { error }) => ({\n    ...state,\n    createProjectError: error,\n    createProjectStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            FilterService\n                \n            \n\n\n            \n                selector\n                app-projects\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            MultiSelectModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ProgressSpinnerModule\n                            ButtonModule\n                            RippleModule\n                                SingleProjectCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredProjects\n                            \n                            \n                                filterValue\n                            \n                            \n                                isLoadingMyProjects\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                myProjects\n                            \n                            \n                                myTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMyTeams\n                            \n                            \n                                filterProjects\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/projects/projects.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterMyTeams\n                        \n                    \n                \n            \n            \n                \nfilterMyTeams($event: MultiSelectChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        MultiSelectChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProjects\n                        \n                    \n                \n            \n            \n                \nfilterProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.myProjects.pipe(\n    map((value) =>\n      value.filter((project) =>\n        this.filterValue == '' ? true : project.name.includes(this.filterValue),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FilterService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MultiSelectChangeEvent, MultiSelectModule } from 'primeng/multiselect';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { map } from 'rxjs';\nimport { Team } from '../../core/domain/models/team.entity';\nimport { AppState } from '../../core/state/app.state';\nimport { loadMyProjects } from '../../core/state/project/project.actions';\nimport {\n  isLoadingMyProjects,\n  selectMyProjects,\n} from '../../core/state/project/project.selectors';\nimport { loadMyTeams } from '../../core/state/team/team.actions';\nimport {\n  isLoadingMyTeams,\n  selectMyTeams,\n} from '../../core/state/team/team.selectors';\nimport { SingleProjectCardComponent } from './components/single-project-card/single-project-card.component';\n\n@Component({\n  selector: 'app-projects',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    MultiSelectModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    RippleModule,\n    SingleProjectCardComponent,\n  ],\n  providers: [FilterService],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private filterService: FilterService,\n  ) {}\n\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n\n  filterValue: string = '';\n\n  myProjects = this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  filteredProjects = this.myProjects.pipe(\n    map((value) =>\n      value.filter((project) =>\n        this.filterValue == '' ? true : project.name.includes(this.filterValue),\n      ),\n    ),\n  );\n\n  isLoadingMyProjects = this.store.select(isLoadingMyProjects);\n\n  ngOnInit(): void {\n    this.store.dispatch(loadMyTeams());\n    this.store.dispatch(loadMyProjects({}));\n  }\n\n  filterMyTeams($event: MultiSelectChangeEvent) {\n    let teams: Team[] | undefined = $event.value ?? undefined;\n    if (teams?.length === 0) {\n      teams = undefined;\n    }\n\n    if (teams) {\n      this.store.dispatch(\n        loadMyProjects({ teamIds: teams.map((team) => team.teamId) }),\n      );\n    } else {\n      this.store.dispatch(loadMyTeams());\n    }\n  }\n\n  filterProjects() {\n    this.filteredProjects = this.myProjects.pipe(\n      map((value) =>\n        value.filter((project) =>\n          this.filterValue == '' ? true : project.name.includes(this.filterValue),\n        ),\n      ),\n    );\n  }\n}\n\n    \n\n    \n        {{ \"projects.projects\" | translate }}\n\n  \n  \n    \n    \n  \n\n\n@if ((isLoadingMyProjects | async) === true) {\n  \n    \n  \n} @else {\n  \n    @for (project of filteredProjects | async; track $index) {\n      \n    }\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \"projects.projects\" | translate }}              @if ((isLoadingMyProjects | async) === true) {        } @else {      @for (project of filteredProjects | async; track $index) {          }  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent-1.html":{"url":"components/ProjectsComponent-1.html","title":"component - ProjectsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-settings\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                            TranslateModule\n                                ProjectsTableComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingAllProjects\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/projects/projects.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/projects/projects.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingAllProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PanelModule } from 'primeng/panel';\nimport { map } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { ProjectsTableComponent } from '../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-projects-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TranslateModule,\n    ProjectsTableComponent,\n  ],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  );\n\n  isLoadingAllProjects = this.store.select(isLoadingAllProjects);\n  projects = this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAllProjects());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n    \n      \n    \n  } @else {\n    \n  }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {      }  '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsTableComponent.html":{"url":"components/ProjectsTableComponent.html","title":"component - ProjectsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/projects-table/projects-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-projects-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewProjectForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewProjectDialogVisible\n                            \n                            \n                                isLoadingCreateNewProject\n                            \n                            \n                                isNameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                nameCheckSubscription\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkName\n                            \n                            \n                                createNewProject\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openSingleProject\n                            \n                            \n                                    Private\n                                resetProjectsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:101\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:92\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkName\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProject\n                        \n                    \n                \n            \n            \n                \ncreateNewProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSingleProject\n                        \n                    \n                \n            \n            \n                \nopenSingleProject(event: MouseEvent, project: Project)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            Project\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetProjectsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetProjectsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewProjectDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateProject)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        nameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platforms\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectPlatforms)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:116\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Platform } from '../../../core/domain/models/platform.entity';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../core/services/api/project.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadPlatforms } from '../../../core/state/platform/platform.actions';\nimport { selectPlatforms } from '../../../core/state/platform/platform.selectors';\nimport { createProject } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingCreateProject,\n  selectCreateProjectStatus,\n} from '../../../core/state/project/project.selectors';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-projects-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './projects-table.component.html',\n  styleUrl: './projects-table.component.scss',\n})\nexport class ProjectsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Project[] = undefined;\n\n  @ViewChild('name') nameInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  createNewProjectForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  });\n  isAddNewProjectDialogVisible: boolean = false;\n  isNameTaken: boolean | null = null;\n  isLoadingCreateNewProject = this.store.select(isLoadingCreateProject);\n  platforms = this.store.select(selectPlatforms);\n\n  private nameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkName(data));\n  }\n\n  ngOnDestroy() {\n    this.nameCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetProjectsForm();\n    this.store.dispatch(loadPlatforms());\n    this.isAddNewProjectDialogVisible = true;\n  }\n\n  createNewProject() {\n    this.store\n      .select(selectCreateProjectStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('projects-table.error'),\n            detail: this.translateService.instant(\n              'projects-table.failed_to_create_project',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('projects-table.success'),\n            detail: this.translateService.instant(\n              'projects-table.project_created',\n            ),\n          });\n          this.isAddNewProjectDialogVisible =\n            !this.isAddNewProjectDialogVisible;\n        }\n      });\n\n    const dto = {\n      name: this.createNewProjectForm.get('name')?.value ?? '',\n      platformId:\n        this.createNewProjectForm.get('platform')?.value?.platformId ?? '',\n    };\n    this.store.dispatch(createProject(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private resetProjectsForm() {\n    this.createNewProjectForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      platform: [undefined as Platform | undefined, [Validators.required]],\n    });\n  }\n\n  openSingleProject(event: MouseEvent, project: Project) {\n    const isDeleteButtonClicked = (event.target as HTMLElement).closest(\n      '.p-button',\n    );\n\n    if (!isDeleteButtonClicked) {\n      this.router.navigate([`/home/settings/projects/${project.projectId}`]);\n    }\n  }\n\n  private checkName(name: string) {\n    this.nameCheckSubscription?.unsubscribe();\n    this.nameCheckSubscription = this.projectService\n      .isNameTaken(name)\n      .subscribe({\n        next: (result) => {\n          this.isNameTaken = result;\n        },\n        error: () => {\n          this.isNameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"projects-table.name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"projects-table.platform\" | translate }}\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        {{ project?.name }}\n      \n      \n        \n          \n          {{ project?.platform?.type | titlecase }}\n          {{ project?.platform?.version }}\n        \n      \n    \n  \n  \n    \n      {{ \"projects-table.no_projects_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"projects-table.name_label\" | translate }}\n        \n          @if (isNameTaken !== null && !isNameTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"projects-table.name_is_required\" | translate }}\n\n        {{ \"projects-table.platform_label\" | translate }}\n        \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n        \n        {{ \"projects-table.platform_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"projects-table.name\" | translate }}                                                          {{ \"projects-table.platform\" | translate }}                                                            {{ project?.name }}                                        {{ project?.platform?.type | titlecase }}          {{ project?.platform?.version }}                                {{ \"projects-table.no_projects_found\" | translate }}                          {{ \"projects-table.name_label\" | translate }}                  @if (isNameTaken !== null && !isNameTaken) {                      } @else {                      }                          {{ \"projects-table.name_is_required\" | translate }}        {{ \"projects-table.platform_label\" | translate }}                                                          {{ platform.type | titlecase }} {{ platform.version }}                                                                        {{ platform.type | titlecase }} {{ platform.version }}                                      {{ \"projects-table.platform_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueriesComponent.html":{"url":"components/QueriesComponent.html","title":"component - QueriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/queries/queries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queries\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./queries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./queries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-queries',\n  standalone: true,\n  imports: [],\n  templateUrl: './queries.component.html',\n  styleUrl: './queries.component.scss'\n})\nexport class QueriesComponent {\n\n}\n\n    \n\n    \n        queries works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'queries works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesComponent.html":{"url":"components/ReleasesComponent.html","title":"component - ReleasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/releases/releases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-releases\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./releases.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-releases',\n  standalone: true,\n  imports: [],\n  templateUrl: './releases.component.html',\n  styleUrl: './releases.component.scss'\n})\nexport class ReleasesComponent {\n\n}\n\n    \n\n    \n        releases works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'releases works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesTableComponent.html":{"url":"components/ReleasesTableComponent.html","title":"component - ReleasesTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/releases-table/releases-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-releases-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            ConfirmDialogModule\n                            DialogModule\n                            TableModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                                AccessDeniedComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./releases-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createReleaseForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isAddNewDialogVisible\n                            \n                            \n                                isLoadingCreateNew\n                            \n                            \n                                isLoadingReleases\n                            \n                            \n                                isLoadingRemoveReleases\n                            \n                            \n                                releases\n                            \n                            \n                                selectedReleases\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                createNewRelease\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeReleases\n                            \n                            \n                                    Private\n                                resetReleasesForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                showDeleteSelectionConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableAddAction\n                            \n                            \n                                enableEditAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewRelease\n                        \n                    \n                \n            \n            \n                \ncreateNewRelease()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeReleases\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeReleases(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetReleasesForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetReleasesForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:229\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(releaseId: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                releaseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteSelectionConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteSelectionConfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createReleaseForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    version: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNew\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectAddRelease)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingReleases\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectReleases)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveReleases\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectRemoveReleases)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releases\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleProjectReleases)\n    .pipe(map((releases) => [...releases ?? []]))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedReleases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectRelease[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, Validators, FormBuilder } from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { AccessDeniedComponent } from '../access-denied/access-denied.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../core/state/app.state';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectRelease } from '../../../core/domain/models/project-release.entity';\nimport { isLoadingSingleProjectAddRelease, isLoadingSingleProjectReleases, isLoadingSingleProjectRemoveReleases, selectAddProjectReleaseStatus, selectRemoveProjectReleasesStatus, selectSingleProjectReleases } from '../../../core/state/single-project/single-project.selectors';\nimport { filter, map, take } from 'rxjs';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { addProjectRelease, loadProjectReleases, removeProjectReleases } from '../../../core/state/single-project/single-project.actions';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { CreateProjectReleaseDto } from '../../../core/domain/dto/requests/create-project-release.dto';\n\n@Component({\n  selector: 'app-releases-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    ConfirmDialogModule,\n    DialogModule,\n    TableModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AccessDeniedComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './releases-table.component.html',\n  styleUrl: './releases-table.component.scss',\n})\nexport class ReleasesTableComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n\n  @Input()\n  project?: Project;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableEditAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  createReleaseForm = this.formBuilder.group({\n    version: ['', [Validators.required]],\n  });\n  isAddNewDialogVisible: boolean = false;\n\n  selectedReleases: ProjectRelease[] = [];\n  releases = this.store\n    .select(selectSingleProjectReleases)\n    .pipe(map((releases) => [...releases ?? []]));\n  isLoadingReleases = this.store.select(isLoadingSingleProjectReleases);\n  isLoadingCreateNew = this.store.select(isLoadingSingleProjectAddRelease);\n  isLoadingRemoveReleases = this.store.select(isLoadingSingleProjectRemoveReleases);\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      loadProjectReleases({ projectId: this.project?.projectId ?? '' }),\n    );\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteConfirmation(releaseId: string, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'releases-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('releases-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeReleases([releaseId]);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteSelectionConfirmation(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'releases-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('releases-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeReleases(this.selectedReleases.map((value) => value.releaseId));\n      },\n      reject: () => {},\n    });\n  }\n\n  showAddDialog() {\n    this.resetReleasesForm();\n    this.isAddNewDialogVisible = true;\n  }\n\n  createNewRelease() {\n    const dto: CreateProjectReleaseDto = { version: this.createReleaseForm.get('version')?.value ?? ''};\n    this.store.dispatch(\n      addProjectRelease({\n        projectId: this.project?.projectId ?? '',\n        dto: dto,\n      }),\n    );\n    this.store\n      .select(selectAddProjectReleaseStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('releases-table.error'),\n            detail: this.translateService.instant(\n              'releases-table.failed_to_create_release',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('releases-table.success'),\n            detail: this.translateService.instant('releases-table.release_created'),\n          });\n          this.isAddNewDialogVisible = !this.isAddNewDialogVisible;\n        }\n      });\n  }\n\n  private removeReleases(ids: string[]) {\n    this.store.dispatch(\n      removeProjectReleases({\n        projectId: this.project?.projectId ?? '',\n        ids: ids,\n      }),\n    );\n    this.store\n      .select(selectRemoveProjectReleasesStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('releases-table.error'),\n            detail: this.translateService.instant(\n              'releases-table.failed_to_delete_releases',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('releases-table.success'),\n            detail: this.translateService.instant('releases-table.removed_releases'),\n          });\n          this.selectedReleases = [];\n        }\n      });\n  }\n\n  private resetReleasesForm() {\n    this.createReleaseForm = this.formBuilder.group({\n      version: ['', [Validators.required]],\n    });\n  }\n}\n\n    \n\n    \n        \n\n@if ((hasReadPermission | async) === false) {\n  \n} @else {\n  \n    \n      \n        \n          \n          \n        \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n            {{ \"releases-table.id\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"releases-table.version\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"releases-table.created_at\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"releases-table.actions\" | translate }}\n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ release.releaseId }}\n        \n        \n          {{ release.version }}\n        \n        \n          {{ release.releaseTimestamp | date: 'MMM d, yyyy - h:mm:ss a'}} (UTC)\n        \n        \n          \n        \n      \n    \n\n    \n      \n        \n          {{ \"releases-table.no_releases_found\" | translate }}\n        \n      \n    \n  \n}\n\n\n  \n    \n      \n        {{ \"releases-table.version_label\" | translate }}\n        \n        {{ \"releases-table.version_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((hasReadPermission | async) === false) {  } @else {                                                                                                                                            {{ \"releases-table.id\" | translate }}                                                                        {{ \"releases-table.version\" | translate }}                                                                        {{ \"releases-table.created_at\" | translate }}                                                                        {{ \"releases-table.actions\" | translate }}                                                                                  {{ release.releaseId }}                          {{ release.version }}                          {{ release.releaseTimestamp | date: \\'MMM d, yyyy - h:mm:ss a\\'}} (UTC)                                                                        {{ \"releases-table.no_releases_found\" | translate }}                    }                    {{ \"releases-table.version_label\" | translate }}                {{ \"releases-table.version_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReplaysComponent.html":{"url":"components/ReplaysComponent.html","title":"component - ReplaysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReplaysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/replays/replays.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-replays\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./replays.component.html\n            \n\n\n\n            \n                styleUrl\n                ./replays.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-replays',\n  standalone: true,\n  imports: [],\n  templateUrl: './replays.component.html',\n  styleUrl: './replays.component.scss'\n})\nexport class ReplaysComponent {\n\n}\n\n    \n\n    \n        replays works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'replays works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReplaysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/resources/resources.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n            \n                styleUrl\n                ./resources.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  standalone: true,\n  imports: [],\n  templateUrl: './resources.component.html',\n  styleUrl: './resources.component.scss'\n})\nexport class ResourcesComponent {\n\n}\n\n    \n\n    \n        resources works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'resources works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            internal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        internal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        internal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleEffects.html":{"url":"injectables/RoleEffects.html","title":"injectable - RoleEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRoles$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/role/role.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/role/role.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { RoleService } from '../../services/api/role.api.service';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\n@Injectable()\nexport class RoleEffects {\n  constructor(\n    private roleService: RoleService,\n    private actions$: Actions,\n  ) {}\n\n  loadRoles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/role.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/role.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/role.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Role } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleService {\n  constructor(private http: HttpClient) {}\n\n  getRoles(): Observable {\n    return this.http.get(api.roleUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleState.html":{"url":"interfaces/RoleState.html","title":"interface - RoleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Role } from '../../domain/models/user.entity';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\nexport interface RoleState {\n  roles: Role[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: RoleState = {\n    roles: null,\n    error: undefined,\n    status: StateStatus.PENDING\n}\n\nexport const roleReducer = createReducer(\n    initialState,\n\n    //Handle loading current organization members\n  on(loadRoles, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadRolesSuccess, (state, params) => ({\n    ...state,\n    roles: params.roles,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadRolesFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n)\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenLoadsComponent.html":{"url":"components/ScreenLoadsComponent.html","title":"component - ScreenLoadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScreenLoadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/screen-loads/screen-loads.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen-loads\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./screen-loads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./screen-loads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-loads',\n  standalone: true,\n  imports: [],\n  templateUrl: './screen-loads.component.html',\n  styleUrl: './screen-loads.component.scss'\n})\nexport class ScreenLoadsComponent {\n\n}\n\n    \n\n    \n        screen-loads works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'screen-loads works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreenLoadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SdksComponent.html":{"url":"components/SdksComponent.html","title":"component - SdksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SdksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/sdks/sdks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sdks\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sdks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sdks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sdks',\n  standalone: true,\n  imports: [],\n  templateUrl: './sdks.component.html',\n  styleUrl: './sdks.component.scss'\n})\nexport class SdksComponent {\n\n}\n\n    \n\n    \n        sdks works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sdks works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SdksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecurityComponent.html":{"url":"components/SecurityComponent.html","title":"component - SecurityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecurityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/security/security.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-security\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./security.component.html\n            \n\n\n\n            \n                styleUrl\n                ./security.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-security',\n  standalone: true,\n  imports: [],\n  templateUrl: './security.component.html',\n  styleUrl: './security.component.scss'\n})\nexport class SecurityComponent {\n\n}\n\n    \n\n    \n        security works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'security works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecurityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionsComponent.html":{"url":"components/SessionsComponent.html","title":"component - SessionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/sessions/sessions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sessions\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            TableModule\n                            TranslateModule\n                            MultiSelectModule\n                                QueryInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sessions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sessions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                currentPage\n                            \n                            \n                                    Private\n                                currentPageable\n                            \n                            \n                                    Optional\n                                data\n                            \n                            \n                                isLoadingData\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                projects\n                            \n                            \n                                    Private\n                                    Optional\n                                projectSubscription\n                            \n                            \n                                queryKeys\n                            \n                            \n                                queryKeysDescription\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Optional\n                                selectedProjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchData\n                            \n                            \n                                loadPage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQueryChanged\n                            \n                            \n                                selectProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, logSessionService: LogSessionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/sessions/sessions.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logSessionService\n                                                  \n                                                        \n                                                                        LogSessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchData\n                        \n                    \n                \n            \n            \n                \nfetchData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/sessions/sessions.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPage\n                        \n                    \n                \n            \n            \n                \nloadPage($event: TableLazyLoadEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/sessions/sessions.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        TableLazyLoadEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/sessions/sessions.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/sessions/sessions.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onQueryChanged\n                        \n                    \n                \n            \n            \n                \nonQueryChanged($event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/sessions/sessions.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProjects\n                        \n                    \n                \n            \n            \n                \nselectProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/sessions/sessions.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPageable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pageable\n\n                    \n                \n                \n                    \n                        Default value : new PageableDefault()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        projectSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    sessionId: 'string',\n    startTime: 'date',\n    endTime: 'date',\n    crashFree: 'boolean',\n    networkType: 'string',\n    networkSpeed: 'string',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKeysDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n    sessionId: 'sessions.session_id_description',\n    startTime: 'sessions.start_time_description',\n    endTime: 'sessions.end_time_description',\n    crashFree: 'sessions.crash_free_description',\n    networkType: 'sessions.network_type_description',\n    networkSpeed: 'sessions.network_speed_description',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedProjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/sessions/sessions.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { TableLazyLoadEvent, TableModule } from 'primeng/table';\nimport { QueryInputComponent } from '../../shared/components/query-input/query-input.component';\nimport {\n  Pageable,\n  PageableDefault,\n} from '../../core/domain/pageable/pageable.dto';\nimport { AppState } from '../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport {\n  isLoadingMyProjects,\n  selectMyProjects,\n} from '../../core/state/project/project.selectors';\nimport { Observable, Subscription, map } from 'rxjs';\nimport { Page } from '../../core/domain/pageable/page.dto';\nimport { LogSessionDto } from '../../core/domain/dto/log-session.dto';\nimport { LogSessionService } from '../../core/services/api/log-session.api.service';\nimport { Project } from '../../core/domain/models/project.entity';\nimport { loadMyProjects } from '../../core/state/project/project.actions';\n\n@Component({\n  selector: 'app-sessions',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TableModule,\n    TranslateModule,\n    MultiSelectModule,\n    QueryInputComponent,\n  ],\n  templateUrl: './sessions.component.html',\n  styleUrl: './sessions.component.scss',\n})\nexport class SessionsComponent implements OnInit, OnDestroy {\n  constructor(\n    private store: Store,\n    private logSessionService: LogSessionService,\n  ) {}\n\n  projects = this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n  isLoadingProjects = this.store.select(isLoadingMyProjects);\n  isLoadingData = true;\n\n  private currentPageable: Pageable = new PageableDefault();\n  currentPage?: Observable>;\n  data?: Observable;\n\n  selectedProjects?: Project[];\n\n  private projectSubscription?: Subscription;\n  private search: string = '';\n\n  queryKeys: Record = {\n    sessionId: 'string',\n    startTime: 'date',\n    endTime: 'date',\n    crashFree: 'boolean',\n    networkType: 'string',\n    networkSpeed: 'string',\n  };\n\n  queryKeysDescription: Record = {\n    sessionId: 'sessions.session_id_description',\n    startTime: 'sessions.start_time_description',\n    endTime: 'sessions.end_time_description',\n    crashFree: 'sessions.crash_free_description',\n    networkType: 'sessions.network_type_description',\n    networkSpeed: 'sessions.network_speed_description',\n  };\n\n  ngOnInit(): void {\n    this.store.dispatch(loadMyProjects({}));\n    this.projectSubscription = this.projects.subscribe((projects) => {\n      if (projects && projects !== null) {\n        this.selectedProjects = projects;\n\n        this.currentPage = this.logSessionService.findAll(\n          this.currentPageable,\n          {\n            projectIds: projects.map((project) => project.projectId),\n          },\n        );\n\n        this.data = this.currentPage.pipe(\n          map((page) => {\n            this.isLoadingData = false;\n            return page.content;\n          }),\n        );\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.projectSubscription?.unsubscribe();\n  }\n\n  onQueryChanged($event: string) {\n    this.search = $event;\n    this.fetchData();\n  }\n\n  selectProjects() {\n    this.currentPageable.page = 0;\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.isLoadingData = true;\n    let search: string | undefined = undefined;\n    if (this.search !== '') {\n      search = this.search;\n    }\n    console.log('Search is: ' + search)\n    this.currentPage = this.logSessionService.findAll(this.currentPageable, {\n      projectIds:\n        this.selectedProjects?.map((project) => project.projectId) ?? [],\n      search: search,\n    });\n\n    this.data = this.currentPage.pipe(\n      map((page) => {\n        this.isLoadingData = false;\n        return page.content;\n      }),\n    );\n  }\n\n  loadPage($event: TableLazyLoadEvent) {\n    this.currentPageable.size = $event.rows ?? this.currentPageable.size;\n    this.currentPageable.page = $event.first ?? 0 / this.currentPageable.size;\n    if ($event.sortField) {\n      let sortField: string;\n      if (Array.isArray($event.sortField)) {\n        sortField = $event.sortField[0];\n      } else {\n        sortField = $event.sortField;\n      }\n      let sortOrder: 'ASC' | 'DESC' = 'ASC';\n      if ($event.sortOrder && $event.sortOrder === 1) {\n        sortOrder = 'ASC';\n      } else {\n        sortOrder = 'DESC';\n      }\n      this.currentPageable.sort = [sortField + ',' + sortOrder];\n    }\n    this.fetchData();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n      \n        \n          {{ \"sessions.id\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.device_id\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.project_id\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.network_type\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.network_speed\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.crash_free\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.start_time\" | translate }}\n          \n        \n      \n      \n        \n          {{ \"sessions.end_time\" | translate }}\n          \n        \n      \n    \n  \n  \n    \n      \n        {{ session?.sessionId }}\n      \n      \n        {{ session?.logSourceId }}\n      \n      \n        {{ session?.projectId }}\n      \n      \n        {{ session?.networkType }}\n      \n      \n        {{ session?.networkSpeed }}\n      \n      \n        \n          @if (session.crashFree) {\n            \n          } @else {\n            \n          }\n        \n      \n      \n        {{ session?.startTime | date: \"MMM d, yyyy - h:mm:ss a (UTC)\" }}\n      \n      \n        {{ session?.endTime | date: \"MMM d, yyyy - h:mm:ss a (UTC)\" }}\n      \n    \n  \n  \n    \n      {{ \"sessions.no_sessions_found\" | translate }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \"sessions.id\" | translate }}                                                {{ \"sessions.device_id\" | translate }}                                                {{ \"sessions.project_id\" | translate }}                                                {{ \"sessions.network_type\" | translate }}                                                {{ \"sessions.network_speed\" | translate }}                                                {{ \"sessions.crash_free\" | translate }}                                                {{ \"sessions.start_time\" | translate }}                                                {{ \"sessions.end_time\" | translate }}                                                  {{ session?.sessionId }}                    {{ session?.logSourceId }}                    {{ session?.projectId }}                    {{ session?.networkType }}                    {{ session?.networkSpeed }}                              @if (session.crashFree) {                      } @else {                      }                            {{ session?.startTime | date: \"MMM d, yyyy - h:mm:ss a (UTC)\" }}                    {{ session?.endTime | date: \"MMM d, yyyy - h:mm:ss a (UTC)\" }}                        {{ \"sessions.no_sessions_found\" | translate }}      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  standalone: true,\n  imports: [],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport class SettingsComponent {\n\n}\n\n    \n\n    \n        settings works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        // {\n        //   label: sidenav.Home,\n        //   icon: 'pi pi-fw pi-home',\n        //   routerLink: ['/home'],\n        // },\n        {\n          label: sidenav.Projects,\n          icon: 'pi pi-fw pi-code',\n          routerLink: ['/home/projects'],\n        },\n        {\n          label: sidenav.Logs,\n          icon: 'pi pi-fw pi-list',\n          routerLink: ['/home/logs'],\n        },\n        {\n          label: sidenav.Issues,\n          icon: 'pi pi-fw pi-inbox',\n          routerLink: ['/home/issues'],\n        },\n        {\n          label: sidenav.Messages,\n          icon: 'pi pi-fw pi-envelope',\n          routerLink: ['/home/messages'],\n        },\n        {\n          label: sidenav.Devices,\n          icon: 'pi pi-fw pi-mobile',\n          routerLink: ['/home/devices'],\n        },\n        {\n          label: sidenav.Sessions,\n          icon: 'pi pi-fw pi-clock',\n          routerLink: ['/home/sessions'],\n        },\n        {\n          label: sidenav.Performance,\n          icon: 'pi pi-fw pi-chart-line',\n          routerLink: ['/home/performance'],\n          expanded: true,\n          items: [\n            {\n              label: sidenav.Queries,\n              icon: 'pi pi-fw pi-database',\n              routerLink: ['/home/queries'],\n            },\n            {\n              label: sidenav.Vitals,\n              icon: 'pi pi-fw pi-heart',\n              routerLink: ['/home/vitals'],\n            },\n            {\n              label: sidenav.Screen_Loads,\n              icon: 'pi pi-fw pi-stopwatch',\n              routerLink: ['/home/screen-loads'],\n            },\n            {\n              label: sidenav.Resources,\n              icon: 'pi pi-fw pi-server',\n              routerLink: ['/home/resources'],\n            },\n          ],\n        },\n        {\n          label: sidenav.Replays,\n          icon: 'pi pi-fw pi-play',\n          routerLink: ['/home/replays'],\n        },\n        {\n          label: sidenav.Releases,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/releases'],\n        },\n        {\n          label: sidenav.Stats,\n          icon: 'pi pi-fw pi-chart-bar',\n          routerLink: ['/home/stats'],\n        },\n      ],\n    });\n    this.model.push({\n      label: sidenav.Settings,\n      routerLink: ['/home/settings'],\n      items: [\n        {\n          label: sidenav.Settings_Account,\n          icon: 'pi pi-fw pi-user',\n          expanded: false,\n          routerLink: ['/home/settings/account'],\n          items: [\n            {\n              label: sidenav.Settings_Account_Details,\n              routerLink: ['/home/settings/account/details'],\n              icon: 'pi pi-fw pi-list'\n            },\n            {\n              label: sidenav.Settings_Account_Security,\n              routerLink: ['/home/settings/account/security'],\n              icon: 'pi pi-fw pi-shield'\n            },\n            {\n              label: sidenav.Settings_Account_Notifications,\n              routerLink: ['/home/settings/account/notifications'],\n              icon: 'pi pi-fw pi-envelope'\n            },\n            {\n              label: sidenav.Settings_Account_Close,\n              routerLink: ['/home/settings/account/close'],\n              icon: 'pi pi-fw pi-exclamation-circle'\n            }\n          ]\n        },\n        {\n          label: sidenav.Settings_Organization,\n          icon: 'pi pi-fw pi-building',\n          routerLink: ['/home/settings/organization']\n        },\n        {\n          label: sidenav.Settings_Projects,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/settings/projects']\n        },\n        {\n          label: sidenav.Settings_Teams,\n          icon: 'pi pi-fw pi-sitemap',\n          routerLink: ['/home/settings/teams']\n        },\n        {\n          label: sidenav.Settings_Members,\n          icon: 'pi pi-fw pi-users',\n          routerLink: ['/home/settings/members']\n        },\n        {\n          label: sidenav.Settings_Alerts,\n          icon: 'pi pi-fw pi-bell',\n          routerLink: ['/home/settings/alerts']\n        }\n      ]\n    })\n    this.model.push({\n      label: sidenav.Help,\n      items: [\n        {\n          label: sidenav.Help_Documentation,\n          icon: 'pi pi-fw pi-book',\n          routerLink: ['/home/help/documentation']\n        },\n        {\n          label: sidenav.Help_SDKS,\n          icon: 'pi pi-fw pi-wrench',\n          routerLink: ['/home/help/sdks']\n        },\n        {\n          label: sidenav.Help_Guides,\n          icon: 'pi pi-fw pi-question-circle',\n          routerLink: ['/home/help/guides']\n        },\n        {\n          label: sidenav.Help_Support,\n          icon: 'pi pi-fw pi-ticket',\n          routerLink: ['/home/help/support']\n        },\n      ]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingleProjectCardComponent.html":{"url":"components/SingleProjectCardComponent.html","title":"component - SingleProjectCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingleProjectCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/components/single-project-card/single-project-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                app-single-project-card\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            ButtonModule\n                            ChartModule\n                            RippleModule\n                            CardModule\n                            AvatarModule\n                            SkeletonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./single-project-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./single-project-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                chartOptions\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Optional\n                                projectStat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getChartLabel\n                            \n                            \n                                navigateToProjectSettings\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                setupChartData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, datePipe: DatePipe, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                    DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getChartLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChartLabel(startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToProjectSettings\n                        \n                    \n                \n            \n            \n                \nnavigateToProjectSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupChartData(result: ProjectStatDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            ProjectStatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    scales: {\n      x: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        projectStat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectStatDto\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, DatePipe } from '@angular/common';\nimport { AfterViewInit, Component, Input } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ChartModule } from 'primeng/chart';\nimport { RippleModule } from 'primeng/ripple';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { Project } from '../../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../../core/services/api/project.api.service';\nimport { ProjectStatDto } from '../../../../core/domain/dto/project-stat.dto';\nimport { Router, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-single-project-card',\n  standalone: true,\n  imports: [\n    TranslateModule,\n    CommonModule,\n    ButtonModule,\n    ChartModule,\n    RippleModule,\n    CardModule,\n    AvatarModule,\n    SkeletonModule,\n    RouterModule,\n  ],\n  providers: [DatePipe],\n  templateUrl: './single-project-card.component.html',\n  styleUrl: './single-project-card.component.scss',\n})\nexport class SingleProjectCardComponent implements AfterViewInit {\n  @Input()\n  project?: Project;\n\n  projectStat?: ProjectStatDto;\n\n  chartData?: unknown;\n  chartOptions = {\n    scales: {\n      x: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  isLoading: boolean = true;\n\n  constructor(\n    private projectService: ProjectService,\n    private datePipe: DatePipe,\n    private router: Router,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.projectService\n      .getProjectStats(this.project?.projectId ?? '')\n      .subscribe({\n        next: (result) => {\n          this.isLoading = false;\n          this.projectStat = result;\n          this.setupChartData(result);\n        },\n        error: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  private setupChartData(result: ProjectStatDto) {\n    this.chartData = {\n      labels: result.hourByHour.map((hourlyStat) =>\n        this.getChartLabel(hourlyStat.startInterval, hourlyStat.endInterval),\n      ),\n      datasets: [\n        {\n          type: 'bar',\n          label: 'Transactions',\n          data: result.hourByHour.map((hourlyStat) => hourlyStat.transactions),\n        },\n        {\n          type: 'bar',\n          label: 'Errors',\n          data: result.hourByHour.map((hourlyStat) => hourlyStat.errors),\n        },\n        {\n          type: 'bar',\n          label: 'Crash Free Sessions',\n          data: result.hourByHour.map(\n            (hourlyStat) => hourlyStat.numberOfCrashFreeSessions,\n          ),\n        },\n        {\n          type: 'bar',\n          label: 'Sessions',\n          data: result.hourByHour.map(\n            (hourlyStat) => hourlyStat.numberOfSessions,\n          ),\n        },\n      ],\n    };\n  }\n\n  private getChartLabel(startDate: Date, endDate: Date): string {\n    let result = '';\n    result += this.datePipe.transform(startDate, 'MMM d h:mm a');\n    result += ' - ';\n    result += this.datePipe.transform(endDate, 'h:mm a');\n    result += ' (UTC)';\n    return result;\n  }\n\n  navigateToProjectSettings() {\n    this.router.navigate(['/home/settings/projects/' + this.project?.projectId])\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        {{ project?.name }}\n        \n        @if (isLoading) {\n          \n        } @else {\n          \n            {{ \"projects.transactions\" | translate }}\n              {{ projectStat?.totalTransactions }} |\n              {{ \"projects.errors\" | translate }}\n              {{ projectStat?.totalErrors }} |\n              {{ \"projects.sessions\" | translate }}\n              {{ projectStat?.totalSessions }}\n            \n          \n        }\n      \n      \n    \n  \n  @if (isLoading) {\n    \n  } @else {\n    \n  }\n  \n    \n      \n        {{ \"projects.crash_free_sessions\" | translate }}\n      \n      @if (isLoading) {\n        \n      } @else {\n        \n          {{ projectStat?.crashFreePercentage | number: \".1-3\" }}%\n        \n        @if (projectStat?.crashFreePercentageGain === 0) {\n          \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        } @else if (projectStat?.crashFreePercentageGain ?? 0 > 0) {\n          \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        } @else if (projectStat?.crashFreePercentageGain ?? 0 \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        }\n      }\n    \n    \n      \n        {{ \"projects.latest_deploys\" | translate }}\n      \n      @if (isLoading) {\n        \n      } @else {\n        @if (!projectStat?.releases || projectStat?.releases?.length === 0) {\n          -\n        } @else {\n          @for (\n            release of projectStat?.releases?.slice(0, 3);\n            track $index\n          ) {\n            \n              {{ release.version }} -\n              {{ release.releaseTimestamp | date: \"MMM d h:mm a\" }}\n            \n          }\n        }\n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ project?.name }}                @if (isLoading) {                  } @else {                      {{ \"projects.transactions\" | translate }}              {{ projectStat?.totalTransactions }} |              {{ \"projects.errors\" | translate }}              {{ projectStat?.totalErrors }} |              {{ \"projects.sessions\" | translate }}              {{ projectStat?.totalSessions }}                              }                    @if (isLoading) {      } @else {      }                    {{ \"projects.crash_free_sessions\" | translate }}            @if (isLoading) {              } @else {                  {{ projectStat?.crashFreePercentage | number: \".1-3\" }}%                @if (projectStat?.crashFreePercentageGain === 0) {                                                {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              } @else if (projectStat?.crashFreePercentageGain ?? 0 > 0) {                                                {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              } @else if (projectStat?.crashFreePercentageGain ?? 0                                       {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              }      }                      {{ \"projects.latest_deploys\" | translate }}            @if (isLoading) {              } @else {        @if (!projectStat?.releases || projectStat?.releases?.length === 0) {          -        } @else {          @for (            release of projectStat?.releases?.slice(0, 3);            track $index          ) {                          {{ release.version }} -              {{ release.releaseTimestamp | date: \"MMM d h:mm a\" }}                      }        }      }      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingleProjectCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleProjectEffects.html":{"url":"injectables/SingleProjectEffects.html","title":"injectable - SingleProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SingleProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-project/single-project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addProjectDebugFile$\n                            \n                            \n                                addProjectEnvironments$\n                            \n                            \n                                addProjectRelease$\n                            \n                            \n                                addProjectTags$\n                            \n                            \n                                addProjectTeams$\n                            \n                            \n                                loadProjectById$\n                            \n                            \n                                loadProjectDebugFiles$\n                            \n                            \n                                loadProjectEnvironments$\n                            \n                            \n                                loadProjectReleases$\n                            \n                            \n                                loadProjectTags$\n                            \n                            \n                                loadProjectTeams$\n                            \n                            \n                                removeProjectDebugFiles$\n                            \n                            \n                                removeProjectEnvironments$\n                            \n                            \n                                removeProjectReleases$\n                            \n                            \n                                removeProjectTags$\n                            \n                            \n                                removeProjectTeams$\n                            \n                            \n                                updateProject$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectDebugFile$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectDebugFile),\n      switchMap((args) =>\n        this.projectService.addProjectDebugFile(args.projectId, args.dto).pipe(\n          map((files) => addProjectDebugFileSuccess({ debugFiles: files })),\n          catchError((error) => of(addProjectDebugFileFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectEnvironments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.addProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => addProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(addProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectRelease$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectRelease),\n      switchMap((args) =>\n        this.projectService.addProjectRelease(args.projectId, args.dto).pipe(\n          map((releases) => addProjectReleaseSuccess({ releases: releases })),\n          catchError((error) => of(addProjectReleaseFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectTags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTags),\n      switchMap((args) =>\n        this.projectService.addProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => addProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(addProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTeams),\n      switchMap((args) =>\n        this.projectService.addProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => addProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(addProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectById$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectById),\n      switchMap((args) =>\n        this.projectService.getProjectById(args.projectId).pipe(\n          map((project) => loadProjectByIdSuccess({ project: project })),\n          catchError((error) => of(loadProjectByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectDebugFiles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.getProjectDebugFiles(args.projectId).pipe(\n          map((files) => loadProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(loadProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectEnvironments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.getProjectEnvironments(args.projectId).pipe(\n          map((environments) => loadProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(loadProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectReleases$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectReleases),\n      switchMap((args) =>\n        this.projectService.getProjectReleases(args.projectId).pipe(\n          map((releases) => loadProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(loadProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectTags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTags),\n      switchMap((args) =>\n        this.projectService.getProjectTags(args.projectId).pipe(\n          map((tags) => loadProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(loadProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTeams),\n      switchMap((args) =>\n        this.projectService.getProjectTeams(args.projectId).pipe(\n          map((teams) => loadProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(loadProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectDebugFiles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.removeProjectDebugFiles(args.projectId, args.ids).pipe(\n          map((files) => removeProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(removeProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectEnvironments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.removeProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => removeProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(removeProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectReleases$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectReleases),\n      switchMap((args) =>\n        this.projectService.removeProjectReleases(args.projectId, args.ids).pipe(\n          map((releases) => removeProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(removeProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectTags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTags),\n      switchMap((args) =>\n        this.projectService.removeProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => removeProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(removeProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTeams),\n      switchMap((args) =>\n        this.projectService.removeProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => removeProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(removeProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateProject),\n      switchMap((args) =>\n        this.projectService.updateProject(args.projectId, args.dto).pipe(\n          map((project) => updateProjectSucess({ project: project })),\n          catchError((error) => of(updateProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { addProjectDebugFile, addProjectDebugFileFailure, addProjectDebugFileSuccess, addProjectEnvironments, addProjectEnvironmentsFailure, addProjectEnvironmentsSuccess, addProjectRelease, addProjectReleaseFailure, addProjectReleaseSuccess, addProjectTags, addProjectTagsFailure, addProjectTagsSuccess, addProjectTeams, addProjectTeamsFailure, addProjectTeamsSuccess, loadProjectById, loadProjectByIdFailure, loadProjectByIdSuccess, loadProjectDebugFiles, loadProjectDebugFilesFailure, loadProjectDebugFilesSuccess, loadProjectEnvironments, loadProjectEnvironmentsFailure, loadProjectEnvironmentsSuccess, loadProjectReleases, loadProjectReleasesFailure, loadProjectReleasesSuccess, loadProjectTags, loadProjectTagsFailure, loadProjectTagsSuccess, loadProjectTeams, loadProjectTeamsFailure, loadProjectTeamsSuccess, removeProjectDebugFiles, removeProjectDebugFilesFailure, removeProjectDebugFilesSuccess, removeProjectEnvironments, removeProjectEnvironmentsFailure, removeProjectEnvironmentsSuccess, removeProjectReleases, removeProjectReleasesFailure, removeProjectReleasesSuccess, removeProjectTags, removeProjectTagsFailure, removeProjectTagsSuccess, removeProjectTeams, removeProjectTeamsFailure, removeProjectTeamsSuccess, updateProject, updateProjectFailure, updateProjectSucess } from \"./single-project.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\n\n@Injectable()\nexport class SingleProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadProjectById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectById),\n      switchMap((args) =>\n        this.projectService.getProjectById(args.projectId).pipe(\n          map((project) => loadProjectByIdSuccess({ project: project })),\n          catchError((error) => of(loadProjectByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateProject),\n      switchMap((args) =>\n        this.projectService.updateProject(args.projectId, args.dto).pipe(\n          map((project) => updateProjectSucess({ project: project })),\n          catchError((error) => of(updateProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTeams),\n      switchMap((args) =>\n        this.projectService.getProjectTeams(args.projectId).pipe(\n          map((teams) => loadProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(loadProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTags),\n      switchMap((args) =>\n        this.projectService.getProjectTags(args.projectId).pipe(\n          map((tags) => loadProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(loadProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectEnvironments$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.getProjectEnvironments(args.projectId).pipe(\n          map((environments) => loadProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(loadProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectDebugFiles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.getProjectDebugFiles(args.projectId).pipe(\n          map((files) => loadProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(loadProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectReleases$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectReleases),\n      switchMap((args) =>\n        this.projectService.getProjectReleases(args.projectId).pipe(\n          map((releases) => loadProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(loadProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTeams),\n      switchMap((args) =>\n        this.projectService.addProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => addProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(addProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTeams),\n      switchMap((args) =>\n        this.projectService.removeProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => removeProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(removeProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTags),\n      switchMap((args) =>\n        this.projectService.removeProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => removeProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(removeProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTags),\n      switchMap((args) =>\n        this.projectService.addProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => addProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(addProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectEnvironments$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.removeProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => removeProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(removeProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectEnvironments$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.addProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => addProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(addProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectReleases$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectReleases),\n      switchMap((args) =>\n        this.projectService.removeProjectReleases(args.projectId, args.ids).pipe(\n          map((releases) => removeProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(removeProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectRelease$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectRelease),\n      switchMap((args) =>\n        this.projectService.addProjectRelease(args.projectId, args.dto).pipe(\n          map((releases) => addProjectReleaseSuccess({ releases: releases })),\n          catchError((error) => of(addProjectReleaseFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectDebugFiles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.removeProjectDebugFiles(args.projectId, args.ids).pipe(\n          map((files) => removeProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(removeProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectDebugFile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectDebugFile),\n      switchMap((args) =>\n        this.projectService.addProjectDebugFile(args.projectId, args.dto).pipe(\n          map((files) => addProjectDebugFileSuccess({ debugFiles: files })),\n          catchError((error) => of(addProjectDebugFileFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingleTeamComponent.html":{"url":"components/SingleTeamComponent.html","title":"component - SingleTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingleTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/components/single-team/single-team.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-single-team\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TabViewModule\n                            PanelModule\n                                AccessDeniedComponent\n                            ToastModule\n                            TranslateModule\n                                MembersTableComponent\n                                ProjectsTableComponent\n                            ButtonModule\n                            RippleModule\n                            ConfirmDialogModule\n                                NotFoundComponent\n                            InputTextModule\n                            DividerModule\n                            BadgeModule\n                                MemberPickerComponent\n                                ProjectPickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./single-team.component.html\n            \n\n\n\n            \n                styleUrl\n                ./single-team.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                isLoadingUpdateTeam\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                members\n                            \n                            \n                                onAddMembers\n                            \n                            \n                                onAddProjects\n                            \n                            \n                                onRemoveMembers\n                            \n                            \n                                onRemoveProjects\n                            \n                            \n                                projects\n                            \n                            \n                                registerOnce\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                            \n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                    Private\n                                deleteTeam\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showDeleteTeamConfirmation\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateTeamSlug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                teamId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, confirmationService: ConfirmationService, messageService: MessageService, teamService: TeamService, router: Router, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:100\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        teamId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:98\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTeam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteTeamConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteTeamConfirmation(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeamSlug\n                        \n                    \n                \n            \n            \n                \nupdateTeamSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingTeamMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingTeamProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingUpdateTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingUpdateTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleTeamMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:258\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:267\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleTeamProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnce\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectSingleTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:123\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewChecked,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DividerModule } from 'primeng/divider';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { RippleModule } from 'primeng/ripple';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../../../core/domain/models/enums/state-status.enum';\nimport { Project } from '../../../../../core/domain/models/project.entity';\nimport { User } from '../../../../../core/domain/models/user.entity';\nimport { TeamService } from '../../../../../core/services/api/team.api.service';\nimport { AppState } from '../../../../../core/state/app.state';\nimport { selectHasPermission } from '../../../../../core/state/auth/auth.selectors';\nimport {\n  addTeamMembers,\n  addTeamProjects,\n  loadTeamById,\n  loadTeamMembers,\n  loadTeamProjects,\n  removeTeamMembers,\n  removeTeamProjects,\n  resetSingleTeamState,\n  updateTeam,\n} from '../../../../../core/state/single-team/single-team.actions';\nimport {\n  isLoadingTeamMembers,\n  isLoadingTeamProjects,\n  isLoadingUpdateTeam,\n  selectSingleTeam,\n  selectSingleTeamMembers,\n  selectSingleTeamProjects,\n  selectUpdateTeamStatus,\n} from '../../../../../core/state/single-team/single-team.selectors';\nimport { AccessDeniedComponent } from '../../../../../shared/components/access-denied/access-denied.component';\nimport { MemberPickerComponent } from '../../../../../shared/components/member-picker/member-picker.component';\nimport { MembersTableComponent } from '../../../../../shared/components/members-table/members-table.component';\nimport { NotFoundComponent } from '../../../../../shared/components/not-found/not-found.component';\nimport { ProjectPickerComponent } from '../../../../../shared/components/project-picker/project-picker.component';\nimport { ProjectsTableComponent } from '../../../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-single-team',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TabViewModule,\n    PanelModule,\n    AccessDeniedComponent,\n    ToastModule,\n    TranslateModule,\n    MembersTableComponent,\n    ProjectsTableComponent,\n    ButtonModule,\n    RippleModule,\n    ConfirmDialogModule,\n    NotFoundComponent,\n    InputTextModule,\n    DividerModule,\n    BadgeModule,\n    MemberPickerComponent,\n    ProjectPickerComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './single-team.component.html',\n  styleUrl: './single-team.component.scss',\n})\nexport class SingleTeamComponent\n  implements OnInit, OnDestroy, AfterViewChecked\n{\n  @Input()\n  private teamId?: string;\n\n  @ViewChild('slug') slugInput!: ElementRef;\n  constructor(\n    private store: Store,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private teamService: TeamService,\n    private router: Router,\n    private translateService: TranslateService,\n  ) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  isLoadingMembers = this.store.select(isLoadingTeamMembers);\n  isLoadingProjects = this.store.select(isLoadingTeamProjects);\n  isLoadingUpdateTeam = this.store.select(isLoadingUpdateTeam);\n  isSlugTaken: boolean | null = null;\n  team = this.store.select(selectSingleTeam);\n  members = this.store\n    .select(selectSingleTeamMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  projects = this.store\n    .select(selectSingleTeamProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n  registerOnce: boolean = false;\n\n  private slugCheckSubscription?: Subscription;\n\n  ngOnInit(): void {\n    this.store.dispatch(loadTeamById({ teamId: this.teamId ?? '' }));\n    this.store.dispatch(loadTeamMembers({ teamId: this.teamId ?? '' }));\n    this.store.dispatch(loadTeamProjects({ teamId: this.teamId ?? '' }));\n  }\n\n  ngAfterViewChecked() {\n    if (!this.registerOnce && this.slugInput) {\n      this.registerOnce = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fromEvent(this.slugInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(500),\n          distinctUntilChanged(),\n        )\n        .subscribe((data) => this.checkSlug(data));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n    this.store.dispatch(resetSingleTeamState());\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showDeleteTeamConfirmation(event: any) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'single-team.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('single-team.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.deleteTeam();\n      },\n      reject: () => {},\n    });\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private deleteTeam() {\n    this.teamService.deleteTeam(this.teamId ?? '').subscribe({\n      next: () => {\n        this.router.navigate(['/home/settings/teams']);\n      },\n      error: () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: this.translateService.instant('single-team.error'),\n          detail: this.translateService.instant(\n            'single-team.failed_to_delete_team',\n          ),\n        });\n      },\n    });\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.teamService.isSlugTaken(slug).subscribe({\n      next: (result) => {\n        this.isSlugTaken = result;\n      },\n      error: () => {\n        this.isSlugTaken = null;\n      },\n    });\n  }\n\n  updateTeamSlug(slug: string) {\n    this.store.dispatch(\n      updateTeam({ teamId: this.teamId ?? '', dto: { slug: slug } }),\n    );\n    this.store\n      .select(selectUpdateTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('single-team.error'),\n            detail: this.translateService.instant(\n              'single-team.failed_to_update_team',\n            ),\n          });\n        }\n      });\n  }\n\n  onAddMembers = (members: User[]) => {\n    this.store.dispatch(\n      addTeamMembers({\n        teamId: this.teamId ?? '',\n        ids: members.map((member) => member.userId),\n      }),\n    );\n  };\n\n  onRemoveMembers = (members: User[]) => {\n    this.store.dispatch(\n      removeTeamMembers({\n        teamId: this.teamId ?? '',\n        ids: members.map((member) => member.userId),\n      }),\n    );\n  };\n\n  onAddProjects = (projects: Project[]) => {\n    this.store.dispatch(\n      addTeamProjects({\n        teamId: this.teamId ?? '',\n        ids: projects.map((project) => project.projectId),\n      }),\n    );\n  };\n\n  onRemoveProjects = (projects: Project[]) => {\n    this.store.dispatch(\n      removeTeamProjects({\n        teamId: this.teamId ?? '',\n        ids: projects.map((project) => project.projectId),\n      }),\n    );\n  };\n}\n\n    \n\n    \n        \n\n@if ((team | async) === null || (team | async) === undefined) {\n  \n} @else {\n  #{{ (team | async)?.slug }}\n  @if ((hasReadPermission | async) === false) {\n    \n  } @else {\n    \n      \n        \n          \n        \n        \n      \n      \n        \n          \n        \n        \n      \n      \n        \n          \n            \n          \n          \n            \n              \n                {{ \"single-team.id\" | translate }}\n              \n              {{ \"single-team.id_description\" | translate }}\n            \n            \n              \n            \n          \n          \n          \n            \n              \n                {{ \"single-team.slug\" | translate }}\n              \n              {{ \"single-team.slug_description\" | translate }}\n            \n            \n              \n                @if (!isSlugTaken) {\n                  \n                } @else {\n                  \n                }\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                {{ \"single-team.delete\" | translate }}\n              \n              {{ \"single-team.delete_description\" | translate }}\n            \n            \n              \n            \n          \n        \n      \n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((team | async) === null || (team | async) === undefined) {  } @else {  #{{ (team | async)?.slug }}  @if ((hasReadPermission | async) === false) {      } @else {                                                                                                                                                                                                  {{ \"single-team.id\" | translate }}                            {{ \"single-team.id_description\" | translate }}                                                                                                                          {{ \"single-team.slug\" | translate }}                            {{ \"single-team.slug_description\" | translate }}                                                      @if (!isSlugTaken) {                                  } @else {                                  }                                                                                                                        {{ \"single-team.delete\" | translate }}                            {{ \"single-team.delete_description\" | translate }}                                                                                }}'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingleTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleTeamEffects.html":{"url":"injectables/SingleTeamEffects.html","title":"injectable - SingleTeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SingleTeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-team/single-team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addTeamMembers$\n                            \n                            \n                                addTeamProjects$\n                            \n                            \n                                loadTeamById$\n                            \n                            \n                                loadTeamMembers$\n                            \n                            \n                                loadTeamProjects$\n                            \n                            \n                                removeTeamMembers$\n                            \n                            \n                                removeTeamProjectss$\n                            \n                            \n                                updateTeam$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamMembers),\n      switchMap((args) =>\n        this.teamService.addTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => addTeamMembersSuccess({ members: members })),\n          catchError((error) => of(addTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamProjects),\n      switchMap((args) =>\n        this.teamService.addTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => addTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(addTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamById$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamById),\n      switchMap((args) =>\n        this.teamService.getTeamById(args.teamId).pipe(\n          map((team) => loadTeamByIdSuccess({ team: team })),\n          catchError((error) => of(loadTeamByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamMembers),\n      switchMap((args) =>\n        this.teamService.getTeamMembers(args.teamId).pipe(\n          map((members) => loadTeamMembersSuccess({ members: members })),\n          catchError((error) => of(loadTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamProjects),\n      switchMap((args) =>\n        this.teamService.getTeamProjects(args.teamId).pipe(\n          map((projects) => loadTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(loadTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamMembers),\n      switchMap((args) =>\n        this.teamService.removeTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => removeTeamMembersSuccess({ members: members })),\n          catchError((error) => of(removeTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamProjectss$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamProjects),\n      switchMap((args) =>\n        this.teamService.removeTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => removeTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(removeTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateTeam),\n      switchMap((args) =>\n        this.teamService.updateTeam(args.teamId, args.dto).pipe(\n          map((team) => updateTeamSuccess({ team: team })),\n          catchError((error) => of(updateTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:75\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamService } from '../../services/api/team.api.service';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  addTeamMembers,\n  addTeamMembersFailure,\n  addTeamMembersSuccess,\n  addTeamProjects,\n  addTeamProjectsFailure,\n  addTeamProjectsSuccess,\n  loadTeamById,\n  loadTeamByIdFailure,\n  loadTeamByIdSuccess,\n  loadTeamMembers,\n  loadTeamMembersFailure,\n  loadTeamMembersSuccess,\n  loadTeamProjects,\n  loadTeamProjectsFailure,\n  loadTeamProjectsSuccess,\n  removeTeamMembers,\n  removeTeamMembersFailure,\n  removeTeamMembersSuccess,\n  removeTeamProjects,\n  removeTeamProjectsFailure,\n  removeTeamProjectsSuccess,\n  updateTeam,\n  updateTeamFailure,\n  updateTeamSuccess,\n} from './single-team.actions';\nimport { catchError, map, of, switchMap } from 'rxjs';\n\n@Injectable()\nexport class SingleTeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadTeamById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamById),\n      switchMap((args) =>\n        this.teamService.getTeamById(args.teamId).pipe(\n          map((team) => loadTeamByIdSuccess({ team: team })),\n          catchError((error) => of(loadTeamByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamMembers),\n      switchMap((args) =>\n        this.teamService.getTeamMembers(args.teamId).pipe(\n          map((members) => loadTeamMembersSuccess({ members: members })),\n          catchError((error) => of(loadTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadTeamProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamProjects),\n      switchMap((args) =>\n        this.teamService.getTeamProjects(args.teamId).pipe(\n          map((projects) => loadTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(loadTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateTeam),\n      switchMap((args) =>\n        this.teamService.updateTeam(args.teamId, args.dto).pipe(\n          map((team) => updateTeamSuccess({ team: team })),\n          catchError((error) => of(updateTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamMembers),\n      switchMap((args) =>\n        this.teamService.addTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => addTeamMembersSuccess({ members: members })),\n          catchError((error) => of(addTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamMembers),\n      switchMap((args) =>\n        this.teamService.removeTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => removeTeamMembersSuccess({ members: members })),\n          catchError((error) => of(removeTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addTeamProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamProjects),\n      switchMap((args) =>\n        this.teamService.addTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => addTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(addTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeTeamProjectss$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamProjects),\n      switchMap((args) =>\n        this.teamService.removeTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => removeTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(removeTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SingleTeamState.html":{"url":"interfaces/SingleTeamState.html","title":"interface - SingleTeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SingleTeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-team/single-team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addMembersError\n                                        \n                                \n                                \n                                        \n                                            addMembersStatus\n                                        \n                                \n                                \n                                        \n                                            addProjectsError\n                                        \n                                \n                                \n                                        \n                                            addProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            membersError\n                                        \n                                \n                                \n                                        \n                                            membersStatus\n                                        \n                                \n                                \n                                        \n                                            projects\n                                        \n                                \n                                \n                                        \n                                            projectsError\n                                        \n                                \n                                \n                                        \n                                            projectsStatus\n                                        \n                                \n                                \n                                        \n                                            removeMembersError\n                                        \n                                \n                                \n                                        \n                                            removeMembersStatus\n                                        \n                                \n                                \n                                        \n                                            removeProjectsError\n                                        \n                                \n                                \n                                        \n                                            removeProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            singleTeam\n                                        \n                                \n                                \n                                        \n                                            singleTeamError\n                                        \n                                \n                                \n                                        \n                                            singleTeamStatus\n                                        \n                                \n                                \n                                        \n                                            updateTeamError\n                                        \n                                \n                                \n                                        \n                                            updateTeamStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         User[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeam:         Team | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n    addTeamMembers,\n  addTeamMembersFailure,\n  addTeamMembersSuccess,\n  addTeamProjects,\n  addTeamProjectsFailure,\n  addTeamProjectsSuccess,\n  loadTeamById,\n  loadTeamByIdFailure,\n  loadTeamByIdSuccess,\n  loadTeamMembers,\n  loadTeamMembersFailure,\n  loadTeamMembersSuccess,\n  loadTeamProjects,\n  loadTeamProjectsFailure,\n  loadTeamProjectsSuccess,\n  removeTeamMembers,\n  removeTeamMembersFailure,\n  removeTeamMembersSuccess,\n  removeTeamProjects,\n  removeTeamProjectsFailure,\n  removeTeamProjectsSuccess,\n  resetSingleTeamState,\n  updateTeam,\n  updateTeamFailure,\n  updateTeamSuccess,\n} from './single-team.actions';\nimport { User } from '../../domain/models/user.entity';\nimport { Project } from '../../domain/models/project.entity';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface SingleTeamState {\n  singleTeam: Team | null;\n  members: User[] | null;\n  projects: Project[] | null;\n  singleTeamError: any | null;\n  membersError: any | null;\n  updateTeamError: any | null;\n  projectsError: any | null;\n  addMembersError: any | null;\n  removeMembersError: any | null;\n  addProjectsError: any | null;\n  removeProjectsError: any | null;\n  singleTeamStatus: StateStatus;\n  membersStatus: StateStatus;\n  projectsStatus: StateStatus;\n  updateTeamStatus: StateStatus;\n  addMembersStatus: StateStatus;\n  removeMembersStatus: StateStatus;\n  addProjectsStatus: StateStatus;\n  removeProjectsStatus: StateStatus;\n}\n\nexport const initialState: SingleTeamState = {\n    singleTeam: null,\n    singleTeamError: undefined,\n    updateTeamError: undefined,\n    singleTeamStatus: StateStatus.PENDING,\n    updateTeamStatus: StateStatus.PENDING,\n    members: null,\n    membersError: undefined,\n    membersStatus: StateStatus.PENDING,\n    projects: null,\n    projectsError: undefined,\n    projectsStatus: StateStatus.PENDING,\n    addMembersError: undefined,\n    removeMembersError: undefined,\n    addProjectsError: undefined,\n    removeProjectsError: undefined,\n    addMembersStatus: StateStatus.PENDING,\n    removeMembersStatus: StateStatus.PENDING,\n    addProjectsStatus: StateStatus.PENDING,\n    removeProjectsStatus: StateStatus.PENDING\n};\n\nexport const singleTeamReducer = createReducer(\n  initialState,\n\n  on(resetSingleTeamState, () => (initialState)),\n\n  on(loadTeamById, (state) => ({\n    ...state,\n    singleTeamError: null,\n    singleTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamByIdSuccess, (state, { team }) => ({\n    ...state,\n    singleTeam: team,\n    singleTeamError: null,\n    singleTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamByIdFailure, (state, { error }) => ({\n    ...state,\n    singleTeamError: error,\n    singleTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(loadTeamMembers, (state) => ({\n    ...state,\n    membersError: null,\n    membersStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    membersError: null,\n    membersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    membersError: error,\n    membersStatus: StateStatus.ERROR,\n  })),\n  \n  on(loadTeamProjects, (state) => ({\n    ...state,\n    projectsError: null,\n    projectsStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    projectsError: null,\n    projectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    projectsError: error,\n    projectsStatus: StateStatus.ERROR,\n  })),\n\n  on(updateTeam, (state) => ({\n    ...state,\n    updateTeamError: null,\n    updateTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(updateTeamSuccess, (state, { team }) => ({\n    ...state,\n    singleTeam: team,\n    updateTeamError: null,\n    updateTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(updateTeamFailure, (state, { error }) => ({\n    ...state,\n    updateTeamError: error,\n    updateTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(addTeamMembers, (state) => ({\n    ...state,\n    addMembersError: null,\n    addMembersStatus: StateStatus.LOADING,\n  })),\n\n  on(addTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    addMembersError: null,\n    addMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(addTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    addMembersError: error,\n    addMembersStatus: StateStatus.ERROR,\n  })),\n\n  on(removeTeamMembers, (state) => ({\n    ...state,\n    removeMembersError: null,\n    removeMembersStatus: StateStatus.LOADING,\n  })),\n\n  on(removeTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    removeMembersError: null,\n    removeMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    removeMembersError: error,\n    removeMembersStatus: StateStatus.ERROR,\n  })),\n\n\n  on(addTeamProjects, (state) => ({\n    ...state,\n    addProjectsError: null,\n    addProjectsStatus: StateStatus.LOADING,\n  })),\n\n  on(addTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    addProjectsError: null,\n    addProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(addTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    addProjectsError: error,\n    addProjectsStatus: StateStatus.ERROR,\n  })),\n\n  on(removeTeamProjects, (state) => ({\n    ...state,\n    removeProjectsError: null,\n    removeProjectsStatus: StateStatus.LOADING,\n  })),\n\n  on(removeTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    removeProjectsError: null,\n    removeProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    removeProjectsError: error,\n    removeProjectsStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/stats/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  standalone: true,\n  imports: [],\n  templateUrl: './stats.component.html',\n  styleUrl: './stats.component.scss'\n})\nexport class StatsComponent {\n\n}\n\n    \n\n    \n        stats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'stats works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportComponent.html":{"url":"components/SupportComponent.html","title":"component - SupportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/support/support.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./support.component.html\n            \n\n\n\n            \n                styleUrl\n                ./support.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  standalone: true,\n  imports: [],\n  templateUrl: './support.component.html',\n  styleUrl: './support.component.scss'\n})\nexport class SupportComponent {\n\n}\n\n    \n\n    \n        support works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'support works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsTableComponent.html":{"url":"components/TagsTableComponent.html","title":"component - TagsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/tags-table/tags-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-tags-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            ConfirmDialogModule\n                            DialogModule\n                            TableModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                                AccessDeniedComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tags-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tags-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isAddNewDialogVisible\n                            \n                            \n                                isLoadingCreateNew\n                            \n                            \n                                isLoadingRemoveTags\n                            \n                            \n                                isLoadingTags\n                            \n                            \n                                selectedTags\n                            \n                            \n                                tags\n                            \n                            \n                                tagsForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                createNewTag\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeTags\n                            \n                            \n                                    Private\n                                resetTagsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                showDeleteSelectionConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableAddAction\n                            \n                            \n                                enableEditAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTag\n                        \n                    \n                \n            \n            \n                \ncreateNewTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTags(tags: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetTagsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetTagsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(tag: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteSelectionConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteSelectionConfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNew\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectAddTags)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveTags\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectRemoveTags)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingTags\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectTags)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleProjectTags)\n    .pipe(map((tags) => tags?.map((tag) => ({ tag })) ?? []))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    tag: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:97\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../core/state/app.state';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport {\n  addProjectTags,\n  loadProjectTags,\n  removeProjectTags,\n} from '../../../core/state/single-project/single-project.actions';\nimport {\n  isLoadingSingleProjectAddTags,\n  isLoadingSingleProjectRemoveTags,\n  isLoadingSingleProjectTags,\n  selectAddProjectTagsStatus,\n  selectRemoveProjectTagsStatus,\n  selectSingleProjectTags,\n} from '../../../core/state/single-project/single-project.selectors';\nimport { filter, map, take } from 'rxjs';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { AccessDeniedComponent } from '../access-denied/access-denied.component';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { Table, TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\n\n@Component({\n  selector: 'app-tags-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    ConfirmDialogModule,\n    DialogModule,\n    TableModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AccessDeniedComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './tags-table.component.html',\n  styleUrl: './tags-table.component.scss',\n})\nexport class TagsTableComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n\n  @Input()\n  project?: Project;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableEditAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  tagsForm = this.formBuilder.group({\n    tag: ['', [Validators.required]],\n  });\n  isAddNewDialogVisible: boolean = false;\n\n  selectedTags: { tag: string }[] = [];\n  tags = this.store\n    .select(selectSingleProjectTags)\n    .pipe(map((tags) => tags?.map((tag) => ({ tag })) ?? []));\n  isLoadingTags = this.store.select(isLoadingSingleProjectTags);\n  isLoadingCreateNew = this.store.select(isLoadingSingleProjectAddTags);\n  isLoadingRemoveTags = this.store.select(isLoadingSingleProjectRemoveTags);\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      loadProjectTags({ projectId: this.project?.projectId ?? '' }),\n    );\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteConfirmation(tag: string, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'tags-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('tags-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeTags([tag]);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteSelectionConfirmation(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'tags-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('tags-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeTags(this.selectedTags.map((value) => value.tag));\n      },\n      reject: () => {},\n    });\n  }\n\n  showAddDialog() {\n    this.resetTagsForm();\n    this.isAddNewDialogVisible = true;\n  }\n\n  createNewTag() {\n    const tags: string[] = [this.tagsForm.get('tag')?.value ?? ''];\n    this.store.dispatch(\n      addProjectTags({\n        projectId: this.project?.projectId ?? '',\n        tags: tags,\n      }),\n    );\n    this.store\n      .select(selectAddProjectTagsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('tags-table.error'),\n            detail: this.translateService.instant(\n              'tags-table.failed_to_create_tag',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('tags-table.success'),\n            detail: this.translateService.instant('tags-table.tag_created'),\n          });\n          this.isAddNewDialogVisible = !this.isAddNewDialogVisible;\n        }\n      });\n  }\n\n  private removeTags(tags: string[]) {\n    this.store.dispatch(\n      removeProjectTags({\n        projectId: this.project?.projectId ?? '',\n        tags: tags,\n      }),\n    );\n    this.store\n      .select(selectRemoveProjectTagsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('tags-table.error'),\n            detail: this.translateService.instant(\n              'tags-table.failed_to_delete_tags',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('tags-table.success'),\n            detail: this.translateService.instant('tags-table.removed_tags'),\n          });\n          this.selectedTags = [];\n        }\n      });\n  }\n\n  private resetTagsForm() {\n    this.tagsForm = this.formBuilder.group({\n      tag: ['', [Validators.required]],\n    });\n  }\n}\n\n    \n\n    \n        \n\n@if ((hasReadPermission | async) === false) {\n  \n} @else {\n  \n    \n      \n        \n          \n          \n        \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n            {{ \"tags-table.tag\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"tags-table.actions\" | translate }}\n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ tag.tag }}\n        \n        \n            \n          \n      \n    \n\n    \n        \n          {{ \"tags-table.no_tags_found\" | translate }}\n        \n      \n  \n}\n\n\n  \n    \n      \n        {{ \"tags-table.tag_label\" | translate }}\n          \n        {{ \"tags-table.tag_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((hasReadPermission | async) === false) {  } @else {                                                                                                                                            {{ \"tags-table.tag\" | translate }}                                                                        {{ \"tags-table.actions\" | translate }}                                                                                  {{ tag.tag }}                                                                      {{ \"tags-table.no_tags_found\" | translate }}                }                    {{ \"tags-table.tag_label\" | translate }}                  {{ \"tags-table.tag_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Team {\n    teamId: string;\n    slug: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamDto.html":{"url":"interfaces/TeamDto.html","title":"interface - TeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/team.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TeamDto {\n  teamId: string;\n  slug: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamEffects.html":{"url":"injectables/TeamEffects.html","title":"injectable - TeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTeam$\n                            \n                            \n                                deleteTeam$\n                            \n                            \n                                loadMyTeams$\n                            \n                            \n                                loadOrganizationTeams$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/team/team.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\nimport { TeamService } from \"../../services/api/team.api.service\";\nimport { createTeam, createTeamFailure, createTeamSuccess, deleteTeam, deleteTeamFailure, deleteTeamSuccess, loadMyTeams, loadMyTeamsFailure, loadMyTeamsSuccess, loadOrganizationTeams, loadOrganizationTeamsFailure, loadOrganizationTeamsSuccess } from \"./team.actions\";\n\n@Injectable()\nexport class TeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  deleteTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamPickerComponent.html":{"url":"components/TeamPickerComponent.html","title":"component - TeamPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/team-picker/team-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./team-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./team-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avaialbleTeams\n                            \n                            \n                                isLoadingTeams\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTeamsPicked\n                            \n                            \n                                onTeamsRemoved\n                            \n                            \n                                selectedTeams\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onTeamsPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-picker/team-picker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTeamsRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-picker/team-picker.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeams\n                    \n                \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-picker/team-picker.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avaialbleTeams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { PickListModule, PickListMoveAllToSourceEvent, PickListMoveAllToTargetEvent, PickListMoveToSourceEvent, PickListMoveToTargetEvent } from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { Team } from '../../../core/domain/models/team.entity';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../core/state/app.state';\nimport { isLoadingOrganizationTeams, selectOrganizationTeams } from '../../../core/state/team/team.selectors';\nimport { loadOrganizationTeams } from '../../../core/state/team/team.actions';\nimport { filter, take } from 'rxjs';\n\n@Component({\n  selector: 'app-team-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './team-picker.component.html',\n  styleUrl: './team-picker.component.scss'\n})\nexport class TeamPickerComponent {\n\n  constructor(private store: Store) {}\n  isLoadingTeams = this.store.select(isLoadingOrganizationTeams);\n  avaialbleTeams: Team[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedTeams: Team[] = [];\n\n  @Input()\n  onTeamsPicked?: (teams: Team[]) => void;\n\n  @Input()\n  onTeamsRemoved?: (teams: Team[]) => void;\n\n  showPickerDialog() {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store\n      .select(selectOrganizationTeams)\n      .pipe(\n        filter((teams) => teams !== undefined && teams !== null),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((teams) => {\n        // Filter out members that are also present in selectedProjects\n        this.avaialbleTeams =\n          teams?.filter(\n            (team) =>\n              !this.selectedTeams.some(\n                (selected) => selected.teamId === team.teamId,\n              ),\n          ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onTeamsRemoved) {\n      this.onTeamsRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onTeamsPicked) {\n      this.onTeamsPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onTeamsRemoved) {\n      this.onTeamsRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onTeamsPicked) {\n      this.onTeamsPicked(event.items);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ team.slug }}\n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ team.slug }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/team.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeamMembers\n                            \n                            \n                                addTeamProjects\n                            \n                            \n                                createNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                getMyTeams\n                            \n                            \n                                getOrganizationTeams\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamMembers\n                            \n                            \n                                getTeamProjects\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                removeTeamMembers\n                            \n                            \n                                removeTeamProjects\n                            \n                            \n                                updateTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/team.api.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamMembers\n                        \n                    \n                \n            \n            \n                \naddTeamMembers(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamProjects\n                        \n                    \n                \n            \n            \n                \naddTeamProjects(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam(dto: CreateTeamRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTeamRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \ndeleteTeam(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyTeams\n                        \n                    \n                \n            \n            \n                \ngetMyTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationTeams\n                        \n                    \n                \n            \n            \n                \ngetOrganizationTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamById\n                        \n                    \n                \n            \n            \n                \ngetTeamById(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamMembers\n                        \n                    \n                \n            \n            \n                \ngetTeamMembers(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamProjects\n                        \n                    \n                \n            \n            \n                \ngetTeamProjects(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamMembers\n                        \n                    \n                \n            \n            \n                \nremoveTeamMembers(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamProjects\n                        \n                    \n                \n            \n            \n                \nremoveTeamProjects(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeam\n                        \n                    \n                \n            \n            \n                \nupdateTeam(teamId: string, dto: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProjectDto } from '../../domain/dto/project.dto';\nimport { CreateTeamRequestDto } from '../../domain/dto/requests/create-team-request.dto';\nimport { TeamDto } from '../../domain/dto/team.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { Project } from '../../domain/models/project.entity';\nimport { User } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeamService {\n  constructor(private http: HttpClient) {}\n\n  getOrganizationTeams(): Observable {\n    return this.http.get(api.teamUrl, api.authOptions);\n  }\n\n  getMyTeams(): Observable {\n    return this.http.get(api.teamUrl + '/my', api.authOptions);\n  }\n\n  getTeamById(teamId: string): Observable {\n    return this.http.get(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n\n  getTeamMembers(teamId: string): Observable {\n    return this.http.get(\n      api.teamUrl + `/${teamId}/members`,\n      api.authOptions,\n    );\n  }\n\n  getTeamProjects(teamId: string): Observable {\n    return this.http.get(\n      api.teamUrl + `/${teamId}/projects`,\n      api.authOptions,\n    );\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.teamUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  createNewTeam(dto: CreateTeamRequestDto): Observable {\n    return this.http.post(api.teamUrl, dto, api.authOptions);\n  }\n\n  deleteTeam(teamId: string) {\n    return this.http.delete(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n\n  updateTeam(teamId: string, dto: { slug: string }): Observable {\n    return this.http.patch(\n      api.teamUrl + '/' + teamId,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  addTeamMembers(teamId: string, ids: string[]): Observable {\n    return this.http.put(\n      api.teamUrl + `/${teamId}/members`,\n      undefined,\n      {\n        ...api.authOptions,\n        params: { ids: ids },\n      },\n    );\n  }\n\n  removeTeamMembers(teamId: string, ids: string[]): Observable {\n    return this.http.delete(api.teamUrl + `/${teamId}/members`, {\n      ...api.authOptions,\n      params: { ids: ids },\n    });\n  }\n\n  addTeamProjects(teamId: string, ids: string[]): Observable {\n    return this.http.put(\n      api.teamUrl + `/${teamId}/projects`,\n      undefined,\n      {\n        ...api.authOptions,\n        params: { ids: ids },\n      },\n    );\n  }\n\n  removeTeamProjects(teamId: string, ids: string[]): Observable {\n    return this.http.delete(api.teamUrl + `/${teamId}/projects`, {\n      ...api.authOptions,\n      params: { ids: ids },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamState.html":{"url":"interfaces/TeamState.html","title":"interface - TeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createOrganizationTeamError\n                                        \n                                \n                                \n                                        \n                                            createOrganizationTeamStatus\n                                        \n                                \n                                \n                                        \n                                            deleteTeamError\n                                        \n                                \n                                \n                                        \n                                            deleteTeamStatus\n                                        \n                                \n                                \n                                        \n                                            myTeams\n                                        \n                                \n                                \n                                        \n                                            myTeamsError\n                                        \n                                \n                                \n                                        \n                                            myTeamsStatus\n                                        \n                                \n                                \n                                        \n                                            organizationTeams\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsError\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n  createTeam,\n  createTeamFailure,\n  createTeamSuccess,\n  deleteTeam,\n  deleteTeamFailure,\n  deleteTeamSuccess,\n  loadMyTeams,\n  loadMyTeamsSuccess,\n  loadOrganizationTeams,\n  loadOrganizationTeamsFailure,\n  loadOrganizationTeamsSuccess,\n} from './team.actions';\n\nexport interface TeamState {\n  organizationTeams: Team[] | null;\n  myTeams: Team[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  organizationTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  myTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createOrganizationTeamError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  deleteTeamError: any | null;\n  organizationTeamsStatus: StateStatus;\n  myTeamsStatus: StateStatus;\n  createOrganizationTeamStatus: StateStatus;\n  deleteTeamStatus: StateStatus;\n}\n\nexport const initialState: TeamState = {\n  organizationTeams: null,\n  organizationTeamsError: undefined,\n  organizationTeamsStatus: StateStatus.PENDING,\n  myTeams: null,\n  myTeamsError: undefined,\n  myTeamsStatus: StateStatus.PENDING,\n  createOrganizationTeamError: undefined,\n  createOrganizationTeamStatus: StateStatus.PENDING,\n  deleteTeamError: undefined,\n  deleteTeamStatus: StateStatus.PENDING,\n};\n\nexport const teamReducer = createReducer(\n  initialState,\n\n  //Handle loading organization teams\n  on(loadOrganizationTeams, (state) => ({\n    ...state,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    organizationTeams: teams,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    organizationTeamsError: error,\n    organizationTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading current user teams\n  on(loadMyTeams, (state) => ({\n    ...state,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    myTeams: teams,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    myTeamsError: error,\n    myTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createTeam, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createTeamSuccess, (state, team) => ({\n    ...state,\n    organizationTeams: [...(state.organizationTeams || []), team],\n    createOrganizationTeamError: null,\n    createOrganizationTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createTeamFailure, (state, { error }) => ({\n    ...state,\n    createOrganizationTeamError: error,\n    createOrganizationTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(deleteTeam, (state) => ({\n    ...state,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(deleteTeamSuccess, (state, { teamId }) => ({\n    ...state,\n    organizationTeams:\n      state.organizationTeams?.filter((team) => team.teamId !== teamId) ?? null,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(deleteTeamFailure, (state, { error }) => ({\n    ...state,\n    deleteTeamError: error,\n    deleteTeamStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/teams.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                                TeamsTableComponent\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                isLoadingOrganizationTeams\n                            \n                            \n                                myTeams\n                            \n                            \n                                organizationTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/teams.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/teams.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingOrganizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { PanelModule } from 'primeng/panel';\nimport { TeamsTableComponent } from '../../../shared/components/teams-table/teams-table.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  isLoadingMyTeams,\n  isLoadingOrganizationTeams,\n  selectMyTeams,\n  selectOrganizationTeams,\n} from '../../../core/state/team/team.selectors';\nimport {\n  loadMyTeams,\n  loadOrganizationTeams,\n} from '../../../core/state/team/team.actions';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-teams',\n  standalone: true,\n  templateUrl: './teams.component.html',\n  styleUrl: './teams.component.scss',\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TeamsTableComponent,\n    TranslateModule,\n  ],\n})\nexport class TeamsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  );\n\n  isLoadingOrganizationTeams = this.store.select(isLoadingOrganizationTeams);\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n  organizationTeams = this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store.dispatch(loadMyTeams());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n  \n    \n  \n\n  \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                organization\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{ flag: 'gb', label: 'English', value: 'en' }]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { environment } from '../../../../../environments/environment';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { selectCurrentOrganization } from '../../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DropdownModule,\n    AvatarModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    FormsModule,\n  ],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{ flag: 'gb', label: 'English', value: 'en' }];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  organization = this.store.select(selectCurrentOrganization);\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut());\n    this.router.navigate(['/auth']);\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/settings/account']);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ getAppName() }}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n        Logout\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getAppName() }}                                                                        {{ selectedLanguage.label }}                                                            {{ language.label }}                                              Logout            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VitalsComponent.html":{"url":"components/VitalsComponent.html","title":"component - VitalsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VitalsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/vitals/vitals.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vitals\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./vitals.component.html\n            \n\n\n\n            \n                styleUrl\n                ./vitals.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vitals',\n  standalone: true,\n  imports: [],\n  templateUrl: './vitals.component.html',\n  styleUrl: './vitals.component.scss'\n})\nexport class VitalsComponent {\n\n}\n\n    \n\n    \n        vitals works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'vitals works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'QueryInputComponent', 'selector': 'app-query-input'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VitalsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.3.2\n        \n            @angular/cdk : ^17.3.2\n        \n            @angular/common : ^17.3.2\n        \n            @angular/compiler : ^17.3.2\n        \n            @angular/core : ^17.3.2\n        \n            @angular/forms : ^17.3.2\n        \n            @angular/platform-browser : ^17.3.2\n        \n            @angular/platform-browser-dynamic : ^17.3.2\n        \n            @angular/platform-server : ^17.3.2\n        \n            @angular/router : ^17.3.2\n        \n            @angular/ssr : ^17.3.2\n        \n            @ngrx/effects : ^17.1.1\n        \n            @ngrx/store : ^17.1.1\n        \n            @ngrx/store-devtools : ^17.1.1\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.2.2\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            chart.js : ^4.4.2\n        \n            express : ^4.19.2\n        \n            file-saver : ^2.0.5\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.12.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DebugFileType   (src/.../debug-file-type.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            PlatformType   (src/.../platform-type.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/debug-file-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DebugFileType\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/platform-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlatformType\n                    \n                \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : ANDROID\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : WEB\n                            \n                        \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : IOS\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : SERVER\n                            \n                        \n                        \n                            \n                                 NODE\n                            \n                        \n                        \n                            \n                                Value : NODE\n                            \n                        \n                        \n                            \n                                 REACT\n                            \n                        \n                        \n                            \n                                Value : REACT\n                            \n                        \n                        \n                            \n                                 ANGULAR\n                            \n                        \n                        \n                            \n                                Value : ANGULAR\n                            \n                        \n                        \n                            \n                                 VUE\n                            \n                        \n                        \n                            \n                                Value : VUE\n                            \n                        \n                        \n                            \n                                 SVELTE\n                            \n                        \n                        \n                            \n                                Value : SVELTE\n                            \n                        \n                        \n                            \n                                 SPRING\n                            \n                        \n                        \n                            \n                                Value : SPRING\n                            \n                        \n                        \n                            \n                                 GO\n                            \n                        \n                        \n                            \n                                Value : GO\n                            \n                        \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CPP\n                            \n                        \n                        \n                            \n                                Value : CPP\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : JS\n                            \n                        \n                        \n                            \n                                 PYTHON\n                            \n                        \n                        \n                            \n                                Value : PYTHON\n                            \n                        \n                        \n                            \n                                 RUST\n                            \n                        \n                        \n                            \n                                Value : RUST\n                            \n                        \n                        \n                            \n                                 RUBY\n                            \n                        \n                        \n                            \n                                Value : RUBY\n                            \n                        \n                        \n                            \n                                 LARAVEL\n                            \n                        \n                        \n                            \n                                Value : LARAVEL\n                            \n                        \n                        \n                            \n                                 PHP\n                            \n                        \n                        \n                            \n                                Value : PHP\n                            \n                        \n                        \n                            \n                                 EXPRESS\n                            \n                        \n                        \n                            \n                                Value : EXPRESS\n                            \n                        \n                        \n                            \n                                 NEST\n                            \n                        \n                        \n                            \n                                Value : NEST\n                            \n                        \n                        \n                            \n                                 CS\n                            \n                        \n                        \n                            \n                                Value : CS\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                Value : COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                Value : DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                Value : DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                Value : LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                Value : LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                Value : LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                Value : PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                Value : PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                Value : PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                Value : TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n                        \n                            \n                                Value : INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToDate   (src/.../date.interceptor.ts)\n                        \n                        \n                            hasPermission   (src/.../auth.selectors.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            isIso8601   (src/.../date.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/date.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(body: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isIso8601\n                        \n                    \n                \n            \n            \n                \nisIso8601(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(user: User, permissionType: ResourceType, permissionValue: Permission)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionType\n                                            \n                                                            ResourceType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionValue\n                                            \n                                                            Permission\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    58 Components\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    51 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
